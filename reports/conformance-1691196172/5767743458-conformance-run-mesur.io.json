{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7afabe29-9590-452f-b60d-21fef1c7ad50",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a26f1b18-3203-4488-a39e-98ae5096c5e9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6ef3acdc-3252-4539-a370-b5e0b2d4cc4b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bddad826-a2d3-48b3-ba1b-3849fc6452d9"
                }
              }
            ]
          },
          {
            "id": "8be85012-be06-46c2-a5dc-598f310d1fe1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aefe6fc4-309c-478e-a752-9c70b69da3c0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "dc888127-1d4b-400f-87c9-8a31bce294da"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ed0fc935-f7f8-4f00-90f4-15314b6029ce",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "a2a61c29-a57a-4ebc-b1a4-9ec2511a48e9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b8dd8ea7-2a40-41b5-802b-e21741f1ba3e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c894753-7c04-41ae-ad24-229badf63303",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "661e934b-f448-444b-9c37-d57479df44be"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cad93352-6299-48fe-9953-878b2ac4cb4e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9b09085c-f9e6-42fb-a809-c3d129a97203"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "906a093f-21e9-43d6-ba56-e27dbbde1755",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a1bfc33-0b73-466f-8221-df7f849aad15"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f98e8c3-9329-46e4-bbe0-0bc3a25650a0",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "98db4cf6-81a1-4dc7-adc5-9688cd7dd1a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40b20176-c2cd-411a-be41-9633aa493511",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a9126e88-247d-4d0a-a08a-df67234cfc33"
            }
          }
        ]
      },
      {
        "id": "0b1ef10d-8a7f-475b-9832-3cf590a29f01",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2837dbcf-08c8-4f8d-a9f6-0d45a85c9ad1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "50e103f0-593a-4f47-b715-7a2ad501839c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "62c23695-4d9e-4f5b-a109-e24bcc05bc34",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac1a972-9a3a-4a70-9a9c-67eca206aba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff2aa3de-a195-4486-a93a-7422784c8757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f753f0c-f8fe-4bc4-a92d-e52472a69c32",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12ccfad-2627-45ed-b227-cef9a3c9b985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c8446ca-ac2e-42e0-9f66-929781095d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "981b897b-590e-4521-a444-69d9923fbe8d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37248a2-4132-4915-bc73-ad0bc209641e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19a31831-c29d-4e15-80da-f26fa8e12150"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "24c320b4-a7b2-40f6-b257-e7f8506322dd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96a47d97-0c8d-4cb3-8406-2875bb7d50a6",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91fb264-5af3-4472-b799-ccd28923a1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4aaef787-04d4-4b6d-872b-490a06392179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fe74819-13f7-4473-b94c-39191c5f29f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14da629a-2da3-44d5-9fe5-3cd59a0176cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a1eeb0ee-d4f1-44c1-8190-f64dbbd82ba5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b54f03dc-55ae-4367-857c-c314fc0c5663",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c6df50b-b55a-4da9-8215-7e9b3423f17e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "eb4e500c-28cc-4d75-88d8-c3c1b126f356"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "00c55897-30e1-470c-8e4a-19e104d0b2a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "0dbcbd9f-b53b-4150-92c6-1b35e6b2ecb0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d07a0785-8e9e-4155-97fe-e0942d827494",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "244f556c-4c24-4200-a1a3-c2695b6edb92"
            }
          }
        ]
      },
      {
        "id": "a99f9e4e-4cd6-497c-a67d-69eacd80136c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a8efd0ea-79f3-4dd9-90ca-3551b213daea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "90b72f19-68e2-4d73-b766-31a78041533b",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0ca83268-721b-411d-a6c9-cf58a5ae6a55",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b094fbce-6208-49ec-8626-121a17671ca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62d9ef1-be40-448a-bc54-d0e5fe66686c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7334032-c9fc-4796-9a1e-727d3cf73985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50d45ec0-fd56-496b-8375-2ad1321902d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d62c09-6415-4b5a-ae4e-648a7cf53e41",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5db3f08-e108-46b4-b86e-8137da63104d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ccb949-e524-4e26-99ac-810274939797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "318f7841-67e8-49e2-b090-4a351f8dd181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66048131-d4d1-4d9d-af68-54c81a7487e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b321eb99-9536-400a-9018-a0474408a9bc",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ccf2df-5fb7-4fd9-9afe-cf24b01ac329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36104cc6-a93b-49f6-bd19-fe86e4f8d899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f535049-2b6e-43da-9d95-d19788359a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "899d3c3e-63d9-4668-ace5-877168e3cc2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ac672ce-eb33-40ca-a7a8-85ca0cf394f3",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9128a221-79b0-492c-9865-7dbd52e2ab2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d70028bf-33e2-4364-9c1c-7a3f279306e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8a884c-a4c6-4724-be45-08f147b70905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d516abb-4be8-4108-92e9-e18b245590dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263126b3-13b9-4785-9f99-67234a388919",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dcb734b-9ed7-4a52-a6da-deb25c026e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c712d6e0-0099-44c1-982a-e8f449e8b2a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a41557-a40f-44bf-a134-cc03fa6f5f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f42c251-cf6e-4da3-950d-17b61daa1578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bccf9b2-4e36-47cb-b0a1-c052f04afc34",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c51cd12-31c7-4afe-877e-a7e86ee0b142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a4c988f-0c01-4627-aa8c-9c8e2373e383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c34bcd8-965a-434b-bec3-ad0700fd9568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "223d7174-420e-460e-8b45-2d38c1cbba54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324573bc-8ee2-47a0-91db-c722e26efb12",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26648fae-18b6-4013-a0e3-8a9c59ab278c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c109f15d-2e60-493d-aa0d-2279243e3fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d2115ff-898f-4428-8932-8452a65d2544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da9f5080-9073-4304-bda5-529e00d597d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a862f08b-9d66-45e4-9614-4f3f4badf258",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81322db-4d3b-4ea4-8b51-eff5983e172f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5870007f-5945-4b68-a053-ff468eb7b2c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2699e80-d9fb-4c93-a007-c919734a1216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41cd3bbb-a73a-4552-8243-1d17a81b7fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "978f32ba-581f-45ce-abe5-7fbf3a760ca4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f316843-2314-49b3-924e-0ce08127afb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2612332-a755-41ed-ac30-eb7ae1126659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d80e9d-30d7-48e2-9777-a2433782dacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b81e03a0-b78a-4461-a317-eedf332f317e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0f634d-a2f6-4c90-8c58-89a5bc724863",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7a20d1-e4cb-4238-8c92-276a045cc9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e79f82b1-9e7f-4b78-9ccf-d7698c609682"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e874d85b-90c1-4664-90dd-f9b5291e6f05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cc7b5e5-a589-41e7-8e1a-ee20619db728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e596f975-f636-4ab8-bac9-b0e6c3db6eab",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9288bbc9-dd76-45a7-a780-87f82bf4f540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4af9ab-1730-4b87-b4a3-5e86c9a15d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddbb4b6-036a-4e99-b4ff-8e62764da285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c5728215-1b09-47b4-a9da-3d5da16602fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d627a2aa-e228-457a-86df-a5989b83b290",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7445edee-6d22-4088-be22-4256c74fdd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f708b1-fed2-457c-b44e-9cdceab76f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e40f316-c26c-4f10-83fc-f1811d80f6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0aec3999-6e14-4f57-97f1-49112cb1bb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c303d10-e338-4c35-a138-ec63b131b8e3",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f368c07-26ae-4325-9130-220bc7e5e820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c0eb2bc-6c52-42a8-b3c8-ad90317c105f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe3202cd-8cfb-4426-bc10-49fc031e00fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad02b153-fe3f-4921-b192-c8592b15869e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "098fa6ed-7bf3-4a51-8405-a4ff364d8e10",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18dd014b-ef00-4525-a9a5-bb2772f07648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379c19f2-e526-4a3f-92ca-8ac615fa7954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9224a380-63c2-4010-9593-5de1bec5f4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "980c5630-2f8a-4f01-bf8f-9f7df850d5de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debbbabf-b7a4-44c6-aac3-4872f14a7cc6",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd1d4ba-2d73-43e3-b2a7-47328127decd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "475c08b9-d481-4f2d-98d9-c0c0b842de69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4579056-fbf6-43df-9d5e-40f694dba336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d06654a3-e728-4fd5-b731-06555ba6e634"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ba40b9-f007-4568-a77e-12f4fe7516eb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577e0986-47ec-4d96-80c9-17bb9b29bfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd8cfd9-a5c3-498d-bd3b-c22e35c03a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1e0f92-53e9-47ae-ad96-050faf32a9e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45e338ec-20ec-4c7a-b1ca-5234b88eaf1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a90a90-0b3c-4cf2-825a-d54775e49b0b",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cf4aaf-f86b-4585-bdcc-8a26b9f66892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0792bf-457c-4551-86f1-24898f27df54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84adf8cf-1ead-4d2b-adf0-b477da753c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d68b0991-1613-478f-beac-70a1fb029342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3529c38-56f7-493b-b984-30abbfef990e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47896c4c-1d45-4d49-9b1e-57a745091e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96586f86-bc7c-4111-adeb-8434dbe31aed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd89b90-57ec-4f50-96e7-818049458cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "70d98434-f73e-4e1f-b4b2-304385968fd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de1a901f-033a-4fdc-92d1-aa00087b93d5",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64a5bb12-5187-4808-989b-f93ab9296b67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c49b82-8327-44f4-b00e-a10310a72454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad9802be-98be-45ae-8926-2752a9156c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "99a96317-cd39-4425-b370-b755a38b1b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6742148a-2749-47b0-b917-05b7ecd798bc",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e180c5-3b61-4221-ac25-cb63dae15f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ae67565-c263-4c74-b943-e0704d54bfc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25921ba-8fc1-4ee0-83f4-e3ade844b03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1725810-f045-418d-91e6-8539492257d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e42a60-e8fb-41de-ae18-6b37e17e7ed7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f35372d-71da-4011-8b2b-31356d6dd1a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac6286c-2cc3-49b2-a7a9-e18f0693896d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb3c53a-a1f9-4991-bf0e-7412740ca16f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa9e1bd-a2db-4b29-b610-d3a4e7f4696b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c4b658-876f-462e-96b0-4703bf272948",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e384b747-d402-45d5-8692-4e1f83723f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32078df1-2b64-498a-a96b-7ce9f83f8185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26c0dc6a-35e5-41a2-b5ca-269afdeb761d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6560a203-1c68-4e2b-ad9b-1ccfd26c8605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576db300-27b5-4258-bae3-d5330203a8da",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb986c9-4a03-4c6d-b0d1-bb2435a2d17c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2443f6c-814d-4015-96e5-bc65d89165cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ac94689-915a-4ab5-96b1-bf0a4f68437e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e2fa8ea-340f-4cae-a9a6-95f61242d25a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cdd724-b4f4-4922-9d46-78eeebfb32da",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a1fe498-66f1-4e71-9101-054227e15eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20b705bd-8e46-455d-abda-f050dc2a0e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781cd525-02da-4cd6-b1c7-4e87c9eea043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e76f24c0-1d4a-493e-887d-c1015fdb85d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7cca8b-1649-4fbb-8f07-e662fccc6587",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb6bd12e-8a42-473c-a395-7b999e4b9613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f8530c5-09a9-4fbf-9f02-0e36f47f9325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d8131d-2256-4b1e-959f-20a4bf9af9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b6636e8-6479-4ae0-a673-71b55fb9fe77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a7a6145-5645-4fa6-9490-af3be1ab09ed",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e6cdae6-8a3b-4d53-91d4-06f091bfdae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42df41fd-8ef9-4a28-9956-71a63c3f82e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8292d1c3-a930-421f-ba6e-584897c6d8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf4da8f7-d8c4-499c-8d18-6f9c45df4db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c11b291-de0e-431d-872a-d0891f7d0b43",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11913e66-6fd3-43f3-9f97-e278ae3c6a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "175ef595-d31c-4994-b608-9d48876f6f60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab226fc-478a-4d15-8351-f522192cbc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8268ff83-91e7-4cd1-9ae7-2c3bf77c30b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7116c88-6b5e-401c-a940-f8e06c34cb9f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa3f7a9-ddec-4179-a733-777d283eaf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870321c2-d9e3-45a6-beb8-9540e47d0de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1db5fd-05bd-43dd-b053-67fb83e77dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9d5a95-c249-4b9c-90b7-bea1449caad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d2e8e3-82e2-4bf3-bb4f-80c7933470a8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555f7dc2-58d8-4fc8-b397-3c1e5bf1f014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48d508c4-80d8-4987-bc4c-1a1270e265b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ff189c-d604-42e2-a96c-207aa759aa3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "958b8a3b-1237-4b2a-a055-2bbb9d852219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e86f57-c07a-48e9-b32c-91b0e47ecd07",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cfb8d7-c71e-4704-b097-b78577de6f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938d2513-8fc7-4b63-a91a-0171774d4f8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c4ff2b-2bd5-44f4-a498-5fe6933351ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1adee8b4-eff7-4dd5-8866-a8f9c94155ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63b9895-c084-44e4-95e9-3e1fa5debaac",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d673dd-42e6-4883-a5d4-087e3244c188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8d265d-2410-4203-a188-06422d14d880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "411960a8-645d-42b0-af89-a0a5353463ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b1631bd-58ad-4bea-b0e9-137ba112d58a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb35c12-4684-4907-927e-8dac59fa067b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50d90ad-a9c4-4fbd-9721-78e9c0f33a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92fa4c38-82ba-414d-a0c7-6d6777d7133b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "924afb72-1d1a-47d7-8253-5c27d8cefb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "895a8e63-9bac-4ac4-ae35-0d46d64b228f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f4ac8ba-d4d4-49d4-a951-496886620998",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd0b0645-6104-404a-9afa-93e5a39c581a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012eb893-fa06-4e2c-b358-e0cef55578f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e33363-a1db-43c1-a7f9-e9e75070ec84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9186e20-35b6-498e-9c48-540158701bc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c5a5eb-f793-4c19-9240-f14eecaebb2a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124d9cb5-83a9-402e-9002-8436536d36d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b96a33d7-ad8e-4f89-b79f-e9e5cbb45d32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f73f9f-7b85-445e-a776-0c43bce14481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6385444b-6fb8-449d-97b8-d3308de73850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6860dd3-b855-4894-ac00-7717846e7073",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9911ed-1f79-4e80-8aba-9e342f90dcd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5cb3ed2-32fe-4d92-add1-cfcb22e1a7c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e62a453f-dc20-41b3-b5ab-cf44602e80e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e2d5e680-0861-449c-90a3-b12248a5edf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa23e662-3137-46ea-abed-abb1f087b008",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8fd34f-fa63-49c0-911e-d3b32ad69012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e413f0e-9ab9-491a-aa85-e312d28695d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f29b13c4-74a0-4080-bce8-4c0241375c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6cdf69ce-86df-491e-a049-8c9c1b1b6bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8f1553-8ebf-4137-b6c6-1a721d9b4288",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c83b56-d226-4787-856b-fe6480241e2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bdcc04-5940-48d8-8712-e67ba6264fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbdac866-2e34-4762-9da3-e18fac5859b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58477dc6-d9da-42bc-bd0b-d391244aa38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41edebb4-fc7b-46f7-9d47-efffcd96c31f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef36cd0-456e-4bf4-8fb8-6cb3be4314bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e31e720-5d55-4770-ad77-3e6f7c71f3e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134cb2d3-4dcd-473c-a4e0-92acc4ef7f72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fb88ede-3617-4c82-b472-0ef1d33a470b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7845869b-7b08-48fd-8de6-409994074d28",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d86c768f-a3db-48b8-a26f-67fbc49c88a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f26b6d6-ad51-47a1-a6be-ed2cba0500e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5b1533-94fe-485c-9210-d711a847b3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a4aa44c-f1a7-449e-94d2-36fd89bcbb2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf867b04-18e6-4047-8077-8d6f155daf71",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "318d3233-d76a-4440-9695-8e62b1239106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af76f17-5b81-4e15-9e44-f13d4ca1515a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bf13b1-22b7-449c-9c97-e31f1bcca4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca3eae54-ce2d-43e7-bf28-63e6ceef571e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a9fad9-f9d4-4b3e-9a8a-5eee74f0926d",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63013693-7951-4d41-b624-49d753ca7c0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340ceed0-e8a8-4c21-94a5-e07ac899f9ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af2f26a6-cf04-4479-ae8e-f0eaf25fbba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f0f3195-55a4-43a7-92c0-ccfef69a043a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff381a3f-d020-4937-a656-0cd71c9a137f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed36af1d-90d3-4ee6-a1f7-1852bfb082c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e83a51-9018-4177-8b35-a35cd2a7b6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf006d0-fc47-40da-84bc-7030464c6a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "08f6c25e-67d0-4601-9a15-e77453712ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40e7d497-e3ea-4ef1-99e8-7fce06247369",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19de08b3-e34b-4833-ba3d-d5c689c3401d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0339ffa1-59a9-4c3e-8162-e25ec72dafdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a329757c-c5b3-4be4-b94a-4bbd9d7cd688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "be0a378d-2fcc-4f7a-a59c-59582866eff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40414fe-90e1-43dd-9cd6-fc36de00866e",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd136a5f-6f34-4493-a9aa-ce421c562733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56e38c31-b88b-4c74-a5d5-ab0c9d829a98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f485889-b40c-4d06-a32f-cb05c9b2fab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "198af6c1-f4c4-471e-8a30-7b731a0be086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5fac098-46c3-4656-af9d-be02a14f5203",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34ed8e7-1456-475e-9820-c25f725a7ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f0c6763-3e5b-44a4-81cf-4ace5213d9b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9977cbfe-3f6f-44be-8e62-ee9a6f29e177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3e7533-c1d9-4f2a-ba37-d4b021857e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09fbe0db-7f99-429b-8507-8d9dd98d93d3",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d28d6ff-2dcd-4165-8ed6-16fcec0f3f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0051a6-668a-4853-88ea-ea3b8b365f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6d0f35-2b43-48cd-a516-aa0114b15ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93f30479-7071-47ad-a87d-fe19b18679c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47671781-608b-4836-b53e-9e5d7d54c4bc",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599401fa-0511-4b4a-a7d2-1e7779e4a9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a133920-7cc9-45cc-a0e1-66f1df50f0ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b03e82-166d-407c-a8dd-0a9762ef1609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba15283e-5e5a-4741-9a6f-def2da75955d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd48c779-98fb-4ee2-8748-8c09598ddd6d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d845d0-ffe0-45b6-8543-24e0798930b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d923361-48f7-456b-8f99-cf64c865cda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83a8361c-209f-474f-a2dd-42e62fe8fd40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fabbe6e9-7373-4619-86cb-3084cd374ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41eb9593-576e-4518-b82b-c48477fb32a2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b6752d-a603-412b-b3d7-29a852c2b7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b342a589-c78d-4d13-af4a-9ac7fdba052d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f1dcd6-7f7b-4596-974c-da46188a0a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "009da19f-772c-4d18-85ed-9c5d61bb3895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2351513-a737-450e-912f-1720070d3119",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b745db-2138-4103-b337-bb51ad2bda7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46d0af21-fc51-4f3e-a06b-7b2943001150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b9ea6f-eaa6-424f-ade0-5ab81c4fde03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "39aa901d-cc40-4c46-bfad-08282058a19f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ead59b-ec55-4842-b0a8-34b1c1a27f09",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f1b8dd-c120-4f25-9b6a-00dc4551535a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889803f5-5788-4695-8c46-5f499b459f3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a78b27-db3b-4835-8a46-70a68a567866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "761bc823-6003-4139-880c-7f1a8671402e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ad7a66-dfc8-4863-8561-ff35eb1c48ac",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e855952-adb6-4041-8950-cc0911620963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0bf593c-f039-48d8-9ccd-74fc2cc440fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66886da-e9db-42c7-98bc-a51061b92767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "09955fea-ecb9-4aa6-825a-1558ad5866d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81c6f5a-be9c-4c50-9c16-3f05c33179ca",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35ca88aa-9479-4c0c-b4dd-bed57fb62dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90b51fe-0eac-44dc-8144-d8508faeab45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d58d632-61ff-47de-b5bb-0db03c106557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bc2003b-6656-41fd-a97c-6522a207337d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84fa5c7-bc19-41b8-8080-f7f55326b11d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cfab548-cbc6-4fed-a11e-aa54268a513b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4b1ca8-0914-4fbf-a0be-97d22dc0e5e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c61c9b3d-4e3b-4e61-b6ee-dd661972894d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5628a5d5-a433-4180-9a84-e6d14ea346d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0b137bd-7f9c-4aec-a0ac-b64f8830d154",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33fff02-9292-4669-8d27-f9c3e0db0d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b70fda56-4345-455e-bc1a-00358b7db964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1218d829-f4b3-465c-8c0f-729678619c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00925ce3-2636-4f58-9a51-5be204ee111d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fc05d0-2447-4cf9-ba96-5984a6d8f74b",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1117c9-3d04-4d4f-94c3-3db3a077952a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aecbf034-a31a-440d-b669-f777e9616470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e90f6f5f-735c-4b7c-9a62-fac35e2f49de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "85e5ca5d-7250-405b-ad4b-34e93077109a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c842e689-d0e7-4e1d-b142-f69f54d6b88a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45380e8-45a1-41ed-9693-442962d0b0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c13e02-b7a9-49e2-8ce1-cdd67abe2145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebf1b73-8fd7-47e7-ae4c-e9f74d58f9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0168b9-d21b-4744-ba42-aea565998dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64efd25c-2714-468d-8893-4935fc353b3e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c1e01c-8727-4f41-b097-d0e0530acd20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bc267f0-fb2d-46b1-9774-aeba2bc6efde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9cf4fa9-1ebd-4bbb-a48d-6bfaad7e7127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "233859a4-89e0-40e5-9e5e-e06aaaf0062c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2994684-bda5-4230-b307-fd709c1dabe8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc6ecc9-0d03-4ae3-9a90-71a1407e7dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0423326-3b43-4667-b6e7-c3e51790d98d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd79906a-3490-4a06-8249-9725e7afcb00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b853dda-a564-4def-9e42-db998625c224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f65ea4-914b-4543-be5a-199422348cf8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b16e69f-35e6-4c15-97f1-82aedce1360e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994fee73-2867-424e-878f-7704a78159fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d384d3f-570e-4805-97df-4e148526cf91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9973726-1ba1-4bfc-83d2-ad9f88719233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3093b578-74fc-4c4f-9259-cdef2f9d88a2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60abe193-fc3d-4e37-90f8-5d5a5fc700b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff9f934c-b63a-4f0a-9996-2eec6e971f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99bbbd80-9ff0-4a00-8ce6-f15212405807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca8d30d-1484-4c1a-b42d-068b7ac91816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19ec6cb-075e-49c7-a6af-f190e24384e7",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9fef5c-7538-4032-adc8-6c3ff5e7ac33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8cd9e84-4630-4636-8188-716c37263385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ef3941-f023-4e06-b08f-3c94c66862e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5cc6f23-421e-4b80-bf96-067f3940670b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a1c186e-2395-4108-8441-c586b9561b39",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebb6bf5-e138-4929-9522-eb41d1c7658d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c29840a8-cd26-4395-8cfe-20fd6426521b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25dbf7a2-5420-4fd6-adc3-d214b2c0b90b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7c9dfd1-b234-40e1-86fa-dea1194a9076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e94a3a0f-f4ae-4ae9-9c46-2521cec2c94a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ffc6eb-4888-4ceb-a754-8aed1038cdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb6fcb8-6d94-47dc-954c-faf00022652b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aec92cd-c36f-4b21-8350-6829d8308a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f48db441-6166-4585-9acc-e1d9338cd490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a9df6c-a60b-4a8b-8175-39afea95b434",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cc9cb8-a614-4187-a0a0-bc89a877db0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c337de2-7f0e-427b-9077-86969dc6a844"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "effeeab9-ac7b-4780-8257-f94a15e1e2b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7d0ede-fcac-462f-99c2-0a27953c16ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38e7db9-faa2-44a4-8ed1-fe88464cb921",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6151731d-7579-459c-a3da-61d3a57f5cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa1814c2-3f59-4bb2-adbc-40c59ae48bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c73c43-700d-4d19-bf46-e2ea6c7649e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19590cab-1131-48bf-9e98-b617555218eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfafc644-fd5e-4c4c-bd55-c93b38b7a78a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aeac5b3-5f2b-49ee-80a1-1b5068544f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeae92b0-683a-4192-9964-7b277c4b0f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c534fd8-4cdc-41c1-9821-601c4f9292d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95444095-f447-4d3e-a6a7-54dddfbbbacb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0e93f7-b0df-485f-bdfc-13f3a35e53bd",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9d1764-bf80-4df4-b404-7541684e55f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09c859df-0b4d-4d0b-8bf8-8f9297dc2bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e4a96c-d86c-4f56-b51d-0326da392fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "71d956ad-69a8-4a8e-8fba-89a5d2c2c50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a635ce-6013-4085-93ad-26f203e0b8e1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7abceb-1d1a-46f3-a330-84590dd47494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5030e9b-0e46-4563-b235-6769a1c27c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1b11fb-6782-4661-975e-5a15bd5f51bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee0c5a7e-f39b-4a05-9e4a-cd887b844094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7075ca-0f6f-4adb-8498-9f484b2e0c1c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64010d9-6d8d-4098-a947-62a64f6cbe5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2842a0f2-4bfc-42da-8450-cf2c2f95fe29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f28c19c-6ea7-422e-b4f6-85ba570272e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0797f6ed-c96d-4b5d-9847-f437f8969be3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cfca65-6e53-45a8-b3d7-5b956e8a0321",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78ef672-167b-43c8-abd4-2c96e768f264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "605cd609-8da6-4cac-9851-e5aa53beb741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28a2e12-f4bc-4e1f-be8b-5f61c6567f4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc8779f-64bb-4eef-9d59-cf2d5fcd2c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea32ebf9-9ace-4423-9e14-3f1113141a70",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2444cd6a-6bae-48ac-8f32-dc7d82b32ddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9d0899-3bc1-4b53-91c5-79927e0e2561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca14ff9-323f-490a-9847-05e0b98e60e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0ca69a-6d21-42dd-aa58-1174b87de148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b5c6b5-ef67-459e-9999-fdd73b16f768",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3fb7db-a1de-484e-a048-610b1b0c3546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f91557b0-f0b1-445c-a738-c4d389cdc1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f440945-407e-4841-9ad2-a200b97d7f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c17fa2e0-e945-4d7b-8d0e-c94c1b1484f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb658105-084d-434a-92e2-387770f38d14",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5004a239-1ce9-45f3-a890-98373fd78705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ca6021f-8fc4-4ed8-b809-6b09eae7d00c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57d929ee-b000-4f0a-a946-792faadcee18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "91a56c0a-cc18-48dc-836c-6e03a2ea3c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd193717-64bc-47b7-8189-237da6ce08f5",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ee8ada-a6da-4a2b-8793-9b0e5d757834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15bbaf67-ed8e-49d9-bbb4-b0b2363e2a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7a6664-8851-4d45-9643-c399f3fd24c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4954d20f-06f9-4e3d-b334-cd98b9510f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ac57ca-9784-4335-aacf-5f5228f3e509",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb114a4-308f-4ecc-bed8-159fb734b36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08280977-a18b-44c7-a38c-018f4f242d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16aea10-ccbc-47d6-b8aa-d9520499e83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0847b4cd-4b1e-45f9-bfdc-60967190edb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5347a6af-0ef1-4896-b4d4-97de4e50df7e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6197954a-0b2a-4647-8631-4cb6f59fcc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30416b57-144a-470c-8f21-43bb98267abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75103cb3-7851-4032-b649-9fd9f7455166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6566b444-b547-4338-9046-35154fe381c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5504ee16-b8ec-4553-8294-0f7b48b3f514",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be975938-ef78-4459-ace4-5fe3d6276551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529a464f-11fc-42d2-9105-15e2b7952263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e269256f-8bda-4979-bf3e-3a31e596efa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac4dde3b-6d1a-47b2-858a-97d8f01b7cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d2f1ac-52aa-46f2-adc4-98206589dc6d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f5150a-056c-4679-bac9-3405b58263f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85fc54e8-4824-4b1f-9aac-ac74d85df7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a70b59-116e-4d5b-9f95-975bf9c49cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f7f1c8-409b-4afb-9d79-6bb58952ddb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba494f1-2432-4ceb-9c79-123792f46e3b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d582f6cd-ccd1-4e74-a8de-84e0f6c43d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d74a7519-03b5-4de9-9034-85762bbfc8ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7256bbe-f654-48f3-8ba4-952651111ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f95118d-a860-4103-b7de-10194abb423f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95666c24-6874-4f05-b270-657669fa21ec",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c96cde-7ace-4d51-8246-d64c5bff3179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6cd64e7-c200-4607-ac88-4add17176afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8adc152c-7000-49eb-b63c-5fac5ec0f2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddafd54f-eddb-4526-be14-0e0735a1c8d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ac539fc-a7c5-4a69-923b-2649a4cbc918",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f6d635-8606-43bf-9f48-a61825c03ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baefa535-a135-4cbc-84dc-c98bf004e2c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269eca24-3d03-4611-9a09-6b74053a028c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1f4e4c2-6a9c-4900-ad6b-0fa6197c7990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141c0fa9-a569-421c-abf0-1e0df2aa6e2e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dba75d3-1886-478b-ba0e-56822e12fe0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc037727-b368-4f3e-9fb0-7567df87cc38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be74287-8a97-418b-8aa8-78baeebf9e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ead43c2a-7d3a-450e-877d-c71eb32885c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ff068b-1f40-4721-807f-b1696689b464",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e20c67f-dd37-44d1-a820-4f493b1a1993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9744dc47-8e46-4f21-bb49-6ed854ef6c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5caec9ec-a655-4d49-a303-217f08f68d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a32a3fd6-37fe-44a8-8d1e-8c8370c9be31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b628bf86-eb39-4e2a-a360-15e9cc7aa61c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43768e6d-69fc-4c01-81ff-8ba803b5f3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89232d70-d6ee-4574-b471-d43ac7e52be3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c92631a0-8fcc-4991-a383-6dadf9889815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f0517049-9df2-42d7-82cf-cdb055514008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfe556b-0440-4f3c-bac4-447a5978ba6c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00e1ac8e-52ca-4e87-89d0-b27bbec3a0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0fe74a-1692-48e1-8f32-72c69974b6a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a7b889-3794-4ec1-82ef-0b1d4ce5b3a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e00248a0-2aec-4f94-95ee-00c347b79538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b8d30b2-9ab9-4b12-aab3-8b0b4ac58265",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "368cb9e9-a66c-426b-8d6f-f648b7e250e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b06cae78-a41f-47b9-aaeb-63a2bcd9b365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb0f8d7-0f70-4e18-96c5-44b1b1495425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4027c881-e59b-4bcd-8ecb-317edeec8cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65fb0f1-7b36-45d2-af68-2a6a1adef199",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b800ac8-f152-4916-8132-b7e19a736f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215c4381-0980-43a7-8f5d-8d197d5f7ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9714d96-c980-41f6-ab49-fc2464aae29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d7146b0-6db0-4e48-828a-85501d605504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb4af055-6716-42db-8317-4fea5366320b",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4692501c-86d3-477a-98a7-3ebc083e04e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29c0e095-506f-4e86-b6df-33275f0106a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ad648e-3fb5-478b-858d-3618935da0fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "23ced7fb-7227-4b5b-90d5-33e798840c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e36fba-41f6-440e-a4cd-92d3285eca4d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77ace82-9be6-4c1d-8eb5-e4d751f27471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2760c0-b2d2-4cb0-9433-89b4a367c923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cd1e777-3b09-49fe-b1b9-8f9a4b8f16b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0120494c-39bb-45b1-9d04-826d1105a2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83d9f562-23e9-4070-b4a4-0621e47a5ec8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce568896-e0b4-4ed0-94d3-8741aa69c26f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78413c64-2329-4685-906a-efed3ba6cd06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5ef20d-42ff-4fd0-a8c4-5254392bd044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e03f95d-7826-4de3-a3ce-e32438e8738a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911e89b0-c6b6-45a2-bb70-0f98c1a13fdf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f2d9b0-919a-4691-be24-34ba3aeeb7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f6e6332a-b152-480f-8020-eb427b7e7717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba3e3b6-82ca-45a5-b42b-6957b4f8ff07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "92480fd9-37fc-4256-9abd-d5bea00cffcd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "59bd9816-07cc-4b4a-b1cc-50b459a8b669",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "93e4f904-d1b6-4a57-85f7-ff2a3cf30990",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cd1fe6-2e5c-4669-a2a8-8705130d891d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e4cd0b6-e506-4116-a4d7-d3982b1762a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d68b218-d313-4334-9cf3-b857a75b734d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5cc6901c-483e-4538-a712-70266673ee45"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22d7595c-c066-4ef5-8eb6-243c9b43c124",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33b3d201-8a99-4657-8873-b48da3e7a6fe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "aa7f5394-7dee-4e93-8cb8-db51bd647001",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9f00542c-2b4b-4845-8285-f6d18379fe49"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e2ba1734-18f9-43fa-91c6-a5ae3b6ccfa4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "39fbcd44-7646-46a9-a7ea-a10df0b84e83"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bb9fa826-bffa-4888-8090-926c8938d39a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "65342f9c-05b2-4fd9-9425-5ec3272aa3ac"
                }
              }
            ]
          },
          {
            "id": "79c36b71-2b68-4b1b-8ac4-9aded802caa2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "17c4fbfc-13f1-4e85-befb-1fa0702b4020",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f9e5ffe0-ce50-405c-8c7d-9b0f4a84cf8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e9cb3e19-64c5-404f-99c9-7b6dbe0a58a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22949702-9b76-4176-a6c6-ed780149413c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5d8425f5-92bc-4707-8d09-a6509d90b84c"
                    }
                  }
                ]
              },
              {
                "id": "8493180b-ee73-4e7f-8f60-c36575e1bb7f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c2cd529-ae4d-4436-ba54-d1726d710c39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15a8f054-8464-4a43-8e12-25c17ee5d932"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15b9c19d-ea90-4db1-9b8b-aeffea7af10a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4181ceaf-fafa-4967-bb37-d343908af035"
                    }
                  }
                ]
              },
              {
                "id": "f6c99184-ef22-4a26-ae72-ecdc705789e8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e84e57e-bff1-477f-931d-25efc4fb892a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5b852330-f46b-42ae-a44b-d5a5a02bd482"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be4f6b9e-c700-4de3-bde1-ee981b5d259c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fd5e4e83-6f4a-44c6-ad88-5027ade60e9d"
                    }
                  }
                ]
              },
              {
                "id": "3c32538b-c786-4d5a-8a8a-07b514d8c539",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92ec99b5-28d7-4e9a-a504-6873ce1b963d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a60dcf38-0fa2-40d8-a4b2-cdf1d05fde89"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d50e355-1305-48c7-8ed1-25fdf9164757",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0e48ccd4-8a55-4711-8479-51017543f901"
                    }
                  }
                ]
              },
              {
                "id": "f3595bec-b1c2-4526-bee6-a8c7217335f4",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59fa2a27-a1e1-4771-a26f-fa2b88a3ffc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "52334edb-979f-405f-8a97-564228d13ef3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ade76dbb-0b57-4e86-9b45-b1ff2d5ad3d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ce12054f-cc04-4940-8d74-235d887bbadc"
                    }
                  }
                ]
              },
              {
                "id": "14c74d6b-78a4-4c14-9f4f-38d291cd1fd7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6bcf15e-b574-440f-b0f5-d76a42485a4f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5543c278-f86b-490e-b799-2c90b7d619ef"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "45316a7b-ba14-4c25-b082-c9b214a1d88d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d7b1ade4-e8bf-46d7-bfb3-1e4d2c5ca661"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a1651a0e-57f4-4264-ad95-b148cc4f14ff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ce2e2f1-0b59-4e71-b169-8ed00f6280b9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fe12a8ae-b621-4427-b8e0-18747404cc18",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "880ba7bb-6149-4f8a-9326-f6c602c35697"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "180e39ef-faba-41d6-bf63-c33d749ddc1b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e94b91cb-25b3-4a77-b970-082504e51b93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19437502-8792-4210-ad18-76d6c864b81c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "03c11a53-1ae7-422e-bdfd-1642437d5590"
            }
          }
        ]
      },
      {
        "id": "65b93345-ec4b-450b-a783-dc92f60560fd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d1b5b7e7-ae64-46bc-b1b8-418e3c9d4d97",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c61155e-8195-40fd-ab6d-362ad38ed9a0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "90fd2ccd-2270-4a25-9991-ccbb71b2ac6b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21468dd8-be53-4c3a-bfce-89dabbfb2caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74db3807-1f57-4be5-be2a-ac2e11333df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81dd8ee5-91df-44e0-91b8-7ed601299f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd858e4-f24a-47df-8bdc-51d5a9d284d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa909b1-cc6e-401a-a1aa-75b336327ff7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f344942-83a2-4954-8551-dbfcd160660b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a953310b-51ba-4657-a2f0-4ae6cb8edc27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae9fedc-c5e9-469c-a834-ee010521f1c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "50bc39c8-5573-400d-9648-19ea0e8b98fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1482e07b-f363-4316-b6e3-82611265036e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f0d627-f51a-4a2a-92cb-0e17b8adf552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f9fd7d-3af7-4daa-b590-a78e1a9b7f7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5c4b0d6-a8d7-4934-a379-8fefc360a9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c1f4ca-cb1f-4949-8770-1d6982eb7b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76dca71e-0bb9-4529-ac1a-dd4e522962d2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe418a64-a27f-4c86-851b-6f104679a9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f666850-5863-41de-9f42-9e27814fdd4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f870324-3d05-408a-bfea-bc531cf67455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfeeb06d-7f61-4c26-82d4-0da5ce7d4b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b245119-cb34-4ac9-9509-9595e23a2fb3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d45c845-17a6-47ee-8587-82fda2e97411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5ecff68-f1dd-42d0-9695-8bae941e6b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc530d3-100f-46e3-af31-e88d12f1552e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "368516bb-61c9-4c04-8853-146d20f05cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8464a9-dd75-4184-8427-dafa87eea2e9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aee390d-c7a6-4361-8427-f9cd675d3265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7ef7cf8-1ad7-4064-b953-7e81f46c19b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455d934c-caae-470a-b631-d87c781879ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e93cc17-2be6-47c1-99f3-4199a0cd57e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c40e4e6-fe47-4f1e-8cc1-4ec12c97b690",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ff2214-5cb6-4369-b0a6-0e7c4cd28918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7861e8ee-defb-40f8-954f-18ae2c4e2c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1a4f49-bd77-45df-b45c-f09bcc96a4b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "33141011-3449-4b2b-96ee-a0a2fc3afbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ded89bc-3904-4fa6-b3de-293b8006703b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dea5462d-03e9-4696-afc9-97edace7817a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c0fb664-1628-4d06-a43c-571a080f8934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51da3c9d-9e5a-40e2-8f31-b97a665a0446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c46b08-b075-4781-b72a-9f35a058b950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4c09106-e3e0-4423-a255-3f7fba0227b4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb5c214-c2ea-474d-9e60-84847230fc64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8a894e-37cd-4d19-937a-1c9ee349783e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09210c95-1952-4a37-852f-a5ed5253a6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "60fc0360-64ca-468d-8545-ae63d12daa29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62202541-d3b9-4a37-8f99-973a5b9fb687",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c51556f-9244-41d9-b9cf-315bbf20ddbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6edbefe8-2de5-4823-8a43-dc89d6a30b11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a95d95e-66f5-48ed-9bf3-e5fde988024e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e0dbbe-f59e-49c0-aa6e-086f799551c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7395c8-5438-4926-8859-62773b1bd3ea",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93138800-cbcb-41e3-9305-7a8cfb11a450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f3e4d3e-b8ac-4060-81fe-373a88e68068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1e0bb9-e4c5-4f72-97b3-45beed7ff6aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ead0a0ec-a236-480a-9987-89db1c2c2751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d4a6f1-7e02-450a-973f-f1b6a0578d33",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70f5091-01d1-4771-8576-a29a7c501760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb2ea7e8-4bfd-48a4-ac93-786db8ba18ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3585e53-9478-4f54-a382-87935c47892f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d03ee90b-5cc5-4dd2-ac63-3adcf856af43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7ba6fd-9731-4dfe-94c3-047e2d48e4ef",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f4c27a-49d2-4dac-a018-9003bb68d19f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2bc76e-0e6c-44d7-a371-fcd7a3c01dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c432cbb8-f75a-429d-a8db-5808d9dc4e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b30153b-fc86-4cdb-859d-67a7eb18eef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959f17e2-c616-4b8e-9a82-c8a4bdecdaad",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bc6af55-dfaf-4c73-9f99-96101c1643a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "596fd159-5fa6-4e91-93df-003f16d3b9f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0478e34b-0e3e-4c82-8b2a-b25612a4a332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "4440f4b9-7a02-4c7d-ae24-f22ab22c26ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524bd1a8-1854-4b20-a611-39ebd70d524d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a814b5fe-66c7-4a54-9e7c-e4073e26a0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c35a7b-f842-4373-9764-6363a7919940"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3866e2f1-3013-4dae-a1b5-8c0897c00f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8bf50e0-6177-42de-a6f5-0615612ca00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b784712c-29da-40f1-8862-b7066fb91ef1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944d4d8a-e40c-4480-a1af-0411d1e59026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff480dd-b564-4d44-9dae-ba108fc09d9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1677a8-a8f0-4a09-8a74-36d249e965d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "124799d5-31be-482a-83f0-3ce40d43b70e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01851a48-a5a7-4afe-91c1-71bd8a043a34",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a260047-fb8b-4afa-b165-9163d0c190c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "372a9637-8e69-4981-8d51-98335d8dbdf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36e3c37c-5c40-491f-87a7-8539717922ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "509d5fe3-256b-4f14-b84b-d68ff9a305b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "511fd3fc-8277-4d19-854a-5166c6dda091",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7f6238-37f0-4086-bf42-28b5eef2aa3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6edf79-cce5-4bd2-87f5-f49515b86fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19bfdd44-be16-4796-baec-73fe37dcaf5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf62d77-d385-49c9-b67a-e3938265d5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf38050-e458-47d3-bfb2-9f6820946e21",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213aa53e-716b-4327-ad76-c7662cf8344b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7218864-93bd-416a-908c-ccdd15e17ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2929f764-6d79-4777-97ad-63d8a0968d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "486c9afb-775a-422e-915d-b016a9c3ce69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1c4139-1d86-4528-a246-755796709794",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f497acf8-d8a8-4790-9ff1-6d5fb84276fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d77dcc-2af2-4229-86e9-893b79dc23c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f68115a2-6113-439b-8e46-59466c58ce28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06ca6d9a-ed89-430c-9447-a442f39412c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e1681d-2e96-44d1-8a1c-bee32a2a5d9e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a7a4f4-e868-46f0-b9c5-6526a3eae6a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33145968-254a-447b-89be-e2fbcf159bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a9b51f0-df9a-4b04-a710-91af0dd801de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84cefe01-1b59-4c41-ae1c-0e5a16cea15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "432be0c2-4cf2-42fa-af6c-c49ae5884cdc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01967b67-1d25-4004-8cae-6fd7ee7e6616",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9297cd73-16b1-414a-866e-4c0ba61f5cd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70c5f61-f226-440e-a1d5-0ef7e8662766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a30ad331-7e80-4518-9666-ecac4277de22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eec75d4-039b-43f1-9f5a-6fa0fc32e61f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d249a5ca-dfc0-4eaf-96a7-18c096c814bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee495d1e-642b-448d-8747-9c89102ca171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d416f05-2bc9-4711-834d-37342b19c9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3498ea40-8160-4a07-a18e-84912cc90046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d600c8-58c9-4a73-a2b8-5a22ed0b6e20",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64f24452-b4fc-4560-affa-cd4b7178f4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b45dd66-28af-4b09-b83e-10781199194a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59732804-db17-4fb2-bd62-88b1cc6160de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5063b828-7bd9-4638-84c2-f96b915a51fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea8c60d-4397-451c-a67a-2a672bf16561",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8db2eff-4552-410c-b75e-cc7b9c0fcb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bdd56ec-9859-4f21-9780-379094b926f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2d124b-4350-4a5d-9e1e-34ed45ade736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d86ebdc8-f880-44ca-adf9-609bae8c0665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a96c4f4b-ab56-4061-96e5-ce3356f47a74",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5868102-2c78-4bad-96ef-c9b754bfb625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fcbd081-fad8-4dbc-b0ab-293c7fb01511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f00a2e8a-6430-4af8-8eeb-cb56a167d394",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc518b9-1780-4145-aac0-619047a903c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed068eac-2272-414a-8a3d-200a25fca68c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad73a294-d466-4d80-a8ce-c5dfb21ff926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5b75a9e-7d32-47cb-bc40-9205e6f501e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e592c28-eaa2-4dfe-bff7-241fa5a0199e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "189e4516-259d-4d69-955b-0a3898df90fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b8824e-1a25-4573-95b5-eca7332d2bc6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b5fd04-ba9e-4077-9cdd-d50ab7e603cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05fabfb-5022-44b3-ac9e-b3a686f199d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b17d83d7-1c91-4b94-bdd6-714d6846c2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01b5eb22-5f87-480e-8a53-e5196f9e6f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca97ed5-85f5-4114-99fb-85a93f8961ec",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72fa8618-3eaa-42a1-a00e-5f25a8c3f79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a4320f8-b8d4-43a7-bd3c-e0df878909e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b24a577-28fb-4459-b23b-b87ef20482ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e44212d4-848a-4132-af31-dc4a3d147b86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a89fc4-66ba-45e3-9f78-5ff2e6e1ec83",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0eddde-dcf6-48ad-95af-0b14d98a59cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ad5598-d450-43e9-941c-03acf6ef5453"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36adb638-745a-4ee8-8c1a-58e20a80e751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80bc2467-9ed9-450b-a2f5-a283cc5674c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebc34d3-4806-4c76-a22c-2bab294fc5d2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c971cea0-80e6-4695-a7a3-0b0288a1724a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b1615d3-1fce-4a23-844f-ad1988853d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1048292e-f272-40e3-9815-50cb0b2e223a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f67b991-2c00-4c48-847f-834ef9b3e143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e0c6a5-d885-4fca-ad36-a0106520f554",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f78e4c-aa27-42a8-acd5-e3b322146506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ed9df6-3eb7-4dbf-8135-f8f495dd5e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc675f9-a9dd-4e64-a1a1-1f9c762cd918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27374839-d581-4d34-89c4-5d02d491de07"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f65085c0-e22c-49f5-abeb-3dc4f07ab1c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a55fca5c-3c12-43c1-b10b-8960b16cd252",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5787d37c-a21b-49bc-9475-e2539486d9ca",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6419c1-0334-48de-b8e7-b1067ee8ccb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fd29b64-64dd-4ba2-8203-d25eb877833e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b4bfaf76-fa08-4249-bc88-abe0aad83c0e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c25a3dc9-94a5-4184-9d86-8bdf430e6b53",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "710acfdb-32d7-43e8-9bc6-7d62c193f9bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "462349f3-652b-4a5c-b8a9-c040161bd431",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "977c0842-42cb-482a-90ea-24779820d393"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1831b171-9aab-448b-8f6c-c981d3276c0d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f6cc7f78-7c75-4b1b-8e87-7343b5efad14"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "93ef9fec-449c-418c-bdce-0fa4fc710483",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e80fd31-d1a9-4f1f-abcb-325832bc6463"
            }
          }
        ]
      },
      {
        "id": "58d1f0f5-f035-4483-8bcb-dc729149fa75",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "1c52ad03-e398-4892-8459-66675255f47c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "36c700ad-76e8-424e-aed7-35ca4c4f1e07",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "142e5d87-89fb-4dcd-b436-543f2019e4e8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12883490-fe1a-4eb6-89c0-c2f764cb5d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b632132a-045d-4165-9390-d71b7d8fa746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d4699a5-2b65-4534-a169-a2ffd72c42ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed02631-698c-45e5-bfe4-5525639a5d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a33df4-f7fe-4d76-8beb-34238db5d4e0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69bdce2-9dc0-4a75-9a60-2cc5cce3635c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c1b5c2-8b2a-4cf2-9cda-c2e447d93e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97a7302-052a-413c-96bb-3d0094d51285",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "604bafaa-74cb-40a6-a034-f511c9d5cd33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43f540f5-9456-4bc8-a567-4ed86d5998bf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6010dc5-b3a4-4d95-b46b-b5ba2eacabaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491ec585-62fb-4731-a33c-aaa3d88cf86a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c041c5b6-542f-4d40-ac2e-b1da1a6866e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6e85129-5bbc-4407-99d5-a3d3134e12fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d865f667-6c16-4155-8575-04cc8214cc05",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d7f0dcf-fe0b-4b34-b6fd-5da85187b40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad17e9e2-2c37-4f5f-9093-1d3a8ea15a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb7ee6d-5c1e-4645-949d-381e1b146561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b1486ba-a2d7-4d9a-a81a-1d3f507f39ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90362ee-50f8-496b-b037-0ab1b718639f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a514a214-8b9b-41a8-a704-77a4402f8033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a450ca-a9a2-4056-b50f-56d3de171ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "268d3372-4d2d-4d23-9ac0-298dd55fb993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "89ffab94-41a1-4089-acac-7cb491e3dd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb3afe5-b31e-4cbb-aced-5f0758095a88",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59ff2f9-ec76-46b0-b542-52ce9cff3697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6beca59d-7cb1-41f0-af14-2d3720d54cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0187a13f-6631-45ae-8d47-bf388483a4b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73b521f9-1139-4622-a193-72aa8f0fa203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f14c55-469f-4f6b-b23f-b5e74a03ebf9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e5b46d-605f-4721-a527-3ad28595efc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c518ee9-c7f7-41ad-9223-e43ed2413d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9146f32-27c5-4e46-a385-58343b94e765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa2313f8-ae93-4455-b47d-36b79465c333"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b06ab2d-d09c-4ee7-8d02-070d7d46db6e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2739d7e-fb50-4b3b-8793-862e11ed8064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1398594c-f2e0-4eb9-b633-863be652e499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d3a326-066f-42a3-a2a3-7f34e95d4205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a78957e-37c2-45e5-b386-e29d8fb7bea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3bc74ce-f4fa-466f-ae42-382ddeb01faa",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "077f8499-2583-439d-91d6-7bcf7a2438b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb2c389c-e77e-4c07-8a67-2e168dfb029c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991082e0-3baa-48b2-90bf-4616d778ad99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b519c86e-e688-4cd2-9421-3186746f7972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838a2d14-58be-4248-b5f6-d4ba12b2eab5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d98981e-8359-4de3-8dc8-093ee9e87f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d615cff-e166-4aaf-9350-aa61e26315e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3439c853-93df-4a38-b5ff-a76a16ae039e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd78ae06-3495-4edd-b070-40c454d317cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f483b4-0934-4a7a-a436-5be09036559d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3430c16b-55c3-4ee5-a52e-c811c2553201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fc44ad9-d7ec-4076-8208-c5eb0363abfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0170530e-0ad9-451a-84b7-82b2b709e2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d0609aa8-d38b-4d71-a37e-1a0d0401f175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b81dcf4-92ab-41c1-9a80-6a7dcb721729",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c3931e-346d-42de-a11d-825dbf657b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d1e6223-9f5c-4187-9414-cef63e6558bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf66690-21f1-4e4e-bf7d-4e688f786598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1223e899-a4e4-4f0a-ba42-951e2ebe4574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae710cfc-f81e-4c68-b2d5-0507bfb4d713",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a198ea-74c2-42fd-b596-ef009e1b3da0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a4869c9-d968-4a1a-b25d-ac2951cd33e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78141d90-a1cd-4d50-aff0-7e9d233c46fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5f9a9da-41bb-44a1-aab2-e175f8799430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e10afc-d66c-4ea7-9063-01b406ecf020",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f866e3-6829-40f6-85cb-0c11719a4073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f473f2-d827-4a35-a17f-86e0aca6c5a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58b2707-bf32-45cd-9579-00c9724fe307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f494de4-6c5c-46ac-b57e-ffac5621b2f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2721209-0827-487a-89bd-e73e12e80f66",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f56deaa-adc5-4dc3-93ba-5c8af60df1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a464ae3-dfbe-49b1-a724-64412e949890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa38d2c-8263-4591-b689-f99186b380ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "46222a0b-ea96-4f39-b2e6-8200d8417d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98ba805d-42e6-444b-b416-f50792882a23",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d6a20c-6fd2-42e1-82a3-e9c641d9e31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0d1014d-5915-44e5-bf35-ee7d2940e568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd154414-f72f-4d27-aadd-2f7eacd3fcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "4eef7656-f8e7-48c1-b111-d847edfd20f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d95a20e-7bfa-470a-9144-bdbb8e545fca",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1127047-f842-41b4-b377-807728e17979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55b4985-4c34-4439-ae34-af9035993a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac3b682-d821-472a-a781-76a4c396635e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1986a89-dabe-4262-81e3-b23fcb010907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3bccb7-160e-4033-b0c1-3d38c0f26439",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53e71367-20c1-4d67-94d5-87ae8275df5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13aaa5f-7e96-4d49-8bbb-85093d7bc910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84587ebd-d7b7-4ad6-b0d9-453b6f7649e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "aee1ecfd-277a-4882-a496-1f4f7c4593ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475511b0-6005-4705-9038-d1abf09ef649",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176672ca-754f-4008-840c-7bd6bf6c2624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1794eb10-8d99-4240-8b37-adf5f3ce5d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb745e8-36a4-461d-a09c-2e657bd1bcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aad61b8f-30fa-422d-a064-8cb6175166e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74266db5-5fac-492b-b08b-fbb3d8057e6c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a49870b-5e36-47ff-87e3-cdfecac5ce10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2ba33d4-952f-4221-9782-96030ac47db7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29124ce3-230d-4d16-b41f-0ba1f3451e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e42e514c-057f-4943-a569-e1c2ac3407a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86560b3a-dc7d-4c7f-95a1-f05af07af06d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abac1174-f225-4c10-b292-a2291261aeed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6871296-585d-4a2c-9a81-6a82fbd42f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca70a784-8ca9-413a-8823-9884656e750a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4404dfda-4d56-4246-b8a5-e32f0473873c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3683e12f-ffdf-4a11-9a07-4fdee00cec49",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cfbef32-8a37-4a67-8ef9-e1e280717202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58cf1993-79fb-4ff5-9c37-b417175bd580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f05c193-b8de-46dd-8060-7e23b90361cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a3882b-2065-4e07-9b93-cc1b7a4cd755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9a4c472-739a-4626-86c6-8a1ac7326c9e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b586c6-8bc6-4bdb-aed4-de11fb80d2d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c2f266d-da5b-4bd7-9424-1f24018dc017"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7acd95c9-2d4d-4482-ad55-73572f00f7ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d02b1d5c-35a8-4dc3-95aa-4f04554ba0dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "418b5604-05f4-4b85-bf10-62860acbe961",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a46bf3-dc52-4e74-85f2-6d132d496c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d336179d-bb3a-4e32-8b9d-d8f5e11de308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40829eb-ade8-4cdc-9ff0-3ed0b4ff9898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "253fff8c-94eb-4cb3-80be-ee47db11767d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1b6c5c-1408-477a-94a4-624094e3c167",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f918fbff-af5a-43f7-8876-ad817e30cb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ad206f-8669-4b9b-9e29-037fa904d828"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8a7a08-1722-471e-9219-f5bfebb4c208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57a1eade-b10d-4edc-b934-edaad8edb1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3207b0d-4163-4b29-a563-e29cf54ed81f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1002a95-514f-4eac-a3e1-a2b41412ae12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "550605d7-3731-4b45-8194-99ff8e2bd4fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ed490c-8309-4aed-9143-706b3df63efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6d4fa3-5b4d-45b8-8b3d-e668c346a318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d99617-3df3-4a37-99df-2e9d8dd8caea",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef7bd543-f1a4-4041-93e7-3b8fb8ee59ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255078f9-a111-446f-96ff-44fc271b5c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41262512-e2de-4d12-9910-96021cf61ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a68a6ab6-ee5e-4d56-bc76-c24af3a43b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a835fbc3-50cf-4330-bb2a-f7621df133e8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a0c155-4cda-4434-bb68-e3977bc5c336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da7034b5-c1ae-4271-9943-204c56cb23d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf963122-f6b4-4749-ac27-3ca14e05cd99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a17689a-9329-4082-9ebb-3adc97ca548e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378fbec2-a96e-4b99-b37d-b4a9cc1e3846",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14640853-393e-49af-b787-9b97bfd6a103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf4a1de-ba3f-407e-9346-5bd9c3b2bb52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d82f6c71-2516-48d5-b7fa-a89bee39b75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51191973-db82-4222-a728-c734635f9928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897ccda8-aacd-4d36-98b4-f339bf19dcb3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b683e3c-0ccf-4bfd-8697-02e08c03edce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8790a7f4-424f-4929-aab7-63a5f0d1be66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c02a314-3032-4d7e-b853-2466fca33fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c131d868-a4bb-4a2d-b825-40f0fb8ffae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f147a1ef-a610-4574-8186-9e66d5259763",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4023c501-e177-4797-b5a1-8d1316ebd2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c467dd-c070-400a-abeb-586a510ee78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e02cba6f-899c-4f69-aae1-4392c052701d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60d4352d-b8aa-4404-84c4-594f08a18788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc160061-e215-4d06-afd4-07d6d1a45653",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a173b1b4-0bc7-411d-9c04-4f94552cb47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978a93f9-4d78-4946-8657-6f0e5c904916"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe917456-fc3e-45f1-a26f-dc659fd40ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba9914ff-4428-494f-acac-cb38677c7b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adb6e952-6817-496b-b6dc-1567e464eac4",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88a74a0-a263-4941-a537-dccf7e96c22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a6dfdf-3e1b-4712-8462-57b2ac688e71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e18adc1-15fb-427f-bf7d-b4b11661fbe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03313f45-3761-4f06-a439-9e55a7150dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc92719-4161-4b6d-9047-3a8b19741efe",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915e0832-330e-4798-a803-d9db4cc58f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e92a122-4c83-4276-afc0-4643908303a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a328ea3b-1f2c-4097-a678-eb8bcfae6054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9d29a8-8378-4e94-86a8-3dea84626141"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451d5c3b-78cf-49e6-8f96-d6c09b45b54c",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae7ee2a-5986-4bdf-8ce1-f905b3283f08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62dc0094-cb9d-40e7-8c02-6e1999d4221b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bab6fc9-b2b8-44ae-97c8-c2164c5d7627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29e116eb-6a15-4fc8-b2af-c2ed3a2ab0e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ed230c-6521-4ed5-a02f-fd6e8f7ba130",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7631f9-a68c-41b4-a9c8-5d7e02609472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac3c5b44-6ac4-4983-8aad-4c77ee51e854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc587200-0a58-4579-b6b0-e825a1b63e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "655569d3-ccff-41bc-9e71-dcafb6da7d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153be57c-aef7-452a-b343-5f0a1122034f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55afb184-3516-46a2-9b13-0f42dad7aaa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d23ecc50-d124-4d3a-bbe2-9921370b5307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2ad707-b829-4bbf-9e2c-cd1c851b0204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1155460-bc1a-4132-88fd-b662e50ac971"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c88f0611-0cf1-4008-8da9-1571b5e728c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "78c67a9a-78b0-43ea-a60c-c68ab112bded",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a631e2b4-4e44-4915-bf6c-ba670615e434",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c072a193-76f4-47c9-86c3-dba0cdbe6339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45778fc3-e2ce-4bb9-bd7f-3c20031dd20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "201b4faa-e066-4dab-bbb0-30e9acf2c29d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1302d046-8f26-41fa-bee4-b19e59bb5b87",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44c15ce1-5ef1-442f-9bae-60628c9df56f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "93a49ac1-3f61-499a-9b5a-2b3199c9e5cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e08c2f68-9105-40ec-9e22-cfa67b0ecb3b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1cd969ee-7adf-468b-af99-d17755739ce2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "24c90cd5-50bd-4e50-9424-c8e55e6983e0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "54f24b03-7afc-4c83-b3f8-10d7cf2f6023",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64fa0410-34f0-4756-a92e-433bb1376858"
            }
          }
        ]
      },
      {
        "id": "8e39c4a3-7cc1-4c73-bb86-8a8ac1669725",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4b5d8138-9739-48e8-b248-e265f29d21ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f53a2319-8255-4b1d-b01c-3e41b45f2453",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "875765f1-8f4e-4bd3-b2fb-5dd654973624",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4ffad1-30a3-4b38-8688-125f7a9e09c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4ce010b-4130-47b8-aefc-96f10586560e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50e2651-fd4d-4089-9af8-61bbdde0d5ad",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167cf0f7-bcc2-415a-ba38-99921f004a2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5154c57d-e6ea-4389-9349-69fc50f14698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217638a7-a724-472b-8e4b-3e137bab0098",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e63a065-4877-4f49-a6cf-5184900db4aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c8cd1bb-1386-44d3-ae5c-0cf1a4aeba20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cdbaa37-9f03-47c4-89e0-848a8521c9c9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f90d61a-fe69-41b2-a96e-ad223ddea06c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb451023-571e-4f90-9ef5-9cdafb6303db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09989b69-446b-4fac-9437-23e87923bb40",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca95695-7a49-480e-a940-edf256033eee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4697af9c-3ebd-4ccb-b2af-58f4a6acf6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39438fde-5354-459e-942a-561f7bca5f86",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af265b77-96ba-406f-ab3c-7e3676b2fb91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230dd7d3-2aef-4958-8ea3-f2fd82a173b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9820a19-08c8-41c9-9682-eb8df6304bf0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab9a1a5-95b3-448d-b274-836c8c4dfab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0346f9e0-b90c-420c-9c54-adef0be2cdeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff9f7bc-9ad7-422c-b63e-3cc049a771f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ddc3bf-0eb3-451a-b79c-22e55d359e15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "390d9685-15b0-437b-9aef-e8f12122a44a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ee81d42-eae2-42d1-92af-4ac9ed40db47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3de61e67-4acf-4f5a-908f-1c24e3c3fe96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81876469-e105-4205-838c-a1d520f08dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf2cebe-596b-4319-9807-f0193c72148f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaddb619-d00b-4a27-a508-eeeaca128f17",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46be049a-6801-41c1-b292-7cced34c335b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc6173eb-ee9d-413d-8e3a-2b83803eb2e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c638efa-7313-4f52-8efc-29b131629bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f7728b-01ad-465e-960c-9c29033da4fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608f585a-c9ef-45e7-9a4a-211c6299c45d",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709f143c-63e3-4081-aa56-dc54a0059452",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e737ebe-78ef-4778-a4d3-c72400b6693c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e50b179-257f-4e5d-b9ce-d7b771b1feb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035317fd-3e77-47fc-bbc7-1874ca4ee7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f802d67-1c3b-49e6-a6cb-51a61c3c9dc7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edbb354-50e7-4641-9dc3-946defc9f29f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47f77bcd-fc63-4ec3-b7d4-d8cbedaf9105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c31b90d-1df8-4f5f-a22d-dd1d5f129e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35e7cba1-aa1c-47bb-9850-a1d5110a2253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22fc3fd5-31bb-49f0-b724-2a0ea56410cc",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7a4add1-270f-4639-9a80-f91bf19cf377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c3002ab-8581-4a81-a465-525944331f4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d38e58-85b1-4756-b70d-4f3ba2364b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb63e33d-2ddc-48f5-aa22-29484aad7370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1706064b-867b-4093-9e04-4262886b3db4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4522514a-2dda-4d84-abb4-e63a8f464bf1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "049053c7-5fc8-4b70-8b71-bcb91c2e0a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bfbecb-ad7e-4330-aecb-e641483e92a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c78a36b-8824-4f74-be03-85a2516af40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3e9cf5-1e6a-4a60-b5f4-8e8c30704bb1",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abad11b2-c5e8-4dd1-92c7-516698b0dc85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cfef193-79e7-4ef1-a04a-b29b0972363f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "522c5539-0570-44cd-9453-f2da8468f340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddbab017-1d90-47f1-881d-82ccd4f0dcec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590cf223-43f6-4239-9cf2-0fbaa4461a6d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de09199b-bf19-4428-9954-3702bb2f8a34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5197643-83e9-4afa-b3b2-79a5271a6aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6979f4aa-5f13-493b-883a-99a977e880dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3cd68a-4d24-45d1-9792-94ed8f2b9f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d34bc95-b032-4734-90ee-79e7d1d39fd0",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e5b6a8-46d1-4ce2-b3e7-89361339059e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0d12654-fc4b-4421-a464-36e7efd6bf71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14586055-ed0d-4301-b1f1-05ad2faa99d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3111f7fe-99d5-4934-ada4-43694cd05e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd31e3ee-8332-4968-a1d6-499a7a8a976c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4790040-d715-4a07-b706-eff175cf9c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55551738-1b1e-482d-a001-b9c08017578a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5dee2de-45da-408b-b9ef-33654302a28f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315330d3-33d2-4541-9390-134f2493f264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a52c29c3-255b-4384-b64d-4491a452390c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7aa202c5-aa42-4ddd-b3fb-f2f50fb8077f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d463b386-920a-4288-bc7a-322319a767d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "449a01a4-95d4-4e86-87fc-c400f2e92ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f62d104-8921-44f6-980f-f2f6756739a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3988df5-f390-4239-937e-69c070e971ab",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f7517d-9077-4828-ac91-128e9dd8b024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "206ec0c7-a400-4151-b85f-c03f5cd3e6a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ad9977-b837-47e3-932f-db156f0de357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3dd2a7e-dd37-4f72-bf9c-97d8988fc6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622ee68a-b021-4636-a95a-4fe8905e3a6a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "677f45a4-4ebf-4411-87e2-d5ed022c8fac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb50f231-58f5-405e-84b2-b1ad298da19e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4725915a-eb56-434f-8d74-ac6ad17e4a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d9926b-b651-4598-9e7a-4a4af6798255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e72b192c-2208-41c8-ab14-90f0897f4b91",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54235ad7-629a-4860-afdf-ee729fcdd13a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d175f40-d8fb-4188-ad75-50fdd350c903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b8e3fa-faf7-49a5-a793-0a133c23ac35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74633dfa-ac11-4026-b8a8-3ee9fdf12b19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a9044f0-6db9-4a16-a36d-d61ed81d4ed8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e786ea2-b2a6-44a4-ac11-87a9a4d8ef51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ecac3d4-efa7-48c7-a21f-cf91f6f31614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f80821-322d-4644-9f7d-d50b8f820a49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3804e4-1eaf-4954-8a2b-19baa685c109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719ce6fc-49e1-45c8-b81b-99e8c6eca0a2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5490c685-9333-4bd3-a5dc-721b276870f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac98dc0-20df-48cc-84be-557a8437cd23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d19cbe0-0dd5-40be-add6-b5c577e98ef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e2ddd1f-41b0-406b-83a8-62b2f710f50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1e73c0-fdf5-485f-8cb0-09f02e0804f4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e135c4-21eb-47ca-b82e-222e87b4cd1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c2ae4b6-d8b1-43bd-b7c4-262d85d4f3f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70a740f-1ffb-4003-baeb-06ff28ea9935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7046af-5529-42b9-a663-4fe5f9b91199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fafd10b-410d-44d9-9a51-104468c0daaa",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c78159-7d7c-4184-b010-48f41954f44b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6911822-da21-42a5-9b3e-cb622ef64bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db16915-150e-4d17-9ffa-f1a19574b5ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f7056c1-e88a-439a-91f8-eda3dc0b15ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6de1f7-5e90-4dbb-81d1-9484be03ab27",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddaae2d6-b0d3-4c44-a164-6e2cfeb4abeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03947c30-2536-483d-ae4a-3fc27de9a116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc4f24f-31b3-435a-bc20-9ee9238e5e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8990758c-d9c4-4009-b240-05ac7e89d1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398e109d-3fc9-4377-a5f6-f899f58bd56f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bf0ed0-de3a-4e8d-92aa-d36f5a4973ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa75db11-f170-4bb6-a938-eadb82445d0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36504552-3e6d-4d42-a8d3-d46826a8a9ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e526af1-7595-4939-93a8-a6a9bf09488e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8155ac44-b290-4536-89e3-eda2c9402957",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4168cdb8-e9f5-4937-b3c9-0904c10166d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79472409-4665-43ee-9a74-20ddadec7c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "425e0023-fb39-4b95-809d-251b45579423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd3c6384-22c0-4145-87ab-d1581f2a3664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9122de-e13b-4962-8bc7-3bae9eaaafde",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b73803f6-df99-4b9a-b578-547eac24f497",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3a50136-042a-44d5-95b4-c5358a1e491c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e209d252-18b7-4b09-82ee-51ffa39b6496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0208699-aaef-40e6-957f-689b1d42a6a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b46ead4-1a56-4b54-b8c8-e343c2b6ee43",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ad7ce8-cf6f-4620-912c-423a6a3a0198",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc125b32-2a78-42bb-8729-280a1d1939f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e22a359-e202-42eb-8219-14adaff26fb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b443972-16bf-457c-89f5-2696c6965bf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce125d2-897d-4cbc-8969-241084393283",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2891043f-0a5f-4cec-b179-5fc44013fa9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e324a59-fc89-4ebf-85b0-b48d641ce11c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f34ae8-fd2f-4388-a1d3-9d8d705263f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6363d562-646e-4827-b813-79423665c597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc305556-4b31-41c8-9dee-e9464c6ce5bc",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6973b48b-9e35-4ea0-ad62-e6e7edae74b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "001edd6a-3e26-40ab-8c52-9ead563e9727"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "250dc6b7-7a53-415d-bb98-457968de9f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ce4077-dc89-4ee7-9a72-8f9c961bd579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da55d93-17a6-4358-9fe4-2fc6ee456597",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60da52cc-41ef-4932-a034-83c2f6f823b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02078b3c-9455-47c1-993a-047e144ca008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "408cc082-8afe-4a2f-bde0-4549ad98a48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9a6186-003a-4d1f-a418-01d2b89edc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "960fecc5-befb-4a2f-a871-7b78f0fea62b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eccdeef-d728-4c7f-b7b2-8f70264a75bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "200dae45-0281-44d5-80c1-492223eae281"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef74ce5a-f134-42b4-b333-964506699a54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f9c1b3-2bc8-4357-944a-909da093a8ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb21c658-9fb5-4cc3-b9e3-a9ecf421a993",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c5f8f93-fdfe-4f76-9ecc-245753d8983d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe29393-504d-45e1-9424-adbb9b3f1ea7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d298f92b-f53b-4db3-9e41-c441bb807426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920e5439-373d-4aba-a733-163e38e1735b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbec25ad-aaa8-4fc7-8fbd-afb408a19d1c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04faf8d2-9049-44e5-b19f-2801fc0a5123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a394a9-8e41-400a-948a-a61814f61de6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36752a64-cb23-40e5-9ee9-a0a8b24942df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8c8fc1-33ac-4588-8cb7-f93f8e1cd43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25edfe5d-02b4-4e10-b477-efbc934e295f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441cae4a-af86-4379-9de6-a02ba09d72d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af42678-2666-4954-8ffd-344c99af93ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec3f4c7-a3f4-4260-8eee-1a7eb15ac64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e72a562-ed1a-40c7-a0c8-7ae69c80f266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69fadc78-de34-447c-8ac1-0a35628bcee7",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1933e1b3-db96-40f4-a47c-061dd0e7ba0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1575d9b-f796-4f3d-af75-9a712bc6240c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "163e9378-48f0-4566-b8fb-4598a1168d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9d60f41-7720-4aac-9866-a2a7f52cc9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ec108e-e598-41f8-93aa-35592907c85f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43160a5d-3f9b-4987-ac72-b9ede05588d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d833e67d-c591-415b-a74a-77bd39cd2c85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "938162ff-61f7-4c0c-b403-953493f3f3a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386a9f05-7179-4076-8e53-8c286872b1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dfa0163-cd40-4d0c-9370-2ecabe8aa6ba",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2977c6-5e44-4a17-96b4-4e72efd8ae51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d4dd22-ea87-4fb0-8877-a0e855dbe946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb773886-686f-4ef6-ad2b-3fc64be20460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c913ea5-9a8b-4670-b9be-1ea1446cf109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8210fe77-80a2-4c46-9e36-cf911ffaf27b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f189b87d-7d22-47dc-a539-62c37e455343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28f3947d-7a6e-4fac-a00f-2cf5f22af899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd8d90a-c3ad-4382-aca9-25a81b342ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f832fe8d-51f5-4931-bf87-1cb139be57f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08346513-7daf-49e9-9445-0bd0349adf7c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140d0b1b-eec2-44b7-b72e-811bb55800ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a6ddeb7-179f-4292-9a41-9be4b9cbe286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a187bacb-22ff-46d1-a40f-1ff77f4fadb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34255f91-6810-4dfb-bef0-e528255bf884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2320c610-6744-42de-bd53-5195d91e9b8b",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a910032-1701-49da-adf9-b2308409f9ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09de4d7c-4145-48db-94ac-c7cc2c6bac1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7403063-b6fa-404b-9368-6e1d81dc77f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3828d7c9-6d70-4c9d-a835-e28da1beaee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c760998f-9951-4a4b-98bb-cf1fd835e3d9",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92ed3d50-d8c8-4086-a20a-cd1e3114fbd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca647edf-7dd2-4d9a-aaa1-88a7fc460c33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc53249-0728-44e1-8a94-6e71fcaadef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd4964e-7ddf-4830-a0be-5c8cfcd7e0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11cc091b-c6c1-40a6-b4f7-35a1664a34de",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67e2e78-f086-44df-944e-d1294f902356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50d8eb39-5357-48f4-8968-b04778b3df02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f861b856-2b23-41c1-b3f0-cb7e61034378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aadf13a9-92ff-4b7a-b5c6-b2dda07fe4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9bc224-1ec4-40fe-b6e9-1bfb6605e23a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52e0dc9-badd-45e8-bba8-65bb42c593a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba3065d-f9e9-484f-b53f-31ca1b829b75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4b17a7b-8a26-42dd-9ef1-7f2221d59b7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8524eac2-b525-4ed6-a28d-2446e5c7114e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00925881-b289-4252-8c7a-b13e283e8f8c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa82a899-7601-4cea-8164-b336d4c9f324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26dd9ea3-74c6-4a45-942d-0cf19ac4b3ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce162b80-ceb6-4725-8eaa-763d9008bf5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162cbe77-de75-479f-b0e9-ff4dac1f159c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8bb6c6-46d5-45e1-b39a-10fef9d69449",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea3d1dd-b743-406e-bd4c-fe9b61cb6dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70aafa41-af7c-460e-a43f-5f8179d020c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4298dc22-f905-406d-bf7d-0ba8f6815298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64502493-c830-4e26-9aff-fe7e037f3999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04844c89-27e5-4ff5-9094-6b84ea3f27ad",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9705f68-f5e4-498c-8a4e-6718358f9d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e60c1792-69ac-4144-88e1-a11edc3c05a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eed4c06-b2e1-40ad-ac44-a75a8739ae57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a039266f-1c61-4ebe-95b9-94e695d2652f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc59e45-6a63-4f3c-9322-6da901a77fbd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80146b0-6bc4-40a7-a243-e1a34e3b2f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fba3dc65-54d6-43c0-9b61-96f81c33809e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f0eb70-4340-4bc1-a00e-b517048b2464",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adff1771-1a94-4059-ab47-48db4ecad107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a2a1563-6628-4b51-80b4-e608927f4630",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac182166-4c10-4423-831b-707489fc3659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2e3e3b-a663-4c4d-84be-038df30d50de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fb29b2-a41f-44e4-8e34-0c8f8442d457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bda03e1-4160-474b-bc6b-d9fb8c5f34d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddef6487-481b-4f31-aa83-3c603656bcce",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27d1519-c295-4c51-a2fa-8c05de95b687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e587895-2b05-47c6-b1a1-3f27f4b1ecf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aad8511-028d-4c24-a7d8-4a15b4ef20da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c12207-7ab1-4076-ae8f-7975a005cbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9085b58-efcb-41f0-83f6-2ecaed5f0d19",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb9ce77-7072-45b9-b641-1897c2f9d071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b364fdea-ed33-46e9-824a-7624735a72a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b66cff3-23b9-40c4-ba55-ee8a51e69079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5c22999-24cd-4cd6-8370-3d984dab1126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90862e87-6790-48b6-8704-a4c79707e838",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bb6bf2-7c26-4613-8d43-a076e668bd40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46259b5f-d223-4897-a329-12557ba5e1bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0180a5e7-2ed0-4815-809a-907e5b59ea6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2b17a5-33ef-4748-b138-8dd97908953f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03736c1b-d76d-4575-b548-75990a8221de",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ac63ee-75c4-45c6-bd4d-641ade43327d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fea1d332-df9e-42c6-a0b9-38c27322cf4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05609d83-c7af-4394-8a0f-a84c0d60c160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc41af06-9a68-4846-a860-8376325c1d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b10502f-b2ee-45cf-8d47-a45bd87d5504",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061e06fb-dbc1-4ac7-a766-ad5792c2a69e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fb72701-038d-4d68-8551-bfd02a8c5f15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4838ea-f46c-4b3a-94ed-333813ac4984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb08cce9-73ae-4bda-8ecf-71e21f8db2b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8952dfe9-c831-4253-88b3-510004a8ab84",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296aa2a0-4a7e-4694-8f84-f0ecd8123399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3b4b8c4-4fd7-4909-8a74-ba115611b04a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8ed078-6a20-410b-864c-5d3c002b2933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8883fe7-d829-4617-af1a-40de6cc59cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c04bee-56fc-4217-a7b1-7529167e6a3c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73eff0ab-6fd1-4378-b82f-ef710861ed01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a62f17c5-a4a1-472e-bbc7-3de1cb8526e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd6f471-6903-4bec-be9c-fad9f2d9b88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2233ef7-73d3-46a3-b276-7954c3454421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a524f94c-ce7d-4f1a-b556-5f43e3a7737a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be49230-b504-45fc-882d-c50d65e2798c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264abb7e-43bc-42fe-a5d0-f3d37f453e56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "470979f6-d16a-49f5-90cc-087c72012b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74fa6341-d739-434d-8874-e320f8e957df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19e8e52-3520-4967-afce-11c47bc7d25d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77470e92-38fa-447e-9e20-6104897cb3b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24376c59-5364-425b-8b7f-a8086bad8af2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3bfcfc-d343-4d75-9ce7-e1644aefbfeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147b325e-de53-4ff7-abfb-aa08c2b1e3fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fcdbda4-0668-46bd-8b4b-0ab696e458f2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874985ff-9add-4aca-a61c-e738aa8539ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e65c43b-d956-4556-8732-6c2a728a878a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2db3fbf-eb2c-4bd3-b224-32ed311b6714",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf4fb13-df45-40ee-b38d-d369a46c674d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78af2b35-1513-41c7-a745-2bf89c9f722b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a63ebc-df46-4db0-ac01-ec49b87e9e4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f311a8f-7fe6-41a6-9172-d75913a9ea89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2cb3c1f-02d8-4659-9c60-b3841bbde473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adcbc8d9-2d24-488e-a069-1c7dba0e8c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816b46f6-8fa0-4f6a-95de-33800af8f763",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286ce6e1-1082-4eea-903a-8f10368882c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d368e489-8e86-4b34-89e2-800f70da97fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6214bbd4-1642-457c-9270-c97ad9782115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c91c0ace-686f-4429-94f3-9090efdb7ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1ac32b-7f98-44ec-9062-4edb8b6aa6ac",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626a05c9-88a9-4723-b1b1-6fbaa651465a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "809386fe-5f39-4d0e-a508-8725aa2d948c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0a3acf-cef8-4a82-a2a7-0ca8db8cb499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c251512-6021-49ee-b2f9-2c5aa20f461f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81545929-4bd9-4efe-a583-c97356d1d1d7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58a75bd5-ffcf-4cd5-b396-724b2c2e85eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca357187-6622-40a6-9029-44cb623f5bba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbb816f-9c76-42fe-8bbc-6539245dbc2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35565e12-9d0e-4ea6-8757-5681a040f094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c55ef54-b5d5-4e48-98c0-a719a8164659",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ecda43-e6c2-4a37-a204-6a861dd652c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59fcb270-d3cc-4686-8948-51d4a3197ed8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c49452-b68d-4985-8fad-8bb3f13585dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b052717-7995-4d95-a8e5-c6f0173b1fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be932ae-9704-416a-a458-ee3e5851aa98",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb46f954-00af-4781-abfe-0b7cd1c6e71a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6ab6092-3dff-4707-925f-c05a99c948a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e4e7800-3c14-4afe-902f-13581bf7dd3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c085dcd-b345-4221-9ce6-dac97848a046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "852a1eb8-1fb3-442e-976b-096dfa2a10a7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cddf03-0524-4543-8018-240e82cc7699",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25d0e045-491d-46c5-8bd2-4a7d35eeec6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5f79cd-e1b0-4b71-a2eb-c6b425700be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8113ffa-8706-4a31-95b5-2b7edff6faca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba4d552a-7ff8-4ca3-8378-9a08eb8cc3be",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4290bba6-204b-4d37-9577-07981e715d46",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5105b23-61d7-4a53-b81d-ef95f94b081b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e6efc2c-0909-45b7-9945-5df4128a8b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af3466fe-c7f3-4671-8872-a80862aa44b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea80d2c9-cdbd-45d5-9f64-b868b71c1765",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e814fc44-5caa-4f92-be92-530fb8c1170e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37f33f8f-ba1e-4f88-8a30-266caeef1dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62e18a8-09bc-4bf6-8104-e5e01f31e07d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4828fa-519b-47fe-ae6e-e68d5faca006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c82bcc05-c55c-419a-8d7e-12e0ec103183",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaacea9c-c331-413e-80da-4f83c4d0dbe4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc97fc94-c745-47d2-b41f-aac8c366af16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6a2e30-ffd8-4b01-852f-1dfcb0d16ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c028f3-4a3b-4da5-9ac9-20a532b98140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da21ef5-2061-4f37-89d7-c7c7e0bf4537",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4af8ef11-1768-4cf0-9dd3-28acb9ee4784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35066881-3a5b-4620-999b-0661a0f0dde9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "645f8cba-1b62-446a-bb62-900508357e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750d8c28-8cde-4b71-921c-a39c2f8ac6dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a67f9bc-5dfe-49d5-b25e-15bc7406bb9b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4de19ce4-a41c-404b-9640-7b026d1d43d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4c6b154-d44a-4474-9899-d050f840a8fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56a0483-5374-43e5-b708-a4aa24222278",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a021c97c-a78f-4367-992f-836e2c28bc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e75253c-0a83-4af7-b444-42b944b6c44c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a76157f4-4c9f-4706-a09e-143e245bf305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7869f52f-4e68-4b0d-8ad9-09f4bf1eebf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736160d2-e9cd-4fe0-adec-aac486bff500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d036d66a-8809-483e-b4c1-2aad834a577a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0960753c-21c7-4614-9031-12362b0704fa",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2787bc3-c389-44d0-b347-ab344ba30aa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4dbc79b-d41e-47c4-b741-faa1798fd902"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e51a142-8970-470c-a7f1-c6fb996e32e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b8413e0-b13c-46f9-80e0-bba8ce13aae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d510403-cd78-4408-af57-5e40e90fc1fd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a7c7f70-a063-45cb-a9e5-94a772de6b16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8be54a01-d4a5-4735-8bd9-07f428de4d07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d8e725-16b2-4f42-bed5-e5f715dccec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccbd3d12-bdfd-43d4-b223-946984e6c6f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b578a306-2156-4e40-9d8b-76b9b09cda09",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d25fd69-da25-49dc-aea9-14bb3e0835e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "217c12e5-7e73-491e-8e41-255402ad8634"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1be804-f916-4de0-abb2-da244426d4d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a244b823-e002-4a3c-bfdc-c98cef33ccf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e99b05-57e9-4969-a69f-be7482f5c7cb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63488649-9bfd-4686-8a60-5fa446075175",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b5adbc4-364f-48f5-b80a-ce24c4025f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc40d66-1234-4dd3-b1ef-c6bd8c5542d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1835588b-3d5d-47e3-8789-b3a4472829df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98a2f3e-59de-4621-b562-a38c88c94288",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4504fd1a-0baa-4b73-8164-383ae815b1dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0981f4a1-aae3-4b20-a499-34dd2d819b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ddab9b5-6704-4632-b6e6-6c76f60d257c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea2cf186-3d77-45a1-b393-bd4c69002a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa6a5619-4269-4181-8dff-ed76f3efca5e",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "003d7992-afe6-4a3b-8bed-82e9c84c4d49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d301c29-3d14-415e-a52c-e25b47ac130a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0638b3-4d70-4ad6-b949-0821e5d91c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c33a59-6920-4e04-aa26-cf8a6b4bde5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c66c4d-d43b-428b-a012-bb5aa0b7d664",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c73638e-345e-4f50-8b75-d98efe722728",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "381d2132-8fc3-4a58-8fc2-646778a4aeb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afe4030-7f55-4b50-971d-4211577553d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d57c53-a2f4-4c3e-924c-df28dc07f388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2b5ca2e-462c-46e3-a27c-831093d75699",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029ce63e-5613-4c4a-bcda-bd9a43c83f44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd5ef997-1ffa-4ba0-9a22-dd583c5c2a5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0ecdde-5923-4bbd-9896-f4febe4ebc26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0bbb6c-a31c-414e-91c0-2e31cf7bb11e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58606407-2ec5-45c3-b7d6-2222eca01ecf",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8572b2-30d5-4ccc-ac60-4e3f6c2d4117",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88a64884-25a9-4326-9869-8106ba52f267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ffe2e8-e4e7-44b0-8227-85df8db47e42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d21b2b-949d-4472-b5f1-dfd62c86f825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7e331e-434c-4e1d-b3a6-845b30c13109",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deba6fba-75b4-4bde-8bbc-7660b46b4add",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "174a0563-7b8a-4c6a-b9f8-f7914e101352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb7d976-ed4c-4b84-b3f5-175be715a4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bdd2e0d-a4f8-4ac9-ae10-07918c52da32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82aa569c-8290-4749-a4ce-1900340c9657",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78194e6-4b9c-4991-b335-61049a7b8e95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00685bef-2a9a-42c2-8730-da9b11e7ab1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d4ae83-cd64-44e0-9a93-574900929747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cb3fba2-d843-4f78-a07d-55ef3dbd71dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e4188e9-920e-46bc-8ad0-0d9afd0c098d",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d616d876-72b8-4123-8c78-70b68e95fa0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edf7dfe0-3481-4468-aeef-3351acbcc431"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448a3934-1c93-42f9-b2f6-8a148594ad9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c903a4d9-720a-4c32-a3b7-7f60f64bb00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91ed196d-d09e-4020-bd39-e9e080c5aeff",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c536542-288b-42b6-9c2c-81c44f221d10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a64bd327-59ab-479e-94b0-ecfdc3aca84c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ba3746-05ec-418d-ab37-14c890a6f34e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39fe345-c9c7-4c19-946d-d73da0efbb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2986d00f-51c7-456a-8d5a-41618d3ddb40",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fefbaa-2999-4bca-86ff-d7e033d158aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f084760-dfe9-4166-a2ac-55248617c047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f402459-b9c6-413a-bf27-7746a07c1d7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b8c296f-6724-45e2-9cb8-131f968dada1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dba4504f-ad00-480e-b79b-bf248f8dc6f0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "388a6a54-5a0a-458c-bfb8-b80d1595d45f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4071d127-55ae-43b6-9580-a2b087c2b8f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b704f1dc-fb6d-400f-996c-767058b7572c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ae755ac-0ada-4123-b32c-e39680f88584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6e91b7-f8cf-4653-8bc5-ddf7a5136858",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2966ce17-eabe-4e30-b082-a2e8d92c6974",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0119f4bf-7936-49fd-9a50-ffe2ab65aaa1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc1b17ea-165c-453f-84e6-2c08c1d5927d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076ea7e5-6c3c-46ab-826c-5430b1620107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f6a557-4303-4818-9c63-6aae4e0bbe29",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1b90c6-7575-4774-8984-9db65fcfc5d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc456929-9ac4-4963-83e6-788bcccbe469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8552061-2b6c-45c4-af9c-3f48b17845e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf2a982-96e8-4bec-9238-fe18f4cc4692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09ed68e5-04d3-4388-a349-b18e4aad2105",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7783976-e233-4f82-9664-c876fb95cf2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3e7845f-2d2e-4168-84c5-39d6d320cea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b617360c-9f11-4745-a429-8a254ffae126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d7e5942-9631-4aac-88f0-0c3bf422e76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc523f1-0495-44b4-8378-28d5f987f23f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f3fe7b-e5a6-42e2-a008-a018566ca34e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f576964-1b67-4fe3-9a35-1b40850b5073"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d8909b-9e79-4cbc-8f22-5a8a2871a961",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d8ef5d-5b51-4542-8caf-d93edcff7b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd3821d-5a57-4ff0-bdaa-c008e7f7b5a5",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131673c4-1b7f-4c97-b491-fbf9f7b6d541",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "75f9f134-e24c-4ccf-9fd7-8649659df322"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb96658-a125-4ed9-8da7-715ae6c19151",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59e2663a-f683-4e85-a101-b97593fd4b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a213068d-e0d4-498f-8135-c85caa56c77a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84ced4c-9d33-4238-96f4-0eead47bb6f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cec3233f-e5b2-45f9-832b-8b0a683a8aad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c0108a-f834-4466-9976-ac5098e6f9c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d7b02f-165c-421c-be73-dda84bac4845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9a109c-ff7c-4089-bb36-e686ca1957e6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ce3c56f-8017-4265-a64e-4ecb3f6f8027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "986575ac-030d-475d-9c55-51cbc6492627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d691ff9-cc54-44a3-9d48-bbc40cc4a57d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6800e9-9c86-4856-b161-e66b4959df3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fc3b4b-1641-4c8c-8c97-0e3dc20ebcee",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bcf9bd-00e4-49a7-903a-d5d26097647a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d720c4b-acc8-4613-b553-768c57cce7de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "704ff261-b3b4-4dde-9dc0-f75883172f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189d9834-5812-48ab-af21-ad875cebcc9d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "97513e9c-99f1-4ba6-9177-c2a0294c96f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4417148e-91d2-4a13-929f-b7d14a02a161"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "84090570-6008-46c9-a76c-cc4d01a0c95d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e37222f3-0f13-4051-9159-b819d1cb94e7"
                    }
                  }
                ]
              },
              {
                "id": "3d816f5f-6f8b-4cdd-80e7-cec988f0d65a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b4a45ec7-577c-4a5f-a54c-138196273509",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e2f2ef-8ebf-4cc7-a726-fc06fd973f81",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b0c760bd-2a99-4188-963d-e3d8a5865a9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1dc2e28-92bb-48a6-943b-b0f2d6436f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e9584121-a00f-466e-a51a-2a45bf4adb52"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab74be83-31f4-4f93-a56e-5364b79fc8cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1fa4a327-63f9-4cf5-b580-00eb84b4d7ba"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "788eb5b2-80b7-4379-be8c-fba78c2c87bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6860e47-4bb7-4876-a918-77333a77e4ef"
                    }
                  }
                ]
              },
              {
                "id": "839adc80-effb-49b1-8a80-2c52c6b129eb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "03782d15-4571-40f3-a10b-7b698ea2b815",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "660e96e7-ee85-479a-a077-264596177e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "217cfe4f-ce95-4aeb-b07e-04ddbebc02a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d82c9c7-eadf-4272-835d-1858ec033bf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf1cba1f-96cd-44ef-92b4-21f6e1d39944"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "818fb682-eea4-4055-af04-4a5176d7f5b4",
            "name": "Positive Testing",
            "item": [
              {
                "id": "01b5c8fc-e62d-4df4-944f-7ae1f82404dd",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "61c9b9b6-8911-49fc-a46e-9c1e5e5306e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "cf40a4c3-25d9-43dd-ae04-1d9e8d80f359"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "398f9e44-b96d-4d66-adae-274092d5f51e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef6d1bad-5790-47f1-97e5-b9f468a9f529"
                    }
                  }
                ]
              },
              {
                "id": "37886d51-6319-4a28-be0b-37069c104c7f",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "696ad028-e9f4-4dda-8349-75154654523a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ebd8d0d9-80ec-406a-b8e3-2095e5875608"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "47a28d4a-a0a5-46e9-a608-360160ee511e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29d0989e-8749-4bbd-b4f8-5708f4731053"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ad807b69-d9dd-469e-8571-336af357f758",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6ecc883f-9ce4-4a9f-9b3e-e263c0aa5a15"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8cef6f8a-4493-4241-ae41-403be53a9bbd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "50c23666-16c5-4d83-b1f7-0c66c27db6fe"
            }
          }
        ]
      },
      {
        "id": "a5862807-2cab-4a7e-9129-1278c3af4746",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b70bf7a8-aebf-4e56-a82b-312b9cb98fcf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb3f0ba3-f370-4cef-b8f0-96cbcd75c1f2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb39e072-2d0a-48ea-b65f-87d82aaca161",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca658a9-81a1-4aad-940b-6c86941e1a99",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "33c68870-6eeb-4241-9203-efab3defc94a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ada3b131-6e5c-47f3-b9df-cbe58c1f381a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8501f4d9-87f3-4029-aac7-35aef51040ff"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "81da874c-4f9e-401d-957c-768955e629a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "edcbf9f3-2224-4c2b-968f-9fd15150c191"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4a9dabb-5705-4f16-ac57-fdd7b9930486",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b38dec3c-fc9b-48a1-86ce-457f7c6dbae3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4b62b5f1-9905-42a4-b093-62e661b333df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "eb383383-4669-4b17-88ab-bcd2c1436200"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08a660f7-1421-4341-92d6-22f06df67ea7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "61035ba6-d8d0-4dfb-8cb7-6d317d029d01"
            }
          }
        ]
      },
      {
        "id": "6e81ccf5-8370-4efe-9275-ae4ebb659ffd",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6767e76e-f0c4-4a6a-88c2-418745c055fd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47976e8c-b80d-4676-aae8-359f73113b22",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "77042f7c-3f59-46fb-a211-f2c983461542",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2913d55a-6f5b-48f9-959b-69fd542ffec9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf18fa13-b291-4de1-a316-d66b7f1a7152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4654041e-2006-4d40-8035-e684fc2e6f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "39080e5f-f5a0-40d5-a8a7-248bb40c5737"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1eaa237-cd1c-437b-9068-23c9c2a74f14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff83ace7-d533-496b-9684-446168ddb508"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "573630cc-a1d1-448c-b346-4feb20edf5e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "62c498de-dbb1-4ccb-9db2-5f6e3da69fd4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "370ea366-6294-452c-9adc-bb42e1618ef3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "56e4d569-e599-4afd-beb5-97ca620923cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8c13da4-38ec-4c2a-8935-15f9d8f5a8c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "596528bf-cd0a-4834-ab98-6336a721383a"
            }
          }
        ]
      },
      {
        "id": "1e5b774b-dc1f-4e22-b48b-66ea0eb16fe1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "3e73d5a9-4eb0-4e7e-a922-69a3c31ed27a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ce5aef91-b1cd-419a-b44a-329060f13f6f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "161af8b3-3244-4bb0-bd3c-3023d600b31f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71ed3bc-50f7-4a1c-adbb-8e582139c85b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d384352d-dcc6-43e4-9c72-ba442cbd38d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae46e1f-787b-4776-9847-b2d4e7fc4408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "214b1b57-fc77-4020-8356-b38779475094"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e4843fd-eed3-42ed-b5d3-a7cb0c5c308a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c92be92a-58bb-4bfe-b324-9f9fc831f90d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "42ccbaca-b868-4375-94d7-38f4bd882738",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fef237e7-4e9f-471f-bc08-92d2697ca2c7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8189716-2218-4020-aacd-63f8ef8422fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9d134614-cc33-40b1-b361-2a658268c0af"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a551ea0e-b2cf-43d0-b665-b7ebbb46acfb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a1afde7-2810-4414-9f31-d9b52904cdae"
            }
          }
        ]
      },
      {
        "id": "a82cb374-e7a1-4648-a854-f8fabcb5209e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "218b5877-7743-46c8-9886-d4b6809d4722",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "afe26c3f-c2d6-4945-aed1-cee193a532f0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0e1290ef-7124-4c5f-9650-53359305a7da",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c60a71c-b139-42d0-8289-044f46f318c6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc4ef8f2-add0-4d52-9adb-bcc1374cd223",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 68.4471830985916,
      "responseMin": 7,
      "responseMax": 362,
      "responseSd": 28.156517254377377,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691195918675,
      "completed": 1691195951533
    },
    "executions": [
      {
        "id": "a26f1b18-3203-4488-a39e-98ae5096c5e9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "ff17b79a-0126-4f48-8be9-9af74f09db99",
          "httpRequestId": "bbecb346-2efa-4067-9caa-b2f1a4392676"
        },
        "item": {
          "id": "a26f1b18-3203-4488-a39e-98ae5096c5e9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0b6ede93-aa50-4c70-8310-c883115c01de",
          "status": "OK",
          "code": 200,
          "responseTime": 58,
          "responseSize": 0
        }
      },
      {
        "id": "8be85012-be06-46c2-a5dc-598f310d1fe1",
        "cursor": {
          "ref": "e3645095-618d-42b6-942e-e80346c1284b",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d5c86dde-b582-48a5-a26f-370eb75a08c2"
        },
        "item": {
          "id": "8be85012-be06-46c2-a5dc-598f310d1fe1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1f6b8a0b-b69c-4f02-b2e1-e3f384bbe409",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "b8dd8ea7-2a40-41b5-802b-e21741f1ba3e",
        "cursor": {
          "ref": "48e86e2e-1b2b-47b3-b2c7-297cf430505d",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fe46c197-3b74-4a05-b343-3c0c6ed292d4"
        },
        "item": {
          "id": "b8dd8ea7-2a40-41b5-802b-e21741f1ba3e",
          "name": "did_json"
        },
        "response": {
          "id": "2c3b6494-2e6e-4b45-8e27-db062901a2a5",
          "status": "OK",
          "code": 200,
          "responseTime": 313,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c23695-4d9e-4f5b-a109-e24bcc05bc34",
        "cursor": {
          "ref": "7165b577-3c4b-4f0c-85e4-99e3520c8379",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2c5405ad-be98-45c1-8777-ca1175010723"
        },
        "item": {
          "id": "62c23695-4d9e-4f5b-a109-e24bcc05bc34",
          "name": "did:invalid"
        },
        "response": {
          "id": "e32bce4c-bbbe-453c-aa41-243bf43e8457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c23695-4d9e-4f5b-a109-e24bcc05bc34",
        "cursor": {
          "ref": "7165b577-3c4b-4f0c-85e4-99e3520c8379",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2c5405ad-be98-45c1-8777-ca1175010723"
        },
        "item": {
          "id": "62c23695-4d9e-4f5b-a109-e24bcc05bc34",
          "name": "did:invalid"
        },
        "response": {
          "id": "e32bce4c-bbbe-453c-aa41-243bf43e8457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f753f0c-f8fe-4bc4-a92d-e52472a69c32",
        "cursor": {
          "ref": "50ca24d7-bad4-4656-8cbe-0738c1f1c66b",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ce34cee8-0ded-4463-90d2-d18af91343dc"
        },
        "item": {
          "id": "1f753f0c-f8fe-4bc4-a92d-e52472a69c32",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "eea62f53-7cf9-4a0c-a6c1-c160733a0054",
          "status": "Not Found",
          "code": 404,
          "responseTime": 123,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "981b897b-590e-4521-a444-69d9923fbe8d",
        "cursor": {
          "ref": "9a9fdad1-bed9-4b35-a048-2f525be7e839",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "23d2d660-4cfc-486d-83ab-1d3531242ad6"
        },
        "item": {
          "id": "981b897b-590e-4521-a444-69d9923fbe8d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "486645fc-2aa7-449d-b9ae-bb9105d28125",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a47d97-0c8d-4cb3-8406-2875bb7d50a6",
        "cursor": {
          "ref": "61441c21-8432-4a98-bcdd-cfc4685db235",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "96778c13-3dfb-46a3-a74e-956b6801a55f"
        },
        "item": {
          "id": "96a47d97-0c8d-4cb3-8406-2875bb7d50a6",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "55ccb601-68ce-4c6b-9957-cb23e7819001",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54f03dc-55ae-4367-857c-c314fc0c5663",
        "cursor": {
          "ref": "b2b39453-3be8-46ee-9cfe-dedda5764a59",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "877556bf-6585-4512-b199-804055417d16"
        },
        "item": {
          "id": "b54f03dc-55ae-4367-857c-c314fc0c5663",
          "name": "identifiers"
        },
        "response": {
          "id": "f6594308-5325-4113-864b-f664bd039a89",
          "status": "OK",
          "code": 200,
          "responseTime": 131,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca83268-721b-411d-a6c9-cf58a5ae6a55",
        "cursor": {
          "ref": "3f452a32-535f-433e-b11f-2ec35f493b92",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b2a20314-e982-4ab5-936d-cd3eebd100ba"
        },
        "item": {
          "id": "0ca83268-721b-411d-a6c9-cf58a5ae6a55",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "6582458f-9288-426b-9023-57cfddd16cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d62c09-6415-4b5a-ae4e-648a7cf53e41",
        "cursor": {
          "ref": "83f65e07-69d1-42f2-8cf4-2f6855a7b5e4",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e796d74c-95e3-47d3-a5a8-4638fb995f25"
        },
        "item": {
          "id": "29d62c09-6415-4b5a-ae4e-648a7cf53e41",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b9ce1da0-ce24-4e26-89fc-e24ede0dbcfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b321eb99-9536-400a-9018-a0474408a9bc",
        "cursor": {
          "ref": "593dc1d2-b25c-4302-b454-d49efa96b81c",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "871d74fc-c60b-4451-bd98-295274aff132"
        },
        "item": {
          "id": "b321eb99-9536-400a-9018-a0474408a9bc",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d5e8440f-b0d3-4f50-b569-c1452981ad02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ac672ce-eb33-40ca-a7a8-85ca0cf394f3",
        "cursor": {
          "ref": "0d4ae2e4-bfa9-4c72-832e-ce3d17f2f0c8",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "086b121b-fd96-4968-a08a-8e7a466c4e0c"
        },
        "item": {
          "id": "1ac672ce-eb33-40ca-a7a8-85ca0cf394f3",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7b4062e7-e850-4115-8cfb-c0616d31bb75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263126b3-13b9-4785-9f99-67234a388919",
        "cursor": {
          "ref": "a98ce998-4edd-40ce-abe6-4c21300e4eb1",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9a58f9bb-e449-48a9-9289-962810bccd67"
        },
        "item": {
          "id": "263126b3-13b9-4785-9f99-67234a388919",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "949f241f-b9db-483d-b153-05ce378fb0cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bccf9b2-4e36-47cb-b0a1-c052f04afc34",
        "cursor": {
          "ref": "c5f01cd4-8253-4ebc-8e76-8041a9dff179",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3d3e3d4c-3c62-43b4-a836-3a180fb8f051"
        },
        "item": {
          "id": "4bccf9b2-4e36-47cb-b0a1-c052f04afc34",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f051048e-2964-4e62-877f-5b6a94aa8aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324573bc-8ee2-47a0-91db-c722e26efb12",
        "cursor": {
          "ref": "4cab4f65-7c96-4e40-b358-48d3934c0e89",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e5053d0e-d5ff-416f-a66e-7ed543c35d35"
        },
        "item": {
          "id": "324573bc-8ee2-47a0-91db-c722e26efb12",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1da04e74-b417-45db-9f2b-6a90e9e27dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a862f08b-9d66-45e4-9614-4f3f4badf258",
        "cursor": {
          "ref": "6bfa4194-1124-439e-b823-d3854a501e77",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "d8b9ef2c-201f-408d-82c6-b33a73e9d322"
        },
        "item": {
          "id": "a862f08b-9d66-45e4-9614-4f3f4badf258",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f355032e-7d45-4b4b-aa20-224d610099ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "978f32ba-581f-45ce-abe5-7fbf3a760ca4",
        "cursor": {
          "ref": "e208f8aa-f5bd-4b42-80e6-ae89d93372f0",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8fb40ea2-846d-49bd-8711-d2a1b61d85a9"
        },
        "item": {
          "id": "978f32ba-581f-45ce-abe5-7fbf3a760ca4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "3f5e46a6-8a41-4a75-b710-96135ffdd5c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0f634d-a2f6-4c90-8c58-89a5bc724863",
        "cursor": {
          "ref": "256c02df-8997-4a39-b367-f65678d73dcd",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "33395f23-a27a-4d16-8a38-dc13a9d17f37"
        },
        "item": {
          "id": "9c0f634d-a2f6-4c90-8c58-89a5bc724863",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "f5396ac6-01de-44a3-9c1f-3e677a6fb8d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e596f975-f636-4ab8-bac9-b0e6c3db6eab",
        "cursor": {
          "ref": "e5acda16-ed61-4865-ba92-92d32f6865cc",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "474cc80e-9570-49b1-9185-b3d02b848db4"
        },
        "item": {
          "id": "e596f975-f636-4ab8-bac9-b0e6c3db6eab",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c4ebda33-871d-4c47-91bc-c2b520947046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d627a2aa-e228-457a-86df-a5989b83b290",
        "cursor": {
          "ref": "a2f883ca-f14e-45a5-a9d9-e3f1f7b6d014",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f85908de-bab0-4d66-8a7c-db70a984c2e4"
        },
        "item": {
          "id": "d627a2aa-e228-457a-86df-a5989b83b290",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "165da7e7-316c-41f0-8f3b-721a7adc21fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c303d10-e338-4c35-a138-ec63b131b8e3",
        "cursor": {
          "ref": "897b7df8-35f1-4358-90e4-0705b4ea9e1d",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bfb3df40-97a7-4552-bc72-56b4315144a3"
        },
        "item": {
          "id": "3c303d10-e338-4c35-a138-ec63b131b8e3",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "78b92c7b-fe86-4575-8de9-62151e6ab8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "098fa6ed-7bf3-4a51-8405-a4ff364d8e10",
        "cursor": {
          "ref": "57f02c58-9990-4b80-82fc-05486a042c70",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0b972cee-4c99-4ddb-91bc-e7bd67fbe2b6"
        },
        "item": {
          "id": "098fa6ed-7bf3-4a51-8405-a4ff364d8e10",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "2d140742-9bbd-43e2-8441-0bdd3ef30655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debbbabf-b7a4-44c6-aac3-4872f14a7cc6",
        "cursor": {
          "ref": "badae890-49c1-487d-9a6b-7f80ec1cf22a",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "6ec49d19-2cc1-4bc6-b161-96ab52199d21"
        },
        "item": {
          "id": "debbbabf-b7a4-44c6-aac3-4872f14a7cc6",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "e9c445c9-7b6b-4793-805a-df5f3a27ee33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ba40b9-f007-4568-a77e-12f4fe7516eb",
        "cursor": {
          "ref": "daae5541-2308-42e2-a4b5-fedbe9cfa095",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "2a3ffc6a-ed12-4d02-9493-6ca9bffe5d0c"
        },
        "item": {
          "id": "15ba40b9-f007-4568-a77e-12f4fe7516eb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0710e6ed-d712-42eb-ba7b-c362e917e840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a90a90-0b3c-4cf2-825a-d54775e49b0b",
        "cursor": {
          "ref": "ff64af8a-a023-4a96-80c6-e31a4093a198",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "87ae555d-34ed-4c5e-8516-4e0844c71761"
        },
        "item": {
          "id": "d8a90a90-0b3c-4cf2-825a-d54775e49b0b",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8e4ed785-2f1a-44bc-9df0-9580bbe7fb36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3529c38-56f7-493b-b984-30abbfef990e",
        "cursor": {
          "ref": "5596d604-ba63-4bd7-bad8-612a3cae251b",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "c28e36a7-33d6-4e4c-9936-7134e309d8a6"
        },
        "item": {
          "id": "b3529c38-56f7-493b-b984-30abbfef990e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b99da5fb-12d4-477d-8aa3-47153157e026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de1a901f-033a-4fdc-92d1-aa00087b93d5",
        "cursor": {
          "ref": "618e6a9e-77c6-4c46-8341-cb40f6c7cf3e",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b5dc5f42-7bf4-4ee4-b8f2-96b1f7726efc"
        },
        "item": {
          "id": "de1a901f-033a-4fdc-92d1-aa00087b93d5",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "445ec6cd-fdbe-491f-a058-1b42cdc722ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6742148a-2749-47b0-b917-05b7ecd798bc",
        "cursor": {
          "ref": "42fe0905-61dc-4357-b8ec-493bd43fb822",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "5e31f67e-b17f-4537-ac63-c1d39faa6b77"
        },
        "item": {
          "id": "6742148a-2749-47b0-b917-05b7ecd798bc",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "302b7032-4447-4f26-af43-1b6760999c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e42a60-e8fb-41de-ae18-6b37e17e7ed7",
        "cursor": {
          "ref": "c2904890-5234-4955-9097-e12f552f678a",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "286a4c7b-2363-42c5-bb7f-44d65e683133"
        },
        "item": {
          "id": "e0e42a60-e8fb-41de-ae18-6b37e17e7ed7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7a6fff85-2ac1-4df6-9b79-6d6f26380156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c4b658-876f-462e-96b0-4703bf272948",
        "cursor": {
          "ref": "a23483d5-823d-4a9f-b3dc-805651308d50",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "943a1f53-e504-4429-a68f-1632380c52d3"
        },
        "item": {
          "id": "50c4b658-876f-462e-96b0-4703bf272948",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ece5dd40-c3b3-42f7-bea3-b7ee79b8d479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576db300-27b5-4258-bae3-d5330203a8da",
        "cursor": {
          "ref": "08f3910c-7197-438c-ba07-fb196b4df56b",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "88f884ab-5d87-4005-8491-a86db24ab87d"
        },
        "item": {
          "id": "576db300-27b5-4258-bae3-d5330203a8da",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "fca70f09-525f-4d7c-855a-cc4bf378bdb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cdd724-b4f4-4922-9d46-78eeebfb32da",
        "cursor": {
          "ref": "00ea7a1e-3f25-43a1-a2ca-b0905d3bbb13",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "80f83be6-96de-4394-b4fd-e0f59b0c935b"
        },
        "item": {
          "id": "a9cdd724-b4f4-4922-9d46-78eeebfb32da",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9bc6e99c-fb1e-447e-8c6f-9f918c28b9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7cca8b-1649-4fbb-8f07-e662fccc6587",
        "cursor": {
          "ref": "1abe2765-3e55-45ef-8b3b-57ffbff75003",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e5898afc-8879-4967-b72c-831c8cd654d3"
        },
        "item": {
          "id": "4d7cca8b-1649-4fbb-8f07-e662fccc6587",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "19ddb827-6d39-44ba-b5e8-868e1d53ae68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a7a6145-5645-4fa6-9490-af3be1ab09ed",
        "cursor": {
          "ref": "51524438-d3c1-4cba-819a-b2587717bab7",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5549d336-e729-4225-a501-5bd262e42db7"
        },
        "item": {
          "id": "3a7a6145-5645-4fa6-9490-af3be1ab09ed",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "373ecc67-cff5-4163-8221-62ec67d39256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c11b291-de0e-431d-872a-d0891f7d0b43",
        "cursor": {
          "ref": "939b8311-dfff-41a9-a8c3-959031332532",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d1c38151-05c6-47b7-81c3-5d8d49559c1d"
        },
        "item": {
          "id": "1c11b291-de0e-431d-872a-d0891f7d0b43",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "71775190-9b7d-421e-9551-57c6f94109e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7116c88-6b5e-401c-a940-f8e06c34cb9f",
        "cursor": {
          "ref": "f7faf69a-eafc-431c-9b84-13c5dc520811",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2450959a-1825-4d56-9574-a30bfda1a5df"
        },
        "item": {
          "id": "e7116c88-6b5e-401c-a940-f8e06c34cb9f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b3e08fbe-bcdf-49f5-bce0-5449ff3d67ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d2e8e3-82e2-4bf3-bb4f-80c7933470a8",
        "cursor": {
          "ref": "70c6cd1d-42d6-406e-bc7d-a20ce0ea7787",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b4a8101d-41c3-4508-b4a1-820b8ed96f03"
        },
        "item": {
          "id": "b2d2e8e3-82e2-4bf3-bb4f-80c7933470a8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "913decd1-9271-4679-86c1-59cec7302035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e86f57-c07a-48e9-b32c-91b0e47ecd07",
        "cursor": {
          "ref": "1e2a1ff7-c4b4-4512-9200-6132e16a1554",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d86c25c7-05c2-4d46-9b4d-afc1961dcf8d"
        },
        "item": {
          "id": "40e86f57-c07a-48e9-b32c-91b0e47ecd07",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "180ec336-964f-471f-93c0-98d8379bd26e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63b9895-c084-44e4-95e9-3e1fa5debaac",
        "cursor": {
          "ref": "2a3b66ac-e935-4765-95c7-a18889976313",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "a806920a-7aa5-45e0-bd40-8b5d8f626604"
        },
        "item": {
          "id": "a63b9895-c084-44e4-95e9-3e1fa5debaac",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ae4327f1-1913-409b-a06e-8a3994238240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb35c12-4684-4907-927e-8dac59fa067b",
        "cursor": {
          "ref": "89b6bcaf-df71-44e2-83c8-b306805dbb79",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f1e68d83-34e7-42f5-99ff-ffc3f23cf9f8"
        },
        "item": {
          "id": "eeb35c12-4684-4907-927e-8dac59fa067b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "754d625a-8b7b-4baf-b419-365257463a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f4ac8ba-d4d4-49d4-a951-496886620998",
        "cursor": {
          "ref": "70cdb1ce-0581-4c6f-b485-b2319931ee9d",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6dc15f70-1a7d-4ab4-8b8d-dc3cb1d6a750"
        },
        "item": {
          "id": "8f4ac8ba-d4d4-49d4-a951-496886620998",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "7b7f6f78-28b4-42c2-a5a4-e6b873d0ddad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c5a5eb-f793-4c19-9240-f14eecaebb2a",
        "cursor": {
          "ref": "83abbfac-d8e6-41b0-8b6c-2a42b326e62c",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "06fc4bf7-f09b-4e66-bac7-b9552956835d"
        },
        "item": {
          "id": "76c5a5eb-f793-4c19-9240-f14eecaebb2a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "14428593-fee9-4e8b-8c57-8eabbdde8d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6860dd3-b855-4894-ac00-7717846e7073",
        "cursor": {
          "ref": "7a99d8ab-84b4-438b-b61b-b102e961fa53",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7b3914bf-9c54-44fb-ad01-82314a635831"
        },
        "item": {
          "id": "f6860dd3-b855-4894-ac00-7717846e7073",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3eb5491e-1c14-491c-a833-0ec76d3d1361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa23e662-3137-46ea-abed-abb1f087b008",
        "cursor": {
          "ref": "b76e670e-c70b-4b00-b3d3-fbe4dbbc0288",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a5ca13d7-ed34-4ae5-8c84-8511c151cdb8"
        },
        "item": {
          "id": "aa23e662-3137-46ea-abed-abb1f087b008",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d7684686-964d-448e-8c31-595cd21f90a0",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 86,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8f1553-8ebf-4137-b6c6-1a721d9b4288",
        "cursor": {
          "ref": "7c9b2018-4c67-450e-bbc9-b556ac6b054c",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "74a92bf0-553e-477a-b87c-249d401169c2"
        },
        "item": {
          "id": "9f8f1553-8ebf-4137-b6c6-1a721d9b4288",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "31023814-7b96-4a91-9f62-bbbc083e9283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41edebb4-fc7b-46f7-9d47-efffcd96c31f",
        "cursor": {
          "ref": "201f70f7-39bc-47ac-9b11-4c66ac6fdeab",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cae23efd-ddf5-49cd-b2df-e9a1da406781"
        },
        "item": {
          "id": "41edebb4-fc7b-46f7-9d47-efffcd96c31f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1158abff-d374-4f5d-a516-2a991fb575c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7845869b-7b08-48fd-8de6-409994074d28",
        "cursor": {
          "ref": "f5b050f3-fa5a-4c5c-9f6b-4cde1f08e41b",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "41d68438-e45f-427e-9c88-1ffd9f2d6450"
        },
        "item": {
          "id": "7845869b-7b08-48fd-8de6-409994074d28",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "db459166-c174-44e7-900a-e3d03ec502d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf867b04-18e6-4047-8077-8d6f155daf71",
        "cursor": {
          "ref": "3a72f996-2c37-4242-b2d0-cd4199d2a5f1",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f3bd7ff8-7dda-4062-adf3-1b9f183c65a9"
        },
        "item": {
          "id": "cf867b04-18e6-4047-8077-8d6f155daf71",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "dd1c2bae-5011-42e9-b7e2-0c94a4e21e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a9fad9-f9d4-4b3e-9a8a-5eee74f0926d",
        "cursor": {
          "ref": "78c59ebc-f9c7-4137-b982-3a83e4916a42",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "98c1ffb0-67cb-4729-ac6d-e4faa18cba03"
        },
        "item": {
          "id": "40a9fad9-f9d4-4b3e-9a8a-5eee74f0926d",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "802c4b1f-464b-47a4-816e-afafa3b4e087",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff381a3f-d020-4937-a656-0cd71c9a137f",
        "cursor": {
          "ref": "9cc74629-694c-48fa-be44-705de405a669",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fc251574-7b06-4b85-a62f-ec791ae74251"
        },
        "item": {
          "id": "ff381a3f-d020-4937-a656-0cd71c9a137f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "34cc42f7-4b1e-4b84-9627-85bcd897aff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40e7d497-e3ea-4ef1-99e8-7fce06247369",
        "cursor": {
          "ref": "53da4d57-d3cb-46c4-b04d-8b4114a2b4d8",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f5ca11b0-5daf-4911-99e0-29ae08743049"
        },
        "item": {
          "id": "40e7d497-e3ea-4ef1-99e8-7fce06247369",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "60e050d5-67c3-4c77-abc1-6a54b9c1c943",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40414fe-90e1-43dd-9cd6-fc36de00866e",
        "cursor": {
          "ref": "5f05027e-c2a6-47ed-87a7-07bbe1900e2b",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "8bf68920-bc3a-43a7-81eb-6f87668a940c"
        },
        "item": {
          "id": "f40414fe-90e1-43dd-9cd6-fc36de00866e",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2ae9dfb6-b94f-4945-a5c1-884720aa37fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5fac098-46c3-4656-af9d-be02a14f5203",
        "cursor": {
          "ref": "a15150f4-cd07-413b-b7cc-0855477d1f1a",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8bbc0d90-b6bd-4420-b8a7-efeba58e2470"
        },
        "item": {
          "id": "f5fac098-46c3-4656-af9d-be02a14f5203",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8f725665-3a7e-48b2-9896-e3725d2cb6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09fbe0db-7f99-429b-8507-8d9dd98d93d3",
        "cursor": {
          "ref": "4b9dad0d-a045-4aee-8f1c-c60962404af2",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "63e9005c-cede-494e-9458-4ff4d4c366df"
        },
        "item": {
          "id": "09fbe0db-7f99-429b-8507-8d9dd98d93d3",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "94d4b403-d8ac-4dad-ad34-4813f928f3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47671781-608b-4836-b53e-9e5d7d54c4bc",
        "cursor": {
          "ref": "f4370509-0452-4ccb-be0e-9ac0a9c80b08",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5c34fdc3-3864-427c-8c7b-542df989ba2f"
        },
        "item": {
          "id": "47671781-608b-4836-b53e-9e5d7d54c4bc",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "413325d3-29df-474a-8d3f-2b8d89ad01e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd48c779-98fb-4ee2-8748-8c09598ddd6d",
        "cursor": {
          "ref": "1493cdd5-cac5-41aa-b024-b05aede495b8",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e4346c0c-8fa9-4723-9954-62c01c9ba375"
        },
        "item": {
          "id": "dd48c779-98fb-4ee2-8748-8c09598ddd6d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "af653e9d-b906-4797-9d3e-ba37bf131ffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41eb9593-576e-4518-b82b-c48477fb32a2",
        "cursor": {
          "ref": "cabedfd9-c9ae-4467-a0f2-d9005497de7f",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "a8f10359-abfc-4e9c-9738-3f64aa1f8b21"
        },
        "item": {
          "id": "41eb9593-576e-4518-b82b-c48477fb32a2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "321781ee-ef6a-4aec-aa5b-f363eefe0d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2351513-a737-450e-912f-1720070d3119",
        "cursor": {
          "ref": "d941309c-baf8-458c-b410-88026299ca09",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "da00166d-4899-40e3-87ab-44dfcf8f4275"
        },
        "item": {
          "id": "b2351513-a737-450e-912f-1720070d3119",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "99972781-2cea-4feb-8b6c-4e1e1c38af74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ead59b-ec55-4842-b0a8-34b1c1a27f09",
        "cursor": {
          "ref": "c3c37a51-ca90-4ee8-bead-450891455085",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9cd9ec9f-6857-462d-8368-2576873a66b9"
        },
        "item": {
          "id": "a1ead59b-ec55-4842-b0a8-34b1c1a27f09",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "237a0a05-ae5a-427d-afe7-b79056425fc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ad7a66-dfc8-4863-8561-ff35eb1c48ac",
        "cursor": {
          "ref": "5b811dc2-8069-4430-a824-7e8d838e0800",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "b5126288-3b0c-427b-b842-6aea1ca0edc1"
        },
        "item": {
          "id": "15ad7a66-dfc8-4863-8561-ff35eb1c48ac",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e359293d-095d-401b-bf5c-06b9ae05fab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81c6f5a-be9c-4c50-9c16-3f05c33179ca",
        "cursor": {
          "ref": "3daa7ad9-b593-40f5-b9e4-897b99f06608",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "72979efc-a567-4d43-a184-fee00b937a14"
        },
        "item": {
          "id": "d81c6f5a-be9c-4c50-9c16-3f05c33179ca",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "47e30679-2633-4999-b38c-5192e1a62b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84fa5c7-bc19-41b8-8080-f7f55326b11d",
        "cursor": {
          "ref": "e3d5a30e-5fca-4ab7-868d-c09fdf3e49a3",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "23bdeb8e-4bdc-4bf6-83db-9b39c3aa6e5d"
        },
        "item": {
          "id": "f84fa5c7-bc19-41b8-8080-f7f55326b11d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4c28dbba-994a-45c1-ac59-03ede59b7172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0b137bd-7f9c-4aec-a0ac-b64f8830d154",
        "cursor": {
          "ref": "c4326230-2c37-4e3f-b766-a9d76a510e04",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a5e36a73-23ce-438c-b4af-0f2c6345f3a6"
        },
        "item": {
          "id": "a0b137bd-7f9c-4aec-a0ac-b64f8830d154",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f18504b0-1b63-403b-8139-b233aef7bda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fc05d0-2447-4cf9-ba96-5984a6d8f74b",
        "cursor": {
          "ref": "fda159b4-9833-4884-8624-e52f37eb1c0c",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "75eac53a-2eb6-4fa0-b853-aec0196505e9"
        },
        "item": {
          "id": "95fc05d0-2447-4cf9-ba96-5984a6d8f74b",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "ef816550-d214-4a10-9b8b-111ff5180f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c842e689-d0e7-4e1d-b142-f69f54d6b88a",
        "cursor": {
          "ref": "846649d6-079e-41f6-af9a-e378cdc69490",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9fdc961d-2b6c-45f2-915d-ff089a6994e4"
        },
        "item": {
          "id": "c842e689-d0e7-4e1d-b142-f69f54d6b88a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "81746218-1c98-4659-9872-63979786f4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64efd25c-2714-468d-8893-4935fc353b3e",
        "cursor": {
          "ref": "b0317bb4-d547-4582-89f7-c9b7244ccec0",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "dd350075-68c0-4dc4-b173-fb646084ccb8"
        },
        "item": {
          "id": "64efd25c-2714-468d-8893-4935fc353b3e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "dba47db8-c28d-4b6d-8d02-a9b63eff08b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2994684-bda5-4230-b307-fd709c1dabe8",
        "cursor": {
          "ref": "7a12b520-eed5-45bd-ad39-c05130281490",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a142c7bf-daa0-4794-b202-b6af4228d22c"
        },
        "item": {
          "id": "b2994684-bda5-4230-b307-fd709c1dabe8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "252b8384-2962-47eb-ad75-92393ab9fef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f65ea4-914b-4543-be5a-199422348cf8",
        "cursor": {
          "ref": "5ec05cd6-7e07-499e-8f86-2434ea5b96c8",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0619717a-83da-4a83-9719-8c689e3459d2"
        },
        "item": {
          "id": "40f65ea4-914b-4543-be5a-199422348cf8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "2b03a91b-0091-437f-b038-8b96469ea55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3093b578-74fc-4c4f-9259-cdef2f9d88a2",
        "cursor": {
          "ref": "7c52f9a4-dfff-4d9c-bb92-bcb395db7e70",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "dc248299-12c0-4004-b7c2-33c7dd3a36b6"
        },
        "item": {
          "id": "3093b578-74fc-4c4f-9259-cdef2f9d88a2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c84ff2a4-d1ae-49ff-ac67-de3ad8d739e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19ec6cb-075e-49c7-a6af-f190e24384e7",
        "cursor": {
          "ref": "697d303f-b42f-4463-9e0a-44553f5e66c4",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "23527868-e674-4f94-8113-5e6c89d65339"
        },
        "item": {
          "id": "b19ec6cb-075e-49c7-a6af-f190e24384e7",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "025f9956-71ec-4c29-aa57-6aa916381c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a1c186e-2395-4108-8441-c586b9561b39",
        "cursor": {
          "ref": "f1d37b2e-a2d0-4e6e-9668-1031d7c6cb53",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a830a168-b94a-41c9-8018-aabab687d5b5"
        },
        "item": {
          "id": "8a1c186e-2395-4108-8441-c586b9561b39",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "6f2209f9-7625-4b8d-8e82-a9e092e6be3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e94a3a0f-f4ae-4ae9-9c46-2521cec2c94a",
        "cursor": {
          "ref": "2fe301e6-f8a8-4a2a-96fc-ec26c776dca1",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "e920a78e-715b-43d3-a2af-acd72a133c5b"
        },
        "item": {
          "id": "e94a3a0f-f4ae-4ae9-9c46-2521cec2c94a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b007c6fa-4748-4641-9f04-8caa77d14b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a9df6c-a60b-4a8b-8175-39afea95b434",
        "cursor": {
          "ref": "d1137319-8562-4c8d-9ddb-fdb9e56fea64",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "65ee8af9-5d1c-4cff-8fd9-cad5ed3e5dbd"
        },
        "item": {
          "id": "d2a9df6c-a60b-4a8b-8175-39afea95b434",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5a36fa07-fe09-421c-b959-70430dfef712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38e7db9-faa2-44a4-8ed1-fe88464cb921",
        "cursor": {
          "ref": "fd290192-e4c7-4610-bac3-e8c38b159d8a",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5a005ab3-88b9-4b0a-aefa-14ebd5c7e4ed"
        },
        "item": {
          "id": "e38e7db9-faa2-44a4-8ed1-fe88464cb921",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8afd6689-2d73-48ac-a042-97ed5e8cdf26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfafc644-fd5e-4c4c-bd55-c93b38b7a78a",
        "cursor": {
          "ref": "d3d12c28-c0e4-4a1f-a9ee-a8f7bab7f772",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "ac64b5ee-d064-4fc5-bba1-dda6d01896d5"
        },
        "item": {
          "id": "dfafc644-fd5e-4c4c-bd55-c93b38b7a78a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "360377ff-1d5a-4c2c-b13b-aa7b9fb838bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0e93f7-b0df-485f-bdfc-13f3a35e53bd",
        "cursor": {
          "ref": "6eb8b0db-e17b-48af-819a-b30507386dce",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c3c68dc6-cebf-4af6-945c-46a325381e93"
        },
        "item": {
          "id": "6c0e93f7-b0df-485f-bdfc-13f3a35e53bd",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e07c5b2e-db98-4b8b-addd-45e2ac306f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a635ce-6013-4085-93ad-26f203e0b8e1",
        "cursor": {
          "ref": "aa7fe9a9-34b1-45fa-b4e1-dc85d9135398",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "d028b4e3-a0ae-44b1-958e-831eb9ced139"
        },
        "item": {
          "id": "79a635ce-6013-4085-93ad-26f203e0b8e1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a901a52d-fab6-4fe5-936b-2dfb8fe8dc0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7075ca-0f6f-4adb-8498-9f484b2e0c1c",
        "cursor": {
          "ref": "aa9cc799-c795-4e56-baf9-a21d047ea39b",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d3889a43-2e42-435b-8970-0bdc9e3dc662"
        },
        "item": {
          "id": "1c7075ca-0f6f-4adb-8498-9f484b2e0c1c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "51a5136e-9c94-474c-88c6-db165b2da742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cfca65-6e53-45a8-b3d7-5b956e8a0321",
        "cursor": {
          "ref": "b9d41f4b-7854-4198-aed4-5cf6b5fae9b3",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "445333b0-dbdc-4852-b479-4918c30a9b9e"
        },
        "item": {
          "id": "06cfca65-6e53-45a8-b3d7-5b956e8a0321",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "76c22b22-b068-489d-aba7-0bcf6ecfbca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea32ebf9-9ace-4423-9e14-3f1113141a70",
        "cursor": {
          "ref": "1d915ca1-e8e8-4a0f-84ad-6044b8b7dd58",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a61bf4db-4f89-401c-8f4e-7ba54d3747d8"
        },
        "item": {
          "id": "ea32ebf9-9ace-4423-9e14-3f1113141a70",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2be681db-1c76-4770-9af8-893501b509c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b5c6b5-ef67-459e-9999-fdd73b16f768",
        "cursor": {
          "ref": "1b915901-901b-4dca-ae83-bd0bc5724095",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "2ddf9643-0b4d-4779-ae7c-613950c35164"
        },
        "item": {
          "id": "c5b5c6b5-ef67-459e-9999-fdd73b16f768",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "697cacc1-893c-44d2-9c92-ebbb6823e7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb658105-084d-434a-92e2-387770f38d14",
        "cursor": {
          "ref": "f57f4b7e-fb36-4128-824b-4db242036880",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e951bd3b-a03d-40e2-b874-0ca2d74b9a39"
        },
        "item": {
          "id": "cb658105-084d-434a-92e2-387770f38d14",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5cf275c8-6b69-4486-834f-63c742827836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd193717-64bc-47b7-8189-237da6ce08f5",
        "cursor": {
          "ref": "f81e5faf-6337-4bf2-aa63-9319c8bf916c",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "76e60a8e-d6f8-46b6-ba30-8b6f00631bd6"
        },
        "item": {
          "id": "bd193717-64bc-47b7-8189-237da6ce08f5",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e009ceaf-017c-4636-96e2-ad24ef09f82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ac57ca-9784-4335-aacf-5f5228f3e509",
        "cursor": {
          "ref": "9e8b1f10-55c5-4420-a490-7abc98a6674a",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "be740fea-a0f1-4538-8fa2-e54f608b667b"
        },
        "item": {
          "id": "93ac57ca-9784-4335-aacf-5f5228f3e509",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "288561c5-1305-4b1e-8cd9-a2d826242042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5347a6af-0ef1-4896-b4d4-97de4e50df7e",
        "cursor": {
          "ref": "1d30c6e8-7b76-44e0-af66-a236666b8238",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "24870001-23bf-47f4-8f67-6b707c281793"
        },
        "item": {
          "id": "5347a6af-0ef1-4896-b4d4-97de4e50df7e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bcf54fda-3c7a-42c0-b738-ad9bbd3dac9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5504ee16-b8ec-4553-8294-0f7b48b3f514",
        "cursor": {
          "ref": "3c583f40-3db6-44e6-aea8-382e3f2d1d1b",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c96d6e2f-cee6-439a-8f5f-7af4639486c3"
        },
        "item": {
          "id": "5504ee16-b8ec-4553-8294-0f7b48b3f514",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c11d0e2c-fdcb-48c0-beff-cd1c021d428f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d2f1ac-52aa-46f2-adc4-98206589dc6d",
        "cursor": {
          "ref": "507ed081-dccc-4b4d-9ca0-0dd1b6514d7d",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "12fa065e-6085-4597-944e-6e486b19a880"
        },
        "item": {
          "id": "84d2f1ac-52aa-46f2-adc4-98206589dc6d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "21ac000b-2474-4ba8-9e82-0215c7ee7fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba494f1-2432-4ceb-9c79-123792f46e3b",
        "cursor": {
          "ref": "20db8e6b-6b62-43b4-b7e2-43462f785df2",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3ebfd6cf-329a-46a2-acbe-17e91aae5a07"
        },
        "item": {
          "id": "9ba494f1-2432-4ceb-9c79-123792f46e3b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "262de1cc-84db-4227-8e25-5a727afd7d07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95666c24-6874-4f05-b270-657669fa21ec",
        "cursor": {
          "ref": "9c7c1d2c-c9ca-4c60-8fdc-12a1f38e2ab5",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9cd4ffa4-a55a-4472-96f6-bd7dabbe33aa"
        },
        "item": {
          "id": "95666c24-6874-4f05-b270-657669fa21ec",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ffdbe743-1454-411f-9551-a7597a535478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ac539fc-a7c5-4a69-923b-2649a4cbc918",
        "cursor": {
          "ref": "483de5d0-0022-4831-a6db-cc339ebb638f",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b74c0675-5bdc-4f97-9031-01e155394e07"
        },
        "item": {
          "id": "7ac539fc-a7c5-4a69-923b-2649a4cbc918",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "692f79f0-b2e5-4735-b7c8-6eb861ee260f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141c0fa9-a569-421c-abf0-1e0df2aa6e2e",
        "cursor": {
          "ref": "9c27f945-96c4-4bd4-93dd-8d658fa4197f",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "05f94138-d051-4c25-8eb6-799778b08b88"
        },
        "item": {
          "id": "141c0fa9-a569-421c-abf0-1e0df2aa6e2e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bf3ddc6c-dc5c-4599-917a-08f258d84f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ff068b-1f40-4721-807f-b1696689b464",
        "cursor": {
          "ref": "16f1307c-cee4-469c-b136-f29ece41a704",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b288e8b3-4a5d-489b-a9cb-022e8e3433c7"
        },
        "item": {
          "id": "52ff068b-1f40-4721-807f-b1696689b464",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "99ab9c4b-f045-43da-95ca-741090e67292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b628bf86-eb39-4e2a-a360-15e9cc7aa61c",
        "cursor": {
          "ref": "45198127-9208-41db-b4e1-5a3e38288324",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "196331c5-2e53-49b2-bacb-6636404457d1"
        },
        "item": {
          "id": "b628bf86-eb39-4e2a-a360-15e9cc7aa61c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2e338a91-5bc2-4862-a55c-fedd649ae689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfe556b-0440-4f3c-bac4-447a5978ba6c",
        "cursor": {
          "ref": "48cbf8ff-0901-4a0c-a89e-c7d20074f05a",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e470c31f-f91e-444f-b946-22893e2868d6"
        },
        "item": {
          "id": "6bfe556b-0440-4f3c-bac4-447a5978ba6c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "81cec81d-920d-4cf2-a2e3-9762111f6e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8d30b2-9ab9-4b12-aab3-8b0b4ac58265",
        "cursor": {
          "ref": "e938fc17-3228-4c51-aaea-ecb96b212a03",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "677211cc-cf38-4607-be60-53fe1984fad9"
        },
        "item": {
          "id": "1b8d30b2-9ab9-4b12-aab3-8b0b4ac58265",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c4eb3d2d-bddd-4a8e-b438-6547efc06626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65fb0f1-7b36-45d2-af68-2a6a1adef199",
        "cursor": {
          "ref": "14fa596a-0343-44f0-98dc-32e657333e40",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fab404e7-7266-42fa-9e8e-5f3123840020"
        },
        "item": {
          "id": "a65fb0f1-7b36-45d2-af68-2a6a1adef199",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "226a020e-bf61-4b37-ba9d-59adeafda03c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb4af055-6716-42db-8317-4fea5366320b",
        "cursor": {
          "ref": "35fe0d5c-9fc4-43ef-966e-882503038f0e",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "476e64b9-ac47-4b9e-a6fd-4d8fae0a7121"
        },
        "item": {
          "id": "cb4af055-6716-42db-8317-4fea5366320b",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9ce8870a-c45c-4af6-af77-3d97021b077a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e36fba-41f6-440e-a4cd-92d3285eca4d",
        "cursor": {
          "ref": "125600fb-7cf4-4e4f-bf19-e3cc3cfa21fe",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "6ea8971f-39e7-4413-bd8b-b93aeb8ffa7c"
        },
        "item": {
          "id": "c4e36fba-41f6-440e-a4cd-92d3285eca4d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "96ac7a9a-b752-4756-b190-a713853b30ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d9f562-23e9-4070-b4a4-0621e47a5ec8",
        "cursor": {
          "ref": "933fefb6-0a39-4d47-b297-0a2dd25f1c3e",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "7d49cd9a-6ae2-4865-89b9-339f8b708206"
        },
        "item": {
          "id": "83d9f562-23e9-4070-b4a4-0621e47a5ec8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "24ad2685-dd1a-4356-98bc-c8d663a7fcb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911e89b0-c6b6-45a2-bb70-0f98c1a13fdf",
        "cursor": {
          "ref": "8011b453-b93e-4f54-a30a-09afff955712",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "85c864b4-9fd0-4bfa-8337-c7b2640ac2c5"
        },
        "item": {
          "id": "911e89b0-c6b6-45a2-bb70-0f98c1a13fdf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ac8b36ac-c21a-41cb-b7cd-dccf7378f28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e4f904-d1b6-4a57-85f7-ff2a3cf30990",
        "cursor": {
          "ref": "d8115815-c0ff-439e-bfae-098b71e798b0",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ec97c2b3-eda0-464a-a921-8ccadb8bb06b"
        },
        "item": {
          "id": "93e4f904-d1b6-4a57-85f7-ff2a3cf30990",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "603b61af-b4c2-4d58-93ed-be01a594adf2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c4fbfc-13f1-4e85-befb-1fa0702b4020",
        "cursor": {
          "ref": "86379e71-5fad-42e7-875d-f26ec10f57d1",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7909df2a-c81b-46ec-9a7d-1726ee96acca"
        },
        "item": {
          "id": "17c4fbfc-13f1-4e85-befb-1fa0702b4020",
          "name": "credentials_issue"
        },
        "response": {
          "id": "df571fb3-ce55-4d22-a2a3-ca2c09d4e208",
          "status": "Created",
          "code": 201,
          "responseTime": 102,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "8493180b-ee73-4e7f-8f60-c36575e1bb7f",
        "cursor": {
          "ref": "982e887e-1b3e-46d3-8b55-b35bc5418899",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "74cf092d-9c81-44e5-8fdc-3a5ab3aeca24"
        },
        "item": {
          "id": "8493180b-ee73-4e7f-8f60-c36575e1bb7f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "994e775c-f103-4716-b9c1-23b14ef999bb",
          "status": "Created",
          "code": 201,
          "responseTime": 277,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c99184-ef22-4a26-ae72-ecdc705789e8",
        "cursor": {
          "ref": "312e67d4-3752-409c-a6a5-b038b63c2909",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5651e2c2-5f16-45ca-a183-816e309ee3c5"
        },
        "item": {
          "id": "f6c99184-ef22-4a26-ae72-ecdc705789e8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b21f2274-7482-45f5-ba87-dcd6b9010174",
          "status": "Created",
          "code": 201,
          "responseTime": 93,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c32538b-c786-4d5a-8a8a-07b514d8c539",
        "cursor": {
          "ref": "eab91d66-ef7d-481f-b0da-43629f3e0837",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "1e761c4c-9260-4ef2-ae57-29ae3218d714"
        },
        "item": {
          "id": "3c32538b-c786-4d5a-8a8a-07b514d8c539",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bb025f3a-1d87-4a01-b7d9-9ac3efeca0e8",
          "status": "Created",
          "code": 201,
          "responseTime": 88,
          "responseSize": 925
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3595bec-b1c2-4526-bee6-a8c7217335f4",
        "cursor": {
          "ref": "730d51d5-531a-4925-a508-45727d211db6",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c405b421-255e-4ddb-9001-ca91e459a32b"
        },
        "item": {
          "id": "f3595bec-b1c2-4526-bee6-a8c7217335f4",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "4870d14d-f8b4-401f-a3e8-b8c6b923c150",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "14c74d6b-78a4-4c14-9f4f-38d291cd1fd7",
        "cursor": {
          "ref": "91c84bea-aed7-486b-bcc2-b935fd54c7ee",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a858606f-2991-48c5-93c5-54317ecccc80"
        },
        "item": {
          "id": "14c74d6b-78a4-4c14-9f4f-38d291cd1fd7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b5f1ec93-4338-458e-a77a-c3119577d24a",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90fd2ccd-2270-4a25-9991-ccbb71b2ac6b",
        "cursor": {
          "ref": "f83d3a61-1b7e-4128-bdf2-bb007e18e886",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2e3bce71-8dfd-4954-8eb3-71df579f9d58"
        },
        "item": {
          "id": "90fd2ccd-2270-4a25-9991-ccbb71b2ac6b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "714e6439-abe9-47fe-bd08-a5aa11b690a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa909b1-cc6e-401a-a1aa-75b336327ff7",
        "cursor": {
          "ref": "cfd3558c-f96e-43a9-8412-549bcc8d4545",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8ec3b91e-9f85-4745-acaf-eb6ce2e23203"
        },
        "item": {
          "id": "8aa909b1-cc6e-401a-a1aa-75b336327ff7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "219c218f-1fd5-4abf-8c11-f49c494a1269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1482e07b-f363-4316-b6e3-82611265036e",
        "cursor": {
          "ref": "d17527c9-4ede-4e36-a5c1-86b4f34ffe49",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "74cb5a49-a0d0-470f-9496-f1a2112bf581"
        },
        "item": {
          "id": "1482e07b-f363-4316-b6e3-82611265036e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0060ac39-d158-4ef5-bc27-a4898610b4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76dca71e-0bb9-4529-ac1a-dd4e522962d2",
        "cursor": {
          "ref": "2353ca90-0c96-4dc0-a97a-f370f7805802",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "10a238ac-a18a-4404-aaa8-7506d6ccf74d"
        },
        "item": {
          "id": "76dca71e-0bb9-4529-ac1a-dd4e522962d2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "7be00da1-4baf-4050-9b84-8813c32a1f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b245119-cb34-4ac9-9509-9595e23a2fb3",
        "cursor": {
          "ref": "371a9d88-e416-4a3e-bf4f-5456972bb638",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f03cd2b9-d10c-469d-9436-0a9f086bf7f3"
        },
        "item": {
          "id": "5b245119-cb34-4ac9-9509-9595e23a2fb3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "30c17499-318a-4c6b-8c55-47f28a87c85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8464a9-dd75-4184-8427-dafa87eea2e9",
        "cursor": {
          "ref": "f67a26e2-cf4b-4249-8e5f-6dde11b8a5c5",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7ad43a57-69b9-46b2-9292-1bdb426395de"
        },
        "item": {
          "id": "1e8464a9-dd75-4184-8427-dafa87eea2e9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "da58d8d6-2304-4415-aaa5-28fba915c1bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c40e4e6-fe47-4f1e-8cc1-4ec12c97b690",
        "cursor": {
          "ref": "fa2718fb-689d-4730-b293-7eb8d67fa844",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d2ec1268-4867-437a-82c3-08b8faa41186"
        },
        "item": {
          "id": "9c40e4e6-fe47-4f1e-8cc1-4ec12c97b690",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3f1edeb0-bfca-41fe-98e2-f8d13b09ba6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ded89bc-3904-4fa6-b3de-293b8006703b",
        "cursor": {
          "ref": "abb4cd7b-e557-4575-941b-4132ccbc3ca8",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2231e86a-bf39-4ac7-93bb-b9558d231efb"
        },
        "item": {
          "id": "3ded89bc-3904-4fa6-b3de-293b8006703b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "b8e40d52-dcf5-4ee8-8bf3-9c3e3f746e99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4c09106-e3e0-4423-a255-3f7fba0227b4",
        "cursor": {
          "ref": "16ff3f07-3e7b-469e-af08-612913fda276",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ddeea581-89f4-4d22-9812-d0e8eb460795"
        },
        "item": {
          "id": "b4c09106-e3e0-4423-a255-3f7fba0227b4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "150bff34-eee4-4ea6-b8d3-891ae5207965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62202541-d3b9-4a37-8f99-973a5b9fb687",
        "cursor": {
          "ref": "797c5ba9-de4e-4d7b-b434-59f2b8ae2741",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "541d58f8-6626-4e2c-8b41-00aa48564a1b"
        },
        "item": {
          "id": "62202541-d3b9-4a37-8f99-973a5b9fb687",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "720fefca-a0f8-48f0-8d20-77b229b447b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7395c8-5438-4926-8859-62773b1bd3ea",
        "cursor": {
          "ref": "3717c902-eb49-4d52-9a16-5567057f0c26",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b65262f8-8ee8-41b3-a44b-796506a24a32"
        },
        "item": {
          "id": "1b7395c8-5438-4926-8859-62773b1bd3ea",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d9a30dad-b960-46a5-a0ec-905507a3517e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d4a6f1-7e02-450a-973f-f1b6a0578d33",
        "cursor": {
          "ref": "c4b50ddf-c9bf-4762-b64d-681b12b773c2",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bbc21d06-d70e-454f-b3e5-c39b69a5edb6"
        },
        "item": {
          "id": "f4d4a6f1-7e02-450a-973f-f1b6a0578d33",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "83282705-f9ee-4f69-8063-daca9ac13951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7ba6fd-9731-4dfe-94c3-047e2d48e4ef",
        "cursor": {
          "ref": "eba92474-ac49-4c6d-a8d2-95c5d8e47bc8",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "7094ae49-b747-44bd-8672-127d4503f33c"
        },
        "item": {
          "id": "8c7ba6fd-9731-4dfe-94c3-047e2d48e4ef",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f67aa0dd-daa0-44c8-a241-c53257d29065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959f17e2-c616-4b8e-9a82-c8a4bdecdaad",
        "cursor": {
          "ref": "26bee602-84c6-4497-89d8-b162d9ab0d0d",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "fbf3075e-7456-49a0-a3af-f47991d2a385"
        },
        "item": {
          "id": "959f17e2-c616-4b8e-9a82-c8a4bdecdaad",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3283b6d6-6347-4ca4-9e2e-46da3c07bc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524bd1a8-1854-4b20-a611-39ebd70d524d",
        "cursor": {
          "ref": "cb3eaa08-b8ad-4cd2-b9f0-a43424556329",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d1eca358-271b-46ad-b834-ef724f44aa16"
        },
        "item": {
          "id": "524bd1a8-1854-4b20-a611-39ebd70d524d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "59e3d2d5-6a85-4dff-ac85-e067cd5d7b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b784712c-29da-40f1-8862-b7066fb91ef1",
        "cursor": {
          "ref": "6bfdab53-391a-443c-ac6d-dc44c0848b4c",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "42c133e7-f1eb-48f1-ab8d-e2cb37fda69d"
        },
        "item": {
          "id": "b784712c-29da-40f1-8862-b7066fb91ef1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "42e99508-5386-43b9-95c6-4a4d86685b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01851a48-a5a7-4afe-91c1-71bd8a043a34",
        "cursor": {
          "ref": "9f678992-9407-4dc6-b5d3-04d45f9e7788",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3e452ac4-3ab8-4473-95bc-65a246bf16d9"
        },
        "item": {
          "id": "01851a48-a5a7-4afe-91c1-71bd8a043a34",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "58eec309-dbc1-4b21-b2ba-394ef545d5fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "511fd3fc-8277-4d19-854a-5166c6dda091",
        "cursor": {
          "ref": "8c782178-e42d-44be-b0b0-18959d7b6b28",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c1a3832f-6a46-4296-9c0f-3fb4fa2a39cd"
        },
        "item": {
          "id": "511fd3fc-8277-4d19-854a-5166c6dda091",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ec265336-22db-4b2b-8129-83842cf7daf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf38050-e458-47d3-bfb2-9f6820946e21",
        "cursor": {
          "ref": "16ae98d8-0bb9-4819-bbb3-a59724164e24",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0bdf3635-ce0d-4cd0-a817-572d87e5fe64"
        },
        "item": {
          "id": "cdf38050-e458-47d3-bfb2-9f6820946e21",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "818c4416-9e98-4c84-b60e-9424f9f9f725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1c4139-1d86-4528-a246-755796709794",
        "cursor": {
          "ref": "537547a6-62b0-48c0-9da0-48183a7a7e7c",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "43e8545f-225f-4b67-b81f-c68a2176f5df"
        },
        "item": {
          "id": "7b1c4139-1d86-4528-a246-755796709794",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "b09a271f-eed8-4218-838d-6737bed34f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e1681d-2e96-44d1-8a1c-bee32a2a5d9e",
        "cursor": {
          "ref": "2f44211c-7dd8-4c01-a236-1f9416998c67",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7a32246f-8a95-4a2c-a50f-49fce9af6517"
        },
        "item": {
          "id": "f0e1681d-2e96-44d1-8a1c-bee32a2a5d9e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f9370d40-64c4-4cbe-a223-5cfa03bbd79f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "432be0c2-4cf2-42fa-af6c-c49ae5884cdc",
        "cursor": {
          "ref": "74dba37e-431d-434e-99b6-0b4e29b58a17",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3355483f-050c-4eb0-aaf2-77412e29cd77"
        },
        "item": {
          "id": "432be0c2-4cf2-42fa-af6c-c49ae5884cdc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a1df2d44-735b-4218-964c-1a3b2f629b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eec75d4-039b-43f1-9f5a-6fa0fc32e61f",
        "cursor": {
          "ref": "29a8d3d5-4b34-45f2-bf7c-831720636382",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "597cce73-6791-498e-85d0-7bc1b2c11ee5"
        },
        "item": {
          "id": "3eec75d4-039b-43f1-9f5a-6fa0fc32e61f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bbe17620-117d-47ef-92b2-d3f6669bd397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d600c8-58c9-4a73-a2b8-5a22ed0b6e20",
        "cursor": {
          "ref": "e2848c6f-8fa9-4e71-85ef-a66a227086d0",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9b376bfb-a88f-410d-8922-e772402e596c"
        },
        "item": {
          "id": "02d600c8-58c9-4a73-a2b8-5a22ed0b6e20",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ac17329f-65aa-4789-84b5-7b0a5654f35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea8c60d-4397-451c-a67a-2a672bf16561",
        "cursor": {
          "ref": "054c86c5-f893-4844-a536-409c87b48e0f",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7671ec4c-8444-482b-883f-5f040461c1f2"
        },
        "item": {
          "id": "4ea8c60d-4397-451c-a67a-2a672bf16561",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "88c0b615-5217-4245-9fe2-5c5812b8cc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a96c4f4b-ab56-4061-96e5-ce3356f47a74",
        "cursor": {
          "ref": "92cb8776-571c-44f6-83b3-e38f79a2efac",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "70f8f926-23be-4f81-9dcb-1837d3a0416d"
        },
        "item": {
          "id": "a96c4f4b-ab56-4061-96e5-ce3356f47a74",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1358e845-4e1e-487c-bf1f-0b7bec870e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed068eac-2272-414a-8a3d-200a25fca68c",
        "cursor": {
          "ref": "e88ddc01-bd2b-4b7f-a60f-84a16d66e556",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3cfdedc6-4db6-4322-8a2d-418cb930a24c"
        },
        "item": {
          "id": "ed068eac-2272-414a-8a3d-200a25fca68c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "abc77a1d-c8e1-4e63-88b1-0d54ecb6a81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b8824e-1a25-4573-95b5-eca7332d2bc6",
        "cursor": {
          "ref": "5ff5aae1-dead-42cb-988b-76c93365640a",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "be37a466-0c3d-4ac7-b23e-e64a71db4bd2"
        },
        "item": {
          "id": "41b8824e-1a25-4573-95b5-eca7332d2bc6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d270d22e-ef18-48f2-9d2b-ef4bcd369b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca97ed5-85f5-4114-99fb-85a93f8961ec",
        "cursor": {
          "ref": "b4802a2b-2ef5-435f-997b-e56ca17f4420",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "cbfc3499-80d7-4228-bec4-7104c04f1067"
        },
        "item": {
          "id": "eca97ed5-85f5-4114-99fb-85a93f8961ec",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "abd52b0f-bdb4-4774-af87-4ad27aa3bcba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a89fc4-66ba-45e3-9f78-5ff2e6e1ec83",
        "cursor": {
          "ref": "3ca150c8-aa5c-41b0-b9e9-dd86d7ac1388",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "34ab8a73-da9b-417e-a926-a7394800e800"
        },
        "item": {
          "id": "f5a89fc4-66ba-45e3-9f78-5ff2e6e1ec83",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a7b32c94-fe3f-46de-b331-a92249d315a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebc34d3-4806-4c76-a22c-2bab294fc5d2",
        "cursor": {
          "ref": "82032b91-fb10-4f76-8039-99f11d1331a4",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "4bf85ef9-1ebe-441b-a809-4daa306bb764"
        },
        "item": {
          "id": "cebc34d3-4806-4c76-a22c-2bab294fc5d2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "a24469d5-eef5-4076-9840-eb78019a7715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e0c6a5-d885-4fca-ad36-a0106520f554",
        "cursor": {
          "ref": "873094e1-cf4e-4794-9d58-7f6fe9fd7b3b",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "069a2edb-1125-4e1c-b9c3-88971f9ace76"
        },
        "item": {
          "id": "a5e0c6a5-d885-4fca-ad36-a0106520f554",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "35b8c2c1-9910-45de-9fe8-69f04b8f5478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55fca5c-3c12-43c1-b10b-8960b16cd252",
        "cursor": {
          "ref": "5363689a-9e5d-49b8-839e-b780f3528ae0",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7e0713cb-546d-431e-affa-bdb22e64177e"
        },
        "item": {
          "id": "a55fca5c-3c12-43c1-b10b-8960b16cd252",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3154afa4-ed51-4655-aa3b-f7c091cd91f0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "142e5d87-89fb-4dcd-b436-543f2019e4e8",
        "cursor": {
          "ref": "2b907ddc-a805-4470-a115-09b6bd0857ac",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9ea36f85-ff11-4501-a3f7-67fa33be978e"
        },
        "item": {
          "id": "142e5d87-89fb-4dcd-b436-543f2019e4e8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "96c5b3f9-dba0-4001-bbb3-73942ec12030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a33df4-f7fe-4d76-8beb-34238db5d4e0",
        "cursor": {
          "ref": "eece0ebd-58cc-4391-a7a5-9d6f66a0412f",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "31dd7ebb-1d8f-4d66-b6d0-107147d34334"
        },
        "item": {
          "id": "60a33df4-f7fe-4d76-8beb-34238db5d4e0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "48ea7f53-8ebd-4ed6-a31e-edb98663fe45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43f540f5-9456-4bc8-a567-4ed86d5998bf",
        "cursor": {
          "ref": "9d684af1-a29a-4d45-a043-3f9fbb0d1322",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4a249f5c-7128-4557-b033-da97a4744d25"
        },
        "item": {
          "id": "43f540f5-9456-4bc8-a567-4ed86d5998bf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b9c75f23-8fec-41be-90b7-997d4c2fd7b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d865f667-6c16-4155-8575-04cc8214cc05",
        "cursor": {
          "ref": "49325296-ea30-4135-a0b5-1d229ddb3de2",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "abc912df-a41e-4ed0-9a99-1374f8262956"
        },
        "item": {
          "id": "d865f667-6c16-4155-8575-04cc8214cc05",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0eabd313-eba5-4e20-9f63-556650c4601c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90362ee-50f8-496b-b037-0ab1b718639f",
        "cursor": {
          "ref": "b5f85ac6-a8f9-410a-899e-78539fe97503",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0cc452d1-714a-4350-9767-4eb3774ef967"
        },
        "item": {
          "id": "b90362ee-50f8-496b-b037-0ab1b718639f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c606e544-a083-4092-b337-fe83e52745fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb3afe5-b31e-4cbb-aced-5f0758095a88",
        "cursor": {
          "ref": "6344a76a-7d4a-48bd-ad26-e38b2f2c5df1",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0bbf484c-20e6-4afe-9673-8447134150f7"
        },
        "item": {
          "id": "7cb3afe5-b31e-4cbb-aced-5f0758095a88",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a44262c2-dc50-4c4a-a551-65c41cfebcec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f14c55-469f-4f6b-b23f-b5e74a03ebf9",
        "cursor": {
          "ref": "17b1ea90-93e3-4405-ad57-697a3af9f513",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "ac49cbcb-f975-402f-80e4-a8e43a311305"
        },
        "item": {
          "id": "a2f14c55-469f-4f6b-b23f-b5e74a03ebf9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "72362fff-9be5-4f5c-85a6-fd060cde7f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b06ab2d-d09c-4ee7-8d02-070d7d46db6e",
        "cursor": {
          "ref": "94f90567-13f3-403f-b0db-602e9b1e1240",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "255668a1-7d9d-45d5-a9f3-dd0e9e6a83c2"
        },
        "item": {
          "id": "7b06ab2d-d09c-4ee7-8d02-070d7d46db6e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ea6fac89-afd9-41ac-9aa1-a1128202b250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bc74ce-f4fa-466f-ae42-382ddeb01faa",
        "cursor": {
          "ref": "5d8d72ea-c291-491f-9eae-3bcb83b8c5f0",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cffdfec0-5f7d-418a-8b6b-cb810df3c857"
        },
        "item": {
          "id": "e3bc74ce-f4fa-466f-ae42-382ddeb01faa",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5dee22fb-516c-45b5-8f6b-1f87371a0b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838a2d14-58be-4248-b5f6-d4ba12b2eab5",
        "cursor": {
          "ref": "1761a8b0-fa1a-4c25-a558-f127850de008",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a4979e5a-7d7a-41c7-85c2-a6340f1a1bcc"
        },
        "item": {
          "id": "838a2d14-58be-4248-b5f6-d4ba12b2eab5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e318b379-aa37-4865-8b9d-97f9384a376e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f483b4-0934-4a7a-a436-5be09036559d",
        "cursor": {
          "ref": "3baa566f-29b4-4640-b060-0cc1195ab79c",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "875c979d-a75b-47db-b2bf-abd832486677"
        },
        "item": {
          "id": "96f483b4-0934-4a7a-a436-5be09036559d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "fc780520-97fa-4088-b322-0391f164fe60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b81dcf4-92ab-41c1-9a80-6a7dcb721729",
        "cursor": {
          "ref": "1beaa71a-f6b5-425d-a766-c312c51069c7",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ffe98eab-4ec4-4720-9e68-a20f17c5b4e2"
        },
        "item": {
          "id": "3b81dcf4-92ab-41c1-9a80-6a7dcb721729",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7608ff5d-f85e-49a5-848c-9c8b74075b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae710cfc-f81e-4c68-b2d5-0507bfb4d713",
        "cursor": {
          "ref": "116dc26c-27cc-4a4d-8294-bd6dbc0d4c44",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a2019c2e-c8a4-4b1e-b525-4906f0037a16"
        },
        "item": {
          "id": "ae710cfc-f81e-4c68-b2d5-0507bfb4d713",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ace10da5-1aa5-4c71-b53b-e074f8db9000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e10afc-d66c-4ea7-9063-01b406ecf020",
        "cursor": {
          "ref": "3b7548d6-a6b4-4522-927f-37c334982fbc",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b9a0b037-7080-4135-9480-12e1e98a71df"
        },
        "item": {
          "id": "c8e10afc-d66c-4ea7-9063-01b406ecf020",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4a8b2406-32c7-4c65-9cb8-f1c967f83ccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2721209-0827-487a-89bd-e73e12e80f66",
        "cursor": {
          "ref": "8f99ecaa-03a3-439d-aeb4-e08466b1f082",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "77bab498-1373-48ca-9e5d-63780ce86b40"
        },
        "item": {
          "id": "c2721209-0827-487a-89bd-e73e12e80f66",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "35049160-f918-4bdd-8ccb-46735ea69747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98ba805d-42e6-444b-b416-f50792882a23",
        "cursor": {
          "ref": "f135ffdd-5c34-40a6-81e6-94c8df03b9b8",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "3ee1badf-742e-4568-a470-be6bc45281e9"
        },
        "item": {
          "id": "98ba805d-42e6-444b-b416-f50792882a23",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "51d24cc9-7047-4c29-a592-69fde1c237cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d95a20e-7bfa-470a-9144-bdbb8e545fca",
        "cursor": {
          "ref": "95d41321-aa3a-4b7a-8765-1e921fd4e778",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "cef0b521-b881-4aa7-a370-974b7be0b3f3"
        },
        "item": {
          "id": "0d95a20e-7bfa-470a-9144-bdbb8e545fca",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "eae460a8-e467-40d6-bb4a-b57275ca20ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3bccb7-160e-4033-b0c1-3d38c0f26439",
        "cursor": {
          "ref": "7e441f69-a167-496a-aa30-f0d20630b852",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2800547d-0d12-4830-ad7c-49429f971ac4"
        },
        "item": {
          "id": "8f3bccb7-160e-4033-b0c1-3d38c0f26439",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "36e7bb82-1cfc-4a46-a67f-58941f8fce20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475511b0-6005-4705-9038-d1abf09ef649",
        "cursor": {
          "ref": "367db665-96ff-424c-9b12-1d1d9d134323",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "aa6ac107-531d-4612-ad7c-f2e7cf022378"
        },
        "item": {
          "id": "475511b0-6005-4705-9038-d1abf09ef649",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4e0ad302-6faf-4e38-8beb-8b8d9a255fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74266db5-5fac-492b-b08b-fbb3d8057e6c",
        "cursor": {
          "ref": "2c2f4a3e-305b-4aa3-b94c-ac643cfa5e07",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "75595e14-a6d1-4b15-ad20-d0a107574892"
        },
        "item": {
          "id": "74266db5-5fac-492b-b08b-fbb3d8057e6c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4294ccf1-e768-4e6a-91cb-a48bc3c2f726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86560b3a-dc7d-4c7f-95a1-f05af07af06d",
        "cursor": {
          "ref": "260935c5-3001-4ba0-a543-13b19c2e2998",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a7ba0d96-2490-4964-b738-b99b3b03fa05"
        },
        "item": {
          "id": "86560b3a-dc7d-4c7f-95a1-f05af07af06d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b7ff9009-c2e2-43b0-956f-3bb2b652ce65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3683e12f-ffdf-4a11-9a07-4fdee00cec49",
        "cursor": {
          "ref": "0840d9f9-2a25-4a81-8c53-058308c5b95e",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d0155037-6d96-49e4-b4cf-e3d375d4ae0c"
        },
        "item": {
          "id": "3683e12f-ffdf-4a11-9a07-4fdee00cec49",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fb5f27cb-02db-4269-ab68-f28719c739b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9a4c472-739a-4626-86c6-8a1ac7326c9e",
        "cursor": {
          "ref": "7fcf2b69-7a86-4ec2-8acf-191d01eaa247",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a94f3696-e3bf-4db9-bfcb-c16564a5921a"
        },
        "item": {
          "id": "b9a4c472-739a-4626-86c6-8a1ac7326c9e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3b4d212f-daaa-419e-86d3-024cc71ccecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "418b5604-05f4-4b85-bf10-62860acbe961",
        "cursor": {
          "ref": "d6c9229b-dbf6-434b-b4fa-c653a659a067",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "0f34a611-3d4c-4dab-9886-338ace4e2768"
        },
        "item": {
          "id": "418b5604-05f4-4b85-bf10-62860acbe961",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f320fb0e-c113-45ce-80ca-42d42edee2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1b6c5c-1408-477a-94a4-624094e3c167",
        "cursor": {
          "ref": "84a2fddb-0752-41d4-8a13-f6817ce8d9af",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d8329ca5-32df-4a58-9a23-05024f304c84"
        },
        "item": {
          "id": "9c1b6c5c-1408-477a-94a4-624094e3c167",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "41821737-5c4c-4bd9-8288-33e715d5d08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3207b0d-4163-4b29-a563-e29cf54ed81f",
        "cursor": {
          "ref": "e72135b1-bdc8-466b-af41-14dceda64183",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "27a7c198-102a-48d2-b84f-4f3e9e8897c8"
        },
        "item": {
          "id": "b3207b0d-4163-4b29-a563-e29cf54ed81f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6b04cbe5-cdf3-42b3-8f13-ecb754d0d081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d99617-3df3-4a37-99df-2e9d8dd8caea",
        "cursor": {
          "ref": "ec1d702c-fedb-4e89-8410-a2c25a09970d",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8b76afb7-44b8-4de7-9ab9-e576b6acb1bc"
        },
        "item": {
          "id": "10d99617-3df3-4a37-99df-2e9d8dd8caea",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f777fe46-c246-4ecd-91f8-917c21f2fcc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a835fbc3-50cf-4330-bb2a-f7621df133e8",
        "cursor": {
          "ref": "86e01a5b-9888-4b8c-9522-1be6cd1ee66d",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "38b1b260-c918-4600-8e73-a55ca8cf7e59"
        },
        "item": {
          "id": "a835fbc3-50cf-4330-bb2a-f7621df133e8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4e26d3ed-11a6-45db-86d5-53dc4eaa8f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378fbec2-a96e-4b99-b37d-b4a9cc1e3846",
        "cursor": {
          "ref": "07414f59-f19a-485a-8a76-c9697a1a87ec",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0f1b9252-35ba-4eec-81da-637038e564b5"
        },
        "item": {
          "id": "378fbec2-a96e-4b99-b37d-b4a9cc1e3846",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8ac594fc-7255-4a43-a68b-bfdfc857d288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897ccda8-aacd-4d36-98b4-f339bf19dcb3",
        "cursor": {
          "ref": "bd8b34eb-1555-4aa1-9873-b9fb06c57d7e",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5a42ebb6-2509-4cd9-8c80-484da0b6cfe5"
        },
        "item": {
          "id": "897ccda8-aacd-4d36-98b4-f339bf19dcb3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "edb6f440-bbb6-4a09-bb6f-23ed991ca025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f147a1ef-a610-4574-8186-9e66d5259763",
        "cursor": {
          "ref": "04d0d744-4d15-4e08-9644-9cba17bec493",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4524cf3c-5d53-4de9-9e67-127ceb4d30ad"
        },
        "item": {
          "id": "f147a1ef-a610-4574-8186-9e66d5259763",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c2a80f68-53d9-42d5-8fe4-6bcdc22aa23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc160061-e215-4d06-afd4-07d6d1a45653",
        "cursor": {
          "ref": "394205eb-a39e-49b2-8ea2-1cde35c1528c",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "41c611b1-d261-4b4b-8319-a980ea5dc3c9"
        },
        "item": {
          "id": "cc160061-e215-4d06-afd4-07d6d1a45653",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "407b051e-7137-4d93-8ec6-07bbedefc4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb6e952-6817-496b-b6dc-1567e464eac4",
        "cursor": {
          "ref": "5ac5204c-698f-46d2-9458-a01038bfc8cc",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bed7d3ab-b328-42ec-8aca-59da85b90b78"
        },
        "item": {
          "id": "adb6e952-6817-496b-b6dc-1567e464eac4",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "1ff2f5bd-816c-4c75-8059-1e9ad2a98c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc92719-4161-4b6d-9047-3a8b19741efe",
        "cursor": {
          "ref": "87a49451-61fa-4214-8609-1c1057118ca8",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0832438a-585b-445e-b6cf-2f22a7b0ae4b"
        },
        "item": {
          "id": "1bc92719-4161-4b6d-9047-3a8b19741efe",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "aeb2c27c-0cd7-4e0b-bd41-a8c1b2a9a27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451d5c3b-78cf-49e6-8f96-d6c09b45b54c",
        "cursor": {
          "ref": "d731223e-11dd-4023-adcf-95792556aa6c",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fb1e3d70-64fc-4f0a-a696-bf34d30220a6"
        },
        "item": {
          "id": "451d5c3b-78cf-49e6-8f96-d6c09b45b54c",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1ae0315e-f0fd-4781-bc94-27581ca29b3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ed230c-6521-4ed5-a02f-fd6e8f7ba130",
        "cursor": {
          "ref": "d7c27259-2ecf-40dc-8a69-93d4796b5740",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b8727fb6-b788-4a50-9c14-cf0c1e608281"
        },
        "item": {
          "id": "52ed230c-6521-4ed5-a02f-fd6e8f7ba130",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "64ec3202-d955-4e82-8357-bf84b3ab5426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153be57c-aef7-452a-b343-5f0a1122034f",
        "cursor": {
          "ref": "e5ba7373-b246-476f-9b02-1e4dd5f78799",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9ba1cf44-454e-48dc-93bb-663f420ac5e3"
        },
        "item": {
          "id": "153be57c-aef7-452a-b343-5f0a1122034f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "66d3d1a4-25c0-41d7-b677-f4b9f3a9504d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c67a9a-78b0-43ea-a60c-c68ab112bded",
        "cursor": {
          "ref": "8d898a86-b4df-4a57-8e52-a53fe43ad27c",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f2043619-558b-49d4-b9db-238c367fadd9"
        },
        "item": {
          "id": "78c67a9a-78b0-43ea-a60c-c68ab112bded",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "34d761d1-8c2e-4242-a83e-05f20a994e2f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875765f1-8f4e-4bd3-b2fb-5dd654973624",
        "cursor": {
          "ref": "3e1742de-3587-4e89-b336-5ce7fab3069f",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "bf57c95d-eee5-4a88-8e00-b1ffd59625a0"
        },
        "item": {
          "id": "875765f1-8f4e-4bd3-b2fb-5dd654973624",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e0287d21-ab45-4426-9b04-3869681bda19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50e2651-fd4d-4089-9af8-61bbdde0d5ad",
        "cursor": {
          "ref": "f2eebba1-1c50-4297-bff6-cda82eab6a89",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a3c68666-b914-4ca6-a9f8-412f40363462"
        },
        "item": {
          "id": "e50e2651-fd4d-4089-9af8-61bbdde0d5ad",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9f07b10e-0ffc-49cd-bd2b-8a72ae0556a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217638a7-a724-472b-8e4b-3e137bab0098",
        "cursor": {
          "ref": "b4549cf2-7444-4671-9e38-a19929c11e9e",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8449a379-21e8-4137-9c29-519a5132a39e"
        },
        "item": {
          "id": "217638a7-a724-472b-8e4b-3e137bab0098",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "20f835ba-2211-4636-8fb0-699e60f2dac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cdbaa37-9f03-47c4-89e0-848a8521c9c9",
        "cursor": {
          "ref": "71652aa5-d224-4d47-8086-748682851431",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "43579eb5-2cd5-4914-ac03-28ab1e0e1a95"
        },
        "item": {
          "id": "5cdbaa37-9f03-47c4-89e0-848a8521c9c9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e63ae689-aac2-45ba-9311-0af4bbb81606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09989b69-446b-4fac-9437-23e87923bb40",
        "cursor": {
          "ref": "5a3852d1-c91c-45f2-9c59-f9b068b599e5",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8049a67a-b21f-4715-948a-4455d2b1c429"
        },
        "item": {
          "id": "09989b69-446b-4fac-9437-23e87923bb40",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5749d3a8-99bc-4e3d-b4ea-df250cca6574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39438fde-5354-459e-942a-561f7bca5f86",
        "cursor": {
          "ref": "752aa92c-17f4-432f-a09d-e3cbac819dac",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "31e8967f-fcb2-4020-87b5-e9f33e729fdc"
        },
        "item": {
          "id": "39438fde-5354-459e-942a-561f7bca5f86",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "afd20b56-8a0d-4352-8bc1-75e82e37efb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9820a19-08c8-41c9-9682-eb8df6304bf0",
        "cursor": {
          "ref": "689e7810-32bd-41d5-be7c-f325de3aee1b",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "70a26d1f-3767-4bb6-9e90-68a39d1d1697"
        },
        "item": {
          "id": "f9820a19-08c8-41c9-9682-eb8df6304bf0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c70f2252-d6ad-4ab2-a317-2db797387d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "390d9685-15b0-437b-9aef-e8f12122a44a",
        "cursor": {
          "ref": "da79c543-0733-4104-8aee-7a2329767894",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "2728cb82-9706-44ac-b5d3-601b8c0be9b4"
        },
        "item": {
          "id": "390d9685-15b0-437b-9aef-e8f12122a44a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b3a70260-0e4c-42cf-8aed-70454efc349b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaddb619-d00b-4a27-a508-eeeaca128f17",
        "cursor": {
          "ref": "7d54c645-e9e6-45b5-8900-52998006e38b",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a2d4d8eb-057d-4d12-8462-ad6f5957ab39"
        },
        "item": {
          "id": "aaddb619-d00b-4a27-a508-eeeaca128f17",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "012de399-5bbf-4358-be27-4c53c5bf90c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608f585a-c9ef-45e7-9a4a-211c6299c45d",
        "cursor": {
          "ref": "e4b94867-b1b7-4a04-a3be-3eb34e5c630a",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0693add0-5f55-4ddc-b57f-df4dcb076863"
        },
        "item": {
          "id": "608f585a-c9ef-45e7-9a4a-211c6299c45d",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d35d170f-21a6-4924-84f2-e44e2680fd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f802d67-1c3b-49e6-a6cb-51a61c3c9dc7",
        "cursor": {
          "ref": "dbf4e7c8-408e-4403-a291-289916a78ae4",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7598eac3-b9e6-4dae-af88-c14b67d3ae7b"
        },
        "item": {
          "id": "4f802d67-1c3b-49e6-a6cb-51a61c3c9dc7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b0f69d48-c84f-4d14-81d1-ba84db412587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22fc3fd5-31bb-49f0-b724-2a0ea56410cc",
        "cursor": {
          "ref": "86a576ed-94ce-4196-ac0a-3bef7d1c4dcf",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f8b649be-74d4-4be8-aec3-ec6a14acd9f2"
        },
        "item": {
          "id": "22fc3fd5-31bb-49f0-b724-2a0ea56410cc",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e8f311d8-7457-4bb2-91eb-d6a4c94b5ae6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1706064b-867b-4093-9e04-4262886b3db4",
        "cursor": {
          "ref": "ba443dab-aa1c-4836-9f1b-0b2bba68417a",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ed5b27dd-8140-41f8-9072-0430c0baefdd"
        },
        "item": {
          "id": "1706064b-867b-4093-9e04-4262886b3db4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "25b13ab0-8133-4c7b-bc88-a5e95a251560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3e9cf5-1e6a-4a60-b5f4-8e8c30704bb1",
        "cursor": {
          "ref": "e450d19c-d0ca-4b06-9c11-d5882339d859",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a2f9c0ca-84db-4157-b607-56f6d9c64d51"
        },
        "item": {
          "id": "6f3e9cf5-1e6a-4a60-b5f4-8e8c30704bb1",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1f325c09-dee2-45d5-b7b9-7c0db8f5afbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590cf223-43f6-4239-9cf2-0fbaa4461a6d",
        "cursor": {
          "ref": "79ddeeec-3450-4fdc-a9e5-894c24b9365b",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "22ec03ef-c5c5-449d-8fce-5f5ebd4efd61"
        },
        "item": {
          "id": "590cf223-43f6-4239-9cf2-0fbaa4461a6d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a917a4da-3802-4b55-9147-6d3c78f359bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d34bc95-b032-4734-90ee-79e7d1d39fd0",
        "cursor": {
          "ref": "2417b75d-43e6-413f-89b4-7ae1a9077a8e",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2af2799c-240a-41f4-8dae-f3be1a3c6f68"
        },
        "item": {
          "id": "5d34bc95-b032-4734-90ee-79e7d1d39fd0",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f2977c7c-9df8-49a1-b635-ab02b062ae6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd31e3ee-8332-4968-a1d6-499a7a8a976c",
        "cursor": {
          "ref": "8878fa48-44e9-4712-9663-e355033a1886",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "348dc4a1-0724-43c9-b109-8ade7e67f835"
        },
        "item": {
          "id": "cd31e3ee-8332-4968-a1d6-499a7a8a976c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2abc5c29-5d2e-4c02-8536-fc5cc86332ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52c29c3-255b-4384-b64d-4491a452390c",
        "cursor": {
          "ref": "b59e7312-d8b2-4574-99a9-e50da5b5847f",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "608bea36-fd3d-42ea-8331-1de080144d41"
        },
        "item": {
          "id": "a52c29c3-255b-4384-b64d-4491a452390c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b60034e9-b112-4edb-8b67-75b11d13820e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3988df5-f390-4239-937e-69c070e971ab",
        "cursor": {
          "ref": "bc43a228-4d62-4330-9e39-de618f87bb6c",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0ee21f8e-7e40-423a-b617-9e03c4a199f1"
        },
        "item": {
          "id": "c3988df5-f390-4239-937e-69c070e971ab",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "49e35b64-f598-4955-a02e-447c2001b7a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622ee68a-b021-4636-a95a-4fe8905e3a6a",
        "cursor": {
          "ref": "1f584ab2-5a38-46f7-a3b3-7097f873beb2",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3c0669e4-1228-42be-b06e-6b875c77e4c6"
        },
        "item": {
          "id": "622ee68a-b021-4636-a95a-4fe8905e3a6a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7cc69f04-d1b8-4e95-afc6-41aa2cf750ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e72b192c-2208-41c8-ab14-90f0897f4b91",
        "cursor": {
          "ref": "49d6c1dc-430f-4cb7-b435-dab55b2e2414",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "54e966fa-25ad-4168-8827-d1626ba1f0aa"
        },
        "item": {
          "id": "e72b192c-2208-41c8-ab14-90f0897f4b91",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e1877250-6354-4a53-9f04-0cb5834dbded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a9044f0-6db9-4a16-a36d-d61ed81d4ed8",
        "cursor": {
          "ref": "fb94afd5-90c4-4228-ae93-02865210635a",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1a407901-dd5b-4e61-acd9-cdad26f5e503"
        },
        "item": {
          "id": "4a9044f0-6db9-4a16-a36d-d61ed81d4ed8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "09eec4d1-7019-4b80-9249-f4d6513a3c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719ce6fc-49e1-45c8-b81b-99e8c6eca0a2",
        "cursor": {
          "ref": "476725e4-e999-4255-a0ff-19dcb3c09235",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c1128767-7a94-44d9-b890-ab3065512598"
        },
        "item": {
          "id": "719ce6fc-49e1-45c8-b81b-99e8c6eca0a2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "523f04dd-f87b-4c74-9376-f9bac9582d6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1e73c0-fdf5-485f-8cb0-09f02e0804f4",
        "cursor": {
          "ref": "a910670c-8bbe-4764-9a85-0d52dd2f70fd",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a043fa7d-0d4f-4f57-802f-6e388996fb66"
        },
        "item": {
          "id": "1c1e73c0-fdf5-485f-8cb0-09f02e0804f4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4ded735b-b652-4026-a574-da5d9c9ac660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fafd10b-410d-44d9-9a51-104468c0daaa",
        "cursor": {
          "ref": "d97c943b-9d44-4bff-8d18-c8351c70f5f3",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "46033345-1363-4ff9-b8b9-a0b7703ae68c"
        },
        "item": {
          "id": "7fafd10b-410d-44d9-9a51-104468c0daaa",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "90940f15-cbb2-4c10-ad1b-211204753ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6de1f7-5e90-4dbb-81d1-9484be03ab27",
        "cursor": {
          "ref": "e73e7401-f467-4ed2-962e-685a4ee1250c",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ce143cfd-09b4-4452-a9d5-e1fde07b0406"
        },
        "item": {
          "id": "0b6de1f7-5e90-4dbb-81d1-9484be03ab27",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b1de6a6e-70ec-4b0c-ba8c-c36ed037c7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398e109d-3fc9-4377-a5f6-f899f58bd56f",
        "cursor": {
          "ref": "c924a743-7ec3-42c3-982e-0540c9647dac",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "b8c5f2c0-be5d-4ff4-afc8-02d93e0535fe"
        },
        "item": {
          "id": "398e109d-3fc9-4377-a5f6-f899f58bd56f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c9b51478-d647-4b00-a71b-21551684d19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8155ac44-b290-4536-89e3-eda2c9402957",
        "cursor": {
          "ref": "255a43d4-bec7-4e7a-8036-aaa0e003d554",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8bf594b7-4193-4c11-a88a-c31553d52114"
        },
        "item": {
          "id": "8155ac44-b290-4536-89e3-eda2c9402957",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8a6a66a4-a361-49df-93fc-b77c5b359011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9122de-e13b-4962-8bc7-3bae9eaaafde",
        "cursor": {
          "ref": "1bb2ca5b-8885-4e44-b808-c24f200a15af",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9b2cfc60-5102-403f-8a8e-0bbf5abd2c1f"
        },
        "item": {
          "id": "1f9122de-e13b-4962-8bc7-3bae9eaaafde",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "53c11408-0217-4dae-9cea-802075e5f651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b46ead4-1a56-4b54-b8c8-e343c2b6ee43",
        "cursor": {
          "ref": "22c08a99-dbce-49e2-9c32-686471882c26",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "03e692aa-31c2-44bc-9f20-eb787f7b7fb2"
        },
        "item": {
          "id": "9b46ead4-1a56-4b54-b8c8-e343c2b6ee43",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b6321e6b-76fc-422e-ae0a-fd7e54f7d2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce125d2-897d-4cbc-8969-241084393283",
        "cursor": {
          "ref": "11ae2811-a6d4-4d3a-9805-8b3d8cc59e93",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0b1fc054-7f22-4e4e-9b2f-92289fd7d251"
        },
        "item": {
          "id": "7ce125d2-897d-4cbc-8969-241084393283",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "9d718b7f-731c-4168-bd1d-abfe98900f08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc305556-4b31-41c8-9dee-e9464c6ce5bc",
        "cursor": {
          "ref": "285bdc11-1f75-4ffb-88e3-d6e3ab4384fb",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ee571e68-347a-40c4-94cb-6e0dc91f21c3"
        },
        "item": {
          "id": "bc305556-4b31-41c8-9dee-e9464c6ce5bc",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8e452801-da07-4822-b299-c10d08abf9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da55d93-17a6-4358-9fe4-2fc6ee456597",
        "cursor": {
          "ref": "d8062830-5f5b-4086-9584-9bc671fa2173",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9eaf8e7b-9737-4559-83b3-8804a4302895"
        },
        "item": {
          "id": "5da55d93-17a6-4358-9fe4-2fc6ee456597",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6af4ea2d-4069-4831-87ab-16ba06352309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960fecc5-befb-4a2f-a871-7b78f0fea62b",
        "cursor": {
          "ref": "a6715236-0e32-4238-9648-aeee019be65e",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "7aeadd26-9e54-4b49-b0d1-30f8fc986fb0"
        },
        "item": {
          "id": "960fecc5-befb-4a2f-a871-7b78f0fea62b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "60796a63-f89f-4453-9652-1379a0ffe9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb21c658-9fb5-4cc3-b9e3-a9ecf421a993",
        "cursor": {
          "ref": "94c3b4dd-b06a-4024-b320-6fc78cbaf997",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "f8ec7b17-8134-4b8d-9911-3febb5de0931"
        },
        "item": {
          "id": "cb21c658-9fb5-4cc3-b9e3-a9ecf421a993",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "fc7c6de3-6bdd-4721-b663-eaa82e3040ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbec25ad-aaa8-4fc7-8fbd-afb408a19d1c",
        "cursor": {
          "ref": "49de8017-6955-4288-afc7-782d99648563",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "7d21bddf-8a69-4260-a6a9-5ed21ade85a9"
        },
        "item": {
          "id": "cbec25ad-aaa8-4fc7-8fbd-afb408a19d1c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a785e43d-09bb-4911-9432-c5ba6d58f2db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25edfe5d-02b4-4e10-b477-efbc934e295f",
        "cursor": {
          "ref": "c5d5454f-d843-43cb-b648-62a9d670e6fe",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "81341302-9a4e-4f80-9e0e-56073f8c4655"
        },
        "item": {
          "id": "25edfe5d-02b4-4e10-b477-efbc934e295f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fa70c339-3a65-47e3-9ddc-347a0ab6e745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69fadc78-de34-447c-8ac1-0a35628bcee7",
        "cursor": {
          "ref": "cb02e3ca-f2fb-4cbd-a3b3-144fa4f4965f",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e2661c16-9e22-406f-a507-fdb59e9dddad"
        },
        "item": {
          "id": "69fadc78-de34-447c-8ac1-0a35628bcee7",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "984a0e24-bb05-4e06-afbd-385741991915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ec108e-e598-41f8-93aa-35592907c85f",
        "cursor": {
          "ref": "e6a96634-c659-45c2-9e3f-07b2b1dba16d",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "52dd8af2-eb3e-423f-9b80-ecc3c630c577"
        },
        "item": {
          "id": "91ec108e-e598-41f8-93aa-35592907c85f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "cf7679eb-24a3-49ea-8e9c-0e3ef81ad6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dfa0163-cd40-4d0c-9370-2ecabe8aa6ba",
        "cursor": {
          "ref": "71a565ba-7360-417f-bbd6-fec27cc47c67",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ca7edf3b-e67b-4d9c-a6b0-2cb419088868"
        },
        "item": {
          "id": "1dfa0163-cd40-4d0c-9370-2ecabe8aa6ba",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "af9e9117-7e9d-4eb8-a410-030ec2c0ac69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8210fe77-80a2-4c46-9e36-cf911ffaf27b",
        "cursor": {
          "ref": "f4e5d0f6-0244-42c7-8d1b-a4edd7d43c14",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "cfe965a3-f04e-4bcf-91f9-12860d09fba4"
        },
        "item": {
          "id": "8210fe77-80a2-4c46-9e36-cf911ffaf27b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ecd620b0-2cad-402a-9728-e932c32d50ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08346513-7daf-49e9-9445-0bd0349adf7c",
        "cursor": {
          "ref": "c4e7ad90-69d4-47ea-9b54-d50317c477ed",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "35bfcc2c-2317-40dc-9cf7-fef3c62d25f3"
        },
        "item": {
          "id": "08346513-7daf-49e9-9445-0bd0349adf7c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d9781b27-fccf-4c64-81c7-dfe27bfd918d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2320c610-6744-42de-bd53-5195d91e9b8b",
        "cursor": {
          "ref": "8c55bce4-5daf-41d0-aeea-6b4bba39cffb",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e162dc56-d839-4dba-8fdb-63234c3cb4c3"
        },
        "item": {
          "id": "2320c610-6744-42de-bd53-5195d91e9b8b",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "855b36bb-7b6a-47a0-82bb-481aaba7ae97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c760998f-9951-4a4b-98bb-cf1fd835e3d9",
        "cursor": {
          "ref": "91694df6-68d8-4ec5-9f0e-67f8058b1e35",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "0c491e18-9328-4d83-bb2e-c10be10c4810"
        },
        "item": {
          "id": "c760998f-9951-4a4b-98bb-cf1fd835e3d9",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "8dc8f737-ad78-4976-9029-c52c871461c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11cc091b-c6c1-40a6-b4f7-35a1664a34de",
        "cursor": {
          "ref": "1a4c2215-a0ef-47a6-a683-eebab85b825d",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "59b486e8-9718-4560-82be-150339580534"
        },
        "item": {
          "id": "11cc091b-c6c1-40a6-b4f7-35a1664a34de",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5dfbd4aa-e2a2-4fb5-b78d-3470adf8e51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9bc224-1ec4-40fe-b6e9-1bfb6605e23a",
        "cursor": {
          "ref": "4e2e5549-4fca-481d-a45e-690f4ff7a0e7",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c750aac9-0c1a-4059-a84a-237a268791e8"
        },
        "item": {
          "id": "bf9bc224-1ec4-40fe-b6e9-1bfb6605e23a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "35f68b03-e921-4412-b982-d10e3ec12179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00925881-b289-4252-8c7a-b13e283e8f8c",
        "cursor": {
          "ref": "d6e42c49-e04a-4f46-86af-5320470e43a7",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "eeb67c6a-226c-4c90-a56e-8dd598c6e9f5"
        },
        "item": {
          "id": "00925881-b289-4252-8c7a-b13e283e8f8c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0f89d02e-551c-49a9-b8eb-1a20cb9148a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8bb6c6-46d5-45e1-b39a-10fef9d69449",
        "cursor": {
          "ref": "fc0e2cbb-68a4-4d7f-932f-65eeff31712d",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7e054c1c-67f5-4df7-8440-281d3793a045"
        },
        "item": {
          "id": "5b8bb6c6-46d5-45e1-b39a-10fef9d69449",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0103b357-794d-4ae5-8e1e-bb199e732a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04844c89-27e5-4ff5-9094-6b84ea3f27ad",
        "cursor": {
          "ref": "b5a283fe-89cf-4183-9047-89afb7736bf8",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "70ab0636-14fb-4fd1-aa48-0afe7546a2c8"
        },
        "item": {
          "id": "04844c89-27e5-4ff5-9094-6b84ea3f27ad",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "735f9bf1-96e4-418a-b472-0a3bb9f8a144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc59e45-6a63-4f3c-9322-6da901a77fbd",
        "cursor": {
          "ref": "a03206c4-10cf-4913-bf48-ab432ce7477b",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8be80cf8-65a4-46bb-bf22-c5e09b2a7daa"
        },
        "item": {
          "id": "fbc59e45-6a63-4f3c-9322-6da901a77fbd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1f0f6219-04a3-4a91-98f8-95dc3c7e90aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a2a1563-6628-4b51-80b4-e608927f4630",
        "cursor": {
          "ref": "69dde164-ede1-46ca-97e4-a943c77b8f35",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b0b9945b-8b99-4557-b721-84c3dc2c2023"
        },
        "item": {
          "id": "7a2a1563-6628-4b51-80b4-e608927f4630",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "60f8c187-c67c-4166-a0da-2344f6d15034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddef6487-481b-4f31-aa83-3c603656bcce",
        "cursor": {
          "ref": "b9985dce-cb30-4784-95f5-ac9d5f0fd503",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "80fd0281-d648-4dd8-aa9a-26b59bb2daa1"
        },
        "item": {
          "id": "ddef6487-481b-4f31-aa83-3c603656bcce",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "00efe28b-9196-46c9-b4cf-bd600bc63977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9085b58-efcb-41f0-83f6-2ecaed5f0d19",
        "cursor": {
          "ref": "6d2318b3-4985-4d1c-9d94-6df6986fa133",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4d37be5f-54b8-409d-907a-98ac591d0f82"
        },
        "item": {
          "id": "c9085b58-efcb-41f0-83f6-2ecaed5f0d19",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b766335a-7603-4a61-bcb7-a0fe91942975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90862e87-6790-48b6-8704-a4c79707e838",
        "cursor": {
          "ref": "34a426c9-70cd-45e7-84df-4bea46906980",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e864aa73-f714-4957-9436-6f463fda4168"
        },
        "item": {
          "id": "90862e87-6790-48b6-8704-a4c79707e838",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9b1af353-ab78-4a1b-b834-22314e70b61a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03736c1b-d76d-4575-b548-75990a8221de",
        "cursor": {
          "ref": "69e4bcdc-660c-4b49-9b07-601aa74daed9",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "82d1b2ce-8463-4dac-b6f9-a0631a3404fe"
        },
        "item": {
          "id": "03736c1b-d76d-4575-b548-75990a8221de",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "bfeb79a6-415a-4023-82f8-2990a700ea36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b10502f-b2ee-45cf-8d47-a45bd87d5504",
        "cursor": {
          "ref": "fbe1f1f9-7eb6-4b20-906c-763864ffdd3e",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fce8663d-add8-4218-b3bc-e54b32b0367f"
        },
        "item": {
          "id": "5b10502f-b2ee-45cf-8d47-a45bd87d5504",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d8ac3d4d-ebc4-446b-87e5-603144c2715b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8952dfe9-c831-4253-88b3-510004a8ab84",
        "cursor": {
          "ref": "9a6e6c91-9e7f-465a-bd70-24d0ecaeaf13",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "62de9a6a-7f4d-4e58-aa97-ea6ae882a608"
        },
        "item": {
          "id": "8952dfe9-c831-4253-88b3-510004a8ab84",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1194d28e-757e-48e4-a775-457df82654f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c04bee-56fc-4217-a7b1-7529167e6a3c",
        "cursor": {
          "ref": "6ada2c55-4664-40cd-bc0d-3530e68fb723",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "7e6b6bd1-dda6-4407-8735-11ccf4d6574b"
        },
        "item": {
          "id": "22c04bee-56fc-4217-a7b1-7529167e6a3c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "412949f0-dbd8-4a41-8967-f02b0565a565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a524f94c-ce7d-4f1a-b556-5f43e3a7737a",
        "cursor": {
          "ref": "f9f32969-f23d-4008-a4f7-5e5d2c308c7e",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5a9d05f1-c827-4c9a-b837-81cfcd2f6e21"
        },
        "item": {
          "id": "a524f94c-ce7d-4f1a-b556-5f43e3a7737a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a0865d8e-8361-4233-aeda-01d65057bdd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19e8e52-3520-4967-afce-11c47bc7d25d",
        "cursor": {
          "ref": "34857fb9-e620-438b-9799-237ea75c3583",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e324beb3-24a2-4447-b730-3ffa76825197"
        },
        "item": {
          "id": "c19e8e52-3520-4967-afce-11c47bc7d25d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d040415d-5c94-41e4-8ca5-d9ac43dc5977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fcdbda4-0668-46bd-8b4b-0ab696e458f2",
        "cursor": {
          "ref": "90dc0abf-7332-4adf-82c8-0941b2fe9ffb",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c1898d7f-bff7-4280-a245-387ec1eddd30"
        },
        "item": {
          "id": "3fcdbda4-0668-46bd-8b4b-0ab696e458f2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e008c3b0-7b87-4afd-b8cf-10bce4cae6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78af2b35-1513-41c7-a745-2bf89c9f722b",
        "cursor": {
          "ref": "4bf71d4e-85d7-4bcb-9d72-978f0473ebf0",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "1bea4fdf-79f1-42ea-b1d2-e8b04b95a61d"
        },
        "item": {
          "id": "78af2b35-1513-41c7-a745-2bf89c9f722b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "31f6967d-6edd-4aed-af75-b8c0e003e1fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816b46f6-8fa0-4f6a-95de-33800af8f763",
        "cursor": {
          "ref": "20888d52-e2d9-48ae-9f5b-492b0737f014",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e4641d5a-d657-4550-a378-2e98afe1faf7"
        },
        "item": {
          "id": "816b46f6-8fa0-4f6a-95de-33800af8f763",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "81aa4b9f-c6fa-4419-a710-c5e4fa5b8412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1ac32b-7f98-44ec-9062-4edb8b6aa6ac",
        "cursor": {
          "ref": "5c17ee12-a5ac-457c-90c4-7080bd672038",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a5ece137-25b8-4e6d-a3ce-567f3da9aa71"
        },
        "item": {
          "id": "ce1ac32b-7f98-44ec-9062-4edb8b6aa6ac",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c22f854f-b3c7-47c9-bcf3-de0d6fb07f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81545929-4bd9-4efe-a583-c97356d1d1d7",
        "cursor": {
          "ref": "c426c1f0-4c14-40f2-8e78-3895efab1a62",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ccffb126-f78c-4314-ba3d-d1c26a8df1c4"
        },
        "item": {
          "id": "81545929-4bd9-4efe-a583-c97356d1d1d7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f6ca00ee-c11e-4708-9e0b-af7d02747960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c55ef54-b5d5-4e48-98c0-a719a8164659",
        "cursor": {
          "ref": "c06541ee-f1be-42d7-b0b2-8533b414f7b6",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "6971ca18-58af-4395-919b-56dcb0d0d4d6"
        },
        "item": {
          "id": "5c55ef54-b5d5-4e48-98c0-a719a8164659",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "471c1c9a-b61a-4345-afda-202807f751cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be932ae-9704-416a-a458-ee3e5851aa98",
        "cursor": {
          "ref": "1d32cb5c-cfb7-4cec-a432-5aca0afc1437",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "721bde6e-9391-4d09-9298-01fe6ca804e8"
        },
        "item": {
          "id": "1be932ae-9704-416a-a458-ee3e5851aa98",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "db3e881a-f7a1-40fe-a8e8-e538a8a78980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "852a1eb8-1fb3-442e-976b-096dfa2a10a7",
        "cursor": {
          "ref": "fa0e29a0-6f16-4639-a18e-ff499ae07c85",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cda92e86-c63d-43aa-ad78-10c9c7b66630"
        },
        "item": {
          "id": "852a1eb8-1fb3-442e-976b-096dfa2a10a7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "92145c3a-e7c9-485b-a672-076be9a46d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba4d552a-7ff8-4ca3-8378-9a08eb8cc3be",
        "cursor": {
          "ref": "f4381787-e6aa-467a-a8f6-7f09e4c519a1",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c1f432dc-e1e9-4d8c-bc89-0577cbd6ef13"
        },
        "item": {
          "id": "ba4d552a-7ff8-4ca3-8378-9a08eb8cc3be",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c6615f96-5b74-4f8e-9f85-24d2c957bb38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea80d2c9-cdbd-45d5-9f64-b868b71c1765",
        "cursor": {
          "ref": "cf7c4ea3-1c0b-4f8c-86a6-1822dd970011",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b170851d-72a0-4b55-8afb-94b01b270690"
        },
        "item": {
          "id": "ea80d2c9-cdbd-45d5-9f64-b868b71c1765",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "af1ff489-965e-4e48-82de-55520bc6afdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c82bcc05-c55c-419a-8d7e-12e0ec103183",
        "cursor": {
          "ref": "bfa71a08-2cfc-4795-81b7-4c083be5a340",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4b2c9c98-dbb6-452b-9d29-1f3d26f4e1ab"
        },
        "item": {
          "id": "c82bcc05-c55c-419a-8d7e-12e0ec103183",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "6ebc1157-b22c-4f32-80a3-997275d998ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da21ef5-2061-4f37-89d7-c7c7e0bf4537",
        "cursor": {
          "ref": "87468ccd-06a8-4394-b944-21464ae365e6",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "80baf628-26eb-442a-80fc-d7669d49f14e"
        },
        "item": {
          "id": "3da21ef5-2061-4f37-89d7-c7c7e0bf4537",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2bf57bad-9de8-4b77-9ce4-488618d2fc48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a67f9bc-5dfe-49d5-b25e-15bc7406bb9b",
        "cursor": {
          "ref": "7b7b6fa7-6f27-46cc-8de0-8569b0c8ddf9",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f4072c09-f7c9-4b4d-8a57-55ac828d99da"
        },
        "item": {
          "id": "2a67f9bc-5dfe-49d5-b25e-15bc7406bb9b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "50061f02-909d-4ba9-877a-5023d972756d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e75253c-0a83-4af7-b444-42b944b6c44c",
        "cursor": {
          "ref": "9acddf82-19c0-46f2-8c7a-fd42db2f17cf",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "6b7cfdc2-007c-4784-abab-2a5bea29bd71"
        },
        "item": {
          "id": "0e75253c-0a83-4af7-b444-42b944b6c44c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "2e3ac04a-5c39-4e0c-b64f-aca04f329d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0960753c-21c7-4614-9031-12362b0704fa",
        "cursor": {
          "ref": "c7b6f7c3-b386-4188-84e2-ac19d67208da",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "cc168e03-9a7d-4f5d-9473-1d29d0e9b684"
        },
        "item": {
          "id": "0960753c-21c7-4614-9031-12362b0704fa",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "10551d55-21d1-4eb5-9f3e-d627c7a17cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d510403-cd78-4408-af57-5e40e90fc1fd",
        "cursor": {
          "ref": "f32594ec-226d-4b3f-82c4-447f227ead2b",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "86502d6b-dacc-41c6-a88d-c68e21a0edbe"
        },
        "item": {
          "id": "6d510403-cd78-4408-af57-5e40e90fc1fd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b8df6075-e971-4586-9182-4d581ec11472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b578a306-2156-4e40-9d8b-76b9b09cda09",
        "cursor": {
          "ref": "e7f7b807-9ae9-4e9c-a298-2f5e2cf7e90a",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "bdd0a536-6a2a-432e-ac2c-ecfa9a3b9497"
        },
        "item": {
          "id": "b578a306-2156-4e40-9d8b-76b9b09cda09",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f7420cd9-ac2a-43dc-8e18-763f8d023a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e99b05-57e9-4969-a69f-be7482f5c7cb",
        "cursor": {
          "ref": "02024d24-4041-4923-a400-1d24a1f2b21a",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "7dfe50bd-0abc-4083-87d9-f2d95711523c"
        },
        "item": {
          "id": "d2e99b05-57e9-4969-a69f-be7482f5c7cb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "aecb157e-59c6-4c11-aedc-d694876d947f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d98a2f3e-59de-4621-b562-a38c88c94288",
        "cursor": {
          "ref": "6e6d10a9-27f6-4d4c-b736-762fa9c26a3d",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c740137d-2361-4cf1-8b59-a6fad4fc3f7b"
        },
        "item": {
          "id": "d98a2f3e-59de-4621-b562-a38c88c94288",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0957c896-b16e-4cc7-ade7-95915c7f28bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa6a5619-4269-4181-8dff-ed76f3efca5e",
        "cursor": {
          "ref": "d23eafc8-99f0-481b-92e3-022a7e20bd93",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "5407d462-34fe-4c47-a95b-46e128393340"
        },
        "item": {
          "id": "aa6a5619-4269-4181-8dff-ed76f3efca5e",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "cc4ed3c1-91c8-43fa-9a20-d85becd270e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c66c4d-d43b-428b-a012-bb5aa0b7d664",
        "cursor": {
          "ref": "e1142752-f71f-4135-af0c-d536e3a1c2af",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "ffb279d5-2cc1-4973-bf13-ad6d9c32fc3e"
        },
        "item": {
          "id": "b1c66c4d-d43b-428b-a012-bb5aa0b7d664",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2b073e0b-db12-41fc-bb62-88c2b3fc7ba2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2b5ca2e-462c-46e3-a27c-831093d75699",
        "cursor": {
          "ref": "502d8af0-f933-4388-8d0f-91f83299bb69",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "dd16bf6c-bfc4-4b32-9c76-818878ff9a09"
        },
        "item": {
          "id": "b2b5ca2e-462c-46e3-a27c-831093d75699",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "3163efa0-4c3d-4e6c-a8b7-a1013d27216c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58606407-2ec5-45c3-b7d6-2222eca01ecf",
        "cursor": {
          "ref": "5782e96a-ccbe-472d-ae5a-df53fa566d96",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "39830721-8dd6-4ea7-9891-00c13e317bc3"
        },
        "item": {
          "id": "58606407-2ec5-45c3-b7d6-2222eca01ecf",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f93e086a-6f7d-4c74-91b9-7ec9afde61fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7e331e-434c-4e1d-b3a6-845b30c13109",
        "cursor": {
          "ref": "607e5a1c-4519-44d7-b1cf-a56655af61e2",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "851cdb08-b0c8-42ce-b51a-f186f90a9fe4"
        },
        "item": {
          "id": "0b7e331e-434c-4e1d-b3a6-845b30c13109",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f8abfb72-f8c1-48d9-9aeb-2449cc28fba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82aa569c-8290-4749-a4ce-1900340c9657",
        "cursor": {
          "ref": "8e8c0a9f-73a6-4b5e-bdd2-d08b680d4ccd",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "bdebe4b2-d9c7-43e0-aa87-e08203fbc2d5"
        },
        "item": {
          "id": "82aa569c-8290-4749-a4ce-1900340c9657",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "dac330f3-043d-4271-a56d-457d56210b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e4188e9-920e-46bc-8ad0-0d9afd0c098d",
        "cursor": {
          "ref": "1e731222-ea20-4c5f-93d3-93aea2206a62",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "b1e28c9d-f1c4-46f6-9106-c2f6194f6bb9"
        },
        "item": {
          "id": "9e4188e9-920e-46bc-8ad0-0d9afd0c098d",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f4d83cf9-7a1f-4d73-8b69-194181e45e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91ed196d-d09e-4020-bd39-e9e080c5aeff",
        "cursor": {
          "ref": "efc3c44f-a057-4b82-9f5a-61a4d8c45f75",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "9dc70eac-c6d3-491a-ace3-c42b4cad2de3"
        },
        "item": {
          "id": "91ed196d-d09e-4020-bd39-e9e080c5aeff",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7c1b1607-c27d-49a0-b267-dbebd67fd85b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2986d00f-51c7-456a-8d5a-41618d3ddb40",
        "cursor": {
          "ref": "0c775121-2553-4d01-8c8f-a6269983888b",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ebc22389-52a3-4278-8925-fba455c7f246"
        },
        "item": {
          "id": "2986d00f-51c7-456a-8d5a-41618d3ddb40",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "430ccd5b-07d7-4dcd-b438-7c08abcfe6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dba4504f-ad00-480e-b79b-bf248f8dc6f0",
        "cursor": {
          "ref": "81d02d0d-1500-44da-927c-062cb0a4b531",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "eee34d40-7e23-4e38-b5bc-92ff029db471"
        },
        "item": {
          "id": "dba4504f-ad00-480e-b79b-bf248f8dc6f0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b3f4d666-227c-437f-a63e-3e3bc580b9b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6e91b7-f8cf-4653-8bc5-ddf7a5136858",
        "cursor": {
          "ref": "d3e30f4a-1305-42e3-82c2-5fabbee4aed3",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1daf7761-f413-41b6-af79-6890462371c2"
        },
        "item": {
          "id": "6a6e91b7-f8cf-4653-8bc5-ddf7a5136858",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e7d9e459-cf09-44f4-9ace-ad84ad13b35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f6a557-4303-4818-9c63-6aae4e0bbe29",
        "cursor": {
          "ref": "88b56ea1-eac4-49e5-a9bc-c93f5eab4964",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "14e3d485-49f9-47a1-b69c-27c227370757"
        },
        "item": {
          "id": "13f6a557-4303-4818-9c63-6aae4e0bbe29",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "62ccca18-a7c0-4566-8086-d9739633c2b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09ed68e5-04d3-4388-a349-b18e4aad2105",
        "cursor": {
          "ref": "68b0f8ff-cf6d-45cb-ae62-e519e4e5d738",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "bcaaa0dd-9be7-45c2-96c6-b533e6f265a5"
        },
        "item": {
          "id": "09ed68e5-04d3-4388-a349-b18e4aad2105",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7ed3867c-2469-4ca7-95cf-04b922bcc457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc523f1-0495-44b4-8378-28d5f987f23f",
        "cursor": {
          "ref": "50866e03-8cfd-4ed2-9441-a50a5b6c9b30",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "b2b7f566-8db8-4aa0-90e3-96701e4a5b65"
        },
        "item": {
          "id": "7fc523f1-0495-44b4-8378-28d5f987f23f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "5ab5131f-93d8-4bfe-865b-905f00ec0baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd3821d-5a57-4ff0-bdaa-c008e7f7b5a5",
        "cursor": {
          "ref": "4d72da3f-cdf9-45ba-8d14-8aa823779c71",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "600bdef1-5d4d-4de0-b6b1-5449514f15f7"
        },
        "item": {
          "id": "0cd3821d-5a57-4ff0-bdaa-c008e7f7b5a5",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "fbcea0e6-819d-4113-98ee-53476691636f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a213068d-e0d4-498f-8135-c85caa56c77a",
        "cursor": {
          "ref": "401066ae-c455-48ec-bdb5-c73424f8c7bf",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8185bc23-23e0-474b-968b-8f6c2958e961"
        },
        "item": {
          "id": "a213068d-e0d4-498f-8135-c85caa56c77a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a4743025-8c19-417a-ba6a-b8a344f25741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9a109c-ff7c-4089-bb36-e686ca1957e6",
        "cursor": {
          "ref": "1f3f43b0-0c56-446c-858f-2a46f077f2c7",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "11386953-ed84-4249-97fb-1d69e157fb17"
        },
        "item": {
          "id": "3f9a109c-ff7c-4089-bb36-e686ca1957e6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9e4b7af9-a518-48ea-82cb-e8507fcf0b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fc3b4b-1641-4c8c-8c97-0e3dc20ebcee",
        "cursor": {
          "ref": "127d42ff-8cd2-4e15-b45f-f5e93023518f",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "3170dd46-097c-4733-a8de-f408dc830d73"
        },
        "item": {
          "id": "c9fc3b4b-1641-4c8c-8c97-0e3dc20ebcee",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "390f3174-3ca6-4f8d-a171-e17fb7766767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a45ec7-577c-4a5f-a54c-138196273509",
        "cursor": {
          "ref": "b0b04a7d-20e6-45bc-87b4-e53e6d86692e",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "07c5ff8f-217f-42d9-97b8-5733b2ada8a2"
        },
        "item": {
          "id": "b4a45ec7-577c-4a5f-a54c-138196273509",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8676c3c6-8657-46c9-8e21-a31f2df5a320",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03782d15-4571-40f3-a10b-7b698ea2b815",
        "cursor": {
          "ref": "2a33af32-f607-42e3-9ce5-ac9e9c9c774d",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ba74663d-bf30-40a8-a3ff-d6d92f5b05bd"
        },
        "item": {
          "id": "03782d15-4571-40f3-a10b-7b698ea2b815",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "a43382bf-a0ea-473f-8277-7d24b8554c1e",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b5c8fc-e62d-4df4-944f-7ae1f82404dd",
        "cursor": {
          "ref": "c9789536-e54c-464f-ae62-38203e6119be",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "b656c1fa-d4e1-4fe0-a98f-cc5059be6cb0"
        },
        "item": {
          "id": "01b5c8fc-e62d-4df4-944f-7ae1f82404dd",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f3b9eaa1-840e-4067-b09d-7b8ba18ce3dc",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "37886d51-6319-4a28-be0b-37069c104c7f",
        "cursor": {
          "ref": "cda93845-6171-4024-8c82-de2bc6c930cb",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b42080f4-375f-49af-b99e-b6832339b5c9"
        },
        "item": {
          "id": "37886d51-6319-4a28-be0b-37069c104c7f",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "8fcf1e67-8a65-4469-8919-c4168da35b4c",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb39e072-2d0a-48ea-b65f-87d82aaca161",
        "cursor": {
          "ref": "7419e28c-0e66-4e99-92c7-5297555dc8a5",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3413c257-8377-4a26-9c05-9a2e5585490a"
        },
        "item": {
          "id": "eb39e072-2d0a-48ea-b65f-87d82aaca161",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "27eb5545-bc6d-4b22-8cec-8145fc59bd99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb39e072-2d0a-48ea-b65f-87d82aaca161",
        "cursor": {
          "ref": "7419e28c-0e66-4e99-92c7-5297555dc8a5",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3413c257-8377-4a26-9c05-9a2e5585490a"
        },
        "item": {
          "id": "eb39e072-2d0a-48ea-b65f-87d82aaca161",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "27eb5545-bc6d-4b22-8cec-8145fc59bd99",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77042f7c-3f59-46fb-a211-f2c983461542",
        "cursor": {
          "ref": "2928b72a-f2ea-4271-a8fa-0a1166ece59d",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "9e01be3e-291a-4baf-86e3-522c6d80942b"
        },
        "item": {
          "id": "77042f7c-3f59-46fb-a211-f2c983461542",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "42785e2c-2544-472b-98d6-ad36286e7eef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161af8b3-3244-4bb0-bd3c-3023d600b31f",
        "cursor": {
          "ref": "10b5316b-a524-4633-b5b4-c621039e92f2",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "66e05f63-a186-49e4-8b5b-d2063af496d8"
        },
        "item": {
          "id": "161af8b3-3244-4bb0-bd3c-3023d600b31f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "fedd025f-9e62-4d61-9e80-2496d21c3e14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}