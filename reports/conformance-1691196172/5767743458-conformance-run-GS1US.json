{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "dc42ff10-4583-4724-acc6-db51ad92138c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e0cb683b-75aa-498a-88db-b9c4f1245ee0",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ae805359-d3eb-403b-8467-66501fed0002",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a168dbc4-8b24-4c0e-a579-8eebec071801"
                }
              }
            ]
          },
          {
            "id": "9a9d824f-9bda-475d-badc-4d398e6b75f1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ea365b1b-f8cc-46fa-b0f9-c282f395540b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "96a2a48a-6343-4522-841e-e8122cea5066"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0780cce0-ed63-400d-ae1d-32a23ac5e8c3",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e52bb6e6-2f63-4280-9454-8b2e180f2d88",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6c1df841-e703-437c-8bdc-b9f84cdc8300",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95faed93-27df-4a3c-828f-f9203d03095f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9c8f1b81-ad19-43fa-aa40-091eea608840"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "887ce5b5-9589-45f5-a671-4403a27e67ce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ed6cda5-d952-49d9-8eb9-def50203eff1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "30c89a26-b406-4335-bce5-ce9e239fe57d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5cbe4865-f035-4b18-8bb5-c03af06c5321"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e5919ea8-2aaf-4541-8bbc-b8e8729ce955",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "458cf585-ed16-4536-b0fe-d485e3b62cc6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6e2132ec-d8ad-4cf0-a50b-089edfafe7d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71bfc8d7-b078-4dd1-ab00-85b307968141"
            }
          }
        ]
      },
      {
        "id": "0ade801c-71e1-444c-8df2-798f43421b11",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "79c76fe5-8309-4a2e-be8a-1b5e8cc5773a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1b035fda-ab3b-420f-b56c-fdcc971e913b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0cd9aacd-929d-404d-862e-b577edd0dbb9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d06daee-5cce-491c-8eae-04c0666a950f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "29acf180-be9d-4e6b-b39f-551679271f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b32fe9-e1a3-4f2c-b656-c460df7b68fb",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfd4595-8ba0-4aa9-bc40-4c08423a5790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5ebec95-5c24-4228-a43a-d9871752f346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e57439-4870-4ef7-8a97-1e84da7125a7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac51de9a-2cdf-480d-a85e-820e030ed602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ead7e5b2-0855-40aa-bc4c-db1847b2d101"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a461437-3161-4f26-8599-52049efb568b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "99ac8d49-b319-4619-a311-511703a381cd",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5fdac36-48b0-4fdb-83fe-8b1af6ba4dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "15fbab08-7e0a-4b32-983b-64fb301b4dc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea1a254-b379-43ee-bc7c-0ac320b1a0c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67d4bef-6bc4-44f7-ac1a-b08b585430a8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "312c32c7-8f5a-45e9-afc8-1280dd5d716e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e12bc570-4e3d-45fe-bd07-5a476dd44cfe",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da3a0ee5-707d-4f3a-a4fb-ae03df789034",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bfff4783-4e17-41d5-b888-86c6078c0f2c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "da5e1733-3ea7-4c51-b695-64ceb0107943",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "d219c33b-53f1-415b-94d7-f9807446f978"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38b30605-5de0-4fc1-9a5c-5f197895679e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97f17ad0-998f-4f79-9673-d170c0781463"
            }
          }
        ]
      },
      {
        "id": "1efa6929-8225-4a58-b06c-beee3aa027a6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b0db7029-8079-499e-a487-6e2f55181804",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78739cd1-6861-4a0a-8a80-4bd09cf96033",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ed031df0-5791-41b0-9b94-3aac101f1977",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f6a234-653d-4a17-adb1-a0e2ae2017e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1744f5-0b6a-46b3-98e4-5d232dfbebf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03397601-a052-45e3-8502-976ed0c07cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f9834a0-5e1a-42e6-a376-67e2bc8fb597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba544dea-7762-4671-acc5-51dfac43d880",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56324358-05f6-4a6a-a7ba-394819dbc3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caa15444-a2a0-4994-9299-e3b7063bd733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "647cf5be-bae2-4478-a419-657ebd377798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "711952ee-19f2-48a4-b1c8-4fd450b2f38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f2dc5b2-b293-4e17-9919-878a5111fc49",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "605f221f-ee79-4af6-9978-14c0a231b19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a589e1-9e1d-4171-81b1-e1295527f2a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ae3d189-20d7-46b9-bdfe-40bfd579c6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f823e091-0414-46ad-9367-f2047fe5f5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98f0464-5757-4484-8ef1-1ea1cd3628d4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b22cef3-77c2-4a3f-98a9-f33d4822873f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82fb5f43-644e-40f4-a2da-d24f39be7e54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c603c95-3f2d-4efc-87d1-ea33e923d6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dfd2e295-0422-4acb-a8db-79271876922e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f632ea-25e9-40b3-aff5-92aca4d3006f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be66e4fc-6b12-4355-804c-8b2bbd22e4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07b63bbc-9b79-45f7-98a2-d4f2ebe6470c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9abe871-21da-4068-9feb-cdf9182f5ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fcc6fd03-bdad-4102-816e-3987a3bd8d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316a0ea6-acf9-4742-9b2d-9c1fc8d5b428",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58713318-1ba0-4432-a5b4-e618f0768685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dab760d-934d-4f88-acf1-3ca99da86893"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8cad714-06fc-4da2-ad17-d78fe4d250fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b83308a-de64-44c2-97ab-e68da68b3cd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0817de29-6786-43dd-b4f0-d3de2c5dd642",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59237b59-fe86-4c10-bc7d-12bd9bdf8edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d442344e-a482-4663-8168-c45049ab3906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb559d72-c064-4e3b-a597-86f9daf54fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abf7758a-6bce-41d1-92e3-8bc38aad6607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65137ae5-eb6d-4347-bf8c-a8558d257388",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "accb8314-d56d-4eaa-935c-fbb40f8ef9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca1e130-0389-4a35-a96a-98a1721938f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e827107-3d07-483d-93bf-cbebdbabeefe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2cdde6a-259c-4d38-a11d-db8b5b7419f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371a7c2c-85d9-4391-9eb1-06c8b7ab5e24",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6a01432-f41c-44bd-ab1e-f371bb092c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d3a607-e8e7-42cd-8d33-06ecb238f351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e75427e-e710-449c-809c-7d7d99d89b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2146cd3-295b-450b-8dac-70a047072854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41bccc0-5376-4e71-b5c5-4cc3b5182da5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "070fdb95-c109-4357-b9dc-517001e5a713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69b8b6a-36b5-4086-9103-3bb07feb11aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed55caec-4d7a-41b5-bb4e-a0565d20611d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c828b8d-2935-41a3-b60b-cc70978a9a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7fd70a6-6606-42b7-b213-35becfac403a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28285d6f-15bd-4c1e-a7f4-0811d64be2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6debdf8c-907d-425e-82d9-488fc658a681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c32a02-3853-4dbc-8006-b14c758936b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fc85094-2540-4a2e-90d6-95a469a1b21b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad2efb8-0e31-47f3-b3c8-0ba178c1ac6d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f586d79-552f-452d-8c09-a5a6bbf6c100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ceef37b-6622-4268-89af-28d9b58d2aaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7297dd7d-bfc3-48b7-b31d-c52dff5088a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bee6e173-8dc0-4c4d-bb20-a5df96962815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cc0424-61ff-4699-b5ce-7f4371427d7d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4bd255-60a4-4a13-a2ab-b2dfc0ced0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b23ddce-66ae-4f61-9130-ca14ff82aa33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0b44d1-2996-459e-8a4f-3a9f7fa08503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b532e467-e475-4f56-9cbf-f503db5c49b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaaa3cf2-1609-4fbe-8f40-a3dac8f56f67",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fc9429-b1ec-453c-a738-e8c397f030fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f72f03-d49c-43bb-aba7-5d4ed08508cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d8fcd1-a9f8-4d9c-ba04-129e21a05735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "641f0e87-ca50-4a4e-8f39-f71eb9286f01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7ee0c79-0c42-4aa2-9c49-4d3a8c6b830d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcd236d-e4b8-4c6b-8e4e-c7e467035a67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae80054-f58f-42ef-8a0b-561859218fd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441f19e2-439a-454f-b951-bc2103f99107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86c05c84-8885-4815-bafb-99568a7acee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab067d7-d942-4524-9537-05429f2ed486",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd99fee-b84f-42e0-bc2b-36f45ae1ac15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3860d619-cf4e-4cf2-b19e-2899fdc79450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f84d3d1-f02e-481b-a6dc-1f472a10f693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed941242-7e42-49b2-94ea-371420dcc273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66a747a0-8c60-44fb-9eba-6e1249cc4414",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e8d3dbc-bcb8-45e0-b550-4fe87c21752f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75937287-b9c7-4e38-88ab-405ac2228ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907544ce-11b5-437c-a417-20ff70b63594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54f05a58-d72f-4f79-bbf6-65915769197c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb7420a-18a6-4b82-b125-4935af5e1431",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04659876-29b9-463b-9ca1-b814063e04da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6efd26f-0017-4a5b-96eb-698841bed280"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad2dc9b-8303-4dcc-860a-6d17fc678f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "af065a0a-c511-49ac-a12d-36d029408aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372f9adc-5ff0-44c2-9df6-f01181b3fe2a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce796e1-fa27-4eea-bedf-bed82b9afb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62fee744-c32e-45e7-8931-2b6b02c51e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2063c521-9147-45c9-ab7b-22c815cb54d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d36c24d3-69a0-4a46-a086-fc129513ccf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "060f56ed-6481-403f-8569-533f2d2ef9ce",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2750c0b8-b326-4c93-a570-cf0c2cf38bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9385d918-62cc-407a-88e8-7cf158bb7380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd625972-3ec6-4dce-b569-e2891a94de9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a3eb9ae-7dc6-4ac7-986f-32e3454f37df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad467ce-19c7-4154-b376-1fa58bc3e98e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc6998e-21ee-41c4-bbd6-089280314f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5362b081-775b-4ea9-9565-09ad864c0c7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd880f7c-f310-41a3-8b5a-38d0ccfe64ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d137005-98de-4180-ad50-740e26a186a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10e8dc3-c864-4af7-a29a-3ded02139ecf",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd3d8c3-4429-40bd-a895-35d4509fb923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c967796-11d6-44a1-a8fc-5a9015e69231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598cf218-455b-4bc5-b159-e50699ad23e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f394a2ab-833e-4e7d-b8ba-9ea682165ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b61092b-0d0a-4781-bf9b-62a73514a171",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675b22d3-b7d1-4015-b569-2b8b1923fc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "135cb8c8-c2f5-4884-a99c-e39e43bb131d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42384f7-cf6b-4183-9822-9c2e819273c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8876f239-0285-4723-86a3-f9c64708d316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d8ed05-d851-4651-baed-0e347db9402c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b904b41a-0e9c-4769-9c72-14b59a509683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee0e6ea-55fe-44be-b2d3-120aa2321480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb90578f-82ba-4394-b6fc-2da9ee4b85ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "80355e89-03ac-436e-a01b-fe593773d98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4d4bf8-4039-4543-b45c-fee382a3e189",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec88ffb-13e5-417f-9ee5-8c0c1c8c6aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bd3c5cd-4013-4e67-b164-6ca37d976e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac592585-1d3b-4497-bf1c-b2ef1d5a22b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "519b9303-2ca9-4900-8d1c-a88003685fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0531b64-5fa8-4b32-96e5-714edce3f04e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbe76f9-ba2f-41df-8274-5c8e819d5dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8c3e6b-6ff9-446f-a819-341ad51ed790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61900e4-28f5-4770-9e47-842a745e07c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "00fcccaa-9690-47cc-ad4a-ee7902823cfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c84936-3f62-4fa3-89f1-2324b966b322",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78500b9-03a2-4b3f-8869-c39fbb07ce4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e0a9e5-d803-48f7-98eb-b20cabb18476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e5fe6d-ace4-4315-ac5a-a91afa8f37cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b78950-162c-4e84-b342-5e9a23b45d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff173251-1a44-4cb5-8ef2-a3c58988f12b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58e63c2d-ce8f-4885-be87-1be032d45877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f1cf3db-9491-4c9d-9558-6d1061d710f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "816ac4e0-2092-469d-821e-dd04941fa556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a0868bc-c81d-4300-a49a-659ce5d935d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628497cf-5b70-4e37-87d9-f7580a8eb669",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1d796fa-6b58-4dc2-ba30-9956d0cefe6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a86ba17-1a57-4943-8e13-19127d5167fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc43ae62-6b05-471b-af12-f0e0c05ee224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab39cb47-f627-4f8c-b168-66989c917b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ee514e-c7e1-4343-a22a-43a267336218",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c15ac7f-0294-4c79-9f29-cc60c48da1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b08421-9682-4d0d-8782-180304c87151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b01b9a3a-8eb3-40c4-8890-c9db14542584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f597d5e-8a6a-423e-9e60-730f97cd67c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c0b4011-07cf-4a71-aa38-6b95f6fa3c62",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb6a7a9d-b5b3-45e2-a10f-6336f8e4f3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ffe088-9e24-4d2b-bf87-0c6f8aed4dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d26161-87e3-475d-9057-3bc6b942552a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "78db8f88-95ec-4a0b-b098-6ebe0e61e107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5515335b-c1bb-4814-ae06-e58f34377baa",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3a3aaf4-9a90-4393-b987-9e42818987c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3f95b3d-dc82-45a4-aacd-a3392d3924b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5d726a-432b-4a20-a805-9ec8d1cf6acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d5fedc2-e10d-4ce9-8137-853819a2f935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8f47c1-f6c0-4d13-a993-57a1a3a56b78",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "696c0f9c-967e-4ca2-af80-9390a2039333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b02689be-f579-4c4b-b771-e80229dd3cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "112c2565-b094-4324-a54a-0d5fa04530b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9be70d1-1783-4098-b669-abba935b4d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207e2171-fd13-498e-aa4b-ed7a0cce862f",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ba230d-89c0-4f07-b5d3-faf73decac8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91f82291-58d9-406e-93d4-e4fbe42e71b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9a2933-6526-4378-aaa6-1c6651f28ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed37c86-5161-4b94-9b16-a4779b1073af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99d86f7-3c6a-498e-968a-84c9d0e60702",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e50c6b0-6a39-4d74-9e99-7347544b7c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ae3115-323b-4759-81c3-23bcf968d109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae16e68f-b865-4130-be55-a1ff66da7727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "730f0fc5-b2f6-453d-b64b-f5078e93d1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c33982c-1808-49f2-a7ba-c9d7e9af2c57",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa527193-89c4-4c18-b94d-068df3e7f028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "776cfab0-8b5e-4555-9681-4f86cf5fa7f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb029c6b-aa8e-4a75-8328-555a033948e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "54d06dd9-c3fe-4f00-9e41-caa0b5c00e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30679664-a21c-4a07-83dc-dbdc0bfade88",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79340678-ffe7-49fb-83ad-af36c732c570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6520a74-e488-4ba3-aead-61b0b5b78020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c5ceef-394b-4c6a-8f4d-1a57251f4c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c3a147-23ac-49c8-ac74-1bd1adc4a5c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "931fcecc-55a8-4fee-97bc-00651d3e9cec",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c94230b7-74b0-4ad8-9a93-e04c31d660ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e317ed6-2768-4d13-a195-0f6dafcbef7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adde6b26-3655-45ef-a428-a55e7c5e05a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "32d44302-597d-4f38-97f1-44fadf8530a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffd14b2-e0a9-4cd9-86f0-624d4bb687fa",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bf491c-0ea9-4043-987d-82bf8c68d784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2acabe-6f25-49ea-9f40-7f9320a09e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "212a513b-6384-403d-b23e-a297b71170b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "26ef1abf-6644-4b3c-b20c-c2866a977de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa560f24-ecfc-43f9-99c9-1c4e1f01bd77",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a361bfc2-8e21-48d4-a3a5-2d123d0f7af9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e85225d-dae7-4fff-b98c-d345c7ac7ad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adb150d-c57b-4414-a7cd-694a2a4ba739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9db3a2e-c87b-41a9-896f-120083a7756a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6f8332-fe54-4ac9-940d-bc0b9eafa080",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcdd42b-ed81-4ac1-9100-dd6ca44d222d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd9c04e1-9b09-4989-afd5-b67996e79830"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e853193a-a54e-4ad7-978b-463c36be46dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "94bf2e4c-d49a-401b-ae69-6394bcd619bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e764caf0-4902-4cf8-b9b1-d7f0c311d4f8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f45e71c-9fdf-447a-b066-90c277f82be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec24ae3-8568-44f6-ae1c-b82e16241f00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21986606-f948-47ec-8d4a-d366f839afce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a4731a07-dc07-443b-9915-defcd3d2a720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81152c1f-25fd-4a29-99ad-09e641ffe2c6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcbfcf9-4971-418c-90bf-7096bb827573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "849809db-e4f4-40fa-964d-569a2461217b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125dba11-31d3-416b-b1e6-da6b61ca903f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "28dd8bcb-f359-4e97-9f02-7393b6b123a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5d6dc90-4df8-416c-a7c6-632575d48018",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58cbf476-0294-4fe4-b5e1-5df0c0c188e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e895c1b-25b2-4bf4-bc37-f06a8b49e309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4acbf4-b708-4a3c-93a9-b3b9bdb0a3dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "75376bf5-2247-44af-933e-ffeffb6f081c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8584f3f2-1fe1-4abf-ac9f-b9df42b5a9c3",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8403a8-f935-4dcf-b83e-015c7c4cbd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4420fdee-8e0b-4e89-af9c-db6fdf781894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517ebf30-8b99-4059-8924-c6057f4feb61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb2dc200-8008-4cf0-bf44-72170f306a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b94df4-fc32-466c-9b55-d2d6fcb25820",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620dcf69-cb99-4cb3-b1c2-0432e261d7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204a5616-339e-46a3-9765-7d144042c88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb199f7-acb8-4d8f-baf3-2a9708e53274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b67bb356-8706-4492-b874-02bc38214286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce149e59-ff10-4618-b3c1-d19e54d1eb64",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20659b25-2706-4a57-bbad-b5fddb4909b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3146eb92-466b-478b-bca2-a2d4da2cd757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85bf0da5-efc7-4bf0-913f-282ae6106854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b782c97-33ef-474e-adf1-c11fc885702b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce18e110-1c11-41aa-a47a-0af1931b1cb2",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27dc2830-4ce8-413c-9487-239a34e8de9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c5154f2-d2cd-4889-b6b7-8d1f176af4a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f281bd26-cc2d-42cf-86bd-f719c0e83253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d769799d-ba83-4667-aa2c-9a74f387eaec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f059ca6-7e79-4254-935f-8f2ffe113459",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3360c705-c253-44cc-95fe-9357337ec9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1805c2bb-99e3-4583-a4b9-a4dc2b1aad3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36db5712-45c3-4ec7-81a1-a2ecb547c3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb99dba-c7a3-4a41-a60e-2976d66b58e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40104391-baa5-4d4d-83be-0a3f65168c0e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a55ae4-6590-4591-8611-1fc761325444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5e2d47a-75da-4c08-bb1a-4ffcdc9ee6e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3600cde6-0f25-406b-811c-7be2cde7e2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af2ce5d9-7912-4227-8b58-e1b9de02030f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0909013-0edb-40be-980f-ed5d64ee24ca",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a943eb34-cdc6-4460-afdd-682116565621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bb1252e-3700-44e0-91f7-ff32abadfbb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48691ca-5fd3-4593-832e-4d7997b18a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b857117-1898-43a5-b0ce-b3feea05f80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7069bba-8732-44ce-be32-ca87c7dd8d07",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66e5dc7-28de-4328-bdc2-351cda8f275b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81630ccf-5a49-46dc-9e6c-50a7d33f6c8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2ff7eb-0051-4c39-8308-102821481766",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b86000-e2e3-4d2f-896c-5635657f957a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48116035-64af-4447-8044-c54f1776fc1f",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf56ff8c-af53-497f-8752-930c7901b4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086dcc2e-e188-4733-850a-b9fb62dbd57d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4cc9d1-d2f5-4fc8-b82f-f57c71fd7aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "15787168-7570-470e-98b7-d0cbbcf5eaf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0390448-0226-47c4-a262-39a6cb7b9104",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8cb931-d135-4e4b-a667-dc3d1e2376d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b997783-3ce3-4e34-9eb5-448c898e7ea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6241bf97-6b65-4d3c-acf0-ac90c4e13402",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "985c4f05-0c8c-47ab-9dbf-986554ebb590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04984a89-58ad-42bd-92f4-e2d7ec5b4653",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f98f80-b811-4126-b825-8ce35883a35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac10d644-ccde-410f-9678-d3e26ebfb42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90b006c-17ba-4fed-a5d4-19ad10fa72fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3737b3d3-2b66-4659-99d8-c35f0ee96eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df6ca82-8d7c-4f5f-868d-8d916b5b161c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0160ee09-d8e5-4818-bf54-0571eb025da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcbcf833-eb4c-4818-8f74-4984e8e2fa93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2e1cd98-31f1-488c-92b3-095ff07908ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "1e63c993-c310-4396-9a27-c25df6359871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d06616e-59af-4ace-acec-4ad5e49b5ce3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952741a9-5c19-426a-bf71-fbf8bf6ab8cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29dabdde-4db1-416d-a5cb-90d3910f0c42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5b524b-4c44-4f86-aa57-95d728a7d7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "00276fc0-ccb7-41be-ad94-f173e9a8de09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb02debc-ef06-4af3-9149-714c928cf75e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "376b5e2d-f229-47c0-9f21-7a275281166f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999274cd-cfb5-48d6-9c0e-f4c6b9231c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14924ec6-d603-4048-845e-13453bd647b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "248dc38f-f361-446c-9127-f7f408e085c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5752f4eb-9369-44b5-b3d5-399f1f9ea7de",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea9d871-98fa-47aa-9d69-16f163d5c8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a206384-38f5-4a3e-a80e-3e662dad935f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c053c17c-6f04-499f-9782-5d203981cb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a80e69-805d-495e-9cbc-8742107e24ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381d92f9-3b36-44d2-9a85-39db5acb255d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "244601a6-c3b2-4718-9581-3a3af6b86660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61048e20-3a4b-462c-8f6e-bd00fc788be6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89f47f22-7590-48ab-a037-2b1b7e4aae97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "55afb017-a62b-477b-bef9-e92f1e0b5578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5fa2a2-d05c-43e0-b0bf-bfac06e9567f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ee66da-a4db-4eaf-86df-1f8a902652aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32402cd-db11-4c6e-b159-38d4ff4e90db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00a3e73b-90ba-4e89-bce2-e0950152b126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c06d96b-ba5f-4e64-bc65-72e1609d2aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0268cd6d-7df0-4f00-af64-d2fa0cd19f51",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d97999-49c6-4f91-b13f-ea310a9749e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076fb835-cba9-4f7a-a081-be0d4b244a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e90a176-9fd6-4e12-a507-aa740dddaf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e318164-1358-4910-932e-133aa848f9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3686ba59-89da-4eeb-a430-3b88f0c64a7a",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312bf6ba-b98f-4070-aa59-722f1709c0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17e08236-9489-419f-a4bd-b8e354cb38ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aca76aca-b825-4fff-a2ed-73157e4718b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d158e54-912f-4331-bd9c-e4859a900e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "108bd5de-6e6b-40ba-b2a3-80cff7807d5a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8aab565-3250-46b3-b056-9ed632717fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74a40bca-c773-4d86-ad57-98c814dcc9f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df6e0f9-fbbb-43fb-9eea-13e72ba30299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfbb06d2-5c67-409a-99e8-445094387211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a192a63-ed9f-45a2-b6df-605f48484bbf",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3630277f-bd76-49ad-8b79-cc58eb00715a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ea09195-e7b6-42d1-9688-f0cbb2e75c81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef4e9ee-b1a4-47e7-9340-3466c51c6c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a082a917-4d49-4511-836f-966d4b7e1f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b02597-f3da-4299-bc5d-9f2a4d09623c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04ee980-eda1-4233-acfa-130b7ef43877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14cca5a-9259-4b3a-b806-de33133b238a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f494c37f-f1ae-427a-986d-225024581680",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae0819db-20cc-488b-ac8f-5da5d4bca467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad7df9d-af1a-4007-9614-022c2637eedb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fea6325-46ea-4f5b-9f04-d86db3bf8739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc61b54-0f7d-4edf-8b24-d3840bd38561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa24281-f1ba-471a-b248-6379c64b8a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e09ca5ca-0100-4b44-9fe8-320a9e230e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99e1c60-f659-436b-b809-2ec5cea797c4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d905aa-37a1-4ade-9853-f0f6977eca87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "318660fe-a7d5-4b99-aef2-a099e7753f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f16b9c-d670-4cf9-b3de-f63fd2245e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c05fbba-a5f4-4b90-b1bd-837de49a8019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57525013-77cc-4c91-bc19-fbcf4bce8e9f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66178517-ac02-4cc8-8857-c380bbfb43bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d9a9a5b-32ca-4f6f-abdc-27edb6064ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6021356f-d694-41c3-b5ee-d090ed1c77bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "38a38468-cf2b-414a-a9d8-ae2e9f58c33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c5f2f8-14a2-428f-b976-e94cf5a6d7cc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e6261e3-bac2-49a4-ae18-20c450a7544e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60c3d599-f9df-4fb3-b164-045a01644497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f6adda7-888f-4437-862a-7026aeb6be5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "479cec06-d353-4775-be17-9a9ee9c57644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2940a9b-0fff-423e-b9b7-9680d699ae77",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49e501e-c2ed-43aa-8a37-cef673a84f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a1650d-57a0-4aec-888c-24a9d1171c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baeccff5-977f-4e48-a5f3-d38839e791b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55ad6437-9281-4a3f-9d98-475a421c6c2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ccaa3b7-9ad1-48e0-81cc-33ec3cf7aa0e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a75067-d917-458c-9978-1fe360b4da02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "800b4344-524f-4859-ab5f-b8c47ab2c2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eab48719-1b48-4707-8a1b-f37429628e72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1133b972-9207-4e95-892c-576315f44860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6698b66b-8ca0-4c15-993f-67f1373a1bd0",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b31361-496d-4755-bc8a-3ebb3ed72dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cce4d325-caac-4a9c-b385-c6ff7a866abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3abafb25-123f-4353-99b3-6883c668c1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17b2b445-875d-4c93-b8f7-a7e13bdee295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d05bd17-c03e-47f4-a962-54aca51fdf9f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dd778c-d699-411c-819b-7fafa7721bcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1dad93f-7f32-4b78-b526-c657cd47ce62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c26885-f859-46e2-9e9e-ffb10e5f1446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "23220bed-d9a5-4f02-acce-149af85090eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8dca27e-8854-4da9-88c9-b42a7961140b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6514be44-3a65-4f50-a52a-ce8bfa3d4ea4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcff42e8-0413-44f5-9f0c-8f358d8784f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad964c93-d785-4d73-825f-24e0861c71ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a21eebb-4a25-4070-9bc4-7c4c92e065af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e65414-dce3-4a72-99da-676c9dfd9857",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5724b2c5-9414-4bc7-98d0-b2886b64f740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "367c2618-b133-4821-a834-3b3ca9b0f404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83d9580-fe62-4b48-b582-d9502e04f7ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae2b564-11f6-4215-8465-c49df1e24c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03aad047-fed8-4133-a7e0-3e353ec9cfbf",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e18f674-27f2-4796-a7ae-d5529a43966b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e61d69e-5b94-41ab-94c4-2134af1aeba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f31894-b481-4bca-bfec-83eb3f5c1025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dad0647-1696-4c24-b1af-de00caccfede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e76e7c2-198f-4c59-b981-5bbcf0edf895",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89a5ca2-887f-413e-a083-f61a0685061f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e36a636e-cdf3-4b73-b825-8c9fa223d908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd392de-72bd-49b0-94be-832e9cd55aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56b6cc6d-36f5-4f19-ac13-41b9ac38f37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed2f459-b4b0-43ac-b0a8-43459f88b12c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3db4867-2c27-4c5e-a7f5-4a4ff60155a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55eba409-8961-428c-a171-9942de140a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99caa1d7-0a65-43b4-a9b6-fba100b2e7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56e8b67a-64c9-4b3f-97b6-0e5957504c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7476f764-f534-4901-9381-6480d1df91da",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95778e4-c3bc-411e-8678-eec5381f12f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be42c62-e5a5-4188-b8e0-00b1d3d4b984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e289d9-d9fd-4d30-9fa7-3fd9c99be1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd04ebb-7cfa-4eb7-a72e-703032be19a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e29a1afc-39df-4a96-b3be-4d445f97bd32",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577029f1-38b7-4c8f-9cf7-1f220aa1604f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e48bf6bc-ff10-4141-b55f-6d2f483b59f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44bbc3b-9300-4d94-8615-715871f795ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "33eb4156-0a89-4d33-85f4-2a3ceeeb4c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a515ee3d-a140-4605-9b13-4f0b652966f7",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e704919b-7f13-4d44-b35a-965495197ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b36c33-6ec6-42d9-9bdb-c766dabc7ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b68a28c-417a-4aed-80e6-12c2740990b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e211b9bb-5bc6-43a4-9a97-799d9886d9f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efc75b44-9574-4e17-9a58-f4281ccfcbe7",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d0bdfc-e1b9-4029-a786-c30a7ed2b3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31e4f86-2a3c-4f13-9883-8e863db5f0c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89111ecf-b9d3-44db-8188-372cb91eb01f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b0da7c-ac55-4192-9288-b13b405c0e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d62d1ee8-5005-44f7-8577-c439fe8f9cde",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30aef99-0f26-438b-92f5-9b38e756b456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aa68586-9bcd-4d8b-89f3-9f4ce7320833"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f125af-2c20-481b-b5fd-725ddb9f981b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b732ff03-f6c5-4dfd-8258-c0696c728bc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bcc37e0-1334-4f9b-9375-99724f857b96",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "599cc50a-efad-4b6a-b5cd-b5b871957efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884ad8f7-23b9-4cbf-93e6-14b6e5aa0efd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc86b4e1-0314-4593-ad2d-cdc6e80b86e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f07f4a0-0b50-4e7f-84e4-b527ace0be1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58d8169-4eb5-4381-9a50-9e4ccd88c063",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f64e046-517b-4157-bb59-6131124c2eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64d192c1-f2bf-4e7b-9f66-6972e67e1a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd3e86ce-bd74-473c-a9ca-fcb83a3d47eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6bb5fbd-bdfb-456e-b938-2806bc47fc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "795a3824-4d8b-4a44-8c0b-004a8663e369",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bef5d6-2385-485b-b987-353982898a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a96eeeb-e754-4621-a9a6-c2ae828bb6d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8971b0d6-bd1f-4249-88d6-9eb219242573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf8ef99-1aac-4e6d-96d5-3c7377cf0152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1e60f7-97a3-4c68-ac3a-0f492fd414a0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1105f2a0-8085-48a5-96dd-fce3a0e7b4b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5e3610a-3c02-470b-8e10-93404e116dbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50e97b1-878f-43a0-8cbe-d01c88a44511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b06be2ea-9fe7-4b00-9d8c-60b3e617cad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "455d0d27-e8a1-4609-b174-02d4048facd5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ba4d96-c2b4-40f2-afb9-7390aeca91e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76248e49-1a19-48f7-ab9b-036bd8bd35d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc21e761-e767-4bc7-9424-6055fb031621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd85c3e-a067-4d96-a24d-fc893535f94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0116491d-e687-4544-a09e-ae0472dee3db",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb2c8ca-466e-4317-ad99-d45630a5d69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83eaac66-d7d0-4f8e-9499-cc63176f05cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ab6a64-2e31-4cb2-8235-93282d665015",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed0c2834-2192-4a6a-97fc-d4ed1d5413b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98676f9e-3384-4e29-8eb0-b5ac87760b20",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f42b5c82-61f4-4399-9205-9b7a60491a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "944690ff-c9fd-401c-8f55-1a2b181c72f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6f3637-8164-4ebc-b5c4-f4b7c332c9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "34cf4b82-1c12-4366-8ca2-9fde1da800da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2af41c-6fb6-4912-a5d2-8fa262f89e77",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b96bbd7-6c44-416d-9d00-3a9d85dbd44d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a01b328e-f1a3-4aad-acaa-3b702bee2100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fadc4bf5-a87b-43b5-a281-b4319759e006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "480c7cf0-7acb-4d4c-ab64-ba60e070bfa5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ea86e10b-f045-4198-9c10-ac5274c10b9f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4af634fa-5797-4725-8509-f3e35ddc6463",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89353c3a-b237-49da-ba7e-500092534488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6222af70-987b-4092-a038-e6f96e8be2c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e5ebbb-409d-42f0-8830-1a51d3ef6739",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c05323a-e4f0-403a-96a5-858a45b8092b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c11441c1-184c-43d0-9152-fc3ec7a58f49",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "adfb9abd-09ae-4577-a5a6-e27baa2cb79d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "589174b7-f4ca-4d84-9329-2332a957220e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e7b13e63-5693-4006-a3ed-d1f91caa4e00"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fe4fa464-4787-45ea-8793-d06d5172b899",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "df47c249-6f67-42e2-9cea-8f1dece19efe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c551fbca-5174-4f3e-b282-7fb5292470d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02cf1eb4-be5c-4cf8-aad6-9475de3450dd"
                }
              }
            ]
          },
          {
            "id": "f28cf766-6252-4a55-92b4-e5a0121ae637",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7e33b72a-9487-4604-b0e0-2410c820e745",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "016044a1-01fc-43a4-ad24-64407eca6bcd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e88a1f1-4a3b-4b09-acb4-252cccb4d980"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48186d40-d8f4-4328-a556-8efb5395258c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ffb2e522-e508-4699-932c-df0687ac08e2"
                    }
                  }
                ]
              },
              {
                "id": "b2039888-9a9e-4315-9833-502e665a4487",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a174871b-e6d2-42b9-9789-95c6c37b450a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "24481b92-5f8f-433e-ade9-5a865b8b77b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4328b100-a62d-433d-9a17-c0b62936437a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "18204bb7-fe95-4827-9c3a-89d528df35de"
                    }
                  }
                ]
              },
              {
                "id": "c85c792b-c391-44cc-9564-d0a60cc06f99",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8793daf-dd7c-4a47-a0b7-8cd3219529d9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd2df309-23f9-4cd7-85b6-7a89d8c8957a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "474dc801-6a64-40ae-a413-9f6ab5800ee5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "08b27572-2d29-4b99-a7f4-0a9e2fef6502"
                    }
                  }
                ]
              },
              {
                "id": "23b714e5-3e17-4e4e-b9c0-5c62aea61881",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "241ce2f1-6e11-489e-92dd-add155456d38",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50b3665d-bf33-4fb3-9c3c-f7f277e1a3fa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74ed98ac-b03a-4353-81e9-1963afb3e956",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3077c355-65f9-4ebd-9954-0b63a7d3f080"
                    }
                  }
                ]
              },
              {
                "id": "f05daefd-dcfc-4930-8fa8-4ddbde3a65b8",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "addecebd-2f2e-4b65-9c5e-5aad574f41a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e5a8ef55-00f2-426f-99df-ef71fd63db29"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "908cef09-37ef-4622-9dd1-89bb4df9213c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f739570f-253a-431b-a472-e013a26c74b2"
                    }
                  }
                ]
              },
              {
                "id": "79689353-e9b5-47d8-bf83-752462634454",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "abb16eef-1683-4f99-a572-2cecc792f94e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d034df99-443e-472b-89c2-e33db8a2e914"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d65c8806-adf6-459c-b4a8-0bb9dde19ebf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0eb60e8d-6702-45e6-accf-b677a21123e6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f8111a72-bd41-459b-9b30-0374d778a017",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b9d5356e-74d4-4c78-a84e-99aaf72b4174"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "da1e7a7b-d6c7-468b-98c6-6ea73653fe1c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "894111ba-684c-4f49-91c9-c333a4c66d79"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "25e022d7-d905-48ec-87d9-b52aeeec57df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "fa58f017-c66f-4542-bc4c-3a00a845a63d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b360974-4fbc-479b-a65f-7b6ac7d845ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db357841-1e51-45fd-9203-01537ac4ca7e"
            }
          }
        ]
      },
      {
        "id": "4a131146-1c6b-4563-96cf-bc42679b3f03",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1e95b26c-a3b6-47e7-8275-19bcdcbeabcb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbce0bd2-28ec-4998-8a20-9cb634110350",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fc8b87be-be94-4982-bf19-0d51aae5b4a2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcd473a4-2f6d-4144-802f-ccd1c5078334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75961dc-6b26-4e01-87f7-01ca2c7b99f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ebdebe-e9f2-44e5-8227-4449bac2f713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3491f34e-9c3c-4af1-b187-b2968deed116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18758eda-5be1-441f-a703-20a015bf37fb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc64b6bc-fb48-441f-8ba7-bef68b732114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cfe25e7-f2f1-4e90-8f1b-26025efdbc0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf8d6c4-dc29-4d6c-be7b-b3ad11f54677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0540d610-57d6-443a-9193-ffd860f83312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab497a45-7e90-4d65-869d-009f16f38889",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebbd0f3-fcfe-423d-a606-eac4daab6e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27fe112-ca67-4cdd-88fe-8ea83fe4fcee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0c4ea2-78b7-4481-b628-2889da1fa789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "489d8e08-e300-4afc-9fb0-a0fe126050f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e18549d-320c-4b0a-8225-878716786066",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936e674a-43ed-4d8b-88b3-04d18722fc3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef979c7-4ba0-4440-8a0b-4d1fe704313f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa248511-5ac6-4ee6-bfaa-631899fc999e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b55b34d1-a5f7-4077-b56d-4bd1995f28ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2067ef1-9d20-448f-a684-9d2c6f0126f8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7751f45-e2b8-44d2-bb8d-d624d989188b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af29b142-33bb-401c-91ab-2848a330f48d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1bf9c0-0f00-4c4c-8a7c-d7cfdbac91ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82b0f51d-8f88-49de-8423-e4cf6c5fd384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cca90c0d-d7e4-46ed-af40-7ee28aa86823",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c598a2-8cc9-4e0b-a3db-af710cc4bb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8842caa4-128a-4a21-959a-6b9a1eb23f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f501c9aa-6280-4de5-bfdf-677392604736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a29df444-a9d2-4ef6-9aa0-5f1ecf23ffa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19cc354-3242-4393-9639-6c432187b215",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cc135a4-5199-4072-81a7-0a9a4bc74b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0a17aa-f167-46ac-9c92-6c53d3851250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ff9385-8ae3-4cdb-9fa9-831dc314b656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dccad8ec-f355-4eac-95cb-c83cc1e5c111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069fb010-4b52-4cba-a315-0d910bcba57d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426a0385-0023-437a-be57-fef63fbbdfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06b2dc37-7636-45a6-ba98-9566538f6d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00890c28-5cba-43f3-b59d-572d14c08585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fa4c01e-0783-4321-96c1-49ec36c309b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "388d3ccf-1e48-4640-b363-2654d2b91474",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2526b7dd-8477-4d23-b39f-4aec9a0a545d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c51f212-e3f8-472d-a6dc-e71c2f1b5caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3c20b2-0855-41cd-b683-e14c70a2a3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c7e181e-bc2e-4120-8e53-1d79f35832e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "841ec71c-3d6a-49d6-94b5-a63c7465573a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad8b24d-3fe2-4307-bbe3-ffda2be2c375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac30e3c3-70e9-4d9b-82cc-273380696d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c32f095-8468-4d27-bb7a-35bde056f6d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2862d337-932c-4013-925e-070832397521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59de5062-5f20-48d9-a26f-5a82c1ea074e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5a7098-ed32-4ff0-bb0c-2d044f5518d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27763b13-7681-40dd-a95d-78c089f9d3b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7933c2-9df5-4cd4-8391-f628621b9e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f5b4f853-a422-480c-89a3-9c4523629601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8657a787-d968-4768-9590-64d9d2dc3cf1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5b185a-6961-41cf-b697-133e9a88011d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83d73f94-48f0-4540-9e01-0cfda9da5e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312a1571-a709-4427-874f-02acdfc8c55f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a822f14b-137e-4cab-af89-8a58a58acfbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e7e691-0353-40bb-b065-03f698ca4727",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "634a7c88-363e-4736-bd22-220328620d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467e2517-c13c-4301-a77f-d5c91486f4df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c99ff8d9-607e-4c11-b0fe-fddae876bc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4b67ad7-6417-494e-b819-9e632db47ac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb8da2b2-fa1b-4f16-ab69-bfde5508295d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5631a793-b681-491e-b104-1b4452bc7d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283af018-17b2-4146-980c-c18684b362e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60e81885-1abf-4105-a7bf-62f558d324ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b63c49b5-b4bc-4a6b-8088-f9da1d695830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e02fe9-8ac3-49a8-a9b1-8499667b0a66",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b497955e-3dfc-4d64-ac15-f9ef7495aa16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2080df7-0ed7-4b2f-9898-d95eb0952e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1a186af-97f7-4338-9373-ab684a9b35ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c98b38c-0af4-4980-9b4c-e728ca676d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79c8a462-e28b-485b-85df-4e40bd3554af",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbc0648-2a92-4320-8ee1-8bf1788ec74e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "101e65bc-9adb-40ec-874d-92ede4c530b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76cf116-2977-44f7-b65f-a167984ca125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "620954df-56dd-492f-98ff-9ba995a59a80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ffe3e6e-0893-4c5b-b431-3b6564024e53",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2077b3c8-b4e0-4817-b921-c088eb1eb4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "808c8629-71e5-494e-af70-8a09d24e806a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91974e3-2163-4238-8c7b-10b236200192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7dc1e7e-7b28-466f-8f6b-593a5b5a5422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70bf6e97-02ca-4915-9461-7ec0574954c6",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e120f6a5-fb3d-4512-8d99-ab2293366de2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e88f04f-4280-4d7c-beb1-344472afbce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22d110e-b292-47b6-ad79-0948bf60591c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "76436ecb-0c18-4bae-8d94-3b31e5b50181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8637e6bd-e1f7-42ec-bbcb-900b54bed488",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f994b9-605a-491e-adee-c82a0ced1e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35639ed-437d-441f-b9cd-885640bd6db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f10234-0691-4bfb-9554-68d4863b5c22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ccad17d-ecef-4f42-a655-eda90ed15f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03719af8-4fd9-4843-90b3-ce99917cba3c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f776739a-56e7-4b01-9c4e-ab8f918bc15d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add50e01-faca-4dba-a4d4-640ba5135c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6582166-52a7-446c-8bb4-bcf5fe2e5eae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "320c5eae-70f0-4411-a680-a5812db0ac8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17d94c1-cd08-41b2-9e0f-bb50c8f96adc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9355ba-31e0-439a-9a42-b5c58107ed9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bdfb41f-53f1-404c-af6c-a58d22767cfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312f6bf6-52e5-4a3a-84c5-5f33daa841e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d18febe-d5c1-4766-8553-9f2392415bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ffc6a5a-1bc5-4837-a36b-feffa98bdfd0",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e426443-2525-42f8-b632-761725f239d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24684f57-c8ae-4066-9a67-ae7f947f97e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a98eb0-a61e-43a4-b46b-7761df1536b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af12194f-2a43-4acf-a4ca-88b07668e384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d649925f-d71a-4b85-a504-2f487e3d5f38",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc39c597-5dab-4a11-b089-d3a4fc5d5e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a490b4-b0ab-4ab9-b2df-4bef038d516b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92789b0-db65-407d-be17-988f2fcf44de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bac58bf2-8e92-4691-a0a9-641aaa7ff67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5101bd59-7550-4147-b364-827e321008f5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0aee695-3f4d-4b32-90fd-f77dead2a397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33fbc6ec-d2e6-43cd-9c77-f581114bb1aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bec62b-2010-4bef-aab0-9d82d6e46c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a19c39a4-ad8c-404a-9fe7-10cfa677b19a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f1457b-46c1-43a3-a6da-a196853c4a34",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18dc7616-9883-4fad-900a-d8a76ede4ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a72c9bc-2c7d-43cd-b4e7-d79aefb715a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed90815-1c91-4237-ac29-e3a82365f403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83181dc6-8a9d-48d2-8feb-f48f7ec72948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c708f3bb-f387-4c4f-9803-c174815c9373",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e9e59da-4df7-4d2e-903f-00210814ff26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567f2b5e-6dd8-49cd-9917-67f58a6c908b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68fd4706-1416-47df-8d47-4c384a6825a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37910b13-5b06-4b48-b336-4a8da624dc2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affeaf8f-d0cb-4c4c-bd4d-7715775c42c4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889f07d8-c179-46d2-89f0-57ce6e7ed2a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b642f12-d5ed-4efd-adad-15fd7c6d050a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbee104-b694-4cce-971c-2566f393cc26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea874f9-f3ed-430a-977e-520e9780834f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5463eb60-fb7a-447d-af71-724ea622a4e2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e43a76-0ae4-44d4-989e-a83ab2f34c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e6849f-e098-4023-8bdb-7951052aea2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e1d48f-3c1f-4595-b4d0-35688bfd1a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed8a6490-3314-476a-9f5b-b9bd6a781813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22777d4c-7943-4ff5-b633-08087ec562d8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08dd9e0-de05-4f8f-873a-24083074e677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3576221-b825-43e1-8d13-01984b094797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4018101-1650-4a9d-bc47-2e5c7a2d5a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "876fd301-6884-4d45-b2cd-9e3d8c8b6c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90637016-44b3-43d0-9eba-19f16ba54664",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c0f241-add0-4690-adda-2e040431593d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7627d32e-2877-407f-b9f8-721ffa360a00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2d451d9-32b1-4880-a30e-18dba203cc3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "003c0ef1-f0c4-4a53-9f35-e19efdbeed8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cc5a17-d439-41a6-acc6-abcf163138fd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8a1c69-6eca-4266-8ef0-e05b4b7dead4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "247d362f-2a46-419f-9085-72cdfaf2e76f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2ab7e5-f1a7-449c-a2f8-8059816598b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a12373bb-6f31-44b2-92db-8f6f8bf4bad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb98d82f-6957-4d4d-9646-05de188280ad",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26a64ee-eff2-441f-932d-8a7b500edf7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3259f7e0-b071-48ad-9060-1ce9c7b6417a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27535a5c-7529-47dc-8840-bfc3e7e5c9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "344005fa-356c-45b6-be47-885b35531f28"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "69bc0172-ca5a-4426-908c-fe78432f5a9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3201bb1-15bc-44be-b5dc-a799161c9e18",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54da25d-eb09-4a66-8adb-6821f1b7fc0f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6ccd0b7d-18cd-4f10-980f-3cad53c0c082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57f7a12-5488-4174-80fe-6e90abaa4603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72fe59fb-1b0b-4f58-93b1-0e8bafb4f9ee"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7ec3a19-3862-4585-8825-a87cfc13c4ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24d1c27b-1981-49fe-9ff1-4f92c96f92ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a3e6b90f-44dd-4325-85f3-a80c7906f4d7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14410a47-a109-4ef1-877b-834944d12586"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55ae1f41-d38d-437b-a81f-940e303ee440",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "44c42bb9-9900-43ad-ad16-d473aacbd4fc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10ac7e1b-0008-4c81-a539-fab94679b71d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd000c02-cb06-4817-a07a-fa1a1a1f589d"
            }
          }
        ]
      },
      {
        "id": "41bd3de1-93e2-4ef4-9182-64e1fecba5aa",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "cc223c42-dabf-4b16-9253-afa194a118a4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "713f4874-e03f-4e3c-b28b-55649f4430d5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "efb008ad-c079-48d5-ad69-3c11315b5589",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "314a1806-b3d0-4d23-be53-d5b36659e985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca062a60-d9af-49e2-ba6e-46ddfd056fa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3d22e3-0ddb-4334-bc40-4c0251ef52eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b74b508f-2b9d-49ec-aa71-f885b79b369c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30298bcb-96c2-4c86-b866-46a97aa13b84",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0bcffa-f9ad-4ab1-82cf-f0d7f9af7f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3540dda-30ac-4524-a95a-68ef3cf680de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b20d0be-205f-4cf3-9864-a5dd481a9bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8419c8f0-57a1-4ae7-8fde-2cba906f7ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b5d3ab-8f24-4a6c-88b4-950a4fe160f3",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659b9db4-fb53-4098-9852-06411058f49b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8197872-e2bf-4af0-aa97-26f5dd834d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ea4136-9209-4860-a133-80864f26354b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ebeb724-84f8-431a-ad1e-4fd5e2aa3ae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6af2a282-0132-4256-b9f9-719de2c1f1db",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6baef91-602c-4b74-b6cf-50b6f2030854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f647254-2817-44e3-bf0a-3284f43f2021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e00567-e5ff-4e00-8a72-02850aa8232c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf30275b-8c46-4cb4-964c-de691e1b7754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51fb3cdb-2c6a-477f-9d22-06d14daa2897",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "659f5ba7-febd-4ed9-b460-fa67cea9b9d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abd6d2cb-b0d7-427e-999e-4e7a736d0805"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ac736b-1520-4b81-8640-25dba9b0d51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3785656-67c1-43f9-ae99-739f27ac105d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1428e29c-e256-4340-bc1b-d9a1ab34dbfa",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b61651c-82bf-4532-bebb-e95f0c494d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fd73315-aeae-4ba6-9d31-03574a3c0372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b7ae475-d60b-4c1f-b3e5-103804aaaabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a68adfeb-dbf8-42bd-97e9-10fbfe791408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb98d23-7470-403f-8771-9f8c48c49766",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5463b516-2c5b-402d-ba05-77237e2e8892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc342e2c-e118-430d-a363-07fc911c312e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4dba6c2-2348-4d4d-91af-69957f8c167c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "074e7752-b445-4ede-aff0-998922edf6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad36798-f156-4213-aacb-cb4ac3b29ff2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e74767-43da-41e6-884b-62b714086e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3aa6b90-8e59-4158-9401-374011262c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48be04b5-7e1d-4f29-9d5a-21ed58ac7c85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68318900-eb88-4cac-aa25-e9519140f661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5f2abc-c11b-4000-be24-e6d82399dfe6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "465d7957-04f2-407b-b030-f37c4160236e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61540008-58df-49b6-8584-2ca040c72ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eeef7bd-47a5-4aca-b0fd-f4b95e636393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5863682f-be3c-4a91-860b-44bb19ff7437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89538153-3868-43fe-8813-2dbcd3fe14b5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac7ebf1-2d93-4b0c-93bd-3ef95433ec9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b7b143-111e-40d0-a7d1-bbbdce402cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44cdc88d-bb82-440e-8cbe-930a00643dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "19eec897-0b83-47ef-a980-47ca98325be6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd7fb97-45aa-4fce-85bd-24d36d6856f8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf9bcdf-0b23-46eb-aee2-ac2364257def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fccbb697-4615-498f-8d9f-1a7d233e3a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ea55c5-12bd-41a2-a766-e07cee02cd7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "87502dd0-f84a-43ed-ae29-19bdf6cc6636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "433eb06a-83be-43ad-8ac8-2103c5e96626",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e72f3ee-b9c4-485d-bd27-3b682c684928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af304d9-b00f-454b-b0ef-97baaa6c9e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c515dd-fe72-41f0-8b83-99c34223dbf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b2bb0221-236f-4e97-a0f0-f5396f454b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a795fc8c-2917-4fce-ba89-fa5d2180d252",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b18b91-e5df-47f3-8714-e075bd402488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1a588d3-4015-47a8-972c-6f4af3d26ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15be5133-ead3-498e-861d-a70809b118fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a2b9160-56d3-40da-a05a-5c1c5cd4369d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84da7846-88c2-4239-b612-ecea105cb3c3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f85d3c-6a2d-4eb7-9f92-1af5d79300da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08b76c8f-7514-4ab8-98c6-611f7ce153c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4187106-de0a-49b2-aba1-0fd1e3ac47ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fedab6a-3dcf-4404-831e-14370f283d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcba63f3-feed-40a1-a2c0-af48ec1681ec",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de3395d-0a9b-4458-a5af-787c698526e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a1c0ed4-ab65-46af-a27a-a291c1b85651"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bb7386-fe87-49fa-886e-2f4bff372438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8bda41-23a7-4f9b-8b4e-007402fb63de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c6465f-4f00-4d68-a61f-a093b70c7773",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a52d88-47bd-4e35-9aa1-add9ed0a2de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4faff9-ede7-4bef-85eb-195401ed39fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9baee574-d053-443c-80fe-576258da869b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d90ffc71-ff6d-4b27-85f9-1bca60209326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4fe7a88-8031-4cb7-8600-011608c0649a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e30811-4818-4b57-a8a9-8eeba5e65b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb73735d-3984-49db-af2c-953007d5079d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2fe853c-859d-499b-b23b-8e0dd99032db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d3d1053-17e4-4063-b123-8485e3b39c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d9e3c3-31d8-415a-90c1-ae8812275280",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5383d901-cf0a-4618-9980-f34026ced26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b42b9559-3e9f-4da4-9f52-26e193a016e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b97f17d-f079-41cc-ad4d-0ade2572202a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a73827-35d1-43f1-8bfc-704a70b24aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3589de0b-69b9-49b3-ba47-6f2b73aa6d74",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d318afdc-109e-4226-8add-5e3c4c5b944b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360ef010-6756-4acf-a24b-7921fb3cb967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa81f6fb-73c1-4def-b056-589daf246e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c65159d-811e-4e6c-aa6f-f6364e47532d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e579163-6f17-4443-ae05-607f732e46ee",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e8e5de-b816-464b-9c41-7f365bd4c7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4957b97f-3f4f-4882-9240-82438752e9a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff8a9b9-0732-4770-9020-1d70f1faa7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "33bbc5f7-eaaf-4bed-b6eb-ec04cf402f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf10e04-a9be-480f-a2f8-8b3faa9f8988",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0cf72cf-ad40-4902-91bf-5e62916a8610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad213a1b-2971-4c81-bd94-b3a2322718c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb314632-e814-4fdb-8aeb-9f2a995f98c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "490f0194-60c7-47d9-890d-6b6b6d698af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41cabb5-1021-44fd-b3af-9ec579c2b4f1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13189c92-e8c0-44a5-9345-f02c21c250ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2ed7b0-fdb8-4dbb-af77-55753436e73c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8291dcde-7c05-41a8-acc8-3afc02ba9bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2478fddd-8923-4dc6-8347-fbf773b9e193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c271a9-5282-400d-81bf-2c320f8e9b2d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82dbefab-5816-4889-8c1b-cc16eb2c65ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08446d1e-cd5c-45ec-8f61-a2bdc55c7ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970991d2-0730-43c1-9d57-333a372ccdc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fcafa7f-8469-43a3-9faa-d0643bfd61a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d9c32e-e2f5-4663-b1d7-0f28d7d95698",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19db32de-d1bb-4084-891b-153c7ebb9b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6fc4bda-4d56-4601-a7ec-2d09a9a99cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6250d322-c91c-45bc-9bfc-d8b383edccbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "165e9e02-539b-43fa-bb98-bbfa10de2876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4ea8f1-ca16-47bf-846d-16efb857ad96",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ac0297-ef39-429d-9567-d64ee14b4e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "891d2afe-b905-4e72-9e94-d68833f2ac1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0c1c35-528e-48bf-92bc-bb0b279b93af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dd45151-db92-409b-829c-154833817917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65cae0a6-a368-4743-ad19-182816a95472",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb0b6b5d-2293-4767-b339-77380a41224b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5c4a8cb-4a03-46e6-a66a-426d482f6f4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe028d9-ccfe-4e5e-8e40-19d777977335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd5860f-024a-4b17-b40f-555083cd4ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbaf1036-14fd-4d81-a71c-5cab3a9a2bc5",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2bcc0ef-e7b5-4407-8d83-0bc3a83ed3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc7f1e0-cbc3-488f-a813-380e52ed3380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be3f638d-c73c-4be8-8a4f-1152d0c71b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b5e1a58-531a-408b-88c1-ca082acf7808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ed2ab7-2510-430a-b290-0d400106be7d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7183edf1-1923-4c08-8362-8cd82e057721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22742faf-656a-40d0-a342-9bdf622d5a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c896e6-f3f9-4dbf-8e7a-f5397a50c585",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb12eca7-477a-46e0-a1ed-1e4ae1a72ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5aba7d0-ed30-4b4f-8141-512f614c872d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d3bf4b-b773-4b42-a9ed-d974921e0f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d85a1c-0d47-4458-a2da-fb216dfbe410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19df628-5f07-4fea-ba43-5cf2751bc545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "151f664c-8808-4a30-adbb-e906ae56d113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27e957b1-8488-4b64-975a-73d0588ccceb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11050430-1e51-42d9-9f2b-a4fbff46c8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993ff0a0-a8e6-41e3-908d-1f68dbb24ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a726aa73-ff2e-4876-88e9-21d55ef75a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b59f15-0688-46b2-a9be-0587a84ebe94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a995a8-05b3-41c6-8283-2a273e4f08b2",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddcc989-cdca-47da-9b75-32457a3c190b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4411b482-c83c-498a-bb17-38a69dc7c3de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f7bc15-5c13-4de5-8c07-3fbaae05751a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f305af32-d0d7-40d1-8eba-92e21502d36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e7403d-77d3-47d0-8724-04aefad01cac",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae437293-3e69-48ed-864e-2a0b78144d32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9892ce26-f002-4f34-bad9-d104d08169bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90babb49-3baf-4f98-a56f-ecfa5456a6e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48a84782-b647-4848-b6a5-85c766cfca67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f63dc1-95fd-4ddd-9644-f86e75297473",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db90b5ae-2b04-447d-9873-fe68603df24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc94075-2e78-447d-80cf-6e65c9237761"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf23c043-1e2f-4080-ac5b-6750977af3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "52fef10a-ef1f-4d61-b9fc-6730ded11bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb97d95-f702-4b02-994e-9f089a8cb11f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9115e381-f23c-4858-b912-1b3ab56e577c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "611924b0-31bb-4fb2-a1bd-ec776f3949c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1635ab6-90bb-42cb-b05b-d283d3c2bce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6d7c031-b59a-414b-b2e4-c4c5e6387659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0073276f-32bc-4863-9634-f84867e04c3d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171b8990-07af-46b7-8c20-df02ad58a8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7608d9e6-7b7f-482b-b60f-bfe428a4a243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf44d7c-fb3b-4f8c-953c-7c213737ac63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3aae91c3-85e7-420d-a120-84a7f8f50099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698bb481-4fb4-4e17-b20a-84146a679fd3",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a3f5053-ee8d-4914-9d0f-2cdccdc86b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3de679a-8d16-4709-939b-ae256c76018c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a5e99c-bfb8-4da9-82c9-9f0db25d5299",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3d4cddb-410a-44bd-812b-73017f065c33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45564b26-b36a-4235-857e-140bf8515eb7",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83c28a5-1a04-4295-bef6-c633bbbad1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567ae138-8a88-43d4-8f03-dee0141984bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae19c1e-ad4d-412b-8921-cb996f9f10b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb11209d-3a20-4b41-8c0a-46d2ec8f017f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ab3865c8-c28f-441e-92ed-2df19606f272",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "00bce297-e3ce-4efe-bbc1-ff26a7c8a5d1",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d6d692-61d4-4a9b-b8a7-6581033120dd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca98d15-daea-40c2-9ac3-54c6db0d82bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e94359f1-be1f-4b6f-8e38-31d2d5fb0ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c508be5f-8bc3-4948-8725-1b5c5bde450c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79942624-9523-46cc-b5b8-be5e00291557",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2aed349-a73c-40a9-b9c5-355f6a393ca1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "361f10d8-c0bf-41ff-b311-471ca78a697a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2c741f7-fb2c-45cd-bf88-3397e4b58323"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14c0a3be-ca3b-4e18-be4c-d178956c5124",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "15f0ca8a-f878-4adc-914e-01d0ad7d6fd2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9665d576-54ac-4054-afb2-1b8ec6db839a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e6a45104-1515-41fa-b37e-5040edeabe68"
            }
          }
        ]
      },
      {
        "id": "3ef1254c-ddba-4670-91e4-054e00770abb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "308c49ee-5aac-4502-8139-942b5d2ad7a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0f440b6f-94c3-4394-b82f-0fc373d4c10d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "869a4846-5618-4cd0-ba88-27d5bf0b69b9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad1f6f9-0ec3-430b-bafc-cdcebf3dbe7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf58638-79a5-434e-8d81-77b568c4ad92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f0fb44-e0ab-400f-ba2e-ad8e0a505bc1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95407a29-f232-417d-b29b-b7d1d64ba5ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da370d6-25fa-4b49-88e7-6b92091cc554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99fc2cb3-7d7e-4907-9638-8e53d49c83c2",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9348c0b7-b93f-4fec-a54d-175d5f72c9ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3181e320-3cdc-43f8-b5cf-eb4187a3234c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b878822-5979-44f1-9494-3b3f4fbf5f54",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86da41ea-6d4d-4eeb-95c6-804dd07d9e97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "047b1d61-64f7-442f-b018-feac3849adc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7132ea76-2f6a-450d-a42b-97d25a717bbd",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7c95071-7d97-442d-bf9b-2fcf7313e9e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d526d852-0e16-4ebc-9e7b-39d1d8e80609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc74d092-c913-4ae6-aeba-65a4887ef0ab",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b995ff5d-d088-40e8-9e1d-b88887566937",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6664a376-e775-4fb2-b425-d3c1fd5f25ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1845ad60-b555-404a-b6ea-1c079feec93f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ab108d-a265-4e2f-aa37-7f5c8f2dfdd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c966992-808c-421a-ab5a-cc5591539903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fc700c-0a1e-4525-8902-babbfc68fef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e043e5f7-c5aa-4c93-93ca-f54c47d05e57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f84833-eed6-49bf-9346-e948d1722f22",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d256880-007a-4c07-a527-261f129ffe49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e84979f0-c5ef-44b7-a167-f9a8d9be9b59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8b1c64-557b-49ff-a3b3-18f33e47e5fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c9aeda3-576c-4053-8582-bf821d1b63b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f1f3eac-b7b2-4ded-993e-3a8bd9200987",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2269b0-2dcb-4098-ba44-2bb0b37dd6a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93d2eae4-b607-4aa5-9706-f41c7d3dc9da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d3ff8e-a622-49da-9ba2-ed0d599ba2c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bbe126b-0d05-4ba7-8f7d-bc26976dc3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e2e506-e300-42b6-9ae0-8fc73c99c468",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f02260-9605-4ef8-b62f-fdaa4f14e61b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acb15b08-e17e-473e-80a5-322b09f10680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33a387b2-1d3e-45e8-a82a-52fe54c8449b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9caca2-b058-42bf-9868-c94114cbb728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3486e1f0-8d03-49f6-bfa0-7e4f7bbfb9cf",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de46508f-1047-4688-bf6a-6c99b1cdef94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34434860-dae2-432d-8417-9bc84d4d736f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32021894-927c-4546-b205-5e877a860e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe3a77c6-83f8-4c7c-9315-4c9e3524931a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c20f25d-1ab0-487d-bc21-8ae33d2346f4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "004bc205-c86f-4863-95c3-7bd4ca9e46c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b267fcf3-674f-40ce-8882-71367151f22a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4978ff3e-b485-47b4-a707-2ff8fbde9757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a7ff1e-ac0b-4c06-b749-ccb6944fb220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f559aa5-0f7a-477d-9592-948ad83ed9c9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3dd416-5e91-4b65-9644-861b9d73eb57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab7f86da-9b02-4a93-ac89-2fb84fe67140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8efffd14-400f-4416-a10c-f95e66a628c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc837c9d-d734-42dd-b29c-5f6c86e0afa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa284082-98ef-42dc-ae95-20c618168597",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8b931f-b41d-4d00-a6b7-20779068959b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c14353f5-ee14-4509-b8a2-7fca7cec86d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe36016f-ee6f-494d-9701-ea050a23e4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f11b10f1-2f96-4f5c-9c5f-236f22c4f608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4ecdb8-9eee-46fe-86ee-7da5f4dfae4b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "966ff97e-c4eb-41a6-b7bb-58c05ce21cd9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "339c774e-f6d2-4c2c-91b0-6ffaddbf2465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3c94f47-8d79-49a9-b635-78cdb320b2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f92e550-ff2c-4cb5-81e7-e569a6ba2397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14911096-7c81-4047-ac2b-1bf4e297b6fb",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91be02ac-15f4-4d48-beb5-3908dc799ee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e47aed7-80ec-4967-b8bf-5544d6b371b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0332927c-4629-4586-bdd8-1e4026d4405c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b302526f-abdc-4344-bce2-12038a1c8881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51eb8672-27df-4778-9a7a-268cf9099cbe",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28421851-8a9e-4490-ad13-17be2c0d8374",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4514a43-23b0-4a33-9fc0-df6f36fc6544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29317ddc-c57e-488f-abc7-cd6b5d520247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1ff621a-b489-4606-884d-aba4493103ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4dddcd-ea50-4400-a8ef-3c1206d74f12",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0558b1f7-873a-4b63-8aa3-ce62f7d906ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c604e203-3bc4-4d25-820b-18b6fa404a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f86d5c3-9709-4c25-9880-b574ad113564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc211e2-5b38-4afc-a729-082976bb636c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce76695e-7f16-4bff-9e47-7ccc25e60a8c",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ce3850-2ac1-49b9-ad88-194c3cc184c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0940c0bb-23d8-408d-b1c1-2d434a4c4078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a2ddbb-d5b0-4aaf-8135-195bff6699ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e9c3123-13c6-42f4-b65e-b4ab8775f48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfbbc40-c9e3-4717-b8be-9b04776155a1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083e5c83-c91b-4ab6-ad37-d7855541e0c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b5862f6-8cb8-4a41-9ada-ba34f0e0f014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "799396f0-d5a4-4128-b7d6-73a4d72b6748",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12b322e4-5f46-428a-9729-94fa039dea78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1a8703-022d-49e5-9243-6a62758b4c3b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ba8989-8042-4ef4-abf3-70895ba7909b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37bdd12-b6bb-439e-a5f3-4befb6695fe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cafadbe3-ddbd-4829-8d70-dcbbcb335daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6dcfd44-a012-4e3f-a2a0-ecdd3205586c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10daa81a-bef5-44bb-af49-94e519929cab",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d70788-2973-4ab6-b153-932a3ae23c76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b7e4ff0-961e-4a23-b09e-de8fdb5c46f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76628e00-bc50-414f-aaca-76c3495dd7a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc36888d-f16e-4be4-99e0-6029e84d4756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445d9a06-8f68-4e7c-b405-55f3189569e4",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0816a28e-551a-40fa-97f0-cb88adc86fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1e48578-2b96-46cf-97a5-a2ac5201dd1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "588c4784-3e10-4b67-8877-a81cf87a7ea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2975f923-7a84-4ee1-ace0-adfbef66aa4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55f72d9e-8a64-43c6-9013-9eb660c02452",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b89596-ac8e-4b46-b891-d10473b929b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f2e1731-fa13-40cc-aebd-bb6020ff3859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0b6779-a584-43e1-a0a3-963f32362e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51e3831-abb6-4371-9b9b-abc3434c8ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4f51f0-4413-435b-ae48-c5dc1f4c75e3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3bad34c-28f6-4d4c-a66a-0e4d58632c5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13870444-b7ce-45cf-9813-5d189207b313"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68db96c1-fbe3-4ed2-b783-d8aab47b2138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ecb1ff9-3e96-458f-a1a3-6df09bf4365c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05874371-058e-484a-8439-4a9f5bb1af55",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c789946-8cc3-4e1b-8639-ead53771ffc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "382c8634-1d9c-4cb0-a3aa-9898c2f07359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6128c2db-c1d6-44b9-8b21-1f0f3a062302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22123cc5-6045-4fc2-b8e7-89ae5e07cb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39202a3e-06b9-4a1c-bd68-f29bb984578c",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1792178f-0281-4c12-bd35-d9b237832082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2765f18-143d-439c-8a8c-a2c82dc12b33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0634819-a898-4448-a64f-4fd0879cc522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8cd1012-d2fe-475b-b525-776df85af19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acaf876e-07f2-47a8-8129-fe0c9e6b6b62",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ddadf0-e60f-4345-a7c9-27faca396d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df35a1d-46f8-40ac-be82-5c71b7c6bbd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a8daee-79f0-47d8-a85d-4c7b6ed2f628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fb8ab48-1329-4f7c-96cc-2cbbe42f7384"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572c6805-c324-4c23-a409-65ccee3eec24",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7b5e14-d13b-4783-b370-b79666f22646",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "942d3705-f07a-4cb6-b8a5-f86f6cdf8ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef57c404-ba44-460d-b330-7ff112aad7f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf437a3-daba-442d-968d-67b10816ac3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a40c6ae-a4ff-478a-894e-edca2ad04b73",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3964ed-9e5d-4a2c-aeb2-308a910d13ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f17fa28-8046-45a4-b760-6da78c7b3933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48edd9f6-c809-47e8-b1f6-49ce2e6034c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4807fd-f6b4-42d0-ad55-8aa6c439d871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf5ef0ab-4b52-4e69-bb04-5e19c7606d3b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68bc8ce-36ac-41b9-aef9-2137ac8b0c81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f32a7aad-a0d2-4700-a1c8-90182eaa22d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3b1ec6-0704-4562-a4fc-59817d2b58fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "047167fb-44ad-422e-bd1c-ee9bbaadf035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65727d49-14f0-4171-8426-f12841f12238",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1296e65-3e7c-421a-92c7-e5eac01fa400",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cff8509-190f-4f08-94b7-34a540543dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81ff288-a04b-46fc-afad-ab3857489256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8704b3e0-7d58-4444-a3f8-08b11b8e686d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a166566f-2ec5-47ab-b7b2-12cc7e14e1a4",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fddb39a9-803a-4ca3-ac36-9b7f8ba3b3e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4bd7ffa-49dc-4316-b13c-f71d64883e46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeca44c9-2024-4f04-8ed8-79c710c78c29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7451c215-6e9d-4c47-811b-84d00d38c6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89f0f1f-4ff5-4da5-baeb-d2efcfb38fdd",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38c9857-cd6f-4894-8228-dd729f2540a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f47e9ff-7ec6-4554-81d8-ed279b67dc73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c3a541-94eb-4d82-a8c5-c528ca6ac546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a68b51f-2041-4b07-aada-17b5cb47bf6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a8e4189-207b-4efc-a97e-0a2f0b040341",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b450f5a5-31b0-4f2b-92d5-4ebb127141b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47683256-0c83-4aca-bffb-19a923da64b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cfe5b5-8948-4e23-b44a-77a6f0c63450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5005e032-4289-4498-ab1d-218391f39e2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c0c508f-cffc-45b4-853d-2931393ebe4b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85cbb634-53d2-4812-b209-d8d538dd80b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3ac9341-dd8a-47dc-9e69-e52713ae6caa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1c85ec-6e1c-438a-938b-036078756df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eefbdc79-cf01-498c-bf55-f6aedd2dc3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64e24f4-e7c6-4aae-91ea-db5186908d22",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60341519-ee89-43a8-bb74-966ead4dddc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0edbaff5-8253-4e22-9e17-3881bfb73853"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9343d88b-ca7c-4c26-89d0-61ac972cfe6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07490c80-16e6-4cf9-a792-1cd8505228ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e105aefe-36cf-4a06-ae97-9bcac26e3b8f",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addd6c66-47d2-4a2a-b6c4-de60d51cfa11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db7f976e-3669-417a-a013-0365dc2b2612"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "718a4d2c-0f43-4945-adf8-ed77145b9b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f10ca0-e045-4e63-9422-e2521c717abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9692f076-a3f0-4951-b99e-647d49994018",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300eba7d-7c08-469a-b104-8f5d676aad82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375301dc-b839-4fa9-a906-19a4df1b2a6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7547031-aa92-4571-91c7-3ed1b7895c65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1532d091-5826-4aa0-98c2-03d2873d3c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9574ea0c-0e8a-4518-afad-36f5d0710d28",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49dbd77b-0e32-43a6-b351-9b43d2037086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1eebf20-dee9-43fa-8244-331749514a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f08d2a8a-bdb8-4701-b5f0-259928cb81dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d2b97c6-4bdc-4ff1-8145-e8bbd85d30f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74aa33b5-3f72-4ca5-b58f-0560cb8a7561",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3962924-4549-4ba2-8223-c6215dc08d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f47e16-6a08-4e3f-ae61-62cd2a04af9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c140aa4e-975c-4a25-a933-7ec87b205ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeae1b6e-2446-4700-b751-bb96daf7eda5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d5eb00-ca87-4216-a80b-08da3bf5509b",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b18ce7a-1220-4376-a0da-88bf88cb00fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c67be0-544c-406a-9a1b-92fd0763bddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed2f784-6a19-4797-8853-b8fd0227fd75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c71052-d699-476e-acca-7a2b97228e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64822823-72fa-472a-8646-795833779390",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfca8358-af6a-4c8d-a230-cc314f84b836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e62975e-3452-4152-b932-99beb4223568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf0a0e7-4101-4c96-9a23-27c86a552528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9416e244-2424-4675-9c5d-388b33533a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c37cc6c-c7da-4afe-989a-70687194eeca",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60da724a-d08c-43f4-b5fa-5fbfa5615684",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1679aac4-15e2-4620-93b0-b5059bf09894"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26df40ab-7947-487c-9e85-52a8ee5a0d46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af597f7e-8f57-47b0-9bcf-8f63972efe45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb648bbc-b428-44b0-bde3-79467ca98d8c",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94baf5b-6ad8-47b4-982c-70abd4cc8653",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "269b5b8f-3690-4942-bbc7-44aea0140905"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53564077-85ea-405a-b2d5-83f5730fc0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c052d447-4c3c-47e3-b2f7-624117cc2ae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70efe68f-6b71-444b-9b21-2acce1f59b9b",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9065b37-edf7-4831-85c7-f7f86b41e5b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb20003-6510-4a95-a60b-9191e0746473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ab61a9-5eb4-40e0-8afa-b151d97aaaf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330aa8a1-6bf5-4548-91b2-0d36fbba8f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7dcd826-d3a4-4692-b3d8-146a96e6678a",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d5b22dc-87d7-4db8-af98-20f5a2410682",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a14b518-caff-47e1-8371-7f4ad0884fc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0514d5a6-7c76-4c50-ad9a-79c0bc45a415",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3e9f91-f430-47d3-89ff-a0e957e9f382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ed8129-279a-4ec3-a88d-cf12c92967da",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a37ecf1c-9162-4a71-ae1b-341f26b5ed86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ac5d0c-d597-4af4-8c0f-f935204debbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0f625b-ed5d-4170-b087-4a46bb3b4f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d73a4655-af61-47b7-b420-0010f9091afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a01338-1f52-4051-a38d-e2db210b35f1",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466d3718-3dd1-4bd0-bdfc-8106adb21a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "605adc67-75a3-40b4-a735-fd193e326bd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66a213b-570d-4de8-9d9e-6112d26c3fd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89dfea42-53b1-464a-8b61-f8c2bd2219d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c02e00-5922-4c49-a0cd-35056018efc0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69770cc0-5bb2-4d73-9aa3-6729312c97ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d853c35-1255-4b8e-87ec-3a61914f9ed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d077a2-c261-446c-92f3-36da3cb5d651",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e46cb7-6812-4e94-b359-90771deec698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "689b5060-be39-43b0-b142-6315e7c22573",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b9778a-fb88-4cdb-937d-f7295712ac5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980de932-30cd-48f7-9cbc-644b3c7dd5ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8a491f-2882-428a-8077-a6d6d84b5b52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "199a9c75-d626-481c-9955-547a5b5621fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d9a20b-852a-4a33-a6b7-8270be13ae0b",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67bc8f69-0f3f-4446-87dc-1483ce437d53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5164d1fd-cf31-4ca2-891a-325ed1852f70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bc128e1-e3bb-4f0c-8bd9-9bd38529565f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b44a3740-1806-4e95-80f9-32dd2b1c07e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4118824-cf76-4ab0-9121-96326d2374d6",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8f636b-df7a-47f0-ad7e-28d24920fd43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8928fb98-4e11-42e3-9722-7c1e3585ac5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0e334ea-2e88-4b1d-88b9-7f139ae570ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5757c911-5c0f-4e17-906b-4904208183c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45bb943a-5e7b-4970-b324-663b49230607",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f36b6f-1123-4d51-b93f-00145655d03c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e514675-8193-427e-b04b-ea9bfce79c4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e3e61f-71aa-4ec8-9f9e-d1e290d2a00e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f9b9ec-8277-4e08-9405-e5463604febb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d7055f-fb1a-437a-838c-10658572b129",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da0a581e-dacd-4a56-9f38-a13c8571325a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca4f000-b8aa-4ea5-8bda-b9bbca2ba3e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b935e2f3-11b0-4263-8a84-f723601ae4ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00af6f34-272c-4d8d-a591-744ab4a09a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9abb4591-e046-4b7f-bf27-a2f4b22f20c0",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e879f890-0744-4e9b-b329-600484175baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fc053a9-0444-419e-b8fa-d0aaf7186c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52df210-8671-4e8d-819d-569bbee26607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d135a9d1-d54d-4798-b8ea-02315c6a6b0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5a9fdf-7437-4f45-8769-ab238a64210d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3219406-07b3-4b48-9035-ebedaefaeb41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "325dd40c-8291-440d-b683-528c0e16ea2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ff729e-ce98-4b54-8ed3-a3a73c4eccce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8297340a-568d-4b4d-a0f5-bf8a54f3be09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67db7af-ba80-4d69-8f37-ba6800081ab7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20eb501e-c175-4df6-a8d7-442facec65fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75f9c349-64ba-4c5b-92cd-2684ca0f1fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0acf9e8e-a79e-4da1-b8e8-cf706de58a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f067226-9356-4be1-a20a-2bc2d04eaf44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1eca80c-84fc-4a9f-810b-97da28c5576b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79552426-57e9-4628-af9e-adfb53e9b935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337e33f0-6310-433c-a788-7e1bc04a43e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97697319-5530-4ec1-b640-f5df9f065d1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a3ec02c-5ee1-4507-8db5-05b488aaa13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0030f09-8f8f-4f74-84ed-195b63dd0d31",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80bdd6b-a1d1-4b50-b865-ba3bc3bc2fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eaa47fd-edca-4ce7-905d-b6eb4a49a008"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3ae185-371e-4e49-ac67-6c80f3dd1d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "092e3382-6bdb-4eca-8792-173de65ff9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a42643-5cfe-463a-b4b7-e7da06a1e4f2",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9476f7e1-5478-4823-903e-d896efd84c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd270ca8-13c1-47fb-a5ae-46f1ce69318e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a7557d-6714-41c1-a70a-50017b183b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92c1496a-e8a2-421a-854f-e2a18bede2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb669e5-41bb-4124-9794-3254e37f8012",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5c96cb-182f-4253-9fb1-8f268ba25676",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be5b624f-94fe-4287-aecb-2931d14a80f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9931a16-f070-4637-bcd5-3df2c3dfb874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb7a3de3-d88e-4a41-949f-463c80c68d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d66329-dfe5-49a8-b2d7-9bc5990c361e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ea1851-aaf0-4fa1-9e78-2a610dca3fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b16252-a4bf-4bad-9359-2055f480b486"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04822142-63cc-4cb0-9805-dd5c3ab92e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7507b31-117e-4c7c-9428-e0bd8613503e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebc67f7-d74c-49bf-9dd9-f2016e856187",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc0d6f5-e2f8-4d51-8f2b-a75138766607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "874e71e0-21d0-417b-8fe5-3c2c01eca514"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "206ff427-6af6-43cb-8b8e-e315fc5b3e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507974ae-1b29-4d3d-ac66-5ba1243a3607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2a3668-881c-4648-adae-da5237fcb528",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e33533-32ca-4982-a2a9-8794e06282c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b2e6b99-834d-474c-b801-e1ee1eef078f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2c20bb-480c-4181-ad6e-bfec8dc1f0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9ed7bd-a4bd-48a4-8a40-e2891b32378f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a359eb-bad3-4520-a6c3-a250388d7238",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322398f2-5115-4edc-8d84-28652e3fab63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ad40abc-d76c-43ca-a55e-25ab336d82d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ed6fcb-d697-4815-9088-79880f037393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b2519d2-54b4-4979-8d0c-42ef51189adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2a86dc-2080-487e-8128-cfaeceb95daf",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b275f8fe-f115-4a0c-a8da-27a7884507e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e69c0a27-446f-422a-b57a-567f5cdb65a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ed1c72d-117a-488e-875a-8e64304ce51c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70e2c87-7488-46cd-888e-044cd95a8c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31521118-63cb-4e8c-88e4-415ceedc4677",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d4d97b-a2f8-44cd-a64b-41bc4c87ea30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dbd2a647-6029-4934-a93f-b6a6b4f69530"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1a33a8-4256-4a29-81af-1dba6ac1c5c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99157029-0a70-46c4-8bc0-726867feabb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbfdc0a-6473-4287-be0c-e541766bba80",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aee261a0-dc86-4a0f-ac62-366b4d3ad7da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4321d78-ea77-425e-a555-05f2efabee08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b10c361-5b5f-4f15-ba3d-a1ac2ac88aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9c5e02-bd13-4b9c-af1e-35c86a3727c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6804f1-62d3-4e5b-848e-e89fd9ab8c8e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc647960-873a-4603-b63f-fbabf310b9ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33f51663-97eb-446b-808b-1566c748ddd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d81759-ab36-4b73-80d7-637fb8f78de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5580cf8-96d4-4c92-98d6-4f14dc3bc458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c105e97-493b-47bb-8806-3d0a2b809316",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fe6b01-ed75-42ad-9867-c8ee0300cadb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "384e956a-b770-43bc-9d05-a18c7f41d010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0bb3db-c202-4396-ae08-c716c535c375",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08fee84d-eaa3-4328-bf75-4719ce6e1bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c9b08c-5e55-49b1-bf7e-3c1b49873802",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d202ab84-d879-4717-a293-5dd6185fe317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afad0db2-3d63-4fd7-a6dd-7cb57327abcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a7cbed-a65c-4312-90b8-9a33659805f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52efa46b-3f59-4157-829d-4d7b3e8fa847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7e2e06-6bb0-488d-8f06-0a1d5d5dd863",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55cdd653-adbb-40cd-ae5e-5ef7454b5c16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "553f77a1-88a1-43cc-b256-0eac98640495"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e931847-4871-4447-8e4a-6983a29a47d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40467c14-4ad2-4541-b603-a1bd47e9c737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b063e1-7b57-4b34-bce7-de637032fb78",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70ff57a-433d-42ff-9963-d8facda00d8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8796cebc-4fa1-42f7-a4cd-4e3c58f2b8fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb97231-151d-452c-9e17-0518366f870d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "381b88f8-e2bb-4d0b-b1f9-a380d244b0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfb4a87-e26a-4c13-8174-d994abb0313d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93932835-f2b1-48c1-ab6f-4f2f6611f5f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23151be6-ad49-4960-9429-3e4765079e04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6482f294-3ed9-4820-99d1-a29c47c26b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d690b1b-4bc5-4ec7-bf66-5f0a291671b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66598f2f-6875-44d2-8d86-9c11d579f9a5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "766e2846-82da-46e7-8b0e-f7a064921d80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5961172-0f4c-4c04-be97-99da83450168"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6989c4ac-e55a-4341-bd1d-48ed3d6bbcf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7c65c5b-ee7e-4ff9-8310-464a30a12be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd2808d-5d9b-4920-85d3-7b516af3a674",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342095c5-e519-4929-8082-65782565856c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e79067d7-c05d-4734-9af3-64bc198cb7e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f21254-00c1-4f11-b333-9ca15dfac7df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "336f51d9-5877-4a23-bd87-10827163d70b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d000c3a6-ada4-4431-88f6-1ea6ea99d6dd",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b57ac26-fb21-4806-bceb-08db2b8cdcf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5f6f0d0-87c7-4e68-a79d-9d4d155b4b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ff5e5c-ad1d-456e-b33c-8ced9caefeaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2eb8be-f605-4b8f-816f-3889d2ef111b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f8f407-726a-41b9-8b3e-be9e0bd19699",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86a7939-f15e-41dd-b7ac-e64f8900f41b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee6e0241-f71c-45bd-8965-f7dacfffb64c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "708578d6-91f2-4e1a-b4bf-53689cd4db71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18328a63-6e2a-4af3-96a2-b9c1649790d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e34ded6a-e624-4020-90e5-9fd8466e2db5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cfa314-596a-4812-b7ef-a4e4874768c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f023666d-7cb8-43bc-bfd6-89203b745cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "913e98a3-7cc7-4a31-b308-706ba9186831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3387567-e6cf-4daa-ad69-ef3b73c604c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f5420a-6603-45b3-aad4-01c13560fd7e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ffc7f2d-4aa4-4f4f-be13-bd5a0d45fd5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cfff68a-df7d-4649-bf05-e0383d1a7cf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e3eaf3-615e-46e7-8880-7bc1e2b7a7b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9919eaaa-da94-46b9-a79a-aba05755d1b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78942a38-70e2-4313-9ad4-7fa7e1e72ba5",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b834be7c-63e8-4901-9119-f1cae4e9e506",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7608473c-e26c-47ed-90d1-933dfd2dca35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39553b8e-e9ff-49a4-a5d9-a510fac9a271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "506dcd55-4466-42db-8943-c3a3d2542f79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5dea39-5e80-41b8-bc92-1a2c0cd7446b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bab205-5b27-4523-ac59-a2c43692a8f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76984e0a-8da1-4ba2-8f36-8819c503932d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdd4813d-0f5a-4d46-90ce-ed0cec3a29b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510ec0a1-7ac6-4a0e-a2ff-1b19db03457b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b94414-a5c6-4ff2-94a2-f0c5b73fb9b1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d5f284b-5778-4d63-b4e6-1e09eb769f4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8f43a41-ec06-4a4b-a2da-817549e9c1d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccf7947-c140-469e-83c2-a7341f4bb427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642450d6-607a-460b-a4ec-e3a4bcbb5008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d97d7e1-89c8-4e23-aa18-d63dba3accc4",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee62aa2b-9882-4fa7-aae9-a6c6672bb1db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a27ef76b-f179-47bd-a315-dab669338824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a8d1da-091a-4f50-bf3b-02abf7777b3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95a5438-ebb0-4f73-b76e-f5b983f2b53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2f3b40-6cc7-4ab8-94f0-140ff7d18c2a",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc90a7fc-3ee5-4f57-b229-650a0fad64fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2e9de3d-d862-4131-8105-170550442d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ece925e-64d9-4342-9e1e-77c3f38a1f1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4b41f3-111d-4d7a-8837-fd8fbcd1452c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6210c59-ab83-4557-977e-9b47d69677f7",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8911eb-e61d-4baa-a1de-e95b9d2813b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dae6b4b7-cd5e-43ac-a522-1d7ce66863b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4f0bee9-00d0-41a1-acb3-0edffba691a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb0a3b6b-e029-4b4e-af27-30003a7e65de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd38f272-d47d-40ef-9742-3ac84aeaf9be",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189f1966-f83f-4f11-a1e5-2c5fecebb772",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18ef6d37-546b-4474-a1a1-5714abcac8e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf7f3be4-2753-4c7a-ae55-43cb53939849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5634434-a278-4c3a-ad18-f7f9021fe784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfc255f-3556-423b-802f-753a46689533",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fabe789-a2c8-4436-8d3c-9d5749fc5922",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ce9689b-755b-4ae8-a199-a5d00bc89591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c321196-a013-479e-ad3e-e5284749580a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64ceef04-9349-43ef-b353-2a97d7979618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a82d62-1a56-45ba-9007-953556f9bb79",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9a615b-e5d6-4e56-9bf0-cf117b400d98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc2482d1-bd30-499d-b943-77b2d868a396"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c354b99-a0b9-4c53-b8da-4048513f9b92",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7e4a2b6-0619-460a-91fc-0f96731dc725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffc620ab-8805-49c1-a5ba-f855f23cd008",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1a9494-4109-4dbd-83b4-22c5f9d5031e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0280b656-eff2-49b5-94ec-0bb2d6603632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca3e40bf-1cef-46cf-a39c-f0501a2ece5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f042d34a-b09b-4cf2-8631-8eee9a408133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211b3a6f-d4e9-423b-bc09-ca670aa0621a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7845177-bea0-4cb7-a216-6b12ec576835",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfc16021-292f-41d1-8ce8-c3f30d3774c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52ca908f-b23a-4443-8e82-9d5cfc1ec2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2485824-8235-4e91-8606-b879dc907bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe8464f-3b62-4934-9446-c686bebb0bfc",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b03436-0e93-4814-86cf-1ae89fd91826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92099f82-cc55-40d0-9145-2251e6ad8da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e518474-7367-4d3b-94ee-31766eed087d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5e2fe4-dc9a-41ed-85d8-88e4f64a6379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65bebe2-4d71-474e-b2ee-838e8ab730ee",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4195cd90-11e8-41ce-b892-2410d7071b50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "982c228c-dbaf-423e-91f1-be6ac05dfcd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6a7cde-0935-4fee-b006-b33888495c41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b349d243-ef93-4285-b709-4c9f3d6b7bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48594092-1b78-42c6-a05c-2a1a904de702",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f08ee35-98f2-4d0f-9a2b-fc7a7f9120a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd6356f9-2790-49ad-a790-78a5009d1918"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d49ca4-fea4-49ce-8fe1-acf428109a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a9f98f5-3601-40ce-ade6-4d8a0c845c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03afd5c3-a702-4ef8-a4da-c1025a98d0e7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff0e6cf-6399-48b3-96db-630f19f344a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5b23b08-953b-4b4e-9e08-3608a0b98cfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87aeeac7-f50a-4ded-8196-04b579fb9625",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85cbeb3b-acc7-4c21-9e3d-f3f2df37c9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f086da68-809c-46e3-a183-a3261c6bc015",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e626f6-a51a-4489-9540-a5d0328ab4b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95ca0e78-19fd-4cd0-be6f-4cc108df3792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc29db12-52ae-4cfd-ac1b-1bacc913b143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e6e7ea9-2f06-4276-a63d-3ec170c1aafb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f71e1e74-9365-4ea8-afe1-3337db0e5063",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "420c4109-43cf-4df5-ae2d-16f261717500"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "94a9cfcb-6f8e-48a2-ad7b-32fc3e4c54fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "607ce3d2-f643-4963-9ee7-91c8439882b3"
                    }
                  }
                ]
              },
              {
                "id": "aefd6059-a2d4-4824-90c0-636b336750f6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "082d2147-1547-433f-843d-c05db5fb1c43",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e766058-82ea-47fa-a1b5-b00d6e5db412",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "dd1100db-2eab-4632-8128-a8b5b2839ece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2b48692-154a-47cc-8460-337ebece4ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abcc1390-40ac-4d50-9355-aa0beb6b1e2b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "641f37b7-5c26-4bf7-aecd-1123cfec3377",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff0c04ac-ba72-40ff-a0ec-6cd4c4343ef0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0c7c423-e482-4ea9-afd8-528cf343013e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31f664ec-19c8-45f8-83c0-23b9295cfb65"
                    }
                  }
                ]
              },
              {
                "id": "94ca55ed-cfe4-40da-8fbe-1114a07ff76b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "44a5d7fd-b925-4e85-b34b-607645519834",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccb9276-dc81-4e7a-99c5-bf7db04d3694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "924164ae-ea0e-4d69-af73-948840a19b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4613124d-45b1-4ad2-aa91-608db56c01a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db0500b5-8533-42fd-a66b-a878050c9cd3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a4a6320b-8ba2-47f0-8b1f-1f86d5cd440d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cc3e1f00-218f-4b5e-a63f-2da1074a9877",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8473f890-55e6-431e-99da-e6d36acd8131",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "849e8ed7-0d04-4322-9c0e-109815539b20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad799cdc-6ab0-40a3-a9fe-0f2580e0c11b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "476451a0-787d-453a-80a2-a1a17293f0a2"
                    }
                  }
                ]
              },
              {
                "id": "5ef8e6ca-dd3a-4908-ad14-40847fe6aee5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39b2b099-0a5d-4895-b56e-2116b3e6ff67",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3c343224-16a2-496e-82d5-64af0f427513"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d013b8bd-a609-4b73-abfc-b24046884d62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "925081fa-d52b-44ca-90a7-a43365188bf0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8937f0e-71a2-4198-a883-e613835f42af",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "02076adb-fc51-469a-9e87-1d8d900f0bfc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "86c37426-a423-427e-9d6c-503a32a8ad2a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55e7547c-44f6-47c3-a563-76066761fae6"
            }
          }
        ]
      },
      {
        "id": "a1aeaf4f-723b-49cf-a2f0-fc310530ab9b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fb5cdeaf-2138-4ae9-9aec-7e99e8fd44e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "daf87a9e-9c35-4156-8834-3376873e7249",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "39847543-9179-4040-9cb9-12a4e8ec05ca",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80562075-00e6-41ad-89d1-509047b7a50f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c7e8ad97-9a40-43df-9830-c60eb88a063b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f221e015-9774-49fe-84a4-896026587462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3918101f-51b8-4720-8d63-d2bcd606e8dc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "73a40d95-64bd-41b2-a3e5-caa80cf828cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12281033-5740-4ce3-8d0d-2da3aa01dbd3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4222ac6-1140-4b32-bde9-bb8e741df6ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25b4db6f-eff6-43d4-9fac-bf348fc2506d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a1616f5f-e883-46ee-9997-8da8e0c52c59",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "eb9b6ab2-1259-49fd-9ce9-d84f0c71d718"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "573ea6d5-2bc5-45e1-84d7-a45cc5c30a27",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dabe17bc-ad60-448f-a3f8-27e8cb654686"
            }
          }
        ]
      },
      {
        "id": "238eabd9-3117-443c-848c-fe4ef61e2295",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e4c74705-ecd5-49a1-a84f-c22010744c44",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a03061dc-ee99-4846-8fc3-3a997358d540",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9a04f7f-c57b-4082-88bc-267fdf8ee5ca",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd6df76-0dbc-4c3f-bd6e-630da13a990c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5601f892-f8ab-4d82-81a0-b2dddf13b502"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22584324-9784-4bcf-9d0c-ddcad6bc2293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a7fe568-f0bf-47d9-9f14-8be99896c9ce"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7618e76a-ff1c-48f8-99ab-306504f6670b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9375d884-ddb6-46f3-aec0-d3d175435c30"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "15329e3b-6400-4650-8e3a-e38add547b09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69c76de9-7db9-4bf5-88e6-5f23e3095b75"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de4e700c-891e-4273-b3d3-ae1bc33bd9ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c5402182-b090-4739-88ba-aa4b968e7af7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60b99db9-2dc0-4472-88b1-bdc13bc08ef0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2f6433ac-b694-44a4-a800-414c21aa89b5"
            }
          }
        ]
      },
      {
        "id": "3a9d62bc-ee7b-456b-836f-e8625ef49446",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2dd15ac4-71f4-47bf-b778-bac3c759a759",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94f0ba30-3fab-4266-a195-d637196df889",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fa78d05c-3935-44eb-a4d2-370892bf1f58",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a10101-15c3-492d-b781-38989d0942fd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b3d5cbf-444d-4da8-9e23-7c85ece54f57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a904c3f6-2917-4dcb-b39e-65bb9ed8a59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a312f757-73dc-4e9d-b074-f40a8f2d496e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8ff0e8b-ba00-4def-91a7-3669dd2d3552",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a049430-5887-4818-93cf-13a69dd97f2c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c2c925e-4737-4199-803c-6f4cc648add8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ac93640-222a-45d3-8bc2-0708351a0b79"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd14992c-43bd-42bd-b59c-2f3658edf5c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "227f2fb6-9d9e-4315-a149-735ca640688e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f84950a0-3251-4d6c-b7f1-59f4db3a7181",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e9d1280-8628-4d6e-b8e7-bcc4adf90918"
            }
          }
        ]
      },
      {
        "id": "6b6b8836-3bfe-442a-877d-3fc16392b323",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "912485fb-c0ae-44d7-a23c-4853978a115a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14b847a8-ad7b-4af8-bcee-d4442cc627f4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d58c0fc4-fc85-4b79-8793-a5ec8a61e439",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8777b52-9f18-4205-8d3d-4efc3ebd75b0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "37505017-fb1c-4ef2-89eb-0ab41807e707",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 210.39084507042253,
      "responseMin": 13,
      "responseMax": 6677,
      "responseSd": 708.9961848965601,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1691195914159,
      "completed": 1691195986109
    },
    "executions": [
      {
        "id": "e0cb683b-75aa-498a-88db-b9c4f1245ee0",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "69284e77-650c-4e1a-96dc-520011a30174",
          "httpRequestId": "eec48487-888b-475d-a614-a6b73045c507"
        },
        "item": {
          "id": "e0cb683b-75aa-498a-88db-b9c4f1245ee0",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "79bc5796-ec03-4810-9a63-7a676adefc7a",
          "status": "OK",
          "code": 200,
          "responseTime": 170,
          "responseSize": 0
        }
      },
      {
        "id": "9a9d824f-9bda-475d-badc-4d398e6b75f1",
        "cursor": {
          "ref": "4d1a4d42-f508-4a21-a43b-500b5ab58336",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cd138088-aefe-4ac9-a8d6-e0dea6d2f993"
        },
        "item": {
          "id": "9a9d824f-9bda-475d-badc-4d398e6b75f1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "dd2037ba-c091-4f3a-870d-f8b4894a4595",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 0
        }
      },
      {
        "id": "6c1df841-e703-437c-8bdc-b9f84cdc8300",
        "cursor": {
          "ref": "06a28bd8-6463-43e9-bc35-ab03850e6f08",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "450df1c0-aad7-4990-a675-35b43613be76"
        },
        "item": {
          "id": "6c1df841-e703-437c-8bdc-b9f84cdc8300",
          "name": "did_json"
        },
        "response": {
          "id": "9c3e6d6a-55c7-4249-8a65-8bfdaa164d7a",
          "status": "OK",
          "code": 200,
          "responseTime": 190,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd9aacd-929d-404d-862e-b577edd0dbb9",
        "cursor": {
          "ref": "2a9a2a4f-12e7-41c6-a455-386155c3c24c",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d557f7e1-7e52-4b32-b22b-27c749f64c9b"
        },
        "item": {
          "id": "0cd9aacd-929d-404d-862e-b577edd0dbb9",
          "name": "did:invalid"
        },
        "response": {
          "id": "2af2c2e3-7202-45f2-8337-ee044ac18b04",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1121,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd9aacd-929d-404d-862e-b577edd0dbb9",
        "cursor": {
          "ref": "2a9a2a4f-12e7-41c6-a455-386155c3c24c",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d557f7e1-7e52-4b32-b22b-27c749f64c9b"
        },
        "item": {
          "id": "0cd9aacd-929d-404d-862e-b577edd0dbb9",
          "name": "did:invalid"
        },
        "response": {
          "id": "2af2c2e3-7202-45f2-8337-ee044ac18b04",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1121,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b32fe9-e1a3-4f2c-b656-c460df7b68fb",
        "cursor": {
          "ref": "67e112ff-a8ce-4922-8b39-6e5dddfbfff7",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "15906a42-ef3a-4303-9a01-fa4f613f143f"
        },
        "item": {
          "id": "31b32fe9-e1a3-4f2c-b656-c460df7b68fb",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c5bc3bb2-edad-4fcd-baaf-dc3548bb4908",
          "status": "Not Found",
          "code": 404,
          "responseTime": 22,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e57439-4870-4ef7-8a97-1e84da7125a7",
        "cursor": {
          "ref": "5c14b9dd-667e-40a9-a7ec-ac9723bab267",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "edd4cb8a-f3b0-41d0-88a7-930a618573db"
        },
        "item": {
          "id": "e4e57439-4870-4ef7-8a97-1e84da7125a7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4f0da426-7b05-4937-ae2e-aee8c86fd269",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ac8d49-b319-4619-a311-511703a381cd",
        "cursor": {
          "ref": "572058a2-250f-4d08-a003-4b1416d702f7",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "ccd95c06-7d58-4efc-b371-7c429662686e"
        },
        "item": {
          "id": "99ac8d49-b319-4619-a311-511703a381cd",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "95973f76-d90f-4f24-a995-b4ca95d04b7e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12bc570-4e3d-45fe-bd07-5a476dd44cfe",
        "cursor": {
          "ref": "adba448a-6d75-41fa-b416-3f6c2c8a360e",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "603f8741-83a1-42b6-8fb1-18bd9cc1700a"
        },
        "item": {
          "id": "e12bc570-4e3d-45fe-bd07-5a476dd44cfe",
          "name": "identifiers"
        },
        "response": {
          "id": "3d8aef3c-35b0-4d07-bb3d-b35d2b9e3f5d",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed031df0-5791-41b0-9b94-3aac101f1977",
        "cursor": {
          "ref": "7869d746-a5d1-4e08-8009-fc71da1fcf2a",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "7092d203-a95a-433f-84b1-763c29efe9d0"
        },
        "item": {
          "id": "ed031df0-5791-41b0-9b94-3aac101f1977",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e3235b58-c034-43a8-976f-96cfc7af4baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba544dea-7762-4671-acc5-51dfac43d880",
        "cursor": {
          "ref": "1e279e9c-1b37-4454-8df3-98fdccfbf59a",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "3cd8ef82-2a21-4899-8f6c-398f502bb33d"
        },
        "item": {
          "id": "ba544dea-7762-4671-acc5-51dfac43d880",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "2004099b-994d-490e-944d-dbb0717414bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f2dc5b2-b293-4e17-9919-878a5111fc49",
        "cursor": {
          "ref": "469a64ce-8ff3-495d-bff2-91a72bbc8410",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "38f26135-2f98-47a8-abfc-7b7aaf5d82a2"
        },
        "item": {
          "id": "0f2dc5b2-b293-4e17-9919-878a5111fc49",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "5752f1fd-4473-4960-b857-00888de899a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98f0464-5757-4484-8ef1-1ea1cd3628d4",
        "cursor": {
          "ref": "c1c8582e-2cf2-4155-9a39-d851e8450686",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cf2d76ac-fbed-4939-b471-f63fb1572644"
        },
        "item": {
          "id": "c98f0464-5757-4484-8ef1-1ea1cd3628d4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9e395d2b-ec4a-4df5-8dd1-ee07fd425266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f632ea-25e9-40b3-aff5-92aca4d3006f",
        "cursor": {
          "ref": "a9dc6150-294d-4e6f-8ee7-a0c995f99177",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "ecbe8a63-fcc2-43b0-aa18-7613d0a860f2"
        },
        "item": {
          "id": "60f632ea-25e9-40b3-aff5-92aca4d3006f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "ad66b353-9601-40aa-83d9-28e6f597841e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316a0ea6-acf9-4742-9b2d-9c1fc8d5b428",
        "cursor": {
          "ref": "45f03305-2160-473f-8707-f9843c7cccb0",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "56dba506-c272-43e8-8864-7f90218775cd"
        },
        "item": {
          "id": "316a0ea6-acf9-4742-9b2d-9c1fc8d5b428",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "8476f8f2-70b7-4652-8c58-58ac8e2cf6d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0817de29-6786-43dd-b4f0-d3de2c5dd642",
        "cursor": {
          "ref": "d2c214dd-8d77-4610-a368-ec97618e486a",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5b118c63-a294-4762-b10c-b60c3c0601b7"
        },
        "item": {
          "id": "0817de29-6786-43dd-b4f0-d3de2c5dd642",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c5b3b1c9-18d7-41d3-bc32-085f63ff52d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65137ae5-eb6d-4347-bf8c-a8558d257388",
        "cursor": {
          "ref": "1c7ef409-e552-4025-a0cd-f5e3ec5b57ff",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "14ff8f3d-330e-4005-8cbf-38cb35d2bb0f"
        },
        "item": {
          "id": "65137ae5-eb6d-4347-bf8c-a8558d257388",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "8aae94df-3872-4285-a535-6d8cf88248b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371a7c2c-85d9-4391-9eb1-06c8b7ab5e24",
        "cursor": {
          "ref": "ef405d81-e7dd-46b4-8e53-a3fc5719e1f8",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d08b90bf-6d7e-41ab-aadf-ea76adf8368b"
        },
        "item": {
          "id": "371a7c2c-85d9-4391-9eb1-06c8b7ab5e24",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d2022ae3-1602-4628-b9e8-0d37b147213b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41bccc0-5376-4e71-b5c5-4cc3b5182da5",
        "cursor": {
          "ref": "3249cca7-dc11-4c48-90c7-8d581b1e026b",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b3f93b96-e694-4479-b711-57a3b3f52425"
        },
        "item": {
          "id": "c41bccc0-5376-4e71-b5c5-4cc3b5182da5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "41b85255-4f82-4c98-9e1a-1f52c3f26f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7fd70a6-6606-42b7-b213-35becfac403a",
        "cursor": {
          "ref": "8bea86ec-6efc-46e5-b856-8a13ad6aa064",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "6703d24f-4aa9-4cc0-99cc-fd68a3bd6c81"
        },
        "item": {
          "id": "f7fd70a6-6606-42b7-b213-35becfac403a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "dbb19058-a7fe-42c8-9e84-d73b7eaeb99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad2efb8-0e31-47f3-b3c8-0ba178c1ac6d",
        "cursor": {
          "ref": "f05a3512-60d7-47a6-8aea-f988b3413f92",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "739672b9-72df-4609-8d4f-fbec31527a77"
        },
        "item": {
          "id": "3ad2efb8-0e31-47f3-b3c8-0ba178c1ac6d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "938b1d5a-5a39-4761-9fb4-95eb9d9ee3c2",
          "status": "Created",
          "code": 201,
          "responseTime": 961,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "83cc0424-61ff-4699-b5ce-7f4371427d7d",
        "cursor": {
          "ref": "a05d2e94-f06e-4bc3-b04d-0c1190ad3ae7",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2c47224e-84c2-4c53-be38-d7595642ac38"
        },
        "item": {
          "id": "83cc0424-61ff-4699-b5ce-7f4371427d7d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "134031a6-6094-4fdc-bb72-18c3568fa0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaaa3cf2-1609-4fbe-8f40-a3dac8f56f67",
        "cursor": {
          "ref": "1a74af9f-fd68-4938-bfa9-bfc0787c4c01",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "c851d3f2-a22e-4f85-b2d3-0c20138a723d"
        },
        "item": {
          "id": "eaaa3cf2-1609-4fbe-8f40-a3dac8f56f67",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6fd5db6c-d1a7-4392-8112-58598b0ecf80",
          "status": "Created",
          "code": 201,
          "responseTime": 6677,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "e7ee0c79-0c42-4aa2-9c49-4d3a8c6b830d",
        "cursor": {
          "ref": "ed086bcc-5374-4198-bd22-615b6f502c29",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "4eb536e6-ece2-4835-ab81-cb57d9203e27"
        },
        "item": {
          "id": "e7ee0c79-0c42-4aa2-9c49-4d3a8c6b830d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "158c1dcb-adff-46aa-8118-999d21427c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab067d7-d942-4524-9537-05429f2ed486",
        "cursor": {
          "ref": "60826276-dc1c-4476-84b6-19677596c483",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a9e29ebb-5a2d-4171-9685-c8bf19dd02e4"
        },
        "item": {
          "id": "aab067d7-d942-4524-9537-05429f2ed486",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "10fe5587-072f-4f9a-9d99-f3c0eebf8b0c",
          "status": "Created",
          "code": 201,
          "responseTime": 3045,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "66a747a0-8c60-44fb-9eba-6e1249cc4414",
        "cursor": {
          "ref": "a3cf262d-1735-48d0-8960-8b3a4196960d",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3d3ce82a-35c3-4d50-865d-6416a83791e9"
        },
        "item": {
          "id": "66a747a0-8c60-44fb-9eba-6e1249cc4414",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "db60a1aa-4405-4572-8bc3-0b9eca2a99e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb7420a-18a6-4b82-b125-4935af5e1431",
        "cursor": {
          "ref": "4f2357e1-8f73-402f-ab7d-9f41cc989f23",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "99bae5d4-ba75-483e-8571-5c6e400c6452"
        },
        "item": {
          "id": "efb7420a-18a6-4b82-b125-4935af5e1431",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "6f541fcc-4713-42fd-9d11-d855f9e7efae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372f9adc-5ff0-44c2-9df6-f01181b3fe2a",
        "cursor": {
          "ref": "f1eb3536-b260-493b-83b7-7ce7538b39a9",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "90fb19f5-3928-4ca0-a6f0-e9b696374c84"
        },
        "item": {
          "id": "372f9adc-5ff0-44c2-9df6-f01181b3fe2a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "f96851f7-5f8f-416e-8d2a-b32669266039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "060f56ed-6481-403f-8569-533f2d2ef9ce",
        "cursor": {
          "ref": "c200200c-d7d9-460d-ae95-c146b59752c8",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e7dfccb1-1eee-4d24-a587-a2157ee13145"
        },
        "item": {
          "id": "060f56ed-6481-403f-8569-533f2d2ef9ce",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "999bee81-65be-451f-b364-396a4764cb98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad467ce-19c7-4154-b376-1fa58bc3e98e",
        "cursor": {
          "ref": "6691b3de-2b15-4e46-bd0e-ebd1e7c57bbb",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "07226f1f-8085-4814-a3d7-c74bb3a0f3e0"
        },
        "item": {
          "id": "4ad467ce-19c7-4154-b376-1fa58bc3e98e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "521aa52b-f662-432f-9c5e-e076b8b3fd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10e8dc3-c864-4af7-a29a-3ded02139ecf",
        "cursor": {
          "ref": "378955b7-2f8f-4e16-90f9-064b024ef54f",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "cc5c0bc9-70e0-48dd-b5ae-f75e267eaac1"
        },
        "item": {
          "id": "c10e8dc3-c864-4af7-a29a-3ded02139ecf",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "211190f2-0a9a-4975-8bff-f4e409daeff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b61092b-0d0a-4781-bf9b-62a73514a171",
        "cursor": {
          "ref": "44cc394b-65b7-4f01-8e50-174a885f1070",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "aba7f7ff-d88a-4cbb-b494-1a71489cf4c9"
        },
        "item": {
          "id": "0b61092b-0d0a-4781-bf9b-62a73514a171",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6e6645d7-50da-4650-bab0-c07554f97e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d8ed05-d851-4651-baed-0e347db9402c",
        "cursor": {
          "ref": "b556e2e0-00d0-4a4e-96f8-6eabd62a7c5b",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2c6a598d-5ab5-4512-8800-f0ff9d0b91e4"
        },
        "item": {
          "id": "30d8ed05-d851-4651-baed-0e347db9402c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "edfca542-c169-4b65-b018-a45173e3d1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4d4bf8-4039-4543-b45c-fee382a3e189",
        "cursor": {
          "ref": "92d56c18-cd26-4865-9a55-b4ac0cb57b3c",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2f6aa123-89ec-4a8d-8845-16ab55361695"
        },
        "item": {
          "id": "8b4d4bf8-4039-4543-b45c-fee382a3e189",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d05ff50e-0c64-4423-bc9e-cd918c53053f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0531b64-5fa8-4b32-96e5-714edce3f04e",
        "cursor": {
          "ref": "f6002d5c-f886-4f35-b80e-0a17f659de90",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7112bc04-7c5d-43b3-86eb-5da40d4f7128"
        },
        "item": {
          "id": "e0531b64-5fa8-4b32-96e5-714edce3f04e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5ed8c1ab-4124-4178-96fe-c6564044dc33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c84936-3f62-4fa3-89f1-2324b966b322",
        "cursor": {
          "ref": "adb44eee-f0c6-4b8a-9db6-5601a272a9ee",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e2991025-2545-4ccd-b097-ee213b4e6f00"
        },
        "item": {
          "id": "a9c84936-3f62-4fa3-89f1-2324b966b322",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "b127420f-c215-4163-944e-5f551ca1e4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff173251-1a44-4cb5-8ef2-a3c58988f12b",
        "cursor": {
          "ref": "3d913116-582d-4476-8f82-8d1e97322b54",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "17cc85f6-2055-44b1-a84c-9775cf8c1914"
        },
        "item": {
          "id": "ff173251-1a44-4cb5-8ef2-a3c58988f12b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1f61f195-5809-4677-a066-13dd7c252c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628497cf-5b70-4e37-87d9-f7580a8eb669",
        "cursor": {
          "ref": "a40edfcf-5c45-4e45-a403-e62b0902a074",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f14bc498-5643-4cda-8112-6a425f0a680d"
        },
        "item": {
          "id": "628497cf-5b70-4e37-87d9-f7580a8eb669",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b71d0b20-b6e6-47c6-974e-8e4e743c720a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ee514e-c7e1-4343-a22a-43a267336218",
        "cursor": {
          "ref": "1b73b7f6-236a-49a4-b8c3-15cbc9ad4c3e",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1142db85-f678-4a76-851a-879ba261ecf6"
        },
        "item": {
          "id": "49ee514e-c7e1-4343-a22a-43a267336218",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a15fd31a-7e29-4648-b715-cb6b98caddd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0b4011-07cf-4a71-aa38-6b95f6fa3c62",
        "cursor": {
          "ref": "a91cec3c-eee3-445e-aac2-1d633ee4de17",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b6165f93-a014-4c18-bcf4-ffe5834f22a0"
        },
        "item": {
          "id": "7c0b4011-07cf-4a71-aa38-6b95f6fa3c62",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "d22eb6ef-ec22-43ef-a21f-8d0a53b957af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5515335b-c1bb-4814-ae06-e58f34377baa",
        "cursor": {
          "ref": "27d2a4d9-3d91-4291-a66d-391f5c6ea1c9",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "38449f67-a269-4f95-b270-144b6551d107"
        },
        "item": {
          "id": "5515335b-c1bb-4814-ae06-e58f34377baa",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b6072837-f7b7-4623-b2cb-d3fdafca95ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8f47c1-f6c0-4d13-a993-57a1a3a56b78",
        "cursor": {
          "ref": "e4041bf2-bb70-43d6-a8b5-c20149a3da87",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "1f08e947-c0fc-4938-8e94-dd511628d073"
        },
        "item": {
          "id": "3f8f47c1-f6c0-4d13-a993-57a1a3a56b78",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "5b033c1f-d391-4a7a-aa82-9d14afbbf63e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207e2171-fd13-498e-aa4b-ed7a0cce862f",
        "cursor": {
          "ref": "2ec811c7-60b8-4da9-84e0-9da8f93a4a38",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "392dfd47-557b-4f46-9653-c4e463355af2"
        },
        "item": {
          "id": "207e2171-fd13-498e-aa4b-ed7a0cce862f",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "bdf87319-8cf1-40b3-bb8b-ae5759e7ba9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99d86f7-3c6a-498e-968a-84c9d0e60702",
        "cursor": {
          "ref": "4f72767e-ba4e-4de8-9c05-012c7f9d1b8e",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d092122d-792c-45af-ae2b-43c460903915"
        },
        "item": {
          "id": "e99d86f7-3c6a-498e-968a-84c9d0e60702",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0af196a4-70e3-4ba1-b68e-e7538afffd49",
          "status": "Created",
          "code": 201,
          "responseTime": 2571,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "6c33982c-1808-49f2-a7ba-c9d7e9af2c57",
        "cursor": {
          "ref": "1745d116-8c3f-43d6-834c-799f86321c50",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "19d5559d-b82d-4a59-9c11-9c1cd3734316"
        },
        "item": {
          "id": "6c33982c-1808-49f2-a7ba-c9d7e9af2c57",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e2c4d0e1-dd35-4eea-9347-d7acf2dd7f75",
          "status": "Created",
          "code": 201,
          "responseTime": 2891,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "30679664-a21c-4a07-83dc-dbdc0bfade88",
        "cursor": {
          "ref": "4074c306-eed3-4028-a2b1-6600b8f613ce",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "1e04dc6e-8fab-4c1e-8a8d-e14c2ba9594a"
        },
        "item": {
          "id": "30679664-a21c-4a07-83dc-dbdc0bfade88",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "819f1ac7-bf7a-4b45-a8dc-5be064e645fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "931fcecc-55a8-4fee-97bc-00651d3e9cec",
        "cursor": {
          "ref": "4741fa22-590d-4107-bec8-924a22cc3013",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "69faff5f-ad9a-4dca-9123-2bb66312cab8"
        },
        "item": {
          "id": "931fcecc-55a8-4fee-97bc-00651d3e9cec",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "eec76dea-bd93-4783-bdfa-c13b16d81140",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffd14b2-e0a9-4cd9-86f0-624d4bb687fa",
        "cursor": {
          "ref": "937d3c9f-5981-4b1f-b6a3-8cef1ac51352",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "5aecdc36-3216-4fec-97df-12d406bb760a"
        },
        "item": {
          "id": "3ffd14b2-e0a9-4cd9-86f0-624d4bb687fa",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e7669f64-4864-4b07-85cb-c8fcb5323e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa560f24-ecfc-43f9-99c9-1c4e1f01bd77",
        "cursor": {
          "ref": "311eda11-3eb8-4ff0-92a4-a0a0e090e452",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "ace5caf0-0654-4447-a6bf-9fa400c36d45"
        },
        "item": {
          "id": "aa560f24-ecfc-43f9-99c9-1c4e1f01bd77",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5a023780-4efb-4913-9f06-1c127d3ba174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6f8332-fe54-4ac9-940d-bc0b9eafa080",
        "cursor": {
          "ref": "a4ad7fcb-7305-4669-9aa7-fad9cf9675f4",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "224887d4-f919-404e-a016-b883d44c6e96"
        },
        "item": {
          "id": "4b6f8332-fe54-4ac9-940d-bc0b9eafa080",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "89645c95-1f3a-4ddd-8c31-3487d8d385a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e764caf0-4902-4cf8-b9b1-d7f0c311d4f8",
        "cursor": {
          "ref": "d72a2231-79e7-4cca-9006-5896b8530f53",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2e85bede-0eef-4f52-ae82-62c5804cea6d"
        },
        "item": {
          "id": "e764caf0-4902-4cf8-b9b1-d7f0c311d4f8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "ef80dc44-833b-4c84-b333-ac0b8e8c7035",
          "status": "Created",
          "code": 201,
          "responseTime": 2500,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "81152c1f-25fd-4a29-99ad-09e641ffe2c6",
        "cursor": {
          "ref": "2a9dd422-f2fa-48d0-99f8-4777af5f6e3d",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "483ae632-2490-4bc9-9412-3bffe54760fa"
        },
        "item": {
          "id": "81152c1f-25fd-4a29-99ad-09e641ffe2c6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "4c0eb18c-1b75-4049-8998-5dad398de888",
          "status": "Created",
          "code": 201,
          "responseTime": 2767,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "b5d6dc90-4df8-416c-a7c6-632575d48018",
        "cursor": {
          "ref": "10f7e7d2-4761-4abf-8dea-2eac0fd76f85",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "aa890e06-8ce6-46c1-ad62-d8a9a86d6ca8"
        },
        "item": {
          "id": "b5d6dc90-4df8-416c-a7c6-632575d48018",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "90a88ec2-ae12-478d-bca8-1294dccfb62e",
          "status": "Created",
          "code": 201,
          "responseTime": 2690,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "8584f3f2-1fe1-4abf-ac9f-b9df42b5a9c3",
        "cursor": {
          "ref": "39760655-d807-499d-aac5-35b59b6cf569",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "010ca1ca-eede-4957-a715-2017c4fc47f2"
        },
        "item": {
          "id": "8584f3f2-1fe1-4abf-ac9f-b9df42b5a9c3",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "688aa323-854d-4665-b5c8-935921d56691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b94df4-fc32-466c-9b55-d2d6fcb25820",
        "cursor": {
          "ref": "4dfa285e-ca97-429d-a597-bdb2b5c8df5a",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "42300841-adef-49aa-a715-050c3eae7e4d"
        },
        "item": {
          "id": "c9b94df4-fc32-466c-9b55-d2d6fcb25820",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bfedb204-29cd-4e81-b81a-8554ac3fe7e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce149e59-ff10-4618-b3c1-d19e54d1eb64",
        "cursor": {
          "ref": "411f2ea7-f5eb-4b64-9743-fec10ba2d4a5",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a7fd15b4-ecbf-4bae-8725-0c64a0bca927"
        },
        "item": {
          "id": "ce149e59-ff10-4618-b3c1-d19e54d1eb64",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "576b490d-29f6-4800-89c8-400d598f6b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce18e110-1c11-41aa-a47a-0af1931b1cb2",
        "cursor": {
          "ref": "68aedce6-d91a-4e30-8e79-e8a16af07825",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d68ec6f9-820c-456c-993e-5205480fe9bb"
        },
        "item": {
          "id": "ce18e110-1c11-41aa-a47a-0af1931b1cb2",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "869e43e1-45f7-4e8b-8d18-ec529fe07647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f059ca6-7e79-4254-935f-8f2ffe113459",
        "cursor": {
          "ref": "34c9fb4d-a753-49c9-b733-f1d8791bbc71",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e5d33e97-7681-4c02-9ea7-70aca38fc66e"
        },
        "item": {
          "id": "9f059ca6-7e79-4254-935f-8f2ffe113459",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4520d3e0-6a02-4683-8f26-3c0723df611c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 123,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40104391-baa5-4d4d-83be-0a3f65168c0e",
        "cursor": {
          "ref": "c3ecbd8f-352d-4133-aa58-8f83134afc4a",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8f33a929-7d62-4632-887b-699cb8df9217"
        },
        "item": {
          "id": "40104391-baa5-4d4d-83be-0a3f65168c0e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "94997e9e-96c8-4ac0-97b3-63ca93ba64b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0909013-0edb-40be-980f-ed5d64ee24ca",
        "cursor": {
          "ref": "24639ae7-4197-4265-9721-93e964d5be78",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "68f261e3-1231-4a21-9a1f-aa0537f1e396"
        },
        "item": {
          "id": "f0909013-0edb-40be-980f-ed5d64ee24ca",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "50eeda25-5ae7-4917-8d5b-7d09360bd139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7069bba-8732-44ce-be32-ca87c7dd8d07",
        "cursor": {
          "ref": "80c90456-6d56-4d86-9d0a-50355979df74",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7a40bae1-f214-4ba8-a6cb-6c8de22d5aff"
        },
        "item": {
          "id": "d7069bba-8732-44ce-be32-ca87c7dd8d07",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "99695ec6-df59-4631-85b4-ab9c725061fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48116035-64af-4447-8044-c54f1776fc1f",
        "cursor": {
          "ref": "1db63317-98f1-4db6-b6fb-f33837131fbc",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7df397e5-1f2e-4e92-988f-282c8cce7088"
        },
        "item": {
          "id": "48116035-64af-4447-8044-c54f1776fc1f",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "06dbee10-26b6-4fdb-ad88-8be18fa4dd39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0390448-0226-47c4-a262-39a6cb7b9104",
        "cursor": {
          "ref": "22f892f4-c571-4f4d-a9c0-b659f7023f8f",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0c9b60e6-1da2-42b8-9891-fa7b62e54c26"
        },
        "item": {
          "id": "d0390448-0226-47c4-a262-39a6cb7b9104",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "01bab7b9-03b9-4126-944d-826bef475863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04984a89-58ad-42bd-92f4-e2d7ec5b4653",
        "cursor": {
          "ref": "f795fb1d-e7f1-49b8-b403-b70ee95c2711",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0f572681-89ed-4c39-85e0-d7b8d8e90fbb"
        },
        "item": {
          "id": "04984a89-58ad-42bd-92f4-e2d7ec5b4653",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f611a335-8b4c-4c10-8b5e-1226e21bde32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df6ca82-8d7c-4f5f-868d-8d916b5b161c",
        "cursor": {
          "ref": "e25d82ca-5ed6-45c1-b8ca-35eaf885b33c",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e3c4a04a-b456-4275-9895-159d751ec4f7"
        },
        "item": {
          "id": "0df6ca82-8d7c-4f5f-868d-8d916b5b161c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "07e19318-a00b-47f5-ae61-66c9a63083cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d06616e-59af-4ace-acec-4ad5e49b5ce3",
        "cursor": {
          "ref": "49e0cf17-a054-4be4-969d-970c9773f8e5",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "596fb0f8-2d97-4166-bb6f-4db7bf99ffac"
        },
        "item": {
          "id": "8d06616e-59af-4ace-acec-4ad5e49b5ce3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "0670cb76-bc62-4df6-a691-74ce96cad712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb02debc-ef06-4af3-9149-714c928cf75e",
        "cursor": {
          "ref": "6aafbc32-3284-40de-9d3a-fc0e288bc1ec",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6d87e5f1-9cc7-4289-a4d6-03971dc5fcdf"
        },
        "item": {
          "id": "fb02debc-ef06-4af3-9149-714c928cf75e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b91afc92-b5fa-4af0-9051-4662972fe1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5752f4eb-9369-44b5-b3d5-399f1f9ea7de",
        "cursor": {
          "ref": "a32a8490-f3ae-44f9-8b89-bbaa11302f23",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1420959a-5dfb-4855-a303-d85501b46426"
        },
        "item": {
          "id": "5752f4eb-9369-44b5-b3d5-399f1f9ea7de",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "abe4a2b7-d9e0-4e38-b13b-5494e4028347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381d92f9-3b36-44d2-9a85-39db5acb255d",
        "cursor": {
          "ref": "7140bd33-16a8-47ab-8c0a-d8f9b30bb5bc",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "d167788f-67db-4225-b273-b8dc4672ff95"
        },
        "item": {
          "id": "381d92f9-3b36-44d2-9a85-39db5acb255d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e7a19ac1-5b9e-4adc-bd60-35caed603148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5fa2a2-d05c-43e0-b0bf-bfac06e9567f",
        "cursor": {
          "ref": "a68863cb-8fa4-4e3d-90de-e3f3d399af4e",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0ac17347-a9c1-4de2-9a5c-0b073ae31361"
        },
        "item": {
          "id": "0b5fa2a2-d05c-43e0-b0bf-bfac06e9567f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "81a34d5f-1863-41e0-adef-2866f67f3a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0268cd6d-7df0-4f00-af64-d2fa0cd19f51",
        "cursor": {
          "ref": "7812b82a-e067-49ba-8de5-e03f146fb80d",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "0915da59-be23-44b8-b1ec-55a7b48d4bd2"
        },
        "item": {
          "id": "0268cd6d-7df0-4f00-af64-d2fa0cd19f51",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7e85e06e-cd19-4e48-b41c-4a3c33eb65cc",
          "status": "Created",
          "code": 201,
          "responseTime": 2867,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "3686ba59-89da-4eeb-a430-3b88f0c64a7a",
        "cursor": {
          "ref": "b2833084-9832-497b-9b32-5649aafd9c4e",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "122aac5b-2dad-4413-83bc-8f3d5030c033"
        },
        "item": {
          "id": "3686ba59-89da-4eeb-a430-3b88f0c64a7a",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "31262cf7-bdae-4e9d-88d0-19e29816a7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "108bd5de-6e6b-40ba-b2a3-80cff7807d5a",
        "cursor": {
          "ref": "fa1c150d-5ec5-47c5-8fe7-fd6a1b107303",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "45f8a5fb-fa59-4469-a901-225624cc3a9d"
        },
        "item": {
          "id": "108bd5de-6e6b-40ba-b2a3-80cff7807d5a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "64db4d89-ce98-4581-b4ae-7a089656aa9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a192a63-ed9f-45a2-b6df-605f48484bbf",
        "cursor": {
          "ref": "b82e0e38-3c55-418b-98cf-f80ebf6b33fa",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6f086292-6179-49a5-96cc-8527de4f3cba"
        },
        "item": {
          "id": "3a192a63-ed9f-45a2-b6df-605f48484bbf",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fe1d3693-6c8b-45a4-b9c3-2c2f1c7d1868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b02597-f3da-4299-bc5d-9f2a4d09623c",
        "cursor": {
          "ref": "130ba2c1-3e7a-4814-a747-ecedd40b4e50",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5f994fed-599e-43f3-907d-9ce0da0b314a"
        },
        "item": {
          "id": "78b02597-f3da-4299-bc5d-9f2a4d09623c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "2e6e2dba-53e6-425e-9745-31909de13805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad7df9d-af1a-4007-9614-022c2637eedb",
        "cursor": {
          "ref": "4244102d-4a3e-4b58-b969-fa001da72b16",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "fb03ea56-a7bd-49c8-9b01-9389a214f54d"
        },
        "item": {
          "id": "4ad7df9d-af1a-4007-9614-022c2637eedb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f92ac760-73d2-4dd2-b6f5-196fd849f145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 223,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99e1c60-f659-436b-b809-2ec5cea797c4",
        "cursor": {
          "ref": "e66ae4b5-d7c3-41d0-94a9-03a946176fb7",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "60cb932f-5552-4580-b290-aaf63f0162ad"
        },
        "item": {
          "id": "e99e1c60-f659-436b-b809-2ec5cea797c4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "faf22876-e620-4560-a2dd-5198f03f7a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57525013-77cc-4c91-bc19-fbcf4bce8e9f",
        "cursor": {
          "ref": "b1a34cbb-3a46-403d-8ac3-1aff1654ecab",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a8243baf-48f2-4cbc-89ee-46bc974fffc5"
        },
        "item": {
          "id": "57525013-77cc-4c91-bc19-fbcf4bce8e9f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1dc345f1-9855-4f6f-ac3c-f030db845335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c5f2f8-14a2-428f-b976-e94cf5a6d7cc",
        "cursor": {
          "ref": "37131108-9713-4dfd-8c60-c781d3e7aeb7",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5e8977a4-0586-4409-bdbc-4b988bf3ebdc"
        },
        "item": {
          "id": "a4c5f2f8-14a2-428f-b976-e94cf5a6d7cc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3783e018-539a-4dd2-a13d-0ba5cdca3c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2940a9b-0fff-423e-b9b7-9680d699ae77",
        "cursor": {
          "ref": "01a56d78-4005-4dd0-a1db-e5932eb2206f",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d2305c89-6d9b-492c-80d7-e86b5b5722ea"
        },
        "item": {
          "id": "a2940a9b-0fff-423e-b9b7-9680d699ae77",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e83bdd5f-d74a-4fe7-b7b0-944e4598c769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ccaa3b7-9ad1-48e0-81cc-33ec3cf7aa0e",
        "cursor": {
          "ref": "3fe7ecde-6f5c-49d2-98fd-83dbb712ae25",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9c2a8507-40c8-47a3-b99b-71b2fdfa81db"
        },
        "item": {
          "id": "6ccaa3b7-9ad1-48e0-81cc-33ec3cf7aa0e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fbb2d8ff-73fb-49a0-b3e1-af80b6b7cbb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6698b66b-8ca0-4c15-993f-67f1373a1bd0",
        "cursor": {
          "ref": "ffb85efe-c445-4210-b001-9e5bef4c62d5",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "98bc2705-c3b4-45b4-9d82-a62743d2415e"
        },
        "item": {
          "id": "6698b66b-8ca0-4c15-993f-67f1373a1bd0",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b853bb34-7c1e-421e-8fc1-d4d2681b212a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d05bd17-c03e-47f4-a962-54aca51fdf9f",
        "cursor": {
          "ref": "3dcbd3dd-74bc-4f45-92a5-0be3bbabbcb9",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "937cee33-250c-43be-9f82-84e2faf4b1d2"
        },
        "item": {
          "id": "3d05bd17-c03e-47f4-a962-54aca51fdf9f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "68001209-8957-42f5-8070-baf3fc1df15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8dca27e-8854-4da9-88c9-b42a7961140b",
        "cursor": {
          "ref": "ca2b392e-40df-4a18-9bf6-d383666e0309",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7c633ca1-ed02-46f1-8f3e-bd2940f8c851"
        },
        "item": {
          "id": "d8dca27e-8854-4da9-88c9-b42a7961140b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1e389b51-b7c9-49c5-b10d-9db5831168f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e65414-dce3-4a72-99da-676c9dfd9857",
        "cursor": {
          "ref": "ee82a0de-f9da-47e7-b049-109fc966f156",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a3d67f52-636e-4fe4-a2c2-59dabc01c28b"
        },
        "item": {
          "id": "31e65414-dce3-4a72-99da-676c9dfd9857",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f3ac9172-6470-4439-8194-47d08bef8aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03aad047-fed8-4133-a7e0-3e353ec9cfbf",
        "cursor": {
          "ref": "a60e809f-56dc-4bf2-b8ed-631d24f75697",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "11ebbc0e-aa2e-4f0b-a02c-e7399068e003"
        },
        "item": {
          "id": "03aad047-fed8-4133-a7e0-3e353ec9cfbf",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "d7a95a92-9af4-4316-a9e8-601d3d77bfe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e76e7c2-198f-4c59-b981-5bbcf0edf895",
        "cursor": {
          "ref": "50fd6243-9dcb-44a2-bddf-2587e632c340",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "742f8a83-8a90-45cc-aac2-bdebb12ca6a8"
        },
        "item": {
          "id": "2e76e7c2-198f-4c59-b981-5bbcf0edf895",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7d3afe1a-217f-4306-9d08-ca29b7cab7f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed2f459-b4b0-43ac-b0a8-43459f88b12c",
        "cursor": {
          "ref": "71b3411a-d68d-428e-8043-40dbe65ad8ba",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "17aab1aa-6c1c-41af-b41a-952b4478fc37"
        },
        "item": {
          "id": "7ed2f459-b4b0-43ac-b0a8-43459f88b12c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "18ebacb5-af74-4012-be1b-b9c409b603aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7476f764-f534-4901-9381-6480d1df91da",
        "cursor": {
          "ref": "94c09213-8a17-4451-959e-86be7ae35897",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "1d165037-308b-4c53-ad57-4031175b7793"
        },
        "item": {
          "id": "7476f764-f534-4901-9381-6480d1df91da",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "7d064111-95f7-4033-9c1b-0dbceffcc51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29a1afc-39df-4a96-b3be-4d445f97bd32",
        "cursor": {
          "ref": "db915d01-57cf-4738-9433-f90a7598dd5d",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "352859a2-d1d5-4938-920e-bcc6a53c83a1"
        },
        "item": {
          "id": "e29a1afc-39df-4a96-b3be-4d445f97bd32",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f83f7f72-6381-4337-ab05-505f25cd6c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a515ee3d-a140-4605-9b13-4f0b652966f7",
        "cursor": {
          "ref": "866b55f8-d6be-4c36-9a51-17e286166000",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "e44c04d9-8b98-4aae-9bb7-8dd5d5c4fd8b"
        },
        "item": {
          "id": "a515ee3d-a140-4605-9b13-4f0b652966f7",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0e3840b8-a388-4fb8-ae89-787e8d134db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efc75b44-9574-4e17-9a58-f4281ccfcbe7",
        "cursor": {
          "ref": "89a2ab08-3ef5-4139-99d5-87a9c13fa1f8",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "615f229d-2278-4b59-b0d9-71a601186847"
        },
        "item": {
          "id": "efc75b44-9574-4e17-9a58-f4281ccfcbe7",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "aa321133-6c8f-4ff5-8d5f-bbdf241fda8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d62d1ee8-5005-44f7-8577-c439fe8f9cde",
        "cursor": {
          "ref": "a52273c4-b2b8-4081-8803-5a8eca2dc9d7",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3b42b209-e129-4292-a715-7cb7adb23066"
        },
        "item": {
          "id": "d62d1ee8-5005-44f7-8577-c439fe8f9cde",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "52f635d9-ebcb-41cd-8ffe-f5250d5f09e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bcc37e0-1334-4f9b-9375-99724f857b96",
        "cursor": {
          "ref": "f0d24580-fdd4-47ac-beab-243089e21cd1",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2921b063-8ac6-4dd2-b5be-1c7e55207f8a"
        },
        "item": {
          "id": "8bcc37e0-1334-4f9b-9375-99724f857b96",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "5cba508b-8efa-4a24-a311-ab0a9ec5facc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58d8169-4eb5-4381-9a50-9e4ccd88c063",
        "cursor": {
          "ref": "76d3b510-4792-483e-839e-2917cb9d8969",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1ae850ac-9cc6-470a-975a-7018c5342c98"
        },
        "item": {
          "id": "d58d8169-4eb5-4381-9a50-9e4ccd88c063",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "7d2293f8-f6e0-4055-8b8d-83af17e84b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "795a3824-4d8b-4a44-8c0b-004a8663e369",
        "cursor": {
          "ref": "e2bb0baf-4535-435d-ab2e-b15082818aae",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "978139db-3c68-4e8d-8db4-3e2309489dac"
        },
        "item": {
          "id": "795a3824-4d8b-4a44-8c0b-004a8663e369",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "fd02e186-9b7e-4bc1-bae6-fd7a1eeecc4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1e60f7-97a3-4c68-ac3a-0f492fd414a0",
        "cursor": {
          "ref": "5ce55bdc-4339-4008-8688-6640956c456e",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0a09a2ae-954e-4f3b-8f9d-b4f0af093b12"
        },
        "item": {
          "id": "eb1e60f7-97a3-4c68-ac3a-0f492fd414a0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "db16ce33-d376-41f7-9d7f-7165a6e5c867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "455d0d27-e8a1-4609-b174-02d4048facd5",
        "cursor": {
          "ref": "14f5440b-c64f-4cb7-9425-1b039ccb4ae6",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7732bf12-3a33-4b56-a5df-5568f8ec41db"
        },
        "item": {
          "id": "455d0d27-e8a1-4609-b174-02d4048facd5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1fa8132f-8a9d-45d4-941a-e6ed7563e9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0116491d-e687-4544-a09e-ae0472dee3db",
        "cursor": {
          "ref": "83064832-e60a-417d-a5b4-bbd75dc78900",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0d399e02-694f-4bb6-94fc-b4f31a8fead1"
        },
        "item": {
          "id": "0116491d-e687-4544-a09e-ae0472dee3db",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "81b3acd1-299a-4043-9449-cce1367259f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98676f9e-3384-4e29-8eb0-b5ac87760b20",
        "cursor": {
          "ref": "e1210b21-d7cb-4c31-be86-3b867e110475",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d70a5a74-2811-4db2-879b-911d0dbfd804"
        },
        "item": {
          "id": "98676f9e-3384-4e29-8eb0-b5ac87760b20",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "93c71d99-24b7-47fb-a191-43717283d043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2af41c-6fb6-4912-a5d2-8fa262f89e77",
        "cursor": {
          "ref": "f31339e9-77cb-4619-bd0f-398c82ae41d3",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "1d3ffe67-931c-4994-a013-625e686164c1"
        },
        "item": {
          "id": "cd2af41c-6fb6-4912-a5d2-8fa262f89e77",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "0499a10d-76cc-446d-a67b-def7fa7ff9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4af634fa-5797-4725-8509-f3e35ddc6463",
        "cursor": {
          "ref": "5b3a53b2-97c6-47dd-b60f-acd791645f5d",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5225a77a-3b60-435a-b234-73505a5e588e"
        },
        "item": {
          "id": "4af634fa-5797-4725-8509-f3e35ddc6463",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8eadbe86-5607-43bc-9411-596d4e8753ae",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e33b72a-9487-4604-b0e0-2410c820e745",
        "cursor": {
          "ref": "2176ddc6-d2bd-45b7-b221-dd0ff20921d7",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d7859e00-c6dc-47ae-bf32-9eea21cfb8fb"
        },
        "item": {
          "id": "7e33b72a-9487-4604-b0e0-2410c820e745",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fd90b4d2-e24c-4054-8383-b2047525dba8",
          "status": "Created",
          "code": 201,
          "responseTime": 1983,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2039888-9a9e-4315-9833-502e665a4487",
        "cursor": {
          "ref": "4a478301-e9de-4316-aa09-c778c0be3a37",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c9223ef5-e174-468f-b327-b08b7ac7b5a3"
        },
        "item": {
          "id": "b2039888-9a9e-4315-9833-502e665a4487",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a06b67f6-1616-4f23-96f1-261aad627319",
          "status": "Created",
          "code": 201,
          "responseTime": 2476,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85c792b-c391-44cc-9564-d0a60cc06f99",
        "cursor": {
          "ref": "10a1d98a-e298-4748-a2be-3bbf4a663888",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "0085e3b2-e930-444d-9ee8-1848d388d3ea"
        },
        "item": {
          "id": "c85c792b-c391-44cc-9564-d0a60cc06f99",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "99c36c27-a19b-4b6b-814a-d2aa070ea450",
          "status": "Created",
          "code": 201,
          "responseTime": 2873,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b714e5-3e17-4e4e-b9c0-5c62aea61881",
        "cursor": {
          "ref": "a4915044-ab2c-41b1-b16c-768db5a6fa29",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4d3cc59b-b78b-4d4c-995b-9cf63a5076e3"
        },
        "item": {
          "id": "23b714e5-3e17-4e4e-b9c0-5c62aea61881",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c5568b83-4009-481e-8ca4-9ca0b5380ab4",
          "status": "Created",
          "code": 201,
          "responseTime": 3482,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05daefd-dcfc-4930-8fa8-4ddbde3a65b8",
        "cursor": {
          "ref": "dcff850e-3114-4be0-891a-560a493d102d",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c6c7e345-a8bc-4454-b75f-12b4fa2ffd6b"
        },
        "item": {
          "id": "f05daefd-dcfc-4930-8fa8-4ddbde3a65b8",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "eab67bc9-b47b-4b14-a94b-80144bb9dd51",
          "status": "Created",
          "code": 201,
          "responseTime": 2984,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-08-05T00:39:24Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-08-05T00:39:24Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "79689353-e9b5-47d8-bf83-752462634454",
        "cursor": {
          "ref": "0fdc5f70-ba75-4d06-8d4c-08623db7ac9c",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cec2a8ad-3399-4b0f-9b7f-96cbfa56bbd7"
        },
        "item": {
          "id": "79689353-e9b5-47d8-bf83-752462634454",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a175e721-3eef-4eb7-8358-0b1b2a225b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "fc8b87be-be94-4982-bf19-0d51aae5b4a2",
        "cursor": {
          "ref": "b95d30eb-0dd1-4e89-8765-8134c6c40e62",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "63acdc2f-1f84-48ed-99c1-797df9edf0b8"
        },
        "item": {
          "id": "fc8b87be-be94-4982-bf19-0d51aae5b4a2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "33eb2e2d-f642-4aa9-aa53-20eacd35ef1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18758eda-5be1-441f-a703-20a015bf37fb",
        "cursor": {
          "ref": "a4b3bd99-a37e-481b-a141-0bef98d8f7b9",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cee7f7a4-8397-445e-bb89-7dc101d567c7"
        },
        "item": {
          "id": "18758eda-5be1-441f-a703-20a015bf37fb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5d6ce025-d8c4-4c25-9386-cd25abc317dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab497a45-7e90-4d65-869d-009f16f38889",
        "cursor": {
          "ref": "b5673e71-d0c0-4602-aea7-aa216fc32b4d",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "81bc7709-76d6-4991-b2c3-25560984e6b8"
        },
        "item": {
          "id": "ab497a45-7e90-4d65-869d-009f16f38889",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "391fd642-fa23-4b6c-9ca2-b5eca7127ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e18549d-320c-4b0a-8225-878716786066",
        "cursor": {
          "ref": "5935e023-48a1-4f4a-9b2e-955ead144c5f",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "07dfbc2d-4660-444d-92e9-c801ed39bb2a"
        },
        "item": {
          "id": "2e18549d-320c-4b0a-8225-878716786066",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "62ad34be-f566-4d4b-9a81-88e78144ab23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2067ef1-9d20-448f-a684-9d2c6f0126f8",
        "cursor": {
          "ref": "77ea72a4-698a-40f8-9d61-f28b1a933299",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "318c6cef-4ef6-474b-837c-34249a9da4e6"
        },
        "item": {
          "id": "d2067ef1-9d20-448f-a684-9d2c6f0126f8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e66f7f7f-7503-4ec1-98bd-d1f11e8567e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cca90c0d-d7e4-46ed-af40-7ee28aa86823",
        "cursor": {
          "ref": "7552d722-2638-4f33-a492-b1f8ccffbdb9",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "448baf84-a2be-42e4-b016-08ded5e3d99a"
        },
        "item": {
          "id": "cca90c0d-d7e4-46ed-af40-7ee28aa86823",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "7e4bbcba-bb0e-40b8-8799-8293ea1b1379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19cc354-3242-4393-9639-6c432187b215",
        "cursor": {
          "ref": "b7546b48-a06a-451b-9954-75a5cf98bb9c",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "7be22b20-fe3b-4d8a-b7ab-d9613bbf32d6"
        },
        "item": {
          "id": "c19cc354-3242-4393-9639-6c432187b215",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2cf61c14-6000-4d79-9ee3-956c48768b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069fb010-4b52-4cba-a315-0d910bcba57d",
        "cursor": {
          "ref": "f00a9e64-e11e-4d8d-b095-82d7ca414bc0",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "03500ea3-2978-4471-a8f9-937ea45cbeb8"
        },
        "item": {
          "id": "069fb010-4b52-4cba-a315-0d910bcba57d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "602905e0-dde3-43d4-a98f-21a0c4751f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "388d3ccf-1e48-4640-b363-2654d2b91474",
        "cursor": {
          "ref": "ffb45128-2159-4175-beb2-9ccf4deecd02",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d727c9bf-ddf8-41c5-af1a-b7d0b5c929d8"
        },
        "item": {
          "id": "388d3ccf-1e48-4640-b363-2654d2b91474",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "88468540-4164-4629-8a3a-5a624b9b758d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "841ec71c-3d6a-49d6-94b5-a63c7465573a",
        "cursor": {
          "ref": "5c8b2bc0-b85b-44d6-9501-632873c3218e",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c71ee984-1683-4cb0-b25f-319c43e0e5b7"
        },
        "item": {
          "id": "841ec71c-3d6a-49d6-94b5-a63c7465573a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "91fbde58-51d3-4f80-b450-221c6b676660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59de5062-5f20-48d9-a26f-5a82c1ea074e",
        "cursor": {
          "ref": "9c6e4be0-b9bc-48e2-9e9b-687cfc94eb45",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b0a088e5-4d87-445e-b0b1-24e07ff87323"
        },
        "item": {
          "id": "59de5062-5f20-48d9-a26f-5a82c1ea074e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4bc40746-8c34-4d8f-be18-25ea798841fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8657a787-d968-4768-9590-64d9d2dc3cf1",
        "cursor": {
          "ref": "9dfb81e9-2db7-43d5-a088-8649af4cf3ec",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a69fbd45-7b0f-46df-a69b-43365ddcd405"
        },
        "item": {
          "id": "8657a787-d968-4768-9590-64d9d2dc3cf1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8d2f9378-1204-4602-86cf-f8055aa66585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e7e691-0353-40bb-b065-03f698ca4727",
        "cursor": {
          "ref": "4beaad26-fd7a-4d7a-b072-1b8f0374999c",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "86369693-ac46-476a-8fee-2be2627532c3"
        },
        "item": {
          "id": "d2e7e691-0353-40bb-b065-03f698ca4727",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a7755251-3d2a-4ded-9d94-f75fcb3a7f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb8da2b2-fa1b-4f16-ab69-bfde5508295d",
        "cursor": {
          "ref": "c87c5517-3c7d-497c-bc89-c9018f67e0f5",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "30bc1ebc-4616-497a-9deb-c9c6fcdde724"
        },
        "item": {
          "id": "cb8da2b2-fa1b-4f16-ab69-bfde5508295d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "888fb0de-1674-425f-8503-8e2773970fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e02fe9-8ac3-49a8-a9b1-8499667b0a66",
        "cursor": {
          "ref": "9aac030f-3fe1-499d-b4e5-39e503492c43",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "eeca439d-60f1-4bfe-bf84-24edd067b18e"
        },
        "item": {
          "id": "a2e02fe9-8ac3-49a8-a9b1-8499667b0a66",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3f7d7c8d-96b4-4c1a-a133-40493862d452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79c8a462-e28b-485b-85df-4e40bd3554af",
        "cursor": {
          "ref": "d4e3e0a1-1493-4ce4-aee0-a5972df13ffa",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "ae8ba148-737d-4844-8485-130a910ba73f"
        },
        "item": {
          "id": "79c8a462-e28b-485b-85df-4e40bd3554af",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "62fc054d-f23b-4434-b3f9-61f7f078b577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ffe3e6e-0893-4c5b-b431-3b6564024e53",
        "cursor": {
          "ref": "aa9a120b-d40c-40cc-b9bd-8c39682f08dd",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "594e321b-021c-4a00-b4c3-640b269d0d73"
        },
        "item": {
          "id": "5ffe3e6e-0893-4c5b-b431-3b6564024e53",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bbfe8c4b-98ac-4d69-a852-07c5aa3a7142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70bf6e97-02ca-4915-9461-7ec0574954c6",
        "cursor": {
          "ref": "3b7e4c42-41af-4fd0-8094-7412022d6545",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f77850df-7cc6-4c6c-a235-80f1ff564cc1"
        },
        "item": {
          "id": "70bf6e97-02ca-4915-9461-7ec0574954c6",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "514d4dd7-d7fe-402f-921a-e667993271a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8637e6bd-e1f7-42ec-bbcb-900b54bed488",
        "cursor": {
          "ref": "2fcb627a-c548-44b8-baee-05d559fdd924",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0bb512ae-4741-46ce-a97d-2324bae8395d"
        },
        "item": {
          "id": "8637e6bd-e1f7-42ec-bbcb-900b54bed488",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "06792723-9fec-4bbb-979f-ef69246497fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03719af8-4fd9-4843-90b3-ce99917cba3c",
        "cursor": {
          "ref": "8be81d3e-3aee-4e91-974c-1665eb78bfa3",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "1278f9d1-8366-4538-a2ba-54c7d91b5a62"
        },
        "item": {
          "id": "03719af8-4fd9-4843-90b3-ce99917cba3c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "236eff0b-5da5-439a-b5b8-33c6d4b1ea78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17d94c1-cd08-41b2-9e0f-bb50c8f96adc",
        "cursor": {
          "ref": "84e9db0b-f121-4f39-9998-4bef0390f2b3",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "53e7f177-c81c-4bf6-8ea6-0bff742fad45"
        },
        "item": {
          "id": "d17d94c1-cd08-41b2-9e0f-bb50c8f96adc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d5349e0d-d030-4d88-bf06-bc84a584ebce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ffc6a5a-1bc5-4837-a36b-feffa98bdfd0",
        "cursor": {
          "ref": "246b3f6c-17e4-4fd9-b96c-104fd59e954f",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8bbce0e8-bded-42ba-9655-921ef064df90"
        },
        "item": {
          "id": "0ffc6a5a-1bc5-4837-a36b-feffa98bdfd0",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "980aa2aa-68fc-4c70-8cca-957488b0384e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d649925f-d71a-4b85-a504-2f487e3d5f38",
        "cursor": {
          "ref": "c3631c31-af4c-48a4-95a2-b0e7c7aa8186",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3774df0b-2070-45a7-a4ea-d40481510db1"
        },
        "item": {
          "id": "d649925f-d71a-4b85-a504-2f487e3d5f38",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "61a27adf-1239-4c03-8b39-89b62d91599a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5101bd59-7550-4147-b364-827e321008f5",
        "cursor": {
          "ref": "16fb72af-c66e-460e-aeca-e188593868d8",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "0f38d34a-1c98-4f88-ad8f-8f8609276fb0"
        },
        "item": {
          "id": "5101bd59-7550-4147-b364-827e321008f5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9bf6aa1c-e350-41c1-b772-297021909f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f1457b-46c1-43a3-a6da-a196853c4a34",
        "cursor": {
          "ref": "e34c28fd-4d9f-4a56-9a05-9c9a35e22626",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "066c0b53-a788-4f91-aa3d-9beee2e60cf2"
        },
        "item": {
          "id": "38f1457b-46c1-43a3-a6da-a196853c4a34",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "bbff7607-9281-4481-85d2-f67a4a868e02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c708f3bb-f387-4c4f-9803-c174815c9373",
        "cursor": {
          "ref": "d18bf864-7afa-460a-975a-aff66726bb41",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c199b14d-acbc-4172-bd56-823a60d334d3"
        },
        "item": {
          "id": "c708f3bb-f387-4c4f-9803-c174815c9373",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "27f789e9-2516-4796-ad03-3f1801cf591e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affeaf8f-d0cb-4c4c-bd4d-7715775c42c4",
        "cursor": {
          "ref": "5b035200-7e51-4b17-8afb-6e424947b140",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0c141792-a789-4963-abd3-44f496e0b543"
        },
        "item": {
          "id": "affeaf8f-d0cb-4c4c-bd4d-7715775c42c4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "176c34ca-878c-4f56-b831-d19aba4130e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5463eb60-fb7a-447d-af71-724ea622a4e2",
        "cursor": {
          "ref": "05cf6c74-cf03-476f-89d5-8e83d54bcae5",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "49514874-f1e7-49fc-8a8b-5b67d18a4503"
        },
        "item": {
          "id": "5463eb60-fb7a-447d-af71-724ea622a4e2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "60d495c4-b2e1-44be-8eae-ffc509956b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22777d4c-7943-4ff5-b633-08087ec562d8",
        "cursor": {
          "ref": "fb0f1be8-d6e9-466f-83f0-4d09ee6649ff",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e7110b4f-5e9d-4353-b7db-6fbc6d0921e6"
        },
        "item": {
          "id": "22777d4c-7943-4ff5-b633-08087ec562d8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "594d20ca-f898-448c-afa9-ddff816cd7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90637016-44b3-43d0-9eba-19f16ba54664",
        "cursor": {
          "ref": "e28a372d-c89f-450b-ad0b-b9955bc3b137",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2f5fa163-c2d9-4d9d-b11b-2b7e47145ec3"
        },
        "item": {
          "id": "90637016-44b3-43d0-9eba-19f16ba54664",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b39f0c3a-43e4-4255-acaf-5899521b3654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cc5a17-d439-41a6-acc6-abcf163138fd",
        "cursor": {
          "ref": "e86f9e98-bfbb-417a-86af-ab7cae4e4702",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "1f983ef9-4b44-4594-b6c2-61bf803b17f7"
        },
        "item": {
          "id": "07cc5a17-d439-41a6-acc6-abcf163138fd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "270dff9c-6570-452a-9c1c-1b0a1a85d5cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb98d82f-6957-4d4d-9646-05de188280ad",
        "cursor": {
          "ref": "97de5770-5083-4f9a-8740-9582351ede59",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8e5c8938-c611-4d0b-bbce-c9fa8c2a1bea"
        },
        "item": {
          "id": "cb98d82f-6957-4d4d-9646-05de188280ad",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d6d8eed5-9683-43a9-b731-d87a24b31b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3201bb1-15bc-44be-b5dc-a799161c9e18",
        "cursor": {
          "ref": "4cd21a99-b196-43d2-be10-4e0c3c3c428e",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "59cab322-65d3-4f5d-a75e-adb8033dcde7"
        },
        "item": {
          "id": "a3201bb1-15bc-44be-b5dc-a799161c9e18",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e18df605-f151-4b0d-9cc6-dbb5dcec7de2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 13,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb008ad-c079-48d5-ad69-3c11315b5589",
        "cursor": {
          "ref": "ee4b26eb-717c-4649-bb10-c5bf1bf86db4",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c5b74f72-be9c-4c17-aacd-a110a65a0763"
        },
        "item": {
          "id": "efb008ad-c079-48d5-ad69-3c11315b5589",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "07c6345a-f903-494f-8fb2-bdcc389dcd37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30298bcb-96c2-4c86-b866-46a97aa13b84",
        "cursor": {
          "ref": "b2fa2e44-6ca6-453c-b584-8b1151a80706",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "fd530ed3-f6a7-4fd4-8766-3b2bafd51b8a"
        },
        "item": {
          "id": "30298bcb-96c2-4c86-b866-46a97aa13b84",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "49b949d3-13d6-48d8-8f3c-6cb5262b2b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b5d3ab-8f24-4a6c-88b4-950a4fe160f3",
        "cursor": {
          "ref": "4d8fb1dc-db47-433f-9b91-5a7928cdc6ab",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8d6eed58-db98-4cac-ba01-f5221e105882"
        },
        "item": {
          "id": "65b5d3ab-8f24-4a6c-88b4-950a4fe160f3",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b39ddb85-ed2a-4853-b676-2b92d6d2afc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af2a282-0132-4256-b9f9-719de2c1f1db",
        "cursor": {
          "ref": "b58400fb-3a5b-4a7b-9228-6e5a8c4e72bf",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f5c3b028-a7c6-4edc-a792-b3541a76f82d"
        },
        "item": {
          "id": "6af2a282-0132-4256-b9f9-719de2c1f1db",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8db8c384-54dc-41da-821b-1efda753c774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51fb3cdb-2c6a-477f-9d22-06d14daa2897",
        "cursor": {
          "ref": "bdb4af9e-a884-42d9-8eaf-4803df53f3b7",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0cf26559-c1ea-4c66-987f-6a3f4d3ff3cf"
        },
        "item": {
          "id": "51fb3cdb-2c6a-477f-9d22-06d14daa2897",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cfd09fcf-3bf2-41db-b9bc-9aa4b71ed507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1428e29c-e256-4340-bc1b-d9a1ab34dbfa",
        "cursor": {
          "ref": "fa8706a3-4d05-4413-8826-0f36f1a7ef7c",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c589112f-b30b-4127-82e2-156faaf9b332"
        },
        "item": {
          "id": "1428e29c-e256-4340-bc1b-d9a1ab34dbfa",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b51aedef-1f2e-41e4-92ff-bb36e795b264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb98d23-7470-403f-8771-9f8c48c49766",
        "cursor": {
          "ref": "1b4c1261-b03c-4b78-a7e2-2008a1f46f40",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "de844df9-6af5-4747-9d0a-aa21ec149ebb"
        },
        "item": {
          "id": "4cb98d23-7470-403f-8771-9f8c48c49766",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5f42e7b4-285f-4397-84f7-c2b79e78a36d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad36798-f156-4213-aacb-cb4ac3b29ff2",
        "cursor": {
          "ref": "c1d546f7-e19b-442f-b55b-48d0b72b2c20",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "14af53a7-2f3f-490d-b8c9-cbc75db74f25"
        },
        "item": {
          "id": "bad36798-f156-4213-aacb-cb4ac3b29ff2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "cd8fcfe2-4f6d-420b-adc2-f4c3996e48a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5f2abc-c11b-4000-be24-e6d82399dfe6",
        "cursor": {
          "ref": "87e50e01-e921-4c68-8e1a-c700230f2479",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "375feeef-a5fb-418c-83f8-84e7ef7c075f"
        },
        "item": {
          "id": "ca5f2abc-c11b-4000-be24-e6d82399dfe6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b58b0bc7-b8c7-4e04-bb9d-a7a392f15397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89538153-3868-43fe-8813-2dbcd3fe14b5",
        "cursor": {
          "ref": "50b5a279-9a2d-4018-86f5-084a506d192f",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "eebdcbcd-6233-4f57-a8b1-96913086c4bb"
        },
        "item": {
          "id": "89538153-3868-43fe-8813-2dbcd3fe14b5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a19c5c4c-e736-42be-aa8f-65f6d9eb55fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd7fb97-45aa-4fce-85bd-24d36d6856f8",
        "cursor": {
          "ref": "ae1e8b51-72f9-4efd-a00e-ad8037f813eb",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "278473ba-2cc9-4e82-803a-1d56247b710c"
        },
        "item": {
          "id": "ecd7fb97-45aa-4fce-85bd-24d36d6856f8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3d943c4a-935a-4efe-b4e4-513a8ce31d22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "433eb06a-83be-43ad-8ac8-2103c5e96626",
        "cursor": {
          "ref": "194601a3-f043-49a7-802e-465540e32663",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "6e2cc055-cc34-4e3c-b171-bc4f282c6679"
        },
        "item": {
          "id": "433eb06a-83be-43ad-8ac8-2103c5e96626",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3dd48fdc-6bdb-4cd5-a92c-1267beddabf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a795fc8c-2917-4fce-ba89-fa5d2180d252",
        "cursor": {
          "ref": "c5b60817-4058-4161-95f6-2eba1463451e",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "af7d4daf-9208-416f-83b0-85c20a79614b"
        },
        "item": {
          "id": "a795fc8c-2917-4fce-ba89-fa5d2180d252",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4a07a71c-eaee-44e5-8d89-5a5647cf5913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84da7846-88c2-4239-b612-ecea105cb3c3",
        "cursor": {
          "ref": "1eb12a96-bd91-47ee-affe-4ea07fd5be1e",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "15e8e217-c175-498a-848b-68aa8eb7f396"
        },
        "item": {
          "id": "84da7846-88c2-4239-b612-ecea105cb3c3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2d1c59d8-fba8-447a-9f68-b97982337043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcba63f3-feed-40a1-a2c0-af48ec1681ec",
        "cursor": {
          "ref": "2aff6eaf-5b54-43dd-9242-2bb39a91738f",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a5fc4eb1-ca82-4da0-9833-33ba34bd87fe"
        },
        "item": {
          "id": "fcba63f3-feed-40a1-a2c0-af48ec1681ec",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a5070176-e51a-4c01-932b-55e6f8fd3bf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c6465f-4f00-4d68-a61f-a093b70c7773",
        "cursor": {
          "ref": "701f6c53-87ab-4828-8e96-4111e261455d",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ba8995ea-f2ca-4768-bca9-adcdce2857f0"
        },
        "item": {
          "id": "76c6465f-4f00-4d68-a61f-a093b70c7773",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "06d823e4-40ec-48e3-ab0b-651d021f458f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fe7a88-8031-4cb7-8600-011608c0649a",
        "cursor": {
          "ref": "6418de45-a67c-4988-8572-e9c56d7d9487",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "320a0e87-19f5-4d72-be63-562f9151fbb4"
        },
        "item": {
          "id": "b4fe7a88-8031-4cb7-8600-011608c0649a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "cd6b1dad-7d97-4f9a-a9c1-9ac1123abe15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d9e3c3-31d8-415a-90c1-ae8812275280",
        "cursor": {
          "ref": "73fd0891-1b21-4ecf-b30a-544eb32ecf8b",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "08dcffd0-6ae4-4a84-8058-9147ad1d969f"
        },
        "item": {
          "id": "b2d9e3c3-31d8-415a-90c1-ae8812275280",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9d576e20-5abc-4cbc-9790-8358208de6f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3589de0b-69b9-49b3-ba47-6f2b73aa6d74",
        "cursor": {
          "ref": "db38b54b-c578-4fbf-83d4-1aadf96d2a1d",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "38da9c99-7ef1-4d52-b9b2-99d4773ada59"
        },
        "item": {
          "id": "3589de0b-69b9-49b3-ba47-6f2b73aa6d74",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8b2ef731-29a6-4861-a21a-802468ebd4a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e579163-6f17-4443-ae05-607f732e46ee",
        "cursor": {
          "ref": "3672909f-da46-4e7f-afa7-4ede9cda4b90",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "94b4a2a2-f7fb-4921-96a5-ef2b04b29931"
        },
        "item": {
          "id": "2e579163-6f17-4443-ae05-607f732e46ee",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9a93808b-2344-4bb0-8bca-9b4c06b40b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf10e04-a9be-480f-a2f8-8b3faa9f8988",
        "cursor": {
          "ref": "4598c9ab-14e5-47f6-876e-9c8d30d447f4",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "0e1e4cbc-04e3-497e-b3cf-d04263712afa"
        },
        "item": {
          "id": "1bf10e04-a9be-480f-a2f8-8b3faa9f8988",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "25037e7d-2470-4faf-b490-4b338ed0d7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41cabb5-1021-44fd-b3af-9ec579c2b4f1",
        "cursor": {
          "ref": "6c19f988-ade8-422b-8c79-a76818d0c124",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d5456cdd-4ec8-4e4f-a090-ff72aaccd1e5"
        },
        "item": {
          "id": "c41cabb5-1021-44fd-b3af-9ec579c2b4f1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2c548c2b-3ecb-43d7-b28c-18c401d20478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c271a9-5282-400d-81bf-2c320f8e9b2d",
        "cursor": {
          "ref": "b1d4ef1b-39b1-4a26-882b-8701266522ee",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "2f413ca5-2f53-4987-81f3-191afdb6422b"
        },
        "item": {
          "id": "b1c271a9-5282-400d-81bf-2c320f8e9b2d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "48c3ebf1-1c78-4514-b001-4e914c3b042c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d9c32e-e2f5-4663-b1d7-0f28d7d95698",
        "cursor": {
          "ref": "f7be0f5d-5efc-4c63-84a1-8f8fcb67c207",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ee4c51b0-1cbb-4c8c-90df-b747e535fe00"
        },
        "item": {
          "id": "d3d9c32e-e2f5-4663-b1d7-0f28d7d95698",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "eaabcd01-8c45-4d5c-8afa-3cac148effbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4ea8f1-ca16-47bf-846d-16efb857ad96",
        "cursor": {
          "ref": "9bd11463-6839-49ee-998a-94aced5cb070",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "deff7896-8f88-464e-962f-b87f34bf6e09"
        },
        "item": {
          "id": "be4ea8f1-ca16-47bf-846d-16efb857ad96",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "baeb9652-306a-47f9-bd05-f2cb76fa91de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65cae0a6-a368-4743-ad19-182816a95472",
        "cursor": {
          "ref": "b0078c2e-2a55-43bb-93b6-04bebee2b5c2",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6b0e0ed5-73ea-4234-a65a-721d03716f9f"
        },
        "item": {
          "id": "65cae0a6-a368-4743-ad19-182816a95472",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5aaf0405-203d-4d27-9310-c5f80e61d706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbaf1036-14fd-4d81-a71c-5cab3a9a2bc5",
        "cursor": {
          "ref": "9ad51111-3860-49f1-8602-28337efcfda9",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "53125296-88df-47a1-956f-51b82ab49d86"
        },
        "item": {
          "id": "cbaf1036-14fd-4d81-a71c-5cab3a9a2bc5",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4fa776ee-8173-4eae-9302-6534969251a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ed2ab7-2510-430a-b290-0d400106be7d",
        "cursor": {
          "ref": "b2fc8832-0227-4b71-bf86-897b330602eb",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "83a5ce4e-790c-41aa-ba94-3b1726d56151"
        },
        "item": {
          "id": "55ed2ab7-2510-430a-b290-0d400106be7d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e03a0849-6f2a-4a6e-9025-76f8591031f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5aba7d0-ed30-4b4f-8141-512f614c872d",
        "cursor": {
          "ref": "436d64bc-eede-4c9f-8e56-b5373b0957bb",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c5770af9-9927-46fa-882f-36bc2a503146"
        },
        "item": {
          "id": "e5aba7d0-ed30-4b4f-8141-512f614c872d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "14e6fd45-91d8-4f64-bcdc-a08551d3a534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27e957b1-8488-4b64-975a-73d0588ccceb",
        "cursor": {
          "ref": "6e052760-86d1-49e9-a4ce-efc9d88e2760",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "161d1d29-1bde-479d-8303-454da5eaec50"
        },
        "item": {
          "id": "27e957b1-8488-4b64-975a-73d0588ccceb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "89763735-b12d-44c6-9eb8-b1ffb1fab440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a995a8-05b3-41c6-8283-2a273e4f08b2",
        "cursor": {
          "ref": "66fd9f9a-2654-4760-beb8-9694ad4fd958",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "1736e2ec-d861-436d-b0e1-892881502a84"
        },
        "item": {
          "id": "10a995a8-05b3-41c6-8283-2a273e4f08b2",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "d677a884-ea32-47f3-adbe-4f7e450bb8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e7403d-77d3-47d0-8724-04aefad01cac",
        "cursor": {
          "ref": "caa2646d-5ea8-4a55-80d1-9e4d6b3c7259",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2017e736-a09f-4f15-aa9d-976f49651ae6"
        },
        "item": {
          "id": "a7e7403d-77d3-47d0-8724-04aefad01cac",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "069bf7c7-331d-4510-ad0a-6cdc31eec02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f63dc1-95fd-4ddd-9644-f86e75297473",
        "cursor": {
          "ref": "886fbff9-0e2c-47c4-ab65-198822ee979d",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "03c85c95-f689-41a2-a00a-66eddbe6dfcc"
        },
        "item": {
          "id": "e3f63dc1-95fd-4ddd-9644-f86e75297473",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "41436fd9-1f7c-4ddd-bafb-ce75e243106b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb97d95-f702-4b02-994e-9f089a8cb11f",
        "cursor": {
          "ref": "6452612a-2ed4-4807-84ad-810bb4925e97",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a4aac7a5-f2fc-407f-b7be-82d7bc637c61"
        },
        "item": {
          "id": "beb97d95-f702-4b02-994e-9f089a8cb11f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "be134e54-4a95-4638-9432-e433a8ec8983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0073276f-32bc-4863-9634-f84867e04c3d",
        "cursor": {
          "ref": "0fcdfb78-4023-4938-bc44-406b65cdff65",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1ea82d42-9d38-4882-850c-739c89bf0b21"
        },
        "item": {
          "id": "0073276f-32bc-4863-9634-f84867e04c3d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "cc2baed7-3106-4166-8980-c6d52a07682d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698bb481-4fb4-4e17-b20a-84146a679fd3",
        "cursor": {
          "ref": "d3e23e5e-173e-417d-8027-31d681ee8150",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3c0ce49e-bd35-40eb-abeb-20700d710f05"
        },
        "item": {
          "id": "698bb481-4fb4-4e17-b20a-84146a679fd3",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e4ababc7-cba2-4855-9de5-f3e7ba433460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45564b26-b36a-4235-857e-140bf8515eb7",
        "cursor": {
          "ref": "a3561c46-7b9f-4962-a212-0471c5284e23",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "26744765-9f48-463b-947f-e1f80c57be52"
        },
        "item": {
          "id": "45564b26-b36a-4235-857e-140bf8515eb7",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "17033352-7d18-4fbd-a801-c64b6ca5ab51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00bce297-e3ce-4efe-bbc1-ff26a7c8a5d1",
        "cursor": {
          "ref": "5ad5a877-dcfe-4c38-8b10-e574ff5291e1",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "c6245fa1-ae99-427b-9d0f-55d86c57978d"
        },
        "item": {
          "id": "00bce297-e3ce-4efe-bbc1-ff26a7c8a5d1",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "700d70f2-6842-44df-8f09-f0df30951af6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "869a4846-5618-4cd0-ba88-27d5bf0b69b9",
        "cursor": {
          "ref": "34f92007-5b32-490c-8508-8ab0ea2681ca",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "55bb5701-f45c-472a-86ff-a9b5479a597a"
        },
        "item": {
          "id": "869a4846-5618-4cd0-ba88-27d5bf0b69b9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "3f1a103b-0cab-4b94-a9ed-eec9b2fd95db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f0fb44-e0ab-400f-ba2e-ad8e0a505bc1",
        "cursor": {
          "ref": "9123ab64-869d-4d1f-9441-5d0493da4be0",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e39fc531-abf9-4921-987a-8010d2eec7b9"
        },
        "item": {
          "id": "f7f0fb44-e0ab-400f-ba2e-ad8e0a505bc1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2e761bb8-fd74-43f9-873e-dd9b6860bece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fc2cb3-7d7e-4907-9638-8e53d49c83c2",
        "cursor": {
          "ref": "80c608fc-4164-46d3-8bde-85e4e0cf32f5",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "dee97894-09a9-47af-908e-0dce7275cbb1"
        },
        "item": {
          "id": "99fc2cb3-7d7e-4907-9638-8e53d49c83c2",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f437494e-eb2c-4577-86aa-7dbc2450515e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b878822-5979-44f1-9494-3b3f4fbf5f54",
        "cursor": {
          "ref": "967e5b61-4a4f-4530-8376-1e7ab553f8a7",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "00c6edcf-b449-4d7a-b0dd-1bcca25209a8"
        },
        "item": {
          "id": "1b878822-5979-44f1-9494-3b3f4fbf5f54",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "d7b3a85f-d7bd-40fa-b73b-300228d5ccc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7132ea76-2f6a-450d-a42b-97d25a717bbd",
        "cursor": {
          "ref": "c37de16e-fd3b-429e-b578-558e66a48143",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "b4d987c9-86d0-40e9-9111-bcb3592dc363"
        },
        "item": {
          "id": "7132ea76-2f6a-450d-a42b-97d25a717bbd",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "74a90fd6-3ad4-4634-96cf-61162d45926a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc74d092-c913-4ae6-aeba-65a4887ef0ab",
        "cursor": {
          "ref": "40c3fd2e-23c2-491a-b289-0981754c6164",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e13a7c1b-3020-46ef-8172-f890df927f25"
        },
        "item": {
          "id": "bc74d092-c913-4ae6-aeba-65a4887ef0ab",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "65bdb23b-7826-455a-8d63-5a17fa24cf9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1845ad60-b555-404a-b6ea-1c079feec93f",
        "cursor": {
          "ref": "e403cab7-b31e-4ccc-b5df-f09a3244fc7e",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "467061d8-5a26-4d2d-8c59-72789ac1d7d9"
        },
        "item": {
          "id": "1845ad60-b555-404a-b6ea-1c079feec93f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "98c81a51-6b49-4dfc-8475-ea3588a65f01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f84833-eed6-49bf-9346-e948d1722f22",
        "cursor": {
          "ref": "4224901b-45a8-411d-a818-98cd3f591f63",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "8069192c-706e-4fbb-9f45-b82a41325d59"
        },
        "item": {
          "id": "61f84833-eed6-49bf-9346-e948d1722f22",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "ac93cd98-f60a-494f-82b1-eff6c89fee07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f1f3eac-b7b2-4ded-993e-3a8bd9200987",
        "cursor": {
          "ref": "79b79e6e-042b-4e69-b378-027515223e95",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6cd0afde-75b7-4608-b10f-6fd97f7bab92"
        },
        "item": {
          "id": "7f1f3eac-b7b2-4ded-993e-3a8bd9200987",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "81e7002b-4fd4-4d76-96a0-cba89c73568d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e2e506-e300-42b6-9ae0-8fc73c99c468",
        "cursor": {
          "ref": "1d4548ff-2654-4f30-ba16-cf07b77e36fa",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0a0ba376-5457-440c-82d3-163032aa8062"
        },
        "item": {
          "id": "02e2e506-e300-42b6-9ae0-8fc73c99c468",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "12ca3f90-8bb1-4462-8229-6a41e9e3e1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3486e1f0-8d03-49f6-bfa0-7e4f7bbfb9cf",
        "cursor": {
          "ref": "66fa653d-f04c-4f92-a53b-ff4e24e681c6",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "6880936a-e46a-4676-9d7e-b82a189f7a6d"
        },
        "item": {
          "id": "3486e1f0-8d03-49f6-bfa0-7e4f7bbfb9cf",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "95e01eb3-c54b-4298-bf25-0ec6eb174d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c20f25d-1ab0-487d-bc21-8ae33d2346f4",
        "cursor": {
          "ref": "6824ffc2-3d3b-42d3-88af-7e2f2b6fd395",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f6ff8b34-bcff-4c6c-a899-6b8339fe19be"
        },
        "item": {
          "id": "7c20f25d-1ab0-487d-bc21-8ae33d2346f4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "e8eeb10a-8937-490e-a52d-7f65b94c8b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f559aa5-0f7a-477d-9592-948ad83ed9c9",
        "cursor": {
          "ref": "f129f19b-5051-4ed5-ba94-037a09393154",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7d1b9f7f-938e-4aca-8632-33737b78522a"
        },
        "item": {
          "id": "7f559aa5-0f7a-477d-9592-948ad83ed9c9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "8ad9ccf6-05f8-4bd2-9072-6eeec6608577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa284082-98ef-42dc-ae95-20c618168597",
        "cursor": {
          "ref": "b9b017af-2ad9-43e3-aa94-9494f38801f6",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "cbbf0e51-5b11-4ae6-82cc-0b2652808750"
        },
        "item": {
          "id": "fa284082-98ef-42dc-ae95-20c618168597",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "86f89569-e01e-4ba0-9149-f44e69e7ee83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4ecdb8-9eee-46fe-86ee-7da5f4dfae4b",
        "cursor": {
          "ref": "764e0764-23f0-47e7-b59a-b2ecf8b114e6",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "92c52eb9-3d37-475b-9cff-651af79f5843"
        },
        "item": {
          "id": "0a4ecdb8-9eee-46fe-86ee-7da5f4dfae4b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0e0ee150-9a5b-42f4-b384-12b4c9bd1a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14911096-7c81-4047-ac2b-1bf4e297b6fb",
        "cursor": {
          "ref": "d9afe91d-d749-4c34-ba45-ef512d7db853",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "96d7ba4c-f3f0-4e30-91e9-828b1d3680a3"
        },
        "item": {
          "id": "14911096-7c81-4047-ac2b-1bf4e297b6fb",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "d8679c81-bfb5-4612-a638-c99c6fbfcfef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51eb8672-27df-4778-9a7a-268cf9099cbe",
        "cursor": {
          "ref": "d1e7d558-3a35-4021-90df-a32b7c969211",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7ae31c02-e4c1-42fe-996b-ca848af7e5bc"
        },
        "item": {
          "id": "51eb8672-27df-4778-9a7a-268cf9099cbe",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "e58a230c-cc39-4729-a252-a74540d579e1",
          "status": "OK",
          "code": 200,
          "responseTime": 169,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "cc4dddcd-ea50-4400-a8ef-3c1206d74f12",
        "cursor": {
          "ref": "391d221b-47b6-437a-830a-917f95b70da1",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e43e3a19-8899-4db0-9321-4b28451ef976"
        },
        "item": {
          "id": "cc4dddcd-ea50-4400-a8ef-3c1206d74f12",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "91554f59-94ae-47e0-9741-67a9b911d175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce76695e-7f16-4bff-9e47-7ccc25e60a8c",
        "cursor": {
          "ref": "dae1e484-1a44-49da-a2d7-9c5922317ec1",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "97902749-8e68-404f-93e1-4c286e25ddb8"
        },
        "item": {
          "id": "ce76695e-7f16-4bff-9e47-7ccc25e60a8c",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "d49ad9c0-305e-4385-851a-557e1136eaff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfbbc40-c9e3-4717-b8be-9b04776155a1",
        "cursor": {
          "ref": "f9f5fb68-45ba-4b5b-a40c-b70b5fb214b4",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "5c11c5e6-4cd5-4311-a226-042f25ada57f"
        },
        "item": {
          "id": "1cfbbc40-c9e3-4717-b8be-9b04776155a1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b0c4e011-279c-4fab-8f67-acac8ab9e4d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1a8703-022d-49e5-9243-6a62758b4c3b",
        "cursor": {
          "ref": "409354a2-15da-4144-a659-45072c6a86a7",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "724e94b0-5212-4592-9fe2-ba07668f457c"
        },
        "item": {
          "id": "ff1a8703-022d-49e5-9243-6a62758b4c3b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "bc248c2e-1be2-4cea-8d39-fa722b031881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10daa81a-bef5-44bb-af49-94e519929cab",
        "cursor": {
          "ref": "f868a834-ff46-4c5b-951f-e6f6458caed4",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c4b7ba8d-39dd-47bf-849c-77111b4fd5e4"
        },
        "item": {
          "id": "10daa81a-bef5-44bb-af49-94e519929cab",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fc26cb50-87bf-46b9-9f1e-3385503af211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445d9a06-8f68-4e7c-b405-55f3189569e4",
        "cursor": {
          "ref": "278ac111-b864-44b0-bf57-2df9c6b93a12",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "f56fa503-d930-40e8-b566-5f83687fa885"
        },
        "item": {
          "id": "445d9a06-8f68-4e7c-b405-55f3189569e4",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "80d5fbc3-d964-4838-a599-91e6a3542a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55f72d9e-8a64-43c6-9013-9eb660c02452",
        "cursor": {
          "ref": "d4346c63-ea74-4947-b9e8-3bc5bc626400",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4995215b-f373-4809-9572-cb6f41731eeb"
        },
        "item": {
          "id": "55f72d9e-8a64-43c6-9013-9eb660c02452",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0bbcc764-7aad-4584-9336-1e35121e70a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4f51f0-4413-435b-ae48-c5dc1f4c75e3",
        "cursor": {
          "ref": "a99896ce-0c5a-4977-8bc3-a3f0283984a4",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "34942c8f-f913-438b-b240-59e9b194016c"
        },
        "item": {
          "id": "2b4f51f0-4413-435b-ae48-c5dc1f4c75e3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "13a62efe-1b65-4133-94bf-c8ab2616ef48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05874371-058e-484a-8439-4a9f5bb1af55",
        "cursor": {
          "ref": "6066c949-48ac-4697-bbf1-593dc6a80efb",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e78d6919-637e-4965-a6f0-c4b1b6a852a8"
        },
        "item": {
          "id": "05874371-058e-484a-8439-4a9f5bb1af55",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fa269631-04d0-4417-a3d9-81f970e987c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39202a3e-06b9-4a1c-bd68-f29bb984578c",
        "cursor": {
          "ref": "58931d5e-ffd0-486f-b2bb-61a762893d8a",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e215d9a8-14dd-4908-b15a-4963ee1703ce"
        },
        "item": {
          "id": "39202a3e-06b9-4a1c-bd68-f29bb984578c",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5777b40b-2443-4492-a655-f69ddb7794a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acaf876e-07f2-47a8-8129-fe0c9e6b6b62",
        "cursor": {
          "ref": "f58dd393-4b56-4be6-91bd-5f7c6c7ce0ff",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "6e7d2cc1-679c-442a-8115-d4bcd8566235"
        },
        "item": {
          "id": "acaf876e-07f2-47a8-8129-fe0c9e6b6b62",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "364b488c-0c36-443d-8d57-e41bbba62351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572c6805-c324-4c23-a409-65ccee3eec24",
        "cursor": {
          "ref": "4909fed1-e39e-4849-9183-c46427734071",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b736580b-1772-4145-9e83-3c013280d318"
        },
        "item": {
          "id": "572c6805-c324-4c23-a409-65ccee3eec24",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "acebe7d0-c653-49c5-b6ae-8ba60b67488b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a40c6ae-a4ff-478a-894e-edca2ad04b73",
        "cursor": {
          "ref": "32f17052-5fb1-4612-8c14-bcfba9c26892",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "e2000446-1bda-46f2-8636-e6f2b9233c88"
        },
        "item": {
          "id": "8a40c6ae-a4ff-478a-894e-edca2ad04b73",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ca385e3a-b36d-44fd-a53f-0d246b1136a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5ef0ab-4b52-4e69-bb04-5e19c7606d3b",
        "cursor": {
          "ref": "eef215bc-28b2-4f5d-947c-135e39c53d08",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1e9ecbe4-090c-40cf-8102-d181e2d55298"
        },
        "item": {
          "id": "bf5ef0ab-4b52-4e69-bb04-5e19c7606d3b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "c875d329-1822-48bf-83d9-89edc839ffc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65727d49-14f0-4171-8426-f12841f12238",
        "cursor": {
          "ref": "ebb25ef4-456b-4299-ac29-33e9ec50963c",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "2445cb41-2dec-4e45-8450-cac23d6ff581"
        },
        "item": {
          "id": "65727d49-14f0-4171-8426-f12841f12238",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "c4484bca-6dcb-470a-a37a-b937da41ca82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a166566f-2ec5-47ab-b7b2-12cc7e14e1a4",
        "cursor": {
          "ref": "000b7c6a-4bfb-4060-b44a-44dbdaf4f506",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b27a63be-36f2-4161-a3cd-10f586b0171c"
        },
        "item": {
          "id": "a166566f-2ec5-47ab-b7b2-12cc7e14e1a4",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "46c2a935-f3d4-4ed2-9404-eabd9d66d496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89f0f1f-4ff5-4da5-baeb-d2efcfb38fdd",
        "cursor": {
          "ref": "594ae7b5-944f-4e61-bea1-65f7fba5e7c6",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a181232a-7396-48e8-95fe-dab2765e8593"
        },
        "item": {
          "id": "f89f0f1f-4ff5-4da5-baeb-d2efcfb38fdd",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3ef3f8f2-33da-4870-b142-97d7fce3876d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a8e4189-207b-4efc-a97e-0a2f0b040341",
        "cursor": {
          "ref": "437ea1df-2294-448a-985a-1224ffd1625c",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2531777d-b505-433b-88cb-9424d88b9233"
        },
        "item": {
          "id": "1a8e4189-207b-4efc-a97e-0a2f0b040341",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dd0cc225-fa58-49c3-9463-2d5782b55370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c0c508f-cffc-45b4-853d-2931393ebe4b",
        "cursor": {
          "ref": "3b63a63c-a8e1-44d8-849c-6432b2e1adff",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "b8f40a9d-8bfc-491d-88c8-7626885dd59d"
        },
        "item": {
          "id": "9c0c508f-cffc-45b4-853d-2931393ebe4b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e3aba8cd-04be-4313-bdde-3370b0c1cddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64e24f4-e7c6-4aae-91ea-db5186908d22",
        "cursor": {
          "ref": "7cea6232-27f3-41a1-9cd2-c335e776dcdc",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2dc8358b-a608-496c-bcb9-329154caf855"
        },
        "item": {
          "id": "a64e24f4-e7c6-4aae-91ea-db5186908d22",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4e4fc68c-c283-4336-8ff4-81c395c5fbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e105aefe-36cf-4a06-ae97-9bcac26e3b8f",
        "cursor": {
          "ref": "d74aafb2-78d5-4ef8-b906-859dc0c34751",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4d54d69a-0aa5-4945-b031-2ff60767943b"
        },
        "item": {
          "id": "e105aefe-36cf-4a06-ae97-9bcac26e3b8f",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e803e241-1a66-4611-ab5c-46ebb859bd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9692f076-a3f0-4951-b99e-647d49994018",
        "cursor": {
          "ref": "db369ecd-0250-4468-a028-c4d193071e2b",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "c1b97cc0-3f89-4930-821a-b1571cf4d89c"
        },
        "item": {
          "id": "9692f076-a3f0-4951-b99e-647d49994018",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b663e1f7-dcca-4ffb-8b2e-e8509ef56211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9574ea0c-0e8a-4518-afad-36f5d0710d28",
        "cursor": {
          "ref": "6f5a8b82-02e6-4607-94be-1a6d4830806b",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3553d7bc-7e72-424e-99ea-290333207f45"
        },
        "item": {
          "id": "9574ea0c-0e8a-4518-afad-36f5d0710d28",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2663c055-f14d-4ee5-a6f6-32f62273901d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74aa33b5-3f72-4ca5-b58f-0560cb8a7561",
        "cursor": {
          "ref": "f4097ae6-a7b3-40a9-bfd4-27c6b63be3ec",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "425cdf9a-d9a8-4658-ad5a-9a3f8b1b3019"
        },
        "item": {
          "id": "74aa33b5-3f72-4ca5-b58f-0560cb8a7561",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e00b3cf8-543a-4c95-b5ab-1bd0f3e58c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d5eb00-ca87-4216-a80b-08da3bf5509b",
        "cursor": {
          "ref": "3baeb0d5-faf1-43a1-a1a4-2cd4d63850f6",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d8e7488c-68a6-46f1-94e7-0d72b2dd54a7"
        },
        "item": {
          "id": "f4d5eb00-ca87-4216-a80b-08da3bf5509b",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "bb8cbe8b-4471-4511-ab77-ba1181a13b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64822823-72fa-472a-8646-795833779390",
        "cursor": {
          "ref": "d8be9c05-c50d-495b-8e20-474968d59eb0",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "fdc5621d-a31a-4bb3-8d69-6daab9fb94e3"
        },
        "item": {
          "id": "64822823-72fa-472a-8646-795833779390",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b209fe0d-82a8-46bf-9ad6-cbe36790da2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c37cc6c-c7da-4afe-989a-70687194eeca",
        "cursor": {
          "ref": "e5b7f93d-35fd-4b01-a990-2574aeaac2e6",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c2ea51aa-7dce-4202-8e05-f8ce609ce169"
        },
        "item": {
          "id": "6c37cc6c-c7da-4afe-989a-70687194eeca",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fba7241c-20ce-40cc-bbf4-bd3b79e11681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb648bbc-b428-44b0-bde3-79467ca98d8c",
        "cursor": {
          "ref": "b9b5c497-a016-4472-b33e-f8d1d2aa7041",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "58ec794e-13ad-4a73-affb-a1d15837ae66"
        },
        "item": {
          "id": "bb648bbc-b428-44b0-bde3-79467ca98d8c",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "91738a00-b6d9-483c-a100-e95330fcb050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70efe68f-6b71-444b-9b21-2acce1f59b9b",
        "cursor": {
          "ref": "41e275d4-f7e4-4a05-b076-d32cc72554d4",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e0914978-a06d-4203-98c5-ea9f9fb36f5f"
        },
        "item": {
          "id": "70efe68f-6b71-444b-9b21-2acce1f59b9b",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a35cc222-9c76-4dd2-917c-dcb9ba4a7867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7dcd826-d3a4-4692-b3d8-146a96e6678a",
        "cursor": {
          "ref": "aed3914e-87be-45d9-8c92-1f452f62e8f5",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3f7e0cf4-2c66-47cb-9d0c-b1f95e08f206"
        },
        "item": {
          "id": "d7dcd826-d3a4-4692-b3d8-146a96e6678a",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "65be771d-fbf1-4ad3-a03d-b66ee8693b3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ed8129-279a-4ec3-a88d-cf12c92967da",
        "cursor": {
          "ref": "d4a9de01-9b31-4fd7-b0c3-b494fa0de1d6",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "73a349d0-0cfe-4a3c-9e65-a97d8bdd3db6"
        },
        "item": {
          "id": "69ed8129-279a-4ec3-a88d-cf12c92967da",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e5779561-24f0-49ca-bb1b-979530b0826b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a01338-1f52-4051-a38d-e2db210b35f1",
        "cursor": {
          "ref": "22a94319-d6da-4fba-8365-ae3b0b3bd46c",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "93624e3d-22cf-43ac-9838-6f2225019e8f"
        },
        "item": {
          "id": "83a01338-1f52-4051-a38d-e2db210b35f1",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "37c18c54-1e5e-4d82-9843-e7f28c7bdb53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c02e00-5922-4c49-a0cd-35056018efc0",
        "cursor": {
          "ref": "aa9e5d68-6786-4fe3-94c8-72d393317cbd",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e9662057-e57e-44f7-958c-6ae163d01aea"
        },
        "item": {
          "id": "78c02e00-5922-4c49-a0cd-35056018efc0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b8fb2ad1-dcbd-4b88-8cb4-901514ceae90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "689b5060-be39-43b0-b142-6315e7c22573",
        "cursor": {
          "ref": "5a028b4e-4cf6-4440-9127-f6fee35d1afa",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ea2f8cec-76c3-4a9f-b602-b5bea5c49a28"
        },
        "item": {
          "id": "689b5060-be39-43b0-b142-6315e7c22573",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "42ecc5ae-3721-41e7-bbaa-785454ff35ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d9a20b-852a-4a33-a6b7-8270be13ae0b",
        "cursor": {
          "ref": "197a47b2-6498-4ba8-a5a0-a18601ff3907",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "af50055e-7fb2-4f9b-91d4-a0d899a8f461"
        },
        "item": {
          "id": "34d9a20b-852a-4a33-a6b7-8270be13ae0b",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "43b70e48-e65d-422b-8495-59d1093c397b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4118824-cf76-4ab0-9121-96326d2374d6",
        "cursor": {
          "ref": "d0dc1d4c-b9a7-4fd3-9f61-2963e52551f3",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "7f3dbd7a-6900-4714-971a-bfeb584f2629"
        },
        "item": {
          "id": "c4118824-cf76-4ab0-9121-96326d2374d6",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "8bf084e0-0300-483a-a3dc-b001ee140b08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45bb943a-5e7b-4970-b324-663b49230607",
        "cursor": {
          "ref": "ebb3d5a6-7c67-491e-853c-cff1da2d8ed8",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "c3533a88-5fc1-4e4f-b318-5fdc2cdf924e"
        },
        "item": {
          "id": "45bb943a-5e7b-4970-b324-663b49230607",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9a14875a-9f8f-470f-a5b3-8444a4774e32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d7055f-fb1a-437a-838c-10658572b129",
        "cursor": {
          "ref": "9857d461-6a88-4912-8d30-6a52a8b38c2a",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2d0cc768-4ece-49fe-b858-d678732c9993"
        },
        "item": {
          "id": "e7d7055f-fb1a-437a-838c-10658572b129",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "67340c0a-74fa-4d92-8ae3-cd4974a053bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9abb4591-e046-4b7f-bf27-a2f4b22f20c0",
        "cursor": {
          "ref": "74373b09-f13d-4781-a1a1-1ae960255a1c",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e8878012-0b64-4be6-8ca2-8be5bf810442"
        },
        "item": {
          "id": "9abb4591-e046-4b7f-bf27-a2f4b22f20c0",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3a31cf83-f0d5-48bd-bb98-5a23e3c84e58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5a9fdf-7437-4f45-8769-ab238a64210d",
        "cursor": {
          "ref": "491981b7-a5dc-4e64-8337-03082325361b",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "495a538d-0eb3-4271-bd99-da3ec35ec20d"
        },
        "item": {
          "id": "aa5a9fdf-7437-4f45-8769-ab238a64210d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2ce82252-f310-4143-928c-b971425d94dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67db7af-ba80-4d69-8f37-ba6800081ab7",
        "cursor": {
          "ref": "725ecbdc-3ad3-4cd1-9a2c-7860c1a6c6c7",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bddda4b3-bdda-438a-9aaf-d375f38d3a00"
        },
        "item": {
          "id": "d67db7af-ba80-4d69-8f37-ba6800081ab7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d5e3c126-a351-4041-8e2b-a22904d49cd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1eca80c-84fc-4a9f-810b-97da28c5576b",
        "cursor": {
          "ref": "a2178dae-8e43-448e-a3a6-bf7f51756e0b",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2b2cdc40-14a5-4a44-b5ec-d1ff3788ed1e"
        },
        "item": {
          "id": "b1eca80c-84fc-4a9f-810b-97da28c5576b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "dd966468-9e85-40d7-a364-38b3ed04ba40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0030f09-8f8f-4f74-84ed-195b63dd0d31",
        "cursor": {
          "ref": "b44af232-15b4-4275-800b-66ebb7dd1d76",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a1f6e05b-dc63-4d2f-b23e-63d07ffe6377"
        },
        "item": {
          "id": "c0030f09-8f8f-4f74-84ed-195b63dd0d31",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "17c61713-bcc6-4147-8898-e92b620b65b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a42643-5cfe-463a-b4b7-e7da06a1e4f2",
        "cursor": {
          "ref": "0cac20a0-d1e4-44d1-94b2-a8868e6b41de",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d48009ac-472e-4853-a8ce-8cb78f0ed43f"
        },
        "item": {
          "id": "53a42643-5cfe-463a-b4b7-e7da06a1e4f2",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c766b154-6157-44cb-8f7a-1e325b07dc43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb669e5-41bb-4124-9794-3254e37f8012",
        "cursor": {
          "ref": "b4c7f300-6c98-41a3-9239-aef0b4776730",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2f2117f0-dc0f-44cd-afb0-97c3c8749bc1"
        },
        "item": {
          "id": "feb669e5-41bb-4124-9794-3254e37f8012",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "30b3402f-9f6b-4fe2-a706-76ba70946412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d66329-dfe5-49a8-b2d7-9bc5990c361e",
        "cursor": {
          "ref": "ec1b1de5-2cde-45ab-a3f2-6b8a5b5ee2c7",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "88f80348-af23-4194-924e-e236058e9475"
        },
        "item": {
          "id": "07d66329-dfe5-49a8-b2d7-9bc5990c361e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "96ad22bd-92e8-4db1-b63f-c64617da05bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebc67f7-d74c-49bf-9dd9-f2016e856187",
        "cursor": {
          "ref": "dad82ce0-b16c-4de7-897f-f12fe708f918",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cbc9f3e7-2456-4863-863d-ad6fa94f0199"
        },
        "item": {
          "id": "6ebc67f7-d74c-49bf-9dd9-f2016e856187",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "80635467-0eb7-4e0a-9846-9090b5d4bf43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2a3668-881c-4648-adae-da5237fcb528",
        "cursor": {
          "ref": "5b21de7c-de09-4a5b-877e-3c645791e2c9",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b771eb80-43dc-4b05-b9b8-30ed5940029d"
        },
        "item": {
          "id": "eb2a3668-881c-4648-adae-da5237fcb528",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b6fe8832-8272-4358-9e1b-d7c61a33dc40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a359eb-bad3-4520-a6c3-a250388d7238",
        "cursor": {
          "ref": "e495dc92-071c-49b4-b151-36bf20b74935",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "111f05a6-f779-447d-84f3-38995f77d906"
        },
        "item": {
          "id": "49a359eb-bad3-4520-a6c3-a250388d7238",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "f517da3c-0ff7-4712-ac62-6b7209e62069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2a86dc-2080-487e-8128-cfaeceb95daf",
        "cursor": {
          "ref": "78abc141-8fb3-44c8-9ad9-98284ec1f431",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "39cac0b2-77d3-4006-8ea0-29296e80e4cd"
        },
        "item": {
          "id": "8f2a86dc-2080-487e-8128-cfaeceb95daf",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6aa9a9ed-d775-4346-9cec-2b79b769a88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31521118-63cb-4e8c-88e4-415ceedc4677",
        "cursor": {
          "ref": "1245cb64-cd5f-4182-bc7d-4d80740de254",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "978a4a12-964d-401b-8f9e-0ec439a4344e"
        },
        "item": {
          "id": "31521118-63cb-4e8c-88e4-415ceedc4677",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c975e6ff-51f2-46b6-8a05-340959f1bad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbfdc0a-6473-4287-be0c-e541766bba80",
        "cursor": {
          "ref": "9f32c7fb-b225-4b40-9659-819b9a629072",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "04d456af-bb72-4384-8e98-1c8e6d5143f8"
        },
        "item": {
          "id": "acbfdc0a-6473-4287-be0c-e541766bba80",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "404f5773-1743-40b0-853f-ec4c9ac16fc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6804f1-62d3-4e5b-848e-e89fd9ab8c8e",
        "cursor": {
          "ref": "ed4e42aa-87d0-4a90-afed-582c372c068e",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "cc61fd32-7472-41d9-9453-26ea0cb91540"
        },
        "item": {
          "id": "8e6804f1-62d3-4e5b-848e-e89fd9ab8c8e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bc5a9942-1de5-4c08-a8a8-5bf82f0e9fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c105e97-493b-47bb-8806-3d0a2b809316",
        "cursor": {
          "ref": "57cf4a3d-8cfa-4944-a2d6-2d2da7bff235",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ad6d380d-139e-47ce-9581-132f8287d56c"
        },
        "item": {
          "id": "6c105e97-493b-47bb-8806-3d0a2b809316",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4ccb58a1-164a-4eb0-abc3-6b3e7fc6cfba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c9b08c-5e55-49b1-bf7e-3c1b49873802",
        "cursor": {
          "ref": "ba3db7d9-7d1e-42d1-9c8e-ae19747541aa",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "46dab356-7347-4541-b88c-604a862396fd"
        },
        "item": {
          "id": "12c9b08c-5e55-49b1-bf7e-3c1b49873802",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "f56fdc11-f03a-43d3-aaf4-4e73edb74d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7e2e06-6bb0-488d-8f06-0a1d5d5dd863",
        "cursor": {
          "ref": "1aa8fa57-a79a-43e1-a4b4-fa24fd8386b6",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a7ffc04d-88b7-49c8-b63f-eebf7c7f19a2"
        },
        "item": {
          "id": "bb7e2e06-6bb0-488d-8f06-0a1d5d5dd863",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "35b4cf90-1f11-4c1e-9a85-b20e1484d3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b063e1-7b57-4b34-bce7-de637032fb78",
        "cursor": {
          "ref": "0846420c-a197-4dcd-b660-ace6b621dd8c",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "58b71c74-710d-4dd0-b77c-3b48d82be324"
        },
        "item": {
          "id": "e9b063e1-7b57-4b34-bce7-de637032fb78",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b3507c42-e53e-4864-a4ee-00db309e8128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfb4a87-e26a-4c13-8174-d994abb0313d",
        "cursor": {
          "ref": "38a7fa8b-8224-49e7-bf16-58622f3f6675",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "4d8454d0-d211-464e-8e55-5cb2e38a2be0"
        },
        "item": {
          "id": "bcfb4a87-e26a-4c13-8174-d994abb0313d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "145d78cd-eb9e-482e-b1c5-79d647c49cf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66598f2f-6875-44d2-8d86-9c11d579f9a5",
        "cursor": {
          "ref": "b381c206-8e83-4cd0-be78-18b7698b297e",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "1ea979e7-86b1-4553-be8e-8ed216192e45"
        },
        "item": {
          "id": "66598f2f-6875-44d2-8d86-9c11d579f9a5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "64c705ea-5ed7-4138-8bfb-922e7f71b670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd2808d-5d9b-4920-85d3-7b516af3a674",
        "cursor": {
          "ref": "aad8bc49-1970-4abe-97c5-37f29806db28",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "579e4b13-047b-4ebb-ad2b-96c62b194a98"
        },
        "item": {
          "id": "cfd2808d-5d9b-4920-85d3-7b516af3a674",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "ccacaac7-c1d9-4968-9612-ed9e5f8b6387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d000c3a6-ada4-4431-88f6-1ea6ea99d6dd",
        "cursor": {
          "ref": "b5ed9512-1c7d-42f1-a78f-be0fd2eaee9d",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "2259f03b-6cff-4b3a-8282-b8c34788207a"
        },
        "item": {
          "id": "d000c3a6-ada4-4431-88f6-1ea6ea99d6dd",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "852f3275-71d9-4cff-a3f7-a811817b92e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f8f407-726a-41b9-8b3e-be9e0bd19699",
        "cursor": {
          "ref": "6d6a3321-2ff6-45c3-99e4-2a1ed7db0b4b",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "ddfdfde7-b22e-4740-a273-dc866fbd8f71"
        },
        "item": {
          "id": "54f8f407-726a-41b9-8b3e-be9e0bd19699",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "34c1872c-e201-4208-9764-edbd6f2ebaeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e34ded6a-e624-4020-90e5-9fd8466e2db5",
        "cursor": {
          "ref": "5e6020ed-28ca-428e-a8b0-e108074680d2",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "4914f26d-50da-4676-b6fa-7777e12cb5ff"
        },
        "item": {
          "id": "e34ded6a-e624-4020-90e5-9fd8466e2db5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a1961d7e-f90f-451a-b0df-6057df02fb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f5420a-6603-45b3-aad4-01c13560fd7e",
        "cursor": {
          "ref": "04bb2498-fbf8-40b2-bcb8-23a59ec360b7",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "c0fdbee8-41b1-4752-9ad1-3c7290b782cb"
        },
        "item": {
          "id": "c0f5420a-6603-45b3-aad4-01c13560fd7e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "46136158-f90a-402b-ab7d-675147969014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78942a38-70e2-4313-9ad4-7fa7e1e72ba5",
        "cursor": {
          "ref": "faf883c4-7b81-47c8-bc2a-77f4104287c7",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "2e895906-5fb4-4101-bc4a-ca2d77e20bab"
        },
        "item": {
          "id": "78942a38-70e2-4313-9ad4-7fa7e1e72ba5",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "38a5ea76-7800-4889-9ad9-9890c3c86643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5dea39-5e80-41b8-bc92-1a2c0cd7446b",
        "cursor": {
          "ref": "6ea57d77-b53c-4303-a875-00b381e3f63e",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "64e0f04a-6512-4848-9824-ecd278eb157d"
        },
        "item": {
          "id": "4c5dea39-5e80-41b8-bc92-1a2c0cd7446b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "81eac330-1772-4165-8e69-eae9cec4bde0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b94414-a5c6-4ff2-94a2-f0c5b73fb9b1",
        "cursor": {
          "ref": "34a3f960-a519-4623-8f95-2cd0b736c82a",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8878337b-7294-45a1-bfad-e7692eb979f6"
        },
        "item": {
          "id": "55b94414-a5c6-4ff2-94a2-f0c5b73fb9b1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "62c5f117-e7bb-42f2-bffb-237c9f3047f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d97d7e1-89c8-4e23-aa18-d63dba3accc4",
        "cursor": {
          "ref": "a50e60ab-6ebe-4e62-873f-ea58f2d42b23",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a2d0f41e-2a41-46a5-aea5-f3a1f3ed6759"
        },
        "item": {
          "id": "8d97d7e1-89c8-4e23-aa18-d63dba3accc4",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "719b85ff-3340-4ba9-a4b3-2d7ec6df3ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2f3b40-6cc7-4ab8-94f0-140ff7d18c2a",
        "cursor": {
          "ref": "a823cbbb-c6ef-4ac1-8576-5df84d5de24d",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "192b1055-5831-4800-b71a-b980efd4e26c"
        },
        "item": {
          "id": "1d2f3b40-6cc7-4ab8-94f0-140ff7d18c2a",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "c867de93-d437-46d5-93a3-8a893bb5aefd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6210c59-ab83-4557-977e-9b47d69677f7",
        "cursor": {
          "ref": "b6e45175-f812-4c4d-9ee3-1a4e92743522",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "05528466-6a5d-4bdc-b57b-f615e8072dd6"
        },
        "item": {
          "id": "c6210c59-ab83-4557-977e-9b47d69677f7",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b2097c28-4bb1-4a54-9c06-8896dc3ba2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd38f272-d47d-40ef-9742-3ac84aeaf9be",
        "cursor": {
          "ref": "5e086f1e-39e1-4264-88d0-e17862d693d7",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "27eecb31-a6d4-4666-8598-dd2f39984815"
        },
        "item": {
          "id": "fd38f272-d47d-40ef-9742-3ac84aeaf9be",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5bb04b4a-910c-4d30-b0bc-5834cb947e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfc255f-3556-423b-802f-753a46689533",
        "cursor": {
          "ref": "b53d7457-e740-4f0f-8e4e-c6f8c914d864",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "61f287f7-ebf3-421f-a216-8c6f11fe0c7e"
        },
        "item": {
          "id": "3bfc255f-3556-423b-802f-753a46689533",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c6063f6d-8115-4b34-945d-3e6c5ec15b50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a82d62-1a56-45ba-9007-953556f9bb79",
        "cursor": {
          "ref": "b89b79fc-be9b-4229-96e9-69cbf495d0bc",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "dd31818e-c342-4dbe-8dd4-d01341c7b066"
        },
        "item": {
          "id": "d5a82d62-1a56-45ba-9007-953556f9bb79",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "695087fe-160e-4791-a465-0c57d80f9b4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffc620ab-8805-49c1-a5ba-f855f23cd008",
        "cursor": {
          "ref": "2664344d-88b9-4c0f-bb1e-2c750011e672",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "41d60661-3a82-4ee6-bcb8-575668571162"
        },
        "item": {
          "id": "ffc620ab-8805-49c1-a5ba-f855f23cd008",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "00947061-677e-4873-940f-d12b2e7d4347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211b3a6f-d4e9-423b-bc09-ca670aa0621a",
        "cursor": {
          "ref": "87c69148-2d8c-4033-ac83-0e6b68943c2b",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "907f020b-50e7-4eee-bc12-62cb8b164741"
        },
        "item": {
          "id": "211b3a6f-d4e9-423b-bc09-ca670aa0621a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4b45f571-0e9f-4c10-b853-215c3e66c939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe8464f-3b62-4934-9446-c686bebb0bfc",
        "cursor": {
          "ref": "d97cc6f2-37ef-496b-8875-3b2944f98a4c",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "22202fa1-3a21-47b8-b55e-b7a2361316eb"
        },
        "item": {
          "id": "afe8464f-3b62-4934-9446-c686bebb0bfc",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4f2f9561-48ac-4d9c-9255-26649e36922d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 217,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65bebe2-4d71-474e-b2ee-838e8ab730ee",
        "cursor": {
          "ref": "0b0150fe-ef74-4108-b30d-eceb3c3aeb5a",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e0cdd642-b40a-4734-9685-b82791e6830b"
        },
        "item": {
          "id": "c65bebe2-4d71-474e-b2ee-838e8ab730ee",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cd1e088f-62fe-4537-9047-3f417efe351c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48594092-1b78-42c6-a05c-2a1a904de702",
        "cursor": {
          "ref": "683a77d1-046f-4594-ae31-b3e30417b317",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "faad63c0-3aab-4b8d-b862-5d635bc9f4fa"
        },
        "item": {
          "id": "48594092-1b78-42c6-a05c-2a1a904de702",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a64fc756-9a84-4054-9b2a-455caa684f23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03afd5c3-a702-4ef8-a4da-c1025a98d0e7",
        "cursor": {
          "ref": "a24e5fa2-815e-4618-8ccb-1542e38a2a3a",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "58355614-fb33-4f57-bc58-53eb7b2788a6"
        },
        "item": {
          "id": "03afd5c3-a702-4ef8-a4da-c1025a98d0e7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "63172742-9e7c-4d39-91f5-760570bddebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f086da68-809c-46e3-a183-a3261c6bc015",
        "cursor": {
          "ref": "7a151811-6d19-495e-b477-70c8d49224c9",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8d76941f-7a26-4283-9fbd-215fd5ccf2f5"
        },
        "item": {
          "id": "f086da68-809c-46e3-a183-a3261c6bc015",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "96af240d-914c-458e-8bf8-846dbce7b19d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082d2147-1547-433f-843d-c05db5fb1c43",
        "cursor": {
          "ref": "1bf03637-fb5c-41be-9510-a4608f7d185d",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d2d92496-891a-49fc-aee6-4a461ac7f9a2"
        },
        "item": {
          "id": "082d2147-1547-433f-843d-c05db5fb1c43",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4c8930f9-5ee5-4204-a76b-5220f5487bb8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a5d7fd-b925-4e85-b34b-607645519834",
        "cursor": {
          "ref": "e207aa0a-2221-4e1a-a3ad-6dbdbcc53ddb",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "dbac3673-7c8a-4420-942b-7951bfaf6fd3"
        },
        "item": {
          "id": "44a5d7fd-b925-4e85-b34b-607645519834",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4610482f-b388-4840-8664-bc5d33ed98b0",
          "status": "OK",
          "code": 200,
          "responseTime": 104,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc3e1f00-218f-4b5e-a63f-2da1074a9877",
        "cursor": {
          "ref": "d5da6ab6-8894-4230-8ab5-6b1072b858fd",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "cbbef926-5b7f-40b1-bed0-b48ede4474c6"
        },
        "item": {
          "id": "cc3e1f00-218f-4b5e-a63f-2da1074a9877",
          "name": "credentials_verify"
        },
        "response": {
          "id": "38ee7f08-5188-48f8-bfbd-938bf3266f31",
          "status": "OK",
          "code": 200,
          "responseTime": 2322,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef8e6ca-dd3a-4908-ad14-40847fe6aee5",
        "cursor": {
          "ref": "36d1337f-fd9f-48f6-8726-5822c5ff672b",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "efb7f978-e066-427e-9b63-d4614f4628c8"
        },
        "item": {
          "id": "5ef8e6ca-dd3a-4908-ad14-40847fe6aee5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a682e09d-04d2-43af-9825-a8244163bf55",
          "status": "OK",
          "code": 200,
          "responseTime": 2450,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "39847543-9179-4040-9cb9-12a4e8ec05ca",
        "cursor": {
          "ref": "691d1050-7a2d-4c87-8068-4e291b10edd5",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1350eecd-1550-4b9f-9fac-1c67386948f3"
        },
        "item": {
          "id": "39847543-9179-4040-9cb9-12a4e8ec05ca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0da7dab6-3ab7-406f-af07-bfadc83e7186",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 140,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39847543-9179-4040-9cb9-12a4e8ec05ca",
        "cursor": {
          "ref": "691d1050-7a2d-4c87-8068-4e291b10edd5",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "1350eecd-1550-4b9f-9fac-1c67386948f3"
        },
        "item": {
          "id": "39847543-9179-4040-9cb9-12a4e8ec05ca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "0da7dab6-3ab7-406f-af07-bfadc83e7186",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 140,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a04f7f-c57b-4082-88bc-267fdf8ee5ca",
        "cursor": {
          "ref": "93c479e7-7ca1-48cb-8fd5-fecb5b13d444",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f15db4f8-6bdc-46a1-b1d4-128d55f6fc02"
        },
        "item": {
          "id": "e9a04f7f-c57b-4082-88bc-267fdf8ee5ca",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "ba389ab7-433a-49a5-a6f0-32a4e5769e52",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 364,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa78d05c-3935-44eb-a4d2-370892bf1f58",
        "cursor": {
          "ref": "6aa3521c-78db-4d07-93e9-6ae6a62d6db2",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "7a7ba655-6719-4bd2-951e-c477e7ec86ae"
        },
        "item": {
          "id": "fa78d05c-3935-44eb-a4d2-370892bf1f58",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c5ff32f0-6542-4d7b-bf2f-aa01a738cdc5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 184,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}