{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8721dd8d-c278-43a5-b8f2-877132b9fe73",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bbfa70dc-252c-489c-ba3e-70c460422140",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f662eb7-1c12-4266-aa2e-1d77046635b8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fd1bc337-7d5b-4dd8-9f3e-44d19fbf4472"
                }
              }
            ]
          },
          {
            "id": "6f389716-babf-4212-99c6-e805e5d3793c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2bc13a2a-fbb0-4d5e-9f88-7c0b21b8e5a8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "197e0d02-a53d-4931-9b38-6d22aa388802"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "99c71c1b-7591-401b-bad7-292da475fc9c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ed0dc382-32a3-4bfa-a06a-3d62280c49e9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8237b91b-b72b-4e92-b957-957363413b48",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f78cb39-0bf0-4c8a-ae16-abf273fc19d5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64458bfe-d627-44a1-8f8f-c5ae07c26da4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3bd19da7-043b-4dc1-a4e3-fd7d2db317f3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "573659c3-7872-45c4-9d56-3abbbd0e77e5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1fa2698e-bf54-4e58-b317-c196f52dfc6f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d117fe3e-e202-4e10-93ac-dd234694a6c9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f54e662f-b866-4a54-86f9-a1da4b3f2b18",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "83f13832-1e63-4599-b9a7-71419ced24da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c0578e4-728d-4a54-8305-a2547b0ed7d1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f9b7b27-1f46-4fbb-8119-e09f30d51722"
            }
          }
        ]
      },
      {
        "id": "9a5cb632-4839-486c-847c-20badad68d0a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ca98a68e-92df-4779-9333-cb9c16eaa776",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92fa73c6-d412-419e-877e-e270f744f995",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0ec7b5c5-3dab-4a74-9243-3e3ba5725326",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9298481-1183-4dbf-a52f-cccb009f30e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18bfbc54-c8c9-4175-8e41-d0761e2131de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c670ba2a-e7c9-43e9-b458-dd4dadaaa6ef",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a36fa540-16de-4581-a693-1ebf337877f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "357c66e0-9bb1-4e7d-93c7-7ba02c8d28e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2b9c8c-cd59-470c-9e6c-4ce22cec651d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa18c1e-cace-4ad9-8203-d7495ada9237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8795bf4e-d4eb-422d-8a22-a4685c10bc58"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "74602fde-cc48-4cbc-81ae-7a31ca3d4168",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0d40b9c-a06d-4859-91c1-13b45fe5d266",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6656ef77-62c2-481c-a10d-a9a9c74467c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c786620a-df69-4bea-8d98-046f79080160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedbfca3-8be5-452c-be62-6ca20846939b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1107bff-44fe-455d-a028-4f018d9af49b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2396d41d-45ad-4294-97a9-9191bcb61e27",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8d0cde89-eb19-4a42-9e2d-21d621498611",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f6bbb57-85b2-4f70-9af2-78be007570d4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "31fe5e63-1a6e-45ee-b618-1683c236f393"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb72636b-b857-496d-bf76-b8cffbfc777a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "56587784-f8a5-499f-94bf-54fd26d95a21"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f1eaaacf-a3c1-467b-9ec0-3821c5514ebd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b02f57c-3d7e-4205-a34f-44ca0766f880"
            }
          }
        ]
      },
      {
        "id": "3d95c97c-3741-4123-89ed-e09cef0200f2",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "97292a11-18bd-490b-bb18-14cfe7e9e11c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e422f406-9811-40b4-b31e-6d07672afb01",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "f628526c-cf7d-4de7-b506-bff156cda9ec",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a76753f-fcd2-406a-b375-64250dc3a334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d59ee053-7b65-4cf1-a851-fc3d9d50e730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06d942b1-aeec-4938-ab22-4857b84e73be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4387789-6bae-47d6-bd29-e9406f93be7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "136090a6-36e7-4c6d-bb43-47dcc0ff046c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2e2df30-1bb7-4f10-a261-fb04b1d4cf3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28d8c645-ef52-4b9e-ba11-267633d4e8a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06acc074-6ad0-4741-83a6-9d1132359ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24d90b32-4883-4dad-add1-9e773b5caf87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bcd70a-adb9-4eab-b577-62ff53522138",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b5646b8-fe40-4f01-a316-34451ca6e488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7888090c-42e6-4ab4-87bf-d0626597c0bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9e8ae2-055d-4865-b3f3-b761e29aee54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c872be1-4f4a-4467-b952-a693591348c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf8d252-5298-406a-833c-0753c2a83767",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51a4d519-2354-4324-af8e-7e5c15f48c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd04956a-9504-4d70-9baf-1d875274c24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb20402f-2bc0-4718-84e4-8a5a54cea3b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f56ea0f9-78f5-4581-8444-7110d7a2ec45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04afbb97-403e-4453-8de2-6f2c639807e6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "724b758c-b926-4536-ae68-209c83dedc59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28cfda9-d522-470c-bd75-f27943d48903"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a59b62e-c142-49aa-9107-733b1a36865e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "884c142a-cef9-4161-a2cd-50325a3c2c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d826d0aa-2244-40d2-b2a3-9eedd504dbec",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47db42c3-59c3-4603-8231-fc12efb85106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "213777a8-514e-41da-b831-ef0bbac08330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56c0868-f296-4182-9611-016213ee34a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39603d2d-9a82-41cb-a07d-37f6db36ac21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f010eed-5f46-443f-a1ed-e9efab0f0225",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce98dcd4-adb8-4fc8-acdb-cd0179a7ff91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05ac4069-6540-4f90-b8c7-3654c99bff92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae666d7-81b0-49dd-97a0-d9dcaa570f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "03b5dbf9-63a7-477f-bcd1-1f91919b12e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4f2f2e2-ec94-4a52-8bf6-37e0ca5446f9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f798b5-560c-45fe-9269-d8b03a81e048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cff1f30-f949-45e2-8fa5-c49af27c6fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12eb237c-7b53-4397-8db1-9c9b47daf9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "011f6cfe-d3f3-4758-a612-864e88a89011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb91829-5ac7-4707-9044-895865909881",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2d482f-ee42-4742-adae-3e3ae2b2dcd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8297b4b6-5e8d-4bcf-8d71-04be32528c1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f46bf305-e784-4dcb-b506-8ae7461a38b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30d9a70f-d397-4c43-887a-13b50ff23cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f051a7bc-fbc6-4e5f-a12b-0100e922325c",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aef2751-3c57-486e-88a9-26a5bf8c4779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46da2e3c-7c12-4c7f-a415-0b6936dba908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8036422-4221-4a80-88c3-6391d1507ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "114a2d08-ed97-4ffc-b662-c541217a81dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a4cbb1d-a638-4a3b-acfd-ab2774873aa9",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39992419-d00d-445b-a973-d2ac01afe51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ad08112-fb33-44cc-aa99-be1b9deafd53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5a0793-6f02-4b63-b483-8740a8b680b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f39ca165-e647-48c0-b89c-da7596ac2ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e8d769-60f9-4c30-b00f-c21b501c56bc",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174f83b0-1a83-47f2-9b24-3ec1e4185d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb9c267d-a174-459e-afe9-878e6cf38685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3713899c-7abf-43cc-9013-e9a8e443e01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "756d8e54-4770-4655-bac3-7b0c6ae9fea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bed6084-873c-4d4d-b8ca-a2de9a005dfd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b634ab2b-be48-4917-ac82-42f6af133252",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1079089-df23-4625-87ae-1d6903545669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b13de70-440c-4228-81d3-976114e5a52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c5d1b74-a4ac-4d7d-8afe-4777ad509c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b8645e-46e4-4f57-8be4-6a8cefa98cad",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a46ba440-c613-4997-bcc2-54701581ed11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1fd4e40-5fef-4928-8544-ec20d6437990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e2d0d2-57f9-43a2-98e8-c7ed1fa8d991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6179746-691f-4a18-bcca-4b08aebef842"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e226944-6093-44f8-8050-51d23ba6483e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e190b8-1dfb-4992-aaf6-6f0b83c1b1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d3c5f34-4b82-4ae5-9151-2fe2650389d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60ecf3a-90d0-4503-ba7d-a8b9535db204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee88e787-f30a-4d29-bcc9-848e0ac881d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1945b4d2-bcad-46c8-8f38-0bcabb4da643",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96957f4-818a-423a-b92b-2096a60e9c06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87aa0ea7-a851-40a3-8a0a-50345f0fd49e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7094b127-70cc-4e66-8587-d5ecfba7d17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7a205e5-67f2-42de-b716-b2a0bebfa5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e53e23a-a94a-4da3-bed7-f57f66cabd65",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00e7539-8e7b-476d-8d59-960d7ae9b169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2b0b47-d5f8-4192-b2d0-1ac59696bb56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56ce83ff-08ed-47e3-8225-8271933d6291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9b77311-5376-4549-99bd-26a3056561c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd24694-6f55-41ee-9f13-cb783fcd5780",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68052c5-b6a7-4375-8910-240f8f93687b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33c9195-5b71-41b2-af8b-70420a535858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa8ef11-a7c4-45a9-9269-41afa3321385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0621c27d-2289-467d-9ba2-1a4736347a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510df037-941e-4642-b0a1-7e5eac5ec060",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c45185-9524-49d3-b9e1-0dd3bd2890ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda13205-fe9e-40ef-86ad-be617394e269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c7f5be-2e40-479c-924d-b6900db36b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "551ef29b-ad6c-40d5-96d9-a4179d785350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4759272-988b-40f8-bea0-e2cb4a53e956",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2130016-7614-4f5b-887d-94d18eb85743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef0f2a5-f669-4d46-8848-fbc97430ea60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8ad9799-a92e-4b44-8b02-76701677935d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb623824-dd9d-46e4-a723-1d7814551272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37fd5797-8735-4fcc-9b60-b5c1779f348c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a27993-6d88-4db2-8d21-e3ccaf1fda30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7964f1-140e-49f0-ae31-dcdee710e450"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa0d477-7b33-4b5d-8bab-a618de5c042e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "36e0bd05-efe5-4fe4-9e75-3a4a48334feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f15bf684-627c-4797-b3d6-07a584c0362e",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26154a7-dba6-40e4-8f2b-41cf60adbff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55758b0-e16c-467a-8fd4-5a8f7e0c9e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56a53782-a679-41fa-bbbe-bdb20b1fffb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "090f5bd5-729d-4cc7-b4e0-a6b7565b9304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0cc498-5a72-44d5-adc8-378cc0bcf0d3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22dec594-51a6-457c-8219-4de5df1982c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af64ea6-7fab-41dc-b673-a87127f1648a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f7e15e-5df9-4df6-b958-86f7b8da985e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7836b609-dbfe-49e2-8ed5-582e64a7b027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9bb3122-b9c5-40cc-9dfe-bd2760ef1a54",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78a6bcd-52e4-4956-b6d8-e4affcd4ca96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac87a4b9-cb9e-4714-9626-1c3a3436a654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6de28d0-bd10-4436-bd4d-a33268851375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5628bce5-68a4-4c0b-acfd-c02bdfb39ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1eeb65b1-b93a-402e-b6f3-d1bb5fef5ea6",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9df6345-28fa-4bec-a4f5-8b6e2d6625dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22de9e65-2788-4757-916d-7d2587e9d681"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf8e017-303b-402f-b483-1feb6e2e3aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ed1891a-cec1-44d5-a205-9e945f8ddb04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530d265a-ee32-4c61-9da1-a1480c42f231",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0a6d63-58d6-4419-b66d-15e2793c6763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72ce63a3-f34c-4e3e-a174-79ed68d399d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c87550-c6c7-4321-922f-329d289c1460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61afad7c-25e0-4c69-bb9c-a87fb2c32b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fecbacf9-599d-436c-8536-0367556065ee",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f49352b-5429-47ab-a39f-02621ff08093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fc3947e-49e4-4619-b7a0-74a08bbc467e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13e31762-6370-41f8-939c-56f1472f114a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5a4376f-7251-4abd-a7de-a1769332fc4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f44decc-9f72-4c46-a025-4942604cf0f8",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ae989f-22e1-4f04-9456-1f2fc520bcb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45512982-36c1-40eb-879f-c51b6e74550e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30fa808b-affb-4fae-8d06-454ffce5eb89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e47d819-d51b-4c04-b4fc-869c57d86c2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ebbff4-fb8e-4f01-b6ea-edd172689506",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b41ceb-88f5-4b1e-83da-5ca796a6cef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d79df769-011a-4f64-be7c-9653f3fcd783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3602661a-006f-4c7d-87fa-dd4ab7f91076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e93b862a-eb4f-45ef-b733-474ab3f6714c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d8affa7-ee09-4ccc-a236-a151b4fba8d7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a391d7e-5713-4c4a-af70-547518e21e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c257ae7-259e-4ff9-9ccd-125378e0b5ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca81147-6119-4fde-a810-cf420fecae05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f68c55e3-001a-4ebf-8118-3a03b0174a3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28952b9f-e7c6-4683-8447-21d82edd307d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e4c8b5-02ae-4b44-af7d-60eeb9a91fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "607ceeaa-c833-481b-89e4-dff490add677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a4aedb5-80d5-4b05-9abc-71c2cafa7843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e890ce4-8a7c-4059-a846-f9e3f1c8fb08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e9eecb-1fe2-4821-9c66-88edd1ef8053",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255d3af0-5718-4237-8991-c51dff5937af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "886f8dcb-da3e-4ca0-ad84-65b70b2ba6a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16c4431-6791-4128-96a5-f6e4622c9588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "139d0048-0fab-4985-ab13-08fe0dced675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf33e87-3314-4a15-ab1c-4e44820d1841",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f42388-4adb-40fe-afe8-8a35a3cb7aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80b1007-1728-4d86-b14a-21c26d7d7b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be10335f-7b32-4e88-9d3f-b7e2fa778374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37616c8f-1492-4d3f-b884-f27c7a9cbd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "250c1723-1ef5-47d4-ad9d-c4aa46422fcb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b727a676-c387-4e66-a73e-e768bb474ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b35ac3f-d4ab-4cb8-961e-320cfaa790d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ffb6c8-04b5-498b-98b8-c677fddc229d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a162040-b918-4f85-b078-c648bb571140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5eedf4-49bf-44c8-9aa8-c53ecd5b2520",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c72e81-b138-4c5f-8642-608bdaf9f450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d35bde19-d782-472d-8697-a9577e5defae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547e1ed9-5bbe-4138-9e98-e642833e89d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "12fc7b63-e363-465e-81b2-0a2e160ca1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6c3d51-976d-40d9-b314-7b57a3957f37",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b55d965-1107-42f6-8486-59b4c8056af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3208bf72-12c5-4ee5-979c-13e1ef768ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7d277ba-95f1-4c44-9a55-fd022971d5a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ef58586c-dd1e-4adb-965e-f4d4199c90c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf829f0-3d27-4181-93a2-4542d1a5c75a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24201db9-6f81-4621-a879-8a0b473c48ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91447142-2257-4dba-a315-21338df29430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4188504-cd39-4d26-9769-933cc827d39d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c544a62f-60d8-4e99-8120-98fac117d679"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9862692-d3b9-4435-9fb1-0b368929c24b",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f00d5fa-711c-4874-83a6-26e46eafea49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4774aa14-55ed-461e-8c8b-47200ba4d854"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd1dc12f-63f5-47f1-9982-f294bd810687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb85d739-0d6e-4cd6-bfb1-a72d3429db4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7511fdfe-5063-4474-a286-a82ba9676298",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab15164f-7e69-4f18-9400-0af9afd76eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ada1b8-935c-4002-b6ee-10e652016771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b77cd65-0cb6-4e4a-985e-a34c9a663d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "99a5a469-efd2-4edc-bcf4-8d524604c8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63189b66-8e3c-47d3-b42a-bfa8d246deb5",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bc47be-bd56-4493-b445-dcc4dc6e5ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df89e86f-3497-481f-a805-06308172e8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dad5c85-9af6-4bce-920d-4b05c24f74e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bf736c-d69c-4227-a397-f2499695ccd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49c3a74-8662-4ee1-bb59-3fcd61cc8d57",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af138d4d-ded3-4929-b1f0-19b681f96203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967d25c3-8612-479e-87da-6c2ccfc0b1fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd13044-1d35-49c6-89b5-c612fc113042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "430e6152-8c19-4eda-a107-bfd11c3d5000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac089a39-5a19-40ae-859d-0b445cefe943",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5184ef1f-5924-4f65-8955-b5b9e22c1584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75fbb906-f737-4511-b8b8-b1d663716b81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089e7d1a-4846-461c-a92f-14808eb76bf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "ee3259fc-f322-4d75-a5fd-e43522323e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5ac146-69dc-4868-b412-7c3d00e9b582",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25cf2e38-c48b-4765-a32d-52ad9c1d95b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "718a601d-c1c3-4659-add6-f7a7c5f3d566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd3d42f-4f6f-48e4-a1b2-69597a4c9f2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "41e85357-c2d6-4724-a6db-14f85921e633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94b90674-be62-496e-8bb5-bc721bd4151f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c092643a-9f90-413f-a7f3-22d0023bb691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83637e2f-9260-4f91-b7ac-abe03e7c671e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756f7d55-ac01-4d9f-8dc9-e7701cf50b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "04960e2b-46ce-4817-b29b-30d4cddb4546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab89013-6bc0-4a7d-a66a-a405cac81863",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60e604ec-3534-427c-b2a5-c9aa98db553f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294acfca-7e16-49fb-995b-7c9d088ec284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be5f8a78-a110-48cf-a19b-6650b6f75702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "49fff860-d31c-4bae-9de6-b19ece87a659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d989105-5899-454f-bfaa-1f2742549704",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78984288-1598-4029-a2a7-6a37ff2892b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1252ef66-d4b2-457d-8b12-1cb7ca236ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "261afaf3-1603-4cea-8b29-ef78a2ed8cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7fd340e-1e66-41ae-b400-9a548406a5d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32bffda1-aca4-4035-a7a5-62c755f55295",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386d7bc7-f0e7-4f00-9805-f9516f04617e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "880688c5-85e5-48c9-9d71-e993b0ed5ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1adf02d2-6b97-4084-831d-8b0657aecbd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2176bcd6-b4a4-4476-ae6f-55001076796a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a06c691-4ac8-40bc-b684-0beb8d3c0cdd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbea0306-5adb-460a-8936-d817fc462429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af884d0-64db-40c6-b913-f9a4e820a0c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2ccb1d-2761-45b6-a56d-ffce3f36a86b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90382a1c-9574-45d9-9ab1-2622e6f534a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05dde39-f1b5-48c0-a377-d2db21e61958",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28fb19d-2b91-4e79-99fa-eee1e718bf15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f6aa663-6046-44ec-bbb3-b5751a37b40f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def08c55-9c72-4836-babe-56610986637e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d3899324-35ef-4e9c-847a-6ac67c6c6d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8cbbf2d-170f-497c-95d4-bac7ea382fce",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43742d0c-4ae2-4700-85b0-7082c9ac9a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b90cd8-980c-49b1-bcf7-cd703621512b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d141acad-b298-48a7-a9df-987b65f2a713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "06b3a986-9a0e-4778-9ecd-6fc50307b8c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b620ac7-9d2c-4bdc-bd38-cf796fd325f9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69b7126-d6c8-49dc-b5e6-1403ebb16e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742f7c33-0512-4f81-aa1c-5c5b9e859461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de050a12-8a5c-4815-b405-032ae6bdcafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee6033ef-5e85-40b4-9e0e-23e650de827a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f903067d-9c2c-45a4-bc18-eac0236a17b3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5decd06-6b25-4799-baa3-880baf9768aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eda935e-c2b9-4a0a-a703-0df5453b72bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d673636a-9497-4ba4-91dc-3f19bd63eccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d6fc9b0-2d12-4f8f-b91a-1d35edf757df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216226ad-aa1b-49e1-8303-cd57a19f3cf6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6991556-b979-4e19-aa88-6b17ca089734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b39a3ae7-7075-45e8-8f39-83fe407367d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16853b43-84d5-4467-9c9c-f5bc6bfe95b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14cfcdc5-195c-48ef-878a-27baef55841f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcef53e-e64b-4dea-8acd-89eec63d51b3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0add58-1c69-4d9f-aa71-e6c74da97cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c50810f-c648-41ba-910a-212f475d0ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f86b119b-4bd3-4475-b904-248b01f5a031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0127691-8f87-470f-9c8f-4f551a1b5d53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7391233c-54af-45ae-90bd-21fc19b76491",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9ef5e7-427c-4a31-81d1-ba5c99e5691f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "449a0f29-1952-44d0-b65f-0cbaf08749e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fc4db9-07cc-40a0-b6d0-459d1a540676",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8b0d27-07a0-4412-8e3f-7e56a339c175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8189e464-577f-455f-a7ef-f27aeffe46a7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c8454c-2ad5-496f-8f95-1ab6e0786227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf39e9eb-3eb7-4c5a-ba41-0f840eeef1fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474b5b26-3de6-48b9-9a9b-a820ee0996ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e4cca4d0-df3e-4038-ac6f-8a64f5fa6c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea482d2c-53dd-4d6e-95d2-e3c0789f434a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884bab8a-0b75-40b4-a847-51ea110c0b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02928e49-6c15-4e29-8d75-16d20b732662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630f9ba5-6b69-47ba-b394-90df213a5d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "febf988a-091d-4490-924d-f86aa1203f75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56ba1e7f-b651-41fd-96a6-4b60062239ed",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b085e13-88a8-410d-a48c-4295218f75e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7048055c-36f2-4089-9d1a-53d7522d0171"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0c9ba7-038a-4d7f-98ff-b4950198f003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed7150e9-f6a8-421e-8f8a-1577f8b6d146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb34e26-786b-4e79-8040-fa5f39b0caca",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2854174-22ec-4e20-b6d4-dbf596e4c845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2409686-cf1c-4657-9df0-b5cb1ad9c4a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db41f925-915e-4f9f-b56a-de97f5cb8e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f04bf695-3514-4b5e-82f1-bf6cf10d13a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c698579c-6d82-4f02-91df-f4857cf4d060",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99776645-1991-4be4-94b7-4751d3005c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d9ee2c-7641-410f-9267-41f266333332"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c25a9b1-5779-4b43-a5f5-42c1b8f2d25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e387334-13f9-4674-b19e-599c8e1c155a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cde7de-07ca-4aee-9c2a-d1eebe738389",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85beae74-d7f6-4179-938c-b88aedfc8a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a5c55cc-4126-4d99-91be-63869b583920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad60a3cb-2c58-4b40-aa89-03ad449187eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0300ce95-e948-4fb9-8052-61067d01a525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6736f91b-87ec-483e-b55b-973d71967d76",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c631f05-996f-46ec-a431-d41900d9ac19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda2bb54-490c-4948-af2c-6b84d23933be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f796123-c21f-476e-a114-1114f4881602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "febc357c-eb62-445e-97e8-67ffa6db6e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fd14e14-0a2a-4b45-8a42-682b8da94df8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc01290a-b1d9-4ae8-a019-d8ce2f3a80ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75738da9-61ab-4a41-b8b9-18dfc50c685c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cc15ec-6340-46f4-8906-fc43139f64a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fde0e436-5b5b-4296-9420-1de558c2c44f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88d0cbd-4ac2-40ac-b819-f5d46ad45711",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7511527-6f64-434e-ae97-4c131aacbe5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e887d70c-d4f8-4a8b-b57f-31316ee38dfd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ba7ced-e93a-491f-86ec-6417ce59d609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4eb1664-f4cc-41e4-a3e8-0a19a856cd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c50989-5692-4435-9e09-6eddabcb6435",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7392c6c3-21d6-4591-9b70-4a1e0455e115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2443e729-1da9-4ac5-8f19-d8e23460bb9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01d5f48c-071c-4564-841b-d806494b6716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5734f9d6-fcf1-42b0-8b22-3dd8e50ddf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f578259a-537f-4ffb-b350-1d15843b86b6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c267f917-5265-4524-947e-85efa0381481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76c55a0-eda7-4107-840f-76172fb5d212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b82e49-b585-4b6c-9822-54c1b6141c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a4bc64e-7b58-4e9b-b896-dfc2472ceeec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e70bbac-2352-469b-9be5-0c55c8358e36",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13dbd9e5-81c9-4f4e-bb15-d1b222b2ae97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b89dc0-2fbd-4a42-bedc-117e3756ad50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6a16f3-30a5-40bc-97f1-7bb209a3f5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9e1ec60b-704b-49fc-bf2f-704a3be1bfbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7b770d-1e80-4fbd-983c-457b9f659e39",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485ac80e-0f61-48bf-85e0-1f7b66bae163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f55720d-3bdb-40d9-b139-a05f40b453c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c162cc-8617-4f79-bd1d-042d4e17bd6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf49bea4-a648-49b2-b8ca-7cbd19aa9f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d86c955b-52ac-4891-8608-02edce878636",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e4fadf-fbf4-4a59-ab90-2c1bfb554760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e59bef-358e-411a-b57c-e584d97eb7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3ac9eb-1765-4b6d-a36d-55c33babaeda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2395da64-8af3-40b4-89f5-8a6154d886c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f954578-2958-4870-974a-608e62623090",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90593002-9094-4176-aef5-25c69a1f02f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea50405-1b32-4949-a0b0-96d3e0d27a99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80acab6d-6bb0-4bbc-8a6b-2adf335b32e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "62d48b30-e742-42bf-b399-eeb5749d8d6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3b3910-7043-4ac4-b7d0-a6d52d83dc52",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d35da5e2-063e-4eb2-b549-c977795a227e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11077a8-0c4a-41cc-ab2c-b01e4ba26e0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7b9006-067a-47a7-96a1-713d9e557767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65321af6-4f23-4df9-8e28-592ba72860ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b06de4-3c5a-4737-a7dd-4dde1c02a208",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87979412-f0b4-4028-9698-f1ca7169dd13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c0d178-1831-4170-8358-dd30bf64ea5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60386b3-a47f-4908-a81b-422badb6fac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "057bff5a-c2e3-465e-a261-215337d6f62d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c638fd-73f7-4dd1-bf37-b46b59a07b84",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b2fa32-427b-409a-9986-be3839a25bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc3ad45-851b-4169-9556-13d184a19143"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea96f87-4a03-4310-a202-1ab3c8d4050d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e31ebbcc-5697-4a8e-8c24-4a41e197dc1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23edde81-ed3b-4c81-8d59-e3ada38de238",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa8a0711-5ccb-47e9-a8ad-73dc9bf02808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262c1c78-1fe1-41ad-94e2-7549ad827be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2235d7e-f706-43c0-b9af-2dc6b010dc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "781a141d-1a4d-43a6-b57d-a034ecb94f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1140769-2223-413c-96a5-05d073fc5605",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd2d4566-edd1-4b99-9ecb-99db7d70b0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa09cb4d-8938-43c9-8cea-ded9ceeb48d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80a86205-ca3d-469f-8a2e-314cf0a4bb87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8566941d-6bad-4854-b7e0-5e6adfa968bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb8462d-19c1-4b4b-9985-c287b3e093e5",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e395eed-48ea-4dcf-bb77-41ac53755284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "311b1193-0d6d-4995-9716-496bc5a651b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19e57d7e-6234-400b-82ec-229b1e0fd3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f94dfda-a3a1-47a4-aa40-06118e6dfcee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb57f10-5317-4964-88cb-42c6b174262a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1adfbdc5-15d5-474f-a8be-3760109c22d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aab9f11-37d3-43be-a254-b07cb3b92a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e16a9ef-b6df-4bcc-8df5-add134dd607c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0131278-f3a8-4df1-a479-88e2728f4cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8cabe2-c142-420e-817d-0f1749672918",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a7c4c1-da60-447e-9d8b-0c35e44f73dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b55b9e75-9766-4fef-9141-f32f7f68062b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ecf19e-f3b2-44ef-a72e-f7974cc93bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41907e9d-46a7-48db-bca6-0bb316832b3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4cdd358-5a01-4808-8c95-2fb7b50335c4",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e899d57-a592-4ddc-b793-7ce30b0bbf3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2b98068-1b83-4c52-9545-15099a36c747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2527b1b7-5e44-47ef-a72a-01327d602ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "07ac2e76-b014-40fe-835c-a7fce4c09416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c657c7f9-ae4e-4eab-8b47-0e258efc9e5a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a93887-eac7-485d-91de-6154621b6a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b438c8f0-08b4-44b9-955e-ff1dee83d974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46a7352f-8f8c-4be2-a628-38847b914d65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f8eb5df1-fb24-407b-8de1-12760ea204e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7bf39bb-da2b-41d7-a7bd-279b9d6c2e7c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5c7f2a-cc54-45cc-8eb0-df468a89f401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f3519a-e40c-4d19-9a83-bc6fcbd8288d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1034ef6f-1280-47b1-a7df-8e91cc1a51f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "83d38ad7-bc6b-473b-afb9-e33b80523ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cd97df-3816-4d1e-af37-48c8b27b161a",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f167a1f7-f9c2-4bcf-a04e-e88430f89c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7f16f96-583c-487e-8a60-0acae6d69139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a792ada6-f993-4761-9766-ec28af7be440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af078438-07a9-4110-89b8-4bb70c18a05a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b2274f-7e5e-4be8-a313-a89b6f26afe8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b047fdf-dd43-4e67-ac8e-dca83b47aa08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371b2491-df83-4235-96fa-243b760e9099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26de0d20-db3f-4816-8115-bd3cf5dea6a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "973dae0d-7d42-4446-b980-222f41338c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d9a505-806c-42e1-ad55-1388db049add",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb3069c-c35d-4f0a-a817-410c673cb50e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413d41d0-9efd-459f-8afe-87941484a9b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e89bc45-44eb-485b-bff2-6a3f97fd2871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "249fa454-eef7-457c-af1d-e5055810aa0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1430db47-1314-4cdb-b042-09ddd5854baf",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14cb815b-7688-412f-a962-1cd097b25ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae4a9d16-7c32-4406-a8c7-19def163cef9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1eb7cf5-bc5e-43ca-a593-1735dea1652d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a51093f8-ef8b-41b4-9eba-48d6b9611039"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8187ac5e-1cc8-4e6b-aa28-06d387dcba0a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c1866c0-49f1-4e58-9d1c-d9680414fa29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0952217e-4b57-4034-8dca-9d36807fb566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78058ec1-bd53-4ee7-ad51-7af33744744c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c141a27-c5a5-467a-a62d-170024653717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a70bdba-f41d-49f4-ad1d-424c500b2618",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b827b351-4b7d-4448-b3e4-b4c6f8afc861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c974bb3f-eb19-4a4e-9e94-e0dad75faf8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f193c84-78a8-460c-b151-d9f71a71d016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f486ea1-d67c-4e7f-9ce8-6836dd793ac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3034ff-9ead-4772-9e56-2c03fe8a8b1e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db32bb0-a8a2-4996-b3ba-4df2ab53fec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3eb3c4e-69ae-491d-b718-5a141e126ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8e968e-04bb-43e0-9f40-f319f7e19deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "67d99105-7105-4445-87c1-aa65de6d8c4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8392c12-7c8b-4cd3-8b7f-52101b35d0fd",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8bfa6cc-141c-4b7e-a9ee-8707da4ab14b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f3fc42-b9e2-4867-a3fc-cbba80960f19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4805926-cd61-47eb-8cca-d65a1ba45a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7571190e-2635-4826-affa-46bb66ffaca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa099ed-c32e-4ffe-a2c4-b9fdc32590e8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d772e5-b3b5-46a8-8323-12e262d49aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c81781e5-de4c-4d8f-a1fa-a3eb2c5b4018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a2720b4-6036-4c3e-b3be-9a5f3a38c38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b842284-5882-4173-b7e3-5a38631f0dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c98c086b-a2a2-466a-b974-f3e122e12b05",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96fb38d8-92e5-4ce6-a04f-b983cc1b8972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a082ca0-3949-4e6c-89bf-6c10b5f32361"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4833923f-2458-4b97-a881-da8f43e64fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "de24c4d6-9f77-4d0f-9548-fec0ab70c940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9e2a4cc-776c-4ced-8fe2-35e21138a012",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a53196-e3e5-4f37-8a37-dcef3e53ffad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9d5c4916-960a-44b5-b239-de75ae16529e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233cc43a-994d-4d7f-9d31-710f90626fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "04fb255a-e35c-4a9d-9894-a76595b3b8a1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "82046e1f-3f20-417e-9485-900edba429bb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "79e561f7-c0fc-4292-a642-d3a7f35b47e3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1dd0e2-80fb-4fb4-876f-de4c51e62c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8008d9ac-3e41-4f1a-b0ed-87320c0442a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4ce4dc-da59-4f69-b89d-2e7076648b84",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "697360ae-99f5-4050-bd56-00e958cd2d67"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e56962ad-c646-436a-b7a2-b83657968133",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80d0f282-e8a2-431c-b25f-481b4795f4e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "799fea83-ec55-44f4-acf6-ad868a56c8eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f8c6194-0d18-49aa-8a27-63f90ae37c35"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "686b5557-9af4-4ba7-8d5d-f4fa445b4c87",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f23d2e0b-55d3-4ba0-a30b-b8125ccbef7c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b86a104c-0014-4c39-af33-a3e1abee03e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8a19234-24a6-4b18-b0b5-7549ec2c0acf"
                }
              }
            ]
          },
          {
            "id": "cfadb6e1-2550-4c32-a8c1-8f2aa2665f6a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cce18068-67a1-41a8-a094-aef7900923c1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "cc9b57ea-3d88-4a10-823e-e134bddbcdc4",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31943003-ecde-4160-b0d4-9639892ed7b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8a74e153-a256-4c05-876c-a486c2fb03a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb5fffd-b5d7-4a5a-a816-9293335f638f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79562a4-3bf9-4d6c-b4c7-4a9e2162f620"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "33fa85d6-cfa2-4b95-96e9-c20f6219d64e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9d9ab3b-b0f1-4579-8d18-2e32811bb1fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aa2a7006-4277-4d8d-a298-45fcc61bccfd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "03188fb8-bd26-40c8-b4c6-9ccb3d302757",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c50dd313-7128-4d25-8bdf-04d5f0d63bb9"
                    }
                  }
                ]
              },
              {
                "id": "cc0242b9-94ec-41c6-bd9d-0133c1d30d2f",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5b3c764-31e1-4543-8dd9-f0d864ebb60d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e749765d-779d-4e9f-8d54-d2ef5d91dfed"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e4c00155-dd79-47df-a9ba-d1f8f2cc86fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "83ff38b3-fd2e-4965-850b-631aea3312f5"
                    }
                  }
                ]
              },
              {
                "id": "bb12313c-feef-4059-88ac-27196f4a04f9",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bbf58bc-3950-4a19-854f-65707c1d2386",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2bb04b08-fb61-416b-a697-3b6cfee67dc0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e5a80fe-47dd-42a1-80da-20f019de5b88",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f2d31fcf-d0bd-4834-bbb4-0081641face3"
                    }
                  }
                ]
              },
              {
                "id": "b920f1ab-cbc8-4269-a96e-381e4100da3f",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "307238d3-ba80-40c3-98c6-306e2c381f45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b97a123-de79-48ca-8525-63a6f4519b15"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5bf9f399-80dc-4a25-9064-c379e410ae78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "13353221-906b-4599-b5a6-3f5f9fbc6cbe"
                    }
                  }
                ]
              },
              {
                "id": "ff4936e7-e454-4dca-9767-2a397802940b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0aa21d8c-3f86-4e58-90b0-53e3dcb6bdd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "47c6e6e2-1efd-44e7-85d3-e9e1906718d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "77ca4ed2-da88-4cfa-a8e4-bf94a66f67b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "29fbc420-13b3-457f-9aaa-d85f4bccdc9d"
                    }
                  }
                ]
              },
              {
                "id": "763675d2-4eb4-4bd0-96e2-82df327550f6",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6f134d5-8d20-4f88-abbf-af89cfed2a56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "74a1f33b-877e-44ff-b91c-fcbe7b386463"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b163aa0e-b750-4826-94fd-96fcbd73f641",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8ba0ceb0-99a9-4cb5-a445-49d7d43fb9bb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d6d34cf-4c5f-4939-b7b1-cbb961d71a26",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2119b76c-e5b1-4904-b3da-805c490294f1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "459ca83b-a95c-4ad5-bb51-d5d7f179f315",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "db0b9ece-cf0f-4350-a015-7ca1dfe5fd5b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "393c29d7-a3f5-4b7a-bb45-0687256b20d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "55929fd6-a7a9-45a6-a6ea-83f455460a50"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a15a42e8-e21c-43f9-85ff-8d7a3feb9a02",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9cb2de95-d632-47a0-9795-690ef0fb00d2"
            }
          }
        ]
      },
      {
        "id": "562d49ea-7d18-4443-9154-09c2d79e2e34",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "8e0ff689-308d-449e-b574-5c5577f3a980",
            "name": "Negative Testing",
            "item": [
              {
                "id": "556d7e39-4be7-44e9-8ce1-9d87af676be5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "364abff5-51e1-4383-a062-3cb53b02129c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9048865-ca0a-4cf2-8226-585e6bbc9d50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0a1340b-2bee-473b-b686-787a4c82ee50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0580c16-b2da-47a6-884e-653c6fd90275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f85586fb-528e-4cb0-8838-0116c3cf7607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e83ddc4-d37a-4bd9-95fc-e8b139d47fd6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b302a7-22a2-4977-bd76-9b4890ff02f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61258abd-66e4-45b3-bc3c-54e383825efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33b63964-7d31-4e1b-b741-418c17f01574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a427017-a93b-4e62-bd52-ccbedf4333fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6cbc9f8-b187-427f-ae2b-cbfd55f36c48",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c165b802-2324-4a45-a8c3-2a2b0f899e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793befd8-1e67-4184-9958-21d1429180a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f00c41-7a89-4d9a-a134-c399fe055854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "991e2d98-1094-47f7-b138-12179df3a272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7426d7-1f89-4e7f-b9ac-84608d02bcb5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6596f8-fccb-4b4a-a9ff-c7469fad4665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "743f95ff-a266-4949-9fdf-bce23b06f2a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62df14d8-684b-4043-a4f7-3a5f5b0eba39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df43108e-17a7-4a26-b187-37aad232113b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a002df5f-8dd9-4e1e-8c13-1e60978d5d87",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635f1c36-632b-49c4-b223-011d2292334a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ec2eabe-ea17-4b10-acc2-5617f8faa669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb7d5be-cdd0-44cd-bc14-645489fceea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79384c45-4f5f-4f1a-825a-9adf3b191676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fa4a0a1-cbe6-41f0-800c-8899b6714444",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306efd12-3e47-4654-8313-c6864e1ed55e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce8ea631-53ea-4537-8992-ce3e5002a315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61b3e7e3-6f49-41a2-83b1-acefa14d615d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d648c1e2-34ce-4811-875f-9c35f936e2a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711c1eb9-ea48-47d7-a883-ca6555a46a3f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61858244-c13a-41df-878a-fc1bfec4c2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f74c9cb-8f56-44d5-ba22-996606932327"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240d3968-64af-4c8e-8f49-e2b004ccd085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "67c3ec3a-f656-412c-8c96-a7a03fa5cd70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d47a55-10d6-4329-9aa4-c18f034403f2",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97c5c43-5a09-4ea0-bd66-f6b6904f676c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c703bcb8-f18f-44ac-8d57-0abde636d06d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbf4a4e-11a8-4ff9-be7b-335636e23461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "08660513-22f2-4775-b778-a93ee3d47841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb8020f4-d462-4977-8352-bfb042438195",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b60c17-04ec-4d61-858b-90215941cf88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1b7e8d-88a7-43d6-95e9-1d684d67c486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12abe57f-deae-45bb-a9f1-88790a9fb5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3553b1bf-df66-438d-ae05-f38802ee1cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00b4fec-5404-48a4-adc7-dc3042ea2099",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932a2511-7f00-4cf8-8a42-ccbdd908db45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3eadc38-613d-4132-b309-a09339b7f245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5533190-33af-4cb7-ab1b-6e1eb0841554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d3464e-7811-4f14-b1fb-3be0ee2593f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb4c384b-5f4b-458a-83b4-8d57d9487182",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf16a94-a314-4966-abe5-2d5f46d6692a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dc0004d-1d03-4a4b-b8fc-70bb079fc047"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d41fac3b-2f85-419a-b1d5-f98463f65046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d3781c71-e3f3-41bf-92f2-41c2370699dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5274a979-a1d7-4528-b31a-490d556d086c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af367e1a-42c3-44d2-92c4-b3069e3b3a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4784b1ac-7bb1-44ac-b8b0-7f4c056ab181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34f09d8-973e-4c1d-b4ec-2bba55760f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bf251269-fc00-41b1-9036-fd5bcb6324da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db84794c-c03c-4105-97ab-114c4c3574ef",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7103e7f5-de42-4646-9ee6-b48a4d14865f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ebbaa2-f148-4e6a-991c-881599a46678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1117443a-96c6-42d5-bb7a-f275840239e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1858c641-31d3-423e-ab79-53397a0afb4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42647dd7-cc4c-457f-8a78-18ed356826f8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "141954a7-9f52-4224-b570-55ac5718314c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c400788d-bb68-4a04-9ed9-5f267a933c80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb6319d-6f9a-41da-9c21-3cff4c243563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b9d995d-f3ef-4237-9690-098d79d4daeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb46ee0f-4100-4c63-81f7-d60bd87f34ef",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff91324-8521-4f18-924d-1d1f904d94c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b17f088-3b98-4db6-82f3-5a532788a416"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5530fa85-b2b7-4dc9-9850-c68b233fff41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4855162e-1d94-4350-b7d3-92956c4f3700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5c581c-c316-44df-9dfe-153f1ac4be4f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15322500-3857-404e-9919-5f8d6553912e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c430db89-a614-40b4-9095-67ac6a5f8934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513b6193-eac8-4f86-bd8c-a34018629892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3252026-86b2-429d-81f6-a76c9343c26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d9c6cf-12b6-4a9c-9993-831836b4f335",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff762c7b-5eb0-4b82-8859-178790971b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10dcbdb9-d6cf-4d23-b1a4-50a056d68afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9824b3dc-5ccb-4150-8260-6a7070d04f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4596bee-f013-4fbc-b4ec-77e12d062b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b218933-d6f9-4876-8c90-726415207f92",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58478fbd-b128-49f4-a13b-2e9f27f38918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb3cb8f8-3091-4ee1-b4da-edb55d851f15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4450101b-0932-4b89-ab8a-6897311535f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef816326-6d2a-41c1-88ea-96e0d5704ef4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32051542-410b-49fa-8d37-e32157956620",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0effbe19-3725-4998-83ed-f0d1f30e7a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29b570ef-8dd4-4a3e-a8a0-6a13cb8990fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a3dea1-098f-46ca-89a4-a4cc2e5a5864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79f65afd-d1ad-46f0-adb9-5af819d2de03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a38793a3-7a15-4098-b12e-d88325f253f1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e91fc847-d638-45f1-a9bb-b34d1a78380e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54440233-1bee-4dfa-a836-4ae3965dd046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ebe605-e58f-4416-a6e9-f3e451219ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cdfe8cc-67b5-473c-a15a-fa530c44104f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce477747-3dbf-4073-9416-f4681ed9a2a0",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab29bac9-a6c0-4b81-a18a-2c955818bba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b46c93-d5dc-4303-a1da-810583ac9d2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a9649e-5d68-40cb-a868-e5f658f041af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb0c3a8-08b8-4d72-b31d-3fc12098f140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f653104-c7e1-43fe-b3d8-e41fa2e0adbd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09aa119-9ac6-44cf-a420-8545bc9bcd05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7228e7c3-f54a-46ec-91a3-2e07ac815a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3e2c12-ad1d-44c9-a93e-0f348599662e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10dfa817-8010-48d6-adea-be436cc15eb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90665d0c-db15-4a5f-be5c-958451e353bf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e275d539-316f-4544-ad6c-bea26d81b75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb7bd0be-1818-4441-8339-de57d8216c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "168de666-c51e-4905-9959-fa331739fa1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c17d458b-6a11-4fbb-a437-d39e04ee37c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8774f2ae-f191-4e11-9bd3-42ac4362cdee",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ef6b42-f7e8-46d0-aabe-719ccb176ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cee4d11-3304-418e-b999-e92b77b2aa35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af5f7c6-5c65-470e-8486-4fcd69acc6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20787813-59f7-4b56-a348-53fcfc7b0587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7583ecf-275c-4429-94b6-18ff31a6448e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ad8f0e4-852b-4f90-9c85-1064a8a2bdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd9b58e-bee8-4001-ba1c-624f239e5f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cec7da-971a-474d-bcc6-919fe6fd6ca1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5af8c88-56cf-4443-98d7-53110e4ae04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b95c89-68bf-4c4d-85ac-eb3a64b904f9",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7aa0dd-77ef-44c4-bcd6-275b471c7bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2153d089-8b37-4bb3-a35b-c3d50b502a39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc23126-479b-4870-9147-356cae22e1b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "223d20ca-145e-4c49-870c-aa8d92d190ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ae859f-bc0f-4ae8-8070-de3b7d6a3221",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b174235-afd3-4df4-b825-b18851a51009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64884bb5-fbaf-4ad6-a612-0c6be619a601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4530644c-9c26-4002-aa21-2dada7d2ca6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "672b77e5-a702-47e7-82c5-ee02cd98f8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1061f9a5-c848-4732-84ff-d5d06e99cafb",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d84ee0-89f2-421b-bf7c-1a4fb8e2ca58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aec826c9-7d4d-4e34-9d69-b1371ef29c54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87aa1b79-9eeb-4850-ae0a-b205a1ff4ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d5ea3a-59e4-41df-b6aa-bfc91c79174f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2642e14-6201-45a0-be9d-54367aa133f4",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c47206-676a-43d9-b1c1-9a2b6ffdfa24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75649258-acc7-462f-92c9-20cf4a9b031b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c2caa3-1468-4bf6-898d-155aa3ffe9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a601f6f3-f6ab-47ed-a4e6-f404919b357b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4513a760-7743-4852-99e2-63a71221c7b6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d5bd8e-81b0-4834-b96d-ea49bcec283e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906a9cdc-a1e1-43b0-9b18-b29d52ae7b1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185fa7a6-596c-4195-8b69-708d15ce46d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d204e3d6-b195-4ea0-9fb5-9a21e7264750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9ee7e46-b793-4203-a4a4-672f5822f0bc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb81bee-6a32-4b68-863b-8cdeb199d5a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5afb0e4-04c7-43ab-9caf-bd3209718125"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fca50960-e6bf-4044-adb6-b13712eff71a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec5ab63e-88f9-4319-b7a5-f7ce33f28654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4c3ad1-2b86-4a21-83e0-f1e6a71b5204",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02c84614-ea51-4dda-9d19-2298caeae4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d912407-a1b9-4f40-9aa5-4a365769bcc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de3646b-b26b-4d33-aeae-7ee441796d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55087ee7-ea99-4639-a8c3-832ff10a3d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f5fe9c0-61dc-4838-8e4c-d976e0f11b96",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7392f915-6198-499b-9c52-eefa41fd797b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e148d399-a89a-4590-b11c-f996abec13fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80dca0c6-6057-47f1-a3c3-5d813ed123b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c17a6e8d-b120-4c83-864e-2bf053488ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1faa1c-54cd-4751-a6fc-3321a44dec79",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d17014f2-5d1a-4bfb-bc13-eb8c46afbd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364ffc5c-0d78-4928-8411-72afca430f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2acc2c3f-24c9-4334-b52e-1e4532da5788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "024f632d-c4e9-463c-93dc-d85c319e29da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e172ce5-2e69-4d48-9766-cd4ff37a1020",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d12a13f-d6a9-4faf-af32-56351c4aec9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e875b70b-0cc2-4df9-a1fb-89f3ee5cbf32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d884cf0-f8f2-4a89-b4b2-a4aee8bb90f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "444880e5-e199-4053-a1ba-530eebba0e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edb885a-8c74-4d02-98a2-382034ce75cf",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b11c6fef-7b1a-4541-ac3d-2d97e85b53c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d0ca6a-e89c-47ca-8a4f-1ab64e18c82a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead8268a-017c-4885-bf6d-c14127638f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2227cbf-fb96-4b87-af1f-a9054f254cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d98e81e3-e82b-4e5f-a1ea-76b3e9582dd0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc9dd12-8f5b-4d8a-a32c-179cb1737d5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f4dee50-0562-48c0-87d8-64e13d3fb6f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8344b071-e7c8-4f64-92e5-39af17f5becb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd13d2ec-eb34-4baa-8b03-420b19095499"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bcf7da7f-1311-4ace-8386-6551803b963c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e2ab88f9-ea00-4d40-8de4-765968e702b5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c3a656-674c-4d98-b5ca-79321b8b31fc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a6480c85-dfb3-49ac-9b0a-676c618424c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9af068c-ba88-4de1-848b-8b4ed3348b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d16d0c99-1a84-4d1a-8453-4221113cb742"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f6a789a-c52b-4467-8dd2-8926ff744655",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae62e029-6eca-48f4-add8-346fc32f0e32"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f2b452c-2e90-455f-8f35-a13ed4891c5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "544d18f6-cef1-4fd0-8784-5c68e6d0a83c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b68a20a2-f385-4fe9-a2fe-261c74652b94",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "437abba9-2b7c-4b2d-b801-82f7445f19c7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a77dd5aa-740b-4821-b5b8-2e44099281c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "29d5fb34-4e8b-4451-b59f-c5ed69e9e957"
            }
          }
        ]
      },
      {
        "id": "30644c59-1a1f-402e-9c5a-5a833df5056a",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3192e05c-ad8e-47e3-be56-56b0225ee8ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e84bc52b-a727-4db0-9998-3a5719d027d0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a66aa2a5-6eff-4bb9-b893-da2dd80f0232",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8f5922-a9a8-473c-b8b6-93c8a600563a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbbf02d6-b1b3-43cb-acb0-33c3bf249400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b23c30-d267-4f6a-9eb4-d0f6433cb3ed",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07670a25-03a2-4c1f-8e4e-12caeea6b90e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14aeaf28-fd1c-4d94-b9b5-32dd1b1896d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5a34ae-6955-42d2-b94b-3f1fac3ab012",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da59172d-4d1f-4dea-995d-6270e22bdefa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ce6dad-1fe0-4933-9019-a5bbf58a03c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e22804-fcab-4f26-ba7c-0b59dd7640d0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9473cdb-9046-4418-b27e-4f96c14bdb77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55c1d8b8-4062-45b5-bb3e-7e0ef1f287b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709302d7-5665-4003-97d1-f30a754f76e8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b68a0ec7-a3a1-47d8-9ab8-3a65fd033c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2482d4ef-4992-4170-9a82-bd270402519c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa07f3b8-7900-4e46-8894-cdc348529a7d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6a9ad3-6989-4cb2-9276-55610bab399c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3c640d1-7894-4539-9a76-377239478a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe34ea1-ba6b-4ea0-b35e-0eda0943f838",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615ffeb1-0459-4891-bc21-3cd3cf7fc0c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6304755b-a668-40c9-94f0-1380c2398ef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51a82ee-57ee-45da-9cb5-ec8177c406ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e648813c-b986-4c42-b4fe-3ee514546cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2265a276-0dec-44c0-a294-77da72beefe0",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95d3f5b-282c-4b0f-b060-81679489d949",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da209a48-677b-45ab-b9f4-e029878a7497"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfd230f-df20-4a13-a5ee-e8b5998709c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72894846-5189-4bdb-b767-e32adbdaa2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bd25ff6-6405-4467-adf6-b337bcfacbe1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c320c9f-b2fd-4b50-81df-9df96c235877",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "431f2e61-0adf-44b8-89b3-a2eaee7cd550"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99bec96-7285-4f45-962c-028b0f40766d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c072673-2183-464f-9567-fec1eba1d80f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8963f81d-fc22-410e-9313-fcef6a898455",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93038e2-0fe0-4e18-888a-87b3ed2f64ec",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c3e51a7-1433-4c16-92a9-9fa47d0c9fec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdfc3576-e3da-4903-a013-83b79a813999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8d0693-f7c8-4de9-8f7b-f9607e35ceda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedf5c87-d0d5-4c73-9fcb-d470ec982cb6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffb940e-651a-4140-8655-e153f5b30abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de452278-dbbf-49fb-aa87-c962db990c31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe3157d-5881-43b1-8643-aea3f51f54a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f214e347-d398-4241-ae63-f61e9ba25bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79639894-3390-482f-95df-f0839ef70c26",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead6377f-63d7-4f73-afce-51258f01d466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8e5cbb1-5e23-4045-a052-106f4966b8dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0846fc-d52a-4e41-a91f-07e006bf222d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3d3623-d3bc-4bea-aa44-59b59bf1b9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39778d6e-6c2f-4e37-854c-5947bd18df76",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2029f94c-d78f-4f28-a4b7-bf523c44cd8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d20e734-0a51-43a1-8158-30f53607027a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61688473-0236-4d81-9c43-7d546cedfac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fff030f-d04d-4a7e-b7d8-54e49361be2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a77e0b5-97b3-4c54-9d38-955e1326012f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c988e76-d1f1-4742-bcbc-490dec36fbd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dc82b2c-1730-431f-a907-a74d83480eea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9af577e-9670-4668-ad15-4ca29b3d976f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281c4316-f1f1-4003-95c1-b4600ccf2a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdbd7b9-7f7e-426e-8556-b00a5163ac42",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28810493-0e03-4265-9f33-e8ebf7aad56d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecbf3180-7fb6-448f-87de-ef141113b69f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "886a62bc-ae0b-4a7c-b1e2-6d05757d221f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d784ebc0-f805-4524-bc7f-415c470c9b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96548a42-6771-4944-81ac-2eb8aaf08b2c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89eaf45-37a6-46da-a8b2-52b55ab6a75a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a645a3f-8994-44df-8fd5-d3f25b2b0290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92487001-8c96-4088-936a-e6027e2ec68d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1446be64-fd05-42a6-8628-d7e3e13f716b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e23a8b-d71a-4821-8736-76661f6a5266",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e9e0439-c310-4aa7-bee0-d6ef0a785751",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6c963b5-c1ec-46dc-b734-e376dbb80691"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4797b5c-7e6e-4db5-a28e-84d88eede04c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "551e34fc-6fc5-4c80-897f-13def7c3405e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00797131-a286-4ab2-bb9e-34dc9ba05709",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6e9502-6624-45d7-920f-b123c8a4187c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971da339-3b40-4cf2-9a3e-2e4d5fd6cf08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe26f984-7ce5-479d-857b-82825d91297d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb57b2ec-e83a-4dcb-b7fc-1de83423d91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5404477-a4dc-4e5b-b251-56fa30dfca9e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafa1445-95c2-4cc5-b02f-cd40ddd73fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7695aa-96e5-4252-81c6-adb08cf3b65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d98b7ff-afb1-4c3e-9f6a-969470199674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bf1a041-811e-431c-a0c8-a0a64380e12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f331966-bd37-40a0-9e9a-a06725d76334",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db769e6c-34fb-4885-8678-9d347afa24b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b51fde44-25f1-4cea-9113-b1f4b9b55b33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72ab8e26-9706-4fe7-83da-ff5543cc3985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46391f28-d5f7-458d-93ff-b6a8355475a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f5d9a1-bfae-4e7c-9947-b480897b7dbd",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2edfa4db-714e-4452-8e14-ed5461212795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bed7d1f5-2048-43da-9313-6ea734a361be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f467bb1-b170-43ce-a35a-f9f00fe42ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a64bc04-b9d5-434d-b633-073bb3579915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca925395-d1bd-4b8f-a56d-aea04f44d59d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d003249c-735b-48b5-8bc1-bc2d082a8c75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce13d73c-4796-4fb0-9c52-099e0525e5e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "564a2b42-a1b9-4dc9-80aa-374538267a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b085b21f-d08e-4f93-b838-80a19d367aff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8cf4fc0-a8d9-4906-84b9-8501a1c580b9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0b4d72-1274-46d3-b3ac-b52d79c12e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f36c2f-4767-4986-9033-d20c19e233b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93ea1ea-1dd2-4498-9c7d-94272e50175e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8805719b-4db9-46c1-a6d9-3e5ee792604b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b25c628-4b7b-4b74-89e7-7478b7ab00c8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dca06d8-69bd-4b07-9ed0-208c73cf81f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de041272-9e37-4600-b53e-c748b97c8355"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f57438b-7829-4d8e-909e-d21760872ddb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3379f4bb-928f-4853-a4bb-5c598ccad1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a379331-bc46-438b-a3a5-84512f402cd7",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c86e43-1f8f-4a9e-b49f-6971efc50e60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63a819df-7741-41a3-997e-9a4210810628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4084e8-41f7-42e6-91e6-c6b6986c7152",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c51fa79-e6da-41b5-a8a2-23b2c94f8edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52a8f9d0-324e-4ce8-96b3-e06b032819bf",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753b4883-9329-4bce-8162-692e7b618ec8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c683cd67-8324-45d6-bebc-4c42113b326a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c031dc15-9f6b-4f48-9c55-36776335ce31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b59776e-4425-4dd8-b80f-0329f030998b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3926968-9d48-4128-8a7c-697cb900b803",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4a87a0-7d98-44e5-b055-3297023cbb35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14e2dee5-9f30-4c06-a2ce-85c8f0972462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "730d334a-643e-409a-b8cd-a09ff3f8e148",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce7e0f4f-7297-4e2d-87d0-8b17a933b2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929f60ea-12d5-47ab-aa3e-e0117c4696fa",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d091b5-bc39-4e8d-a4d7-3e03f814dcde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c92f0a1c-5a78-4171-8a52-23ada9028cdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6aad5ed8-22e0-418f-b0b3-2916d87149ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb93c68a-50c1-4edd-a23a-480da971fe92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1420d0ef-24b0-471a-b593-10fad2197f3a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6cb3ef-b02d-4238-bcba-b6c376136198",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc3fd950-5219-4fd5-b221-fb94ffc9e60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6ba97a-f0b4-47b4-9573-fbbcb72a8c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b5d00d-3c92-4d91-94ce-a56e4095607b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07d5a67-c076-4b95-b601-c59953077193",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eedf260-0584-4c30-bd8d-d70955d2ac84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92acf6b9-6745-465f-9f25-2534620a6478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c842317c-07a7-4411-ace7-6b91bb5f4d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7706320-7c38-49bd-8d55-5c74d301709b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc73420-84bd-4282-9cdf-7c3d61a50ecb",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee03bde1-19f9-4b7e-83c0-95b172b8ac47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcdd7b2a-f27f-423e-86cc-1106124a7198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbf6d4f-6cd3-4e1a-b567-4155dbeb89d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b97444-0c1a-4d23-a677-c6e67a795109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f4f4dd-bd64-4388-8d24-35dbfc80d028",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e311a1d3-8509-4508-b1d0-a6ad44ee168f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "724ccf1b-2942-4e68-ab54-cb089a61302b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "568efa1e-fe18-48e6-be74-53305e310de4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a0ebca0-d28a-4462-98e3-a09f06f41a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3440fe2e-ff6a-49c2-9807-6dd74b831132",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6f39ca-7482-4326-92c5-bc444aab8516",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04258408-6cab-4259-b6d2-0691fe892658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82e54940-b235-4204-a261-e5ed24dc3f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79903be1-3a1c-49bf-96b1-65933c65934b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b44bdc-6c1d-448a-84ef-466a42442036",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad47cdbb-433f-4b31-91b3-c28e0e33c278",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f3581a5-ae30-4709-971d-a9aad03d573e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0643a793-ac08-4f78-a59c-1f2153a51b11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd8c722-34c0-4a8f-b54b-4b137a5fff48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec32b54-3fb9-4795-a050-105d7bc37416",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee58329-1fba-4c43-9125-795fc7875f0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b5e301-8c38-46ce-b69d-b92702ae9473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85421794-3332-4fab-a48e-505d5aebf5fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7ee20d-d32b-4fbd-98b8-9794a6559990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1691c97a-b0b3-48c6-af64-9bd12f5facf2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689ff6e0-25c4-4baf-84c2-07c0c41a17fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98bda479-803a-484c-9ba1-c408e300bc3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20c07052-ba62-4839-b2ae-be3b7a919216",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e841fb4-9dab-4cb5-8dfa-7198b7b76cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945f301e-1ddc-4308-af8e-ae7ab4beefbf",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62f3fc1-0bd4-4792-b6c8-cbc3db8074bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b23211d3-d0fe-43b2-bf12-12be3d020dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4aae8ad-c3bf-413e-8909-abcc9b04dc3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f21fdc-9208-42bf-bab7-55a6fc05ca5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a47421ea-9d93-469b-9e93-928a4bc1b51d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31b0d02-d001-467d-b2b4-44d65b75926e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0217c6e4-6b3d-4d7f-bff1-c29f679c6260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4182a7b-eb24-4099-a380-101c02c0bded",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0c16326-a6e1-4de2-ad3a-57b6eed04d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a46c46a9-4977-476e-a2a2-f00cf0ade086",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eef6f78-a677-4baf-8723-06abc26d2535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc9d25e8-b755-415a-a74e-b6f961f15463"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "535e9ac2-2087-42ec-87cb-ec9bad028794",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa6faacb-0e28-437e-bfc6-8703de3bef0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c0ea57-2f90-4920-9fe1-b522dbef5145",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45813ee3-e518-4cec-95f3-9b68e408795e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d63c8abc-0bb8-4201-8422-5ff3cfb9ffb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa1100e-4c8d-4d0a-bbad-ba986f1f0e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098a4c76-83d6-479b-8fc4-6c60ab172233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53cd8df5-1da4-4e00-b486-07bd3afb74ba",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a95bd594-962d-487a-bfa3-80c27092fecc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee519bb-1ecd-451c-ac55-a6a102e640cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c0f216a-c69b-4f43-a45c-4aec2f3d89fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeaac3c1-6812-43de-9508-bf769a3185a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff13a6d-e54e-4f08-85c6-6d5e22166895",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbf0fbe-6c20-4b86-8273-f4dc16ac9e41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac318a87-018d-4cac-b793-6420c35fd4ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5483aaec-7ef7-4814-a6a2-1981a2311c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "855f31be-9c9a-4fd7-b3c0-bcf6d2e68904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbf6cc1-67b6-427e-8c1a-c2cd77df45ae",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96369ae-d694-4717-a100-78fd188505de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a220465-27aa-46ea-ac15-02511135925a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5c6702-eaf6-49ad-b626-13c85e4b8142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b27331a-1612-4c57-928b-c192e1818771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17cd72dc-80c9-49c6-aac0-8a6ad18718bf",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc10ffe-b21f-4448-bce6-b4761f60935f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd67bff0-9c35-45f3-8f05-43eaa5c3144c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a229167-b62e-4366-960f-70efef103556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55100d5-72f5-4b8f-9559-6c8577ba62a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01d4ea81-b7a9-44b4-b8d3-0aa7e3aecc01",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "772fd5bb-f07c-4169-b015-328e8c3ab0eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b134603-ffae-4ef8-847f-8eac25dd24b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13ded21c-acc4-44e4-a469-e5d18390592a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024a9ce5-244e-412a-a6d3-6617133dddb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "571fa214-6471-4a16-9570-04824ce86516",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ba6fe69-b68e-41e0-b263-87e1447a102c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3909ce-333b-4022-8c67-4084bb1f7f01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ef6214-ba4a-435f-b30e-f4606317c4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58fcacfb-ec8a-4e0f-b4f2-a214c14e3c1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480631cb-beab-4421-bc2b-291b07541ff9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e3a1d6-b2ff-4610-9d56-f9baa8a817cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62d9dd91-3b73-4786-8cb3-362826d46002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7847cc3-8347-4648-ac4a-44ee37f0c3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94133c58-4eff-44f9-87d0-b0bdb89aefee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d5bbd4-7c65-4086-b4fd-60dd1e673af2",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc30394-2396-4e00-ad19-61790cfa6644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c442403-2b63-484c-af3b-8a0c34ded1e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e37859ac-049b-477e-abb0-9ef39e4ecab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc679d5b-5c6c-4d23-9827-1e033a7c8389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e519db-7d8c-46a3-959d-551de824d209",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c6d5b6-f529-47fb-840e-3175ddccbbc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3750c0bc-ba43-4173-b2a5-76592b1d226c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0838b051-7440-4be2-aae2-179645221f93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04359c92-6602-48b8-902b-2054ed0c480b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbdfe2f-60fb-4a2a-ba1e-3624c4f831d4",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7fe236-ba8d-40b9-b91f-3b7ccba6ed70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628085dc-4dd4-4151-bfae-eaab27282623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e6b418-cd71-42f8-8b80-682ee649f3a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5dced71-af12-4f9c-a353-0d38cdd9b558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "647bbec7-13af-436b-a37c-78e1fe0bf70d",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d62391c-4f00-4731-8fa3-6ae6e90bb1f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e858acb-74a8-42bf-a6ba-c7eabd40ad5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "147579d4-e4a6-4fa0-80fe-d059a23a2894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e753969-cfec-4642-8923-93639987caf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f359f436-192e-4ee0-848d-66867ea8e465",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73147139-a45a-47f8-b307-5fd5593fab60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264d0206-0154-48be-abde-98ba45bb01bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "057b6e1a-fda5-44f0-b6fa-3909d1b611ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae92eb3f-120b-46ba-be6f-bb7481dc1f6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47965e9-8f28-4d38-a91f-c1461566b637",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cfdf64-9176-46ef-b9dc-7621937fdf90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e5ce05-6067-4eeb-95ff-9033033b5c92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a5557e-a475-4e2b-9e55-038cce2cbc34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9d5d08-9c7e-495b-8114-dc673e932f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec0bfa5-901f-4b40-897e-05e44f9c4413",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778da6bf-ee24-4fa1-8e3d-5db5d45f7573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19a5a701-39eb-4859-81ba-629fda514e96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd5e59f-d447-4bf4-9986-e1b4704cf1a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "200d664a-805d-4612-bb0f-759f614b4e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c80a3c-965f-4b6f-82c2-7d630cdf4cf1",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337c61e3-edf8-4e19-9165-233209752e6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6fb351e-cf20-4602-be35-378239a2f086"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f86c70f-215d-4b4a-a664-fa8e89ec9e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f994647e-a58d-4c6e-ac05-27b19fb1423a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dea54e8-0835-446d-8d08-981521698b85",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738dfaf1-ee5b-4099-97f1-eff38c8c2dc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "836d3cce-31d4-461a-b5c5-b72ba2654511"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df9e007-abf8-4fa0-ad2c-11e4c6c9723b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad50a72-0ef9-43f4-aff4-3dcf4313f39e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f7ab66-03f6-4229-8214-63624770feaa",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d303341f-797c-4b56-b570-8b7ee19d1aaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725ac26f-bc3e-420f-a646-d86362e00387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "671ab106-95a8-49e0-ae9b-5de7d9b0854d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "784314b0-1c0c-4582-a42b-2ba0d87924bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be72c97d-c2ea-4458-8fa2-78e3fc86ae05",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3161b8a2-6754-4851-9d81-7be478d29b81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a82da6c-923a-49c9-a53c-41f87a7fa6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1d7037-7a32-431c-a902-aef939d57d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f295ae89-c47f-4c72-a925-9a69cb38d066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26deb58c-07be-4e4c-8932-260b3b00e002",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1df1b2-9167-421d-937f-e36982881172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b867b523-2475-4199-81b7-d574b6eb2d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc2298e-c4f3-4e37-b115-8cea8ddf3a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93213488-d633-48a0-9e83-20138a9cfc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b5cd0c-0255-4925-a1bf-75b1252a0cc8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be390b5e-c68d-4fa6-b394-29f38dbd04a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68089484-f7a5-4bbc-aac9-f17c6825b891"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e76ce8-9692-44eb-8f7d-760364e57806",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2df3d770-6db5-48c8-bd9b-8c3a087f3a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a28cee4-0c4b-4a20-a5d6-013be2c42263",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805a0853-e3c1-427e-b775-55bd5d4694ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5581e59f-f798-44fd-9b69-d0ae5e006041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7cff2b-5ab8-469e-80b7-5992ebef74e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15634cfc-c671-4277-8f7c-94cb2b255b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc42ac1-aa13-430b-a44c-e978698c2231",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375c43ce-3e6b-4254-a27e-c8dfe20df7b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c61687d-fd90-4e58-86aa-0387e564ff69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "959a10fb-09f2-4e9c-8a87-8d0702dd6238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca8785a8-9d57-4705-9526-bb5f1957d8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1cbebe7-b0b2-47e4-bc57-d0d140bad936",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff73488-3617-44b1-bfdb-aea7d20a04f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af17db10-0083-47ba-b24e-5fc18a37b38d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18474f23-446e-4d45-aab9-a0cfb1a89981",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c14c4891-5e22-4efe-9a4a-3b18404b6f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ff27b0-3b55-4541-9272-d29154078043",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c147e5ef-5985-4f36-a1dc-8e29e8c75aca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a4b5b78-c826-42c0-a163-c7f957403013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a19d696-0fdb-4454-88d1-b59d45b64f37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b247cc7e-369e-43e6-ac59-312f1ff7b0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72987e7-7182-459b-9eea-9a91f4d054d7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03031df6-4fcc-4ada-af69-cf0cc4e8c6a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67d78eaa-4dad-4769-a6da-47bb6826089d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf08ecc1-bf86-4370-916d-71d2e1b7b5b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e58f83a-ecb9-4cf8-85fa-5830f418ed91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8dac26-58ce-49df-af3a-036c734ef977",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69ee11b9-461e-49cf-820d-98b177f44cc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "083e2f86-0275-4781-9737-f15696425d96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4e6272-38e5-4977-9bf1-b67e0a26e8f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4025191d-3fe4-4605-a3b8-8fe43253fb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba844ac3-f44f-41af-a614-cc2be657ff25",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf78fcc-37ff-4a68-8d36-ec15a54f184b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52613a8a-357d-4e74-af89-602d21775dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44accfee-434b-484f-8585-17bb7a615013",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e6cfd6-eeb2-4b82-b366-b2784cc9ecbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a87f64-97dc-49f3-b3ce-27da4647b81d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134eb967-9a32-4568-82c4-d90b01796677",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23807b3e-8814-45e6-b1c5-30a8b5d5cf3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31121b5e-369c-45d6-8b8e-f5c0dc04c36a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b341ad6-6a87-4046-8956-065ab5cf8ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24e6fc04-391f-48c4-b59d-68220ebab73d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a4b1d6-c797-4f05-bd7d-3ab34ba8ef07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef8cebdd-7a8d-4f2a-89be-46f5ece7d46f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3bcc9d6-9ebe-486c-9a22-4f58931eb6de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c350be4-2bd8-4bce-8918-75ab0c873416"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffba47c-f02b-4c4e-843a-e7695a36e99c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "475bcfef-157c-417d-a5cc-33162f4bd54e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7e994c7-5a9c-4848-922f-bb2016b5b7cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1422f90-6029-4f8f-962a-35e1cd89f018",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f55dbf4c-69b6-42c3-8607-ef8d74757475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f672f604-ed7b-485e-a1fe-4af3b1e90ecd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d4be374-8d72-4a75-97ed-793460ffa965",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f8e8d32-6d81-4b08-bc64-356444cb9fdd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f1aed0-148f-46ba-bd77-db60f4123a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a2f828-e4ed-4643-bac4-5a74948e0994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab99cfc0-6e04-4ad1-814e-bcc7ab557913",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9139066b-a300-490a-b708-ec3d671ced17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f880e48-3bc2-4955-a6a9-af4f6f166f6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaa6f390-09d6-40d8-8f37-dc0e7a8e11a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63021a29-3911-4c6e-bf25-500f557d6319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd0d1bd7-5ac3-4f75-b380-3acf3e79f91a",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1097662-8637-4318-b6f3-dcdb755b4f97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1395c951-a89a-4227-8be3-166e32f250f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a07342-0645-418d-9add-c1ee53e44370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55bfd7e8-d0e1-404e-b5f1-9f5373015ab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf3ab4f-9b91-43e7-a139-bfb58859d305",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9839145b-4a4b-4183-825d-7b971d2dd3e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7899e602-67b8-4849-9efd-1ceed68282bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc5236c4-abd9-4185-b650-be0ab899f36a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27583f4f-115a-4962-b982-59369540e75c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf6c65d-83a9-49f9-8e21-220d12f8690c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a7ac66-5077-4906-bd5d-4b2f5c7c5d24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dc7fc30-315a-4dcd-a69a-652175b433f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfd1b05-dcbe-4b00-8e4b-50678a794b21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d00008a-6e9a-410d-8276-51cae0e44bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "383ad7ba-58d5-435e-b70c-bcf3aa7da1e0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b886e41-ffaf-4b6a-a03f-e1a610a2e4d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5780f6a-d887-4e0f-a56b-bea378aca9d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2c7184-10da-4a73-87f3-4bb954093c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbc34e03-e6c9-4fbe-a906-92cea6e697f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43068cac-292f-4b67-92db-f682046cdfda",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7569090-7b72-4138-a7f3-dc12057e8183",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c92617ea-962c-4f5e-9b4c-233e04fba6a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd392ea-579f-4da3-9886-54a9f0016e40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "772f8a6d-ec7d-46ee-ac18-c2903902b57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c56ae9-3842-45b6-ab32-9a1a9b997ee0",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b00921-459b-4bc8-ad4a-d4a7ce30ab9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d9e628f-480c-4f9a-8279-dbe3d4151d07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf5dcac-975f-41e4-bdae-34411f85644f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cedd9b6b-1c43-4cfc-a19d-f71cf212a60c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb04f0e2-900e-49ae-9088-a4bf9d91e6e0",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28a56a0a-dffe-483c-ba21-fa5925be06b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bca57dcb-bc9f-4688-a3c3-e39bc7837dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1692efd7-2bd2-4cc1-bf02-57d3dd4b9c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cc46774-14fe-430f-bb5b-a83c327b87c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf91b82c-d9c1-4f43-a332-ffe4c305e370",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d842d5ff-7f28-4695-8e20-b9f640e32d6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65f8ff47-cc43-4101-b42e-45fce9476bc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2070a5bb-6424-45cc-9072-665b6b8871f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa726501-6643-4489-906e-9c3c8388b972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6428f344-05a6-4abd-86da-0a15d7a6fe7f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6153c77-ba63-45f4-a05e-423131abca50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b3e5e74-c4dc-4761-ac5d-fba6e3e36345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd207918-388e-44d4-8706-1897c3c67d79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae10bff-fd90-4ede-84ab-b0c27a81557b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2954c6-c8b2-4535-8f98-ecba2aa5e466",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0456b80-a31d-4d0d-b633-6e8b432f8cda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98cdec15-e7e7-44ac-8c49-34488a044276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c770981d-b8ac-477f-b45f-a8bfde8d9fb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf4535d6-6ce2-42bb-a256-1662af22f453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c8c0ef-f12e-4b5d-a997-dd7c153df680",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6ee745-f478-4b79-9b2c-c607ce33bc63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd00dd37-e1b5-4a2b-8fb4-3fd090390afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7dac8c-0039-4bc6-a6e7-ce30f81749d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5af148d-748e-45fc-88dd-47f3fc00daa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7459662f-88f6-4ec0-8511-83603b2ede8c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40c4f002-69f0-4be5-b2fd-0e8b323b690b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd3e3dca-67d1-4af6-8877-16e9e0da1026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc693039-b19a-430a-b759-f1c1aad29bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c6676c-cdc5-4472-a909-0703bcbd61b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63f2de0-b4b2-4a8b-ac05-7c6a2276c31f",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752718a7-5a78-4709-9124-ae272a3352b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1b8b541-023e-499c-88ad-99dce27c99d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "012c82b9-734c-483c-9c26-f2df800e5553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83d1e5e2-0b1e-4490-bd85-d5ae358396f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7fc6ce-b6bb-45e7-9fb5-b994c76387f2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c834bea-ab51-43a4-b997-ff48b713a339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0834001a-65f2-4687-a739-2019a0886cce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "826e2a29-a2ab-4938-97b9-4c95e648879d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9b2c40b-ce63-4442-9274-a7139a82ed79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b156917-7b10-42fb-82b0-c0fd09bcedf0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3460e557-b10e-411b-9edc-75f9f637555b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5060b617-42b9-40f3-bb34-92e2ebe1b420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d02c2e0-65c3-4513-a8be-a0702114c6a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ccba94a-8e48-4ff0-9158-1c95851b17be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "141d34d9-c68f-4ca8-a233-7f391ad6ea07",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca9b26c-b784-4a03-a112-464456c33146",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2df226e0-081b-4f23-ab2d-706598178750"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b1bb6d-b696-477a-9c79-a16302bd2b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1c1b4f-e939-4962-9955-68cafdeb2835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f58852a-fe3d-409e-8282-5ce20422dce5",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd6bff4-f1ef-4b63-b7b5-95b54392b769",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7e6033f-cb9e-44ff-8bc6-83e31a53fb86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ccc005a-9fab-4d90-b28d-3821bca2eedc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f26329c-1b39-46f1-9cdc-fa3599291c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330b8ada-63f4-4ba4-9a3d-b526c05304b2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec87631-cc7b-4555-990d-7c22061774cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c1e6012-dd1c-466e-9d29-904412f9d40a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e4525b-d5d2-465d-9f7a-4ad8d8439262",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8b07d7-ad05-414e-9cdc-2f4e52aea59f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c37869f-e5c6-47af-bbcc-b7a03106a481",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340f1471-a03e-449a-9244-a7af94e1c6fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "863709f3-de95-4140-853c-65c4c134e4ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d16e87-4d67-4032-8bc7-d6d9dd44d591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd11367-1bc2-4137-a8b4-9eb788f2b1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e385604-d7ca-4792-adae-db5eb6cd5431",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38ecd6e-4e67-4cfb-92f7-e5b27eacee19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69ec14f7-d241-4356-9cbe-398786d8382d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7209587e-becb-49f7-a192-fa357f79892e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb01c85-cdf4-4f50-a9d1-203533d1cd81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78f238d6-f9df-48bf-8ef2-6fe6bbcb33ef",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d90de4b1-6a0f-476d-91e6-0620d153392b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c12f5e1-39cc-40aa-9a6e-d69a19d12e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9a7f0b-91e4-4bc9-b4c7-39b75074308e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1be16f-0cba-4203-8916-17d70f8738d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f7a9f97-18a3-4a3a-80cb-5a9a5a75ed05",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99332723-ffc2-40bc-9914-4ecf95af1381",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30494e74-e797-47a3-8bea-715d6be38eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58dfb9b1-3e6f-47c2-a988-11a9a4778c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9f2ba41-991c-4b8d-93b9-067ed8caf19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b36ef89-e0fc-4d89-b528-24563bab4bbd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1eec91-57cc-492a-8aff-5b8791894135",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a156de4c-c082-4a00-9540-456c160854f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6245da9a-2040-4b3d-a79e-4595c33368d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1b99abf-3835-4a4c-abfe-c69a82ff0483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd77b6ab-b118-46f0-84cb-dc10ca96145d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9682d854-e549-4530-a96f-165cf41978ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8880eb67-9a58-47b0-8c0d-4a4ef1021a20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd79964-4303-4869-953b-37e8d7dcb76a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e16dd11b-d7a3-43be-bbfe-48c94e26ccdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19839cf1-5fae-42f9-9552-a1719060418d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a520b5d-94c2-45cc-bfab-fb11c5873e57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42d411b1-e4cf-4fb9-a5e8-db1f3d7bbb72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6deb675b-f273-4b91-ac42-ea22eaba96aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bede798-ea9f-4839-877a-33808599264b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9207520b-f94f-4501-9275-98527b61d0fc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81ac337e-1edf-4e0f-bf94-72662194655b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6eb481ee-bf68-4350-ad32-47ec23ae5dc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12e68600-e554-4001-9475-d4f10299cb40"
                    }
                  }
                ]
              },
              {
                "id": "1e640450-bf8c-4f85-8d6d-a6b404307003",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eee8627c-ff27-44ea-925a-48ef3541b1f7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5896579-693d-49d6-b326-126456ed6c83",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "68987341-7c94-4998-8273-a0f961cedccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf12773-70b8-489e-b4f0-3c4da7bf2ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "745be1fe-166c-4f65-ad8b-4dea96c159f6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a3acaf88-9b6c-4f27-b50f-aa1e3c0c52c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a850199-3648-4bb5-a04f-19f396b68e32"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df3fb55b-03bb-4ad0-a8c1-ba23e15a9e31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "651c528a-4d61-4f2d-a483-7322cc5ec3e7"
                    }
                  }
                ]
              },
              {
                "id": "ca4854d7-8c48-4ccc-bbdb-328a76c48b2c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "2b8e7b3c-c260-4708-bad6-a0b4dcac2bfe",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87262bb3-83a5-469b-b1cc-1a7b39c5e348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "85adf173-b37a-49cd-b4da-6638b1ff6261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44a2101d-6ccf-4f75-bc4e-4037b5579c85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da6d1948-3194-4e36-899b-73316baa3611"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8543b5ee-409f-43df-ba63-b9cec7b760fc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c54039e4-fe10-4499-9ade-b4a61b12741f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdf63f61-9b52-4cd5-b3d9-ff2ce4341ad3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "044d73d7-0213-4235-8afb-2b88e46b0faf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5dec056-b8f6-40ee-9f0a-988fe099d681",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc228011-45f0-4a39-8b69-fb51d2157d7c"
                    }
                  }
                ]
              },
              {
                "id": "c87a32c3-1e4a-4059-8464-2b824ea079b8",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "292a3b35-ef78-491b-b5b5-b9d7d138218a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "03a45564-d6d5-4dee-b82a-1d9d60cac5a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3eeef72a-7639-46e1-8207-b7ccf3688d18",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "482f9f05-be73-4825-a032-403f9fcbf961"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c251aec7-c4cc-48af-926d-55891eebaeb0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cdc7b8ba-8e9b-4efc-9494-cb3d5fb163d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69aba772-41a9-468c-95f9-f395feaeedab",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "25fc459f-69bf-4c28-bd14-5944762ae2c5"
            }
          }
        ]
      },
      {
        "id": "7a1958a4-0853-4272-bba8-20ecb0b17ce5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "81c498fd-1832-4386-a066-6f884235742b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f0a97de-2886-4775-9116-214ebb1dc786",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ad2eb5a-d671-4b75-a9e4-8ac1e5f22181",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7403abd4-ca94-4b32-9bab-2baf2806708b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "5b4d4ab0-19fb-477f-a090-05ce38bff8b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "383cc53c-e829-44a6-95fa-eb229612795a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "abfe31b9-b190-41e2-8a9f-11d53fd9dcd2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24e73ca6-7fed-4e6c-9e40-e1e3760a8f4a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3be28503-eef3-4536-a063-c0f94c63d488"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "020c1904-a9a6-45ef-8268-5b17023c74a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9120f1e4-1893-40da-bab2-ffe47a2d2a6e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8f00141-0bbb-492e-9bfe-4e921a29c714",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3a94b91f-8284-42cb-9a74-f83b9f04b3ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a275f902-e740-4d79-986f-e845ef5ffb8b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7db5b7f5-bb8a-4d80-b67e-f90ec3710fa7"
            }
          }
        ]
      },
      {
        "id": "94a88b73-80aa-41d9-85d4-0522e6b1cb4c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "836d9689-c3e9-48b3-84ab-d1a5f3145f67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2873ee76-3eaa-41db-be68-074ecbaffa62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "134b76d2-3ffe-4d4a-bada-55bc0cc4b5a2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b929681c-e280-429e-9805-455394de95ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97dfedf1-e044-46bb-9afc-786b479d90c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1829f85e-12d2-4ce3-b7dd-2775d22eb0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "baa11d2c-cfd6-4e26-b71d-0400ae7589bc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0555e2aa-df64-43c5-8103-b24e20c8d658",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "43d82268-6963-4f7e-86fc-baf4eaa013b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "80ee37a3-976d-45c5-b19d-e3505fda6d7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d43b4867-b1ae-4c6f-94e5-298fe66f1bfa"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0bade56-f2e1-44d3-a036-0fce3611b1a7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "72f0e0a2-6d42-47b1-be67-ac39f8175760"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40aabd80-6a59-433a-a12a-1876c5fa5d72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "db987221-a050-4caa-a143-ca71f4463cd6"
            }
          }
        ]
      },
      {
        "id": "33bd8ae7-2d53-43ba-84d8-cbf8b54c6ed2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5b3a2b5b-5597-4915-ab3c-2b7c8aa5e7ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88f0a15f-ce53-44ad-b87d-ecc9f9baed00",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c17fffe3-beb4-4f3d-9534-7040a5041cde",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1326e6-d578-4bda-83a0-167bf55c660b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c07ff56-ac2b-4fcc-ae37-ab1004333c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "826927b3-1b10-45dd-af71-38f5abd3cd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "92ec4c04-2a3f-4646-bcaa-68d3814c7f0c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d469e7a0-91a0-465d-8f62-f07bbd6d29af",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "125af5cc-1a76-463a-b29c-dbd422d821da"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae7233b1-9dd2-4485-b3e0-d0ad4429d844",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8fdaf6f6-d16c-4848-8de3-f39ab1434d28"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50b99098-a376-413d-857e-a84bc9983ce5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7f71ca34-39b3-4dbf-a80c-2453fac5abcd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71c455fa-a83d-4b1a-8e5d-c3773f62f205",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a31d15cf-fd4a-4de7-91b3-b1f998928ee5"
            }
          }
        ]
      },
      {
        "id": "313d84f8-c076-435b-9bbe-eacd591ca2e5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4443bc7-5a5a-4a8e-84ab-50b51e0b03ae",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4ba37da-d61a-4711-8cd7-5f8a3d28aeba",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "830bb0df-9845-44de-8249-57781ce98d04",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9283a644-28d3-46b9-a0a8-5ae2d7504d9b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "148a914d-eef7-4e21-8574-b72a046dbba5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 138.71031746031753,
      "responseMin": 7,
      "responseMax": 10840,
      "responseSd": 720.8185103160052,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1715387738124,
      "completed": 1715387781394
    },
    "executions": [
      {
        "id": "bbfa70dc-252c-489c-ba3e-70c460422140",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a4323220-1e58-44cf-b0fa-ac3736d445bc",
          "httpRequestId": "01c810c6-44b3-4953-99ea-2ca7e950c031"
        },
        "item": {
          "id": "bbfa70dc-252c-489c-ba3e-70c460422140",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "0c37949d-f747-4920-b559-625ede834bc7",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "6f389716-babf-4212-99c6-e805e5d3793c",
        "cursor": {
          "ref": "3a8b1d6d-8a62-403e-b759-11bdfe1c17b9",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "f90346fc-3391-4298-bef0-115b20f58929"
        },
        "item": {
          "id": "6f389716-babf-4212-99c6-e805e5d3793c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "9e34f8ae-101d-44ea-aaa8-69a99c804abb",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "8237b91b-b72b-4e92-b957-957363413b48",
        "cursor": {
          "ref": "81592e3a-43b9-4f80-97db-2a4e5d090726",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4e6c9b54-f73c-48f7-a53c-7881e44dc4b0"
        },
        "item": {
          "id": "8237b91b-b72b-4e92-b957-957363413b48",
          "name": "did_json"
        },
        "response": {
          "id": "827ac496-3f3b-4140-bba2-99d8048f1a10",
          "status": "OK",
          "code": 200,
          "responseTime": 298,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec7b5c5-3dab-4a74-9243-3e3ba5725326",
        "cursor": {
          "ref": "f81d8baf-7feb-4060-9795-cb8e87821a22",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a671c026-4836-4a21-a74b-df8cae98694e"
        },
        "item": {
          "id": "0ec7b5c5-3dab-4a74-9243-3e3ba5725326",
          "name": "did:invalid"
        },
        "response": {
          "id": "836f195e-319f-494e-8c77-7a0b7c04a196",
          "status": "Not Found",
          "code": 404,
          "responseTime": 340,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec7b5c5-3dab-4a74-9243-3e3ba5725326",
        "cursor": {
          "ref": "f81d8baf-7feb-4060-9795-cb8e87821a22",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a671c026-4836-4a21-a74b-df8cae98694e"
        },
        "item": {
          "id": "0ec7b5c5-3dab-4a74-9243-3e3ba5725326",
          "name": "did:invalid"
        },
        "response": {
          "id": "836f195e-319f-494e-8c77-7a0b7c04a196",
          "status": "Not Found",
          "code": 404,
          "responseTime": 340,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c670ba2a-e7c9-43e9-b458-dd4dadaaa6ef",
        "cursor": {
          "ref": "7ea5b435-d9d2-4188-b137-78e363e0b74a",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d4c79113-a031-488a-bf53-eb373c0f9d9e"
        },
        "item": {
          "id": "c670ba2a-e7c9-43e9-b458-dd4dadaaa6ef",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "02cae823-25ae-4c9f-aa8d-15faa5e70dd0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2b9c8c-cd59-470c-9e6c-4ce22cec651d",
        "cursor": {
          "ref": "0de9b6be-3600-4d02-9787-a8ecf27cfbd3",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1bf0f7cc-ee1a-4884-ac36-4f9b7b1ebd80"
        },
        "item": {
          "id": "8d2b9c8c-cd59-470c-9e6c-4ce22cec651d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f4a4af36-91c7-4cdd-8fc4-a220a9045445",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d40b9c-a06d-4859-91c1-13b45fe5d266",
        "cursor": {
          "ref": "eb7e9ad1-39ef-4c69-baff-abfa73ca84a4",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a7cedefc-ee1c-490b-bf60-39283a9c6f96"
        },
        "item": {
          "id": "f0d40b9c-a06d-4859-91c1-13b45fe5d266",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0fe827f7-1019-45c2-8bd3-cab5aa73cca2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d0cde89-eb19-4a42-9e2d-21d621498611",
        "cursor": {
          "ref": "3a24a9e8-8263-43e4-9e5a-886ab96a7473",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "46638f5c-3a4c-4a3c-bfb2-16aded2af915"
        },
        "item": {
          "id": "8d0cde89-eb19-4a42-9e2d-21d621498611",
          "name": "identifiers"
        },
        "response": {
          "id": "d81dcd57-f8d6-4d40-8b8b-a7db84e7eab0",
          "status": "OK",
          "code": 200,
          "responseTime": 91,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f628526c-cf7d-4de7-b506-bff156cda9ec",
        "cursor": {
          "ref": "0c70c223-6f8a-4f2c-af0a-48330f78894e",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "42850f9e-b1c9-4f0c-b545-1c235b1c7c4b"
        },
        "item": {
          "id": "f628526c-cf7d-4de7-b506-bff156cda9ec",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a3b407ef-e35c-4688-a380-93dc87565dbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "136090a6-36e7-4c6d-bb43-47dcc0ff046c",
        "cursor": {
          "ref": "80c9a742-c007-496e-aad2-9b744bc2906a",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "33dfd991-21b9-4a94-951f-c175fd84445d"
        },
        "item": {
          "id": "136090a6-36e7-4c6d-bb43-47dcc0ff046c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "b6070a70-30e1-4419-89a4-cbb97ed3df30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bcd70a-adb9-4eab-b577-62ff53522138",
        "cursor": {
          "ref": "76da4fcb-99f1-4e42-8e0b-e39202e527ec",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3b1144ba-be91-4ef9-848c-9535f0faa6c4"
        },
        "item": {
          "id": "50bcd70a-adb9-4eab-b577-62ff53522138",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7fdd33f8-f8be-46a1-9068-78031c747055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf8d252-5298-406a-833c-0753c2a83767",
        "cursor": {
          "ref": "770a86da-82d1-4aa4-ab6f-5fb0c8f8acdf",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "14c20a54-ac77-4c90-8e18-516af04c9107"
        },
        "item": {
          "id": "ccf8d252-5298-406a-833c-0753c2a83767",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "96977c87-972d-4aa5-88fe-bbf32c3b4b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04afbb97-403e-4453-8de2-6f2c639807e6",
        "cursor": {
          "ref": "0db29cbb-a0bd-44fb-b412-714797ef1f02",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5a7b90de-76dc-470c-9c79-7caa53af5c46"
        },
        "item": {
          "id": "04afbb97-403e-4453-8de2-6f2c639807e6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f1559075-e752-4970-b25f-3eb3592ca7a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d826d0aa-2244-40d2-b2a3-9eedd504dbec",
        "cursor": {
          "ref": "22d5ee60-81a9-4da2-b99b-e5ae4f4aa32e",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "6e3db088-50d6-4b35-9315-3eb1fab6ace0"
        },
        "item": {
          "id": "d826d0aa-2244-40d2-b2a3-9eedd504dbec",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f94ddba5-165f-4ac0-9da3-573507bdb1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f010eed-5f46-443f-a1ed-e9efab0f0225",
        "cursor": {
          "ref": "6cd15eb2-e610-4cfe-87cf-87b92c02c351",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "cbc21b79-2a54-44b9-afbd-c465ea860dc4"
        },
        "item": {
          "id": "2f010eed-5f46-443f-a1ed-e9efab0f0225",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "91c2e515-22c5-4ccf-830e-0404db1620dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4f2f2e2-ec94-4a52-8bf6-37e0ca5446f9",
        "cursor": {
          "ref": "1e72ebc5-c105-44ed-a526-94f766bf92c0",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7bd59c6a-68b4-4985-80c3-5e790a45ad3c"
        },
        "item": {
          "id": "d4f2f2e2-ec94-4a52-8bf6-37e0ca5446f9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "53eca78a-0a5e-4e46-8056-9315c1ea1b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb91829-5ac7-4707-9044-895865909881",
        "cursor": {
          "ref": "281ceb5d-a8eb-4bbf-926d-ccff6b4d5d06",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "72ca45e5-c85b-4a7c-92b7-901c666000a5"
        },
        "item": {
          "id": "5eb91829-5ac7-4707-9044-895865909881",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "a4d4b4f8-1279-49d9-a96b-8f7b05c6e0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f051a7bc-fbc6-4e5f-a12b-0100e922325c",
        "cursor": {
          "ref": "b11376e7-b9b5-4972-8bf1-c1d25bc3522a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "88282e4c-294f-493c-906e-fd04d274bbd9"
        },
        "item": {
          "id": "f051a7bc-fbc6-4e5f-a12b-0100e922325c",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a5295c06-351f-4206-8464-ba11cd1c954e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a4cbb1d-a638-4a3b-acfd-ab2774873aa9",
        "cursor": {
          "ref": "7151cf4a-b903-4042-b49d-fdae66082b30",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d54de337-7906-408b-8be3-5c1b36cbadb6"
        },
        "item": {
          "id": "8a4cbb1d-a638-4a3b-acfd-ab2774873aa9",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "f4988340-26df-4f46-a26f-b6900c405ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e8d769-60f9-4c30-b00f-c21b501c56bc",
        "cursor": {
          "ref": "8bf56b88-bb1b-4283-bb93-8a298357e8da",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6cc023e7-1ea3-42a0-8e88-d3a898493bda"
        },
        "item": {
          "id": "e6e8d769-60f9-4c30-b00f-c21b501c56bc",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3f60922c-6460-4572-91ad-b28dbfda8230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bed6084-873c-4d4d-b8ca-a2de9a005dfd",
        "cursor": {
          "ref": "8a052555-1c01-4e71-9013-89bc621cfecf",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3bf09de3-485b-4369-bb81-76ebadf84de6"
        },
        "item": {
          "id": "2bed6084-873c-4d4d-b8ca-a2de9a005dfd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2cc6c3d6-5b7c-4cc0-baed-a1cee68cb9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b8645e-46e4-4f57-8be4-6a8cefa98cad",
        "cursor": {
          "ref": "7f936245-7da5-4934-80f7-db521046f387",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "3a44c570-ac8e-430b-bd59-8f6146fc3b82"
        },
        "item": {
          "id": "44b8645e-46e4-4f57-8be4-6a8cefa98cad",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "ede79a53-baa2-4600-90e3-0ffac41c4e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e226944-6093-44f8-8050-51d23ba6483e",
        "cursor": {
          "ref": "1dad3d0c-8336-4048-b3c7-055e24cc24b3",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "14ebb9b8-377d-4f28-8604-3fc54507dc59"
        },
        "item": {
          "id": "0e226944-6093-44f8-8050-51d23ba6483e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4c8254f6-def2-4a37-9b70-8e0c71d9c4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1945b4d2-bcad-46c8-8f38-0bcabb4da643",
        "cursor": {
          "ref": "cc7fdc62-0413-4876-a857-2dd35ffee7f8",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a365ccbc-673a-490b-af13-98c61e93c91b"
        },
        "item": {
          "id": "1945b4d2-bcad-46c8-8f38-0bcabb4da643",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d5d37fce-597e-43db-a1d7-464d3c28999e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e53e23a-a94a-4da3-bed7-f57f66cabd65",
        "cursor": {
          "ref": "49c327c5-65cc-4408-800e-41bf884b1295",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cad377cd-83b6-4dff-841e-7b9df8abe37f"
        },
        "item": {
          "id": "7e53e23a-a94a-4da3-bed7-f57f66cabd65",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2f1f4bb4-c572-4472-bef1-9b758f12d008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd24694-6f55-41ee-9f13-cb783fcd5780",
        "cursor": {
          "ref": "4c8e235d-70bc-4f30-a0e1-b51bd6a3315b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8ce58218-9855-40db-b8af-faedf9f5424f"
        },
        "item": {
          "id": "dcd24694-6f55-41ee-9f13-cb783fcd5780",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "182120f8-cef8-43d4-919e-3d0af3052f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510df037-941e-4642-b0a1-7e5eac5ec060",
        "cursor": {
          "ref": "1252f507-2355-4415-96b0-d8fb5b5aa09b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0c62675f-3c4a-4088-8df2-08a8c4d3fbd0"
        },
        "item": {
          "id": "510df037-941e-4642-b0a1-7e5eac5ec060",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "80a3832a-89bc-44ec-ada2-b3c5681292c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4759272-988b-40f8-bea0-e2cb4a53e956",
        "cursor": {
          "ref": "b44253e3-2f33-4559-b86e-bbc064ae6df9",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c9312389-9887-4298-9cf2-db15937f6a92"
        },
        "item": {
          "id": "e4759272-988b-40f8-bea0-e2cb4a53e956",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9c7d8e40-9545-4d53-abae-5a42bae958c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37fd5797-8735-4fcc-9b60-b5c1779f348c",
        "cursor": {
          "ref": "d6da59cc-5d19-4938-ba8a-3c721e358622",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "f70d9a62-c6e7-4dff-a41a-8f946cb224b7"
        },
        "item": {
          "id": "37fd5797-8735-4fcc-9b60-b5c1779f348c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7553a38b-b3e0-4190-9c98-79c685af1374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f15bf684-627c-4797-b3d6-07a584c0362e",
        "cursor": {
          "ref": "5a938764-6ac2-4e54-95ed-76d7859dfb30",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "3bb4e92c-f362-4869-9b44-4942c6c56ffe"
        },
        "item": {
          "id": "f15bf684-627c-4797-b3d6-07a584c0362e",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "1742fa59-f623-4db9-b862-361106f74e45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0cc498-5a72-44d5-adc8-378cc0bcf0d3",
        "cursor": {
          "ref": "9e5cba58-30bd-4a65-83cd-60900c3961d5",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a434a03c-b408-4bb5-ba99-430b662f199d"
        },
        "item": {
          "id": "cd0cc498-5a72-44d5-adc8-378cc0bcf0d3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "92c3b398-1f53-44cc-96b4-fea788a1b37e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9bb3122-b9c5-40cc-9dfe-bd2760ef1a54",
        "cursor": {
          "ref": "73ef8793-8f1d-49d4-aeff-3d599c39fc53",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fd1c53ad-16ab-4f8f-a907-d9c790a69de6"
        },
        "item": {
          "id": "e9bb3122-b9c5-40cc-9dfe-bd2760ef1a54",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b09ca7f4-a818-4229-9f2f-24743f5c0e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1eeb65b1-b93a-402e-b6f3-d1bb5fef5ea6",
        "cursor": {
          "ref": "9ce1cf27-6e3b-488e-92cf-dbdfa7815567",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4e912586-bb9b-4c08-b7f1-21bc86a08b92"
        },
        "item": {
          "id": "1eeb65b1-b93a-402e-b6f3-d1bb5fef5ea6",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ef33c3bd-6b8f-46de-99be-10bc4ba0680b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530d265a-ee32-4c61-9da1-a1480c42f231",
        "cursor": {
          "ref": "0d77f058-fb97-425f-a6e7-2fc79abb87b1",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c6d3f27a-265f-48a4-9592-2992b81ec4b4"
        },
        "item": {
          "id": "530d265a-ee32-4c61-9da1-a1480c42f231",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c61cafb6-ee68-4f84-8f47-9051ac6eabca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecbacf9-599d-436c-8536-0367556065ee",
        "cursor": {
          "ref": "927d9312-008d-4df2-a408-edfaed0a3dc7",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e1c0b23f-c618-4c51-add8-fb9195ca4e46"
        },
        "item": {
          "id": "fecbacf9-599d-436c-8536-0367556065ee",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "47a09d16-103f-45f0-9cf0-014ad21877df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f44decc-9f72-4c46-a025-4942604cf0f8",
        "cursor": {
          "ref": "63ec084f-96b6-4d36-b800-d28b9b278335",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0577b818-8331-44a5-8e64-a83d74f8882e"
        },
        "item": {
          "id": "3f44decc-9f72-4c46-a025-4942604cf0f8",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "98e5bacf-a020-4506-b24e-fccdf0dc6838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ebbff4-fb8e-4f01-b6ea-edd172689506",
        "cursor": {
          "ref": "ece95488-266b-478c-ab58-1424eea6fc35",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "cb6901e1-8a8f-4599-8425-8a8446b8f76b"
        },
        "item": {
          "id": "85ebbff4-fb8e-4f01-b6ea-edd172689506",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "dfb5a8dd-8577-4b9b-ba9f-9adef1295635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d8affa7-ee09-4ccc-a236-a151b4fba8d7",
        "cursor": {
          "ref": "b8bf7a50-81ba-4d37-bb95-7539e65063fc",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "20cee7f4-c280-48c9-a6c4-6747e2150def"
        },
        "item": {
          "id": "1d8affa7-ee09-4ccc-a236-a151b4fba8d7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "5bceda44-043e-4f29-a8d9-bd5009dbc8aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28952b9f-e7c6-4683-8447-21d82edd307d",
        "cursor": {
          "ref": "b2d78fad-e87f-44c0-a1f7-aa0da2ad3cf5",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "99389010-0f9c-45c0-92f0-2d131092925f"
        },
        "item": {
          "id": "28952b9f-e7c6-4683-8447-21d82edd307d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "f52f53c0-ce31-414e-82fa-02b525d18efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e9eecb-1fe2-4821-9c66-88edd1ef8053",
        "cursor": {
          "ref": "cd03880f-e7c2-4cac-8d1b-11ec77e9748e",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "21ab1adb-ac2f-45b6-a4a8-a7a10d764df6"
        },
        "item": {
          "id": "32e9eecb-1fe2-4821-9c66-88edd1ef8053",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2c7ed408-c148-4590-9fe6-2b6e00bb49fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bf33e87-3314-4a15-ab1c-4e44820d1841",
        "cursor": {
          "ref": "342781d4-a074-46de-99de-fb891269bf86",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "5a2c32fb-992a-43cb-b1d8-12c7e56af894"
        },
        "item": {
          "id": "3bf33e87-3314-4a15-ab1c-4e44820d1841",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9f10ea7f-3165-4051-92ac-05c32eac1615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "250c1723-1ef5-47d4-ad9d-c4aa46422fcb",
        "cursor": {
          "ref": "bc0cb20a-7403-4d2b-bdf3-cd20690017a6",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "2701409f-6703-43ab-8e42-5aeb37d20668"
        },
        "item": {
          "id": "250c1723-1ef5-47d4-ad9d-c4aa46422fcb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1fc075a9-0ecc-4e4b-b5bc-420da243a289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5eedf4-49bf-44c8-9aa8-c53ecd5b2520",
        "cursor": {
          "ref": "5bfa9e2f-7dd6-4512-b87a-62e237b02828",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "06b66dc9-4e41-4625-8259-aae4329e5c02"
        },
        "item": {
          "id": "9e5eedf4-49bf-44c8-9aa8-c53ecd5b2520",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "75779bb2-19cc-452d-935e-ee8ee9362f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6c3d51-976d-40d9-b314-7b57a3957f37",
        "cursor": {
          "ref": "8f800da5-ea3f-4adb-88f8-111cb29c3fad",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ac173847-623a-4401-b1ae-f34d823f0895"
        },
        "item": {
          "id": "3c6c3d51-976d-40d9-b314-7b57a3957f37",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5aa62d36-49ca-49fe-a26a-e1deec5d1ff6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf829f0-3d27-4181-93a2-4542d1a5c75a",
        "cursor": {
          "ref": "75834c27-311e-492c-ac6b-d319dc6e79ec",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7771aab8-6f83-49c7-8575-16b2f61eb5c2"
        },
        "item": {
          "id": "caf829f0-3d27-4181-93a2-4542d1a5c75a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "bbd9bca8-b7b7-47e4-b4bf-15e73a24842d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9862692-d3b9-4435-9fb1-0b368929c24b",
        "cursor": {
          "ref": "80e4e2d1-6b15-49ed-ba54-a8f95536ea61",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "345ecb19-2307-4e0a-a24c-4615dd609986"
        },
        "item": {
          "id": "b9862692-d3b9-4435-9fb1-0b368929c24b",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "dad28fa4-1135-44e7-a48f-6423ed7ddac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7511fdfe-5063-4474-a286-a82ba9676298",
        "cursor": {
          "ref": "51820b82-e3e6-4639-b633-d44eb02008dd",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "de0860c0-2c64-46fc-afab-1eeaa233ab85"
        },
        "item": {
          "id": "7511fdfe-5063-4474-a286-a82ba9676298",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "e6ca38f9-45bc-4fa3-9b9d-7fa6c4cfac66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63189b66-8e3c-47d3-b42a-bfa8d246deb5",
        "cursor": {
          "ref": "c5dbfc65-9c55-46d8-a411-239a14efc6f5",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "67ea769f-0008-44a0-8510-f66429d6a03c"
        },
        "item": {
          "id": "63189b66-8e3c-47d3-b42a-bfa8d246deb5",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5da01f3a-9efc-41c1-9131-3ad354983864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49c3a74-8662-4ee1-bb59-3fcd61cc8d57",
        "cursor": {
          "ref": "9f2d542b-e6cf-4513-9461-b325e01140ae",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "930f5738-650c-4d23-807b-2af365f91792"
        },
        "item": {
          "id": "c49c3a74-8662-4ee1-bb59-3fcd61cc8d57",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "19793ba6-41cc-4a4e-910d-0554ff98d167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac089a39-5a19-40ae-859d-0b445cefe943",
        "cursor": {
          "ref": "ea91ca9b-83f7-4a60-b8fb-61ffebe871a9",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "11b331c8-f09b-4eba-af92-8c6a991a77b8"
        },
        "item": {
          "id": "ac089a39-5a19-40ae-859d-0b445cefe943",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b1126974-2b05-4481-aaad-656f60c60810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5ac146-69dc-4868-b412-7c3d00e9b582",
        "cursor": {
          "ref": "d60adf98-88e6-42a1-b8d8-da7809ed08c0",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "5f42362d-b7cc-4624-b522-97f5bd7de954"
        },
        "item": {
          "id": "de5ac146-69dc-4868-b412-7c3d00e9b582",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "9831cab2-1b7e-4f0a-a3bd-404e2895ff5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b90674-be62-496e-8bb5-bc721bd4151f",
        "cursor": {
          "ref": "4e5c2a63-06a2-4960-8621-fdda83e106f6",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ec1fe247-d857-4654-ade5-0ded78fbd256"
        },
        "item": {
          "id": "94b90674-be62-496e-8bb5-bc721bd4151f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d2daf1b0-0a1d-4652-b1bd-7f248158b218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab89013-6bc0-4a7d-a66a-a405cac81863",
        "cursor": {
          "ref": "aa0def55-c76f-4965-beba-b18415a5b7e5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "4ee27b87-01f0-4ec7-89fc-5104b21d0749"
        },
        "item": {
          "id": "7ab89013-6bc0-4a7d-a66a-a405cac81863",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "489fee84-1a0c-4b1f-a986-d43d59fd8881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d989105-5899-454f-bfaa-1f2742549704",
        "cursor": {
          "ref": "c1f7ecec-40ae-4e0e-84e8-9288b9ee6e19",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d372851a-1d9a-42e5-bd5c-505704205c09"
        },
        "item": {
          "id": "6d989105-5899-454f-bfaa-1f2742549704",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "c799bf24-477b-4ceb-8de6-1fa400d87cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32bffda1-aca4-4035-a7a5-62c755f55295",
        "cursor": {
          "ref": "f39dee40-52c8-4d82-a448-eb3c55cfcd7f",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "58d5e728-d399-429c-9145-a3740831dee9"
        },
        "item": {
          "id": "32bffda1-aca4-4035-a7a5-62c755f55295",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b36d8b2a-f64c-4391-b0ee-2d5b3f89ef27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a06c691-4ac8-40bc-b684-0beb8d3c0cdd",
        "cursor": {
          "ref": "a0892cc0-94f8-4e26-8cf2-beb49fb81930",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "89ecd8dd-eb6c-4e29-ad3d-3c167fce46e3"
        },
        "item": {
          "id": "1a06c691-4ac8-40bc-b684-0beb8d3c0cdd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e25412d3-caec-4c28-8fb1-d1e89201c4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05dde39-f1b5-48c0-a377-d2db21e61958",
        "cursor": {
          "ref": "5f167007-c5bf-4651-93bc-567d998e736c",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d9ee8399-8ce1-4162-8c3f-a9c5d811d88e"
        },
        "item": {
          "id": "d05dde39-f1b5-48c0-a377-d2db21e61958",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f23d4318-af5d-492d-a02d-aa12ecbd6bd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 195,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8cbbf2d-170f-497c-95d4-bac7ea382fce",
        "cursor": {
          "ref": "009eec72-7e43-441c-8295-0ab199f56b6b",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b17fc860-f77c-42eb-8deb-14620e5ccc79"
        },
        "item": {
          "id": "e8cbbf2d-170f-497c-95d4-bac7ea382fce",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "fa4c45af-ff28-4a80-81f7-515eb15476c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b620ac7-9d2c-4bdc-bd38-cf796fd325f9",
        "cursor": {
          "ref": "90df4f9a-bebb-490e-86f7-c694c9acd708",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "476c485f-27b1-48bb-9f4b-5f81fd3f694b"
        },
        "item": {
          "id": "7b620ac7-9d2c-4bdc-bd38-cf796fd325f9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e4575f86-8eae-42c9-b9a4-20ff9d11e764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f903067d-9c2c-45a4-bc18-eac0236a17b3",
        "cursor": {
          "ref": "ee127e72-aaa4-440c-9aeb-d49b5faad936",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e5fb8f22-5e39-47ab-a437-c22f0cc29396"
        },
        "item": {
          "id": "f903067d-9c2c-45a4-bc18-eac0236a17b3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "5177bad6-eec1-4670-9447-8d536cac3525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216226ad-aa1b-49e1-8303-cd57a19f3cf6",
        "cursor": {
          "ref": "f33ab2c4-3e31-498a-9b78-3b5fe0e7f73e",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b323ce20-e3f8-4796-8130-4e3bd512f30d"
        },
        "item": {
          "id": "216226ad-aa1b-49e1-8303-cd57a19f3cf6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "43e1bd83-5b99-4d3a-a13d-912e21f8b804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcef53e-e64b-4dea-8acd-89eec63d51b3",
        "cursor": {
          "ref": "cf1f5356-a387-4b03-ae06-36b8606d0ef6",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ecf715bc-e763-47ec-a4ef-1676c5cf3f0b"
        },
        "item": {
          "id": "2dcef53e-e64b-4dea-8acd-89eec63d51b3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b7c0c467-a25d-47ed-89aa-a4615901c0ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7391233c-54af-45ae-90bd-21fc19b76491",
        "cursor": {
          "ref": "37f937bc-9ba1-4e60-a2dd-ca50c36fca82",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3d559eaa-9df8-4349-88bf-0be8023dba8a"
        },
        "item": {
          "id": "7391233c-54af-45ae-90bd-21fc19b76491",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "34e8dd3d-5aab-4979-94f5-d6923655cfac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8189e464-577f-455f-a7ef-f27aeffe46a7",
        "cursor": {
          "ref": "ab8d8d31-0499-425c-901e-746a957ddb4c",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2a2da47d-2473-460d-b701-7f25480c45c4"
        },
        "item": {
          "id": "8189e464-577f-455f-a7ef-f27aeffe46a7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "53da9e5c-9871-4a93-971b-10572919f85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea482d2c-53dd-4d6e-95d2-e3c0789f434a",
        "cursor": {
          "ref": "3d4e1a68-bb2c-4cb9-a462-81215ba75cae",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4bda9782-daa9-438d-9b26-9c57321cd390"
        },
        "item": {
          "id": "ea482d2c-53dd-4d6e-95d2-e3c0789f434a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "5dd2fa5c-bf3f-48e1-8b34-091e784c55f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56ba1e7f-b651-41fd-96a6-4b60062239ed",
        "cursor": {
          "ref": "582ea283-5fd3-4acc-a2c0-1a61a96ab94b",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "6d5e91cd-c060-431f-aebd-c4b60354a7d2"
        },
        "item": {
          "id": "56ba1e7f-b651-41fd-96a6-4b60062239ed",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "19684865-c1ba-4bc5-987a-d831a2178e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb34e26-786b-4e79-8040-fa5f39b0caca",
        "cursor": {
          "ref": "a8e47650-cb0e-4ffd-93cb-7d7cbfe3dac5",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d3d7a528-4876-4487-9423-c392a489ddbd"
        },
        "item": {
          "id": "dbb34e26-786b-4e79-8040-fa5f39b0caca",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "83fa1015-0a45-4158-8a6b-8f4ef747c83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c698579c-6d82-4f02-91df-f4857cf4d060",
        "cursor": {
          "ref": "5c7d4373-3f91-42a0-90a0-118c24d06529",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "79e72d81-c20a-41c5-a334-ae08469e9af7"
        },
        "item": {
          "id": "c698579c-6d82-4f02-91df-f4857cf4d060",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a6fe70c1-5dc0-47bc-b22c-f2988bdc765c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cde7de-07ca-4aee-9c2a-d1eebe738389",
        "cursor": {
          "ref": "42d16a30-d9fb-4fbc-9595-3fd4f3c9f216",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ce9bbf1d-3d4f-4299-8dec-1ba06658114b"
        },
        "item": {
          "id": "41cde7de-07ca-4aee-9c2a-d1eebe738389",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ad7a4d29-feef-4a04-ad58-ebcc67131584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6736f91b-87ec-483e-b55b-973d71967d76",
        "cursor": {
          "ref": "35df78f6-03cd-4493-b92d-873fe33e4ebd",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "02893280-592d-4a37-b657-6dcfda809f1d"
        },
        "item": {
          "id": "6736f91b-87ec-483e-b55b-973d71967d76",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a159fdae-dc09-4555-b30f-2e85de2958a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fd14e14-0a2a-4b45-8a42-682b8da94df8",
        "cursor": {
          "ref": "e8b57df5-71a5-4c78-86ec-3e2aaa6995db",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "07e0860b-74d5-4493-b76e-8b693af7bd0f"
        },
        "item": {
          "id": "7fd14e14-0a2a-4b45-8a42-682b8da94df8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "54414c17-a57c-4b6a-8e54-a07cda1bad42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88d0cbd-4ac2-40ac-b819-f5d46ad45711",
        "cursor": {
          "ref": "2b1470ba-c9b4-4be4-8bbd-6de8bbdefb9a",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "03123302-eda9-4a5e-ae99-47bddaf8165e"
        },
        "item": {
          "id": "a88d0cbd-4ac2-40ac-b819-f5d46ad45711",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "46090e8a-4e9a-4cf5-b7e0-9d76dc3b0302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c50989-5692-4435-9e09-6eddabcb6435",
        "cursor": {
          "ref": "38d99057-7a6c-47dd-a7ab-77655857e582",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "74ef2b1a-c163-4ac0-903e-0ff982972582"
        },
        "item": {
          "id": "07c50989-5692-4435-9e09-6eddabcb6435",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1e2c3b1b-8576-464c-af4c-01447dd6f27f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f578259a-537f-4ffb-b350-1d15843b86b6",
        "cursor": {
          "ref": "33e5a5dd-a408-4eac-9efc-76d11c487c86",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "efb477ef-238d-4ac3-b381-0b55fc62400d"
        },
        "item": {
          "id": "f578259a-537f-4ffb-b350-1d15843b86b6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "9fa7358d-6449-4b06-8532-22b00bd455c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e70bbac-2352-469b-9be5-0c55c8358e36",
        "cursor": {
          "ref": "92eb954f-536a-4222-b8de-7ded34f5a87d",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "44fb35a1-81d3-4941-bfae-612b103fe54d"
        },
        "item": {
          "id": "0e70bbac-2352-469b-9be5-0c55c8358e36",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "22471666-63af-4f6e-bcba-c73723272c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7b770d-1e80-4fbd-983c-457b9f659e39",
        "cursor": {
          "ref": "1c99f512-73c9-455f-93d7-fc421f8235f3",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "c3d32200-2274-4daf-b539-afbc9dbb1de4"
        },
        "item": {
          "id": "fe7b770d-1e80-4fbd-983c-457b9f659e39",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "77b7cba0-a96e-4ad4-bfac-5d9eeb9aa783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86c955b-52ac-4891-8608-02edce878636",
        "cursor": {
          "ref": "df477198-6450-446c-8fa3-c111098f3d6d",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "57be866f-d00f-40c2-8540-f6ae59e6b389"
        },
        "item": {
          "id": "d86c955b-52ac-4891-8608-02edce878636",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "a8a03809-c25b-4394-bd38-5172edeef402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f954578-2958-4870-974a-608e62623090",
        "cursor": {
          "ref": "addf3583-0c7a-4121-85b5-48929c11ed4a",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "caff78f3-825f-421d-950c-2e3290d0023a"
        },
        "item": {
          "id": "6f954578-2958-4870-974a-608e62623090",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "38fcce52-86dd-418a-a660-4a9b2b44d711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3b3910-7043-4ac4-b7d0-a6d52d83dc52",
        "cursor": {
          "ref": "d9d0f08f-3308-44fa-a131-f1b6c186b979",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fb7b6357-3bf0-4743-b7a1-5099b550aaa0"
        },
        "item": {
          "id": "aa3b3910-7043-4ac4-b7d0-a6d52d83dc52",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "dd6ea2a0-6ffa-4eba-8b23-dcddda0c7e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b06de4-3c5a-4737-a7dd-4dde1c02a208",
        "cursor": {
          "ref": "b2d19dbf-5003-4c00-b692-b07dee8f1de0",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e2d78424-2c7a-49d1-88b4-259b651d38f8"
        },
        "item": {
          "id": "68b06de4-3c5a-4737-a7dd-4dde1c02a208",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0ce52254-e17b-4f74-b9b4-0ba766e22579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c638fd-73f7-4dd1-bf37-b46b59a07b84",
        "cursor": {
          "ref": "6ba9c56d-b5a7-48d1-87de-5832156394a0",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "68242268-f009-442c-bf6c-1af6501f1ca0"
        },
        "item": {
          "id": "17c638fd-73f7-4dd1-bf37-b46b59a07b84",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "87d4db49-0d00-4649-a139-cb8263985d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23edde81-ed3b-4c81-8d59-e3ada38de238",
        "cursor": {
          "ref": "2283d1e9-c755-4846-869d-2ace586768de",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "46e6cbdf-cb94-467f-8e70-3247a3e9ca8d"
        },
        "item": {
          "id": "23edde81-ed3b-4c81-8d59-e3ada38de238",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "619bd781-4980-4d35-b3fe-9eefbab5a515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1140769-2223-413c-96a5-05d073fc5605",
        "cursor": {
          "ref": "5e7fa8d1-896b-44fd-8c96-ff892a189a98",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "404af6c8-5611-4a9c-b573-8dd7d8b4b5a8"
        },
        "item": {
          "id": "f1140769-2223-413c-96a5-05d073fc5605",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "56f44de5-452d-4c17-acd2-56b18f6df34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 173,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb8462d-19c1-4b4b-9985-c287b3e093e5",
        "cursor": {
          "ref": "11dbfbe7-c414-4310-97da-0799780f7bf2",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "a0a0a2c2-30af-4e72-b10f-1e5f1808b2be"
        },
        "item": {
          "id": "6cb8462d-19c1-4b4b-9985-c287b3e093e5",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2118bba2-1707-4b5d-b969-b1fec5c0a805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb57f10-5317-4964-88cb-42c6b174262a",
        "cursor": {
          "ref": "7679e6de-688c-4984-8742-201c2f5a2efb",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f7e64928-b76d-4f23-8730-1ebd25f99b8c"
        },
        "item": {
          "id": "9bb57f10-5317-4964-88cb-42c6b174262a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "950cee0c-1d3e-4eae-a3d0-9ed1251bc68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8cabe2-c142-420e-817d-0f1749672918",
        "cursor": {
          "ref": "20d2b9a6-6ba6-43f5-b3e4-15723ba908c4",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "315dab11-0363-4b73-a1d1-72d3d7024e1a"
        },
        "item": {
          "id": "3f8cabe2-c142-420e-817d-0f1749672918",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "49873de8-3ee9-4b94-ad2a-c3afe300e0c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cdd358-5a01-4808-8c95-2fb7b50335c4",
        "cursor": {
          "ref": "534c9406-679a-44bc-98be-5e25a076a4e3",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f16abfb4-9336-4295-8bd9-4eae9767e2e4"
        },
        "item": {
          "id": "a4cdd358-5a01-4808-8c95-2fb7b50335c4",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0ae48401-1b39-4e47-a91a-003bb6edf908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c657c7f9-ae4e-4eab-8b47-0e258efc9e5a",
        "cursor": {
          "ref": "0bd90932-5a2f-4608-9057-74406e88c710",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "6f81bd16-d97f-4317-bbda-e3e5b31b0241"
        },
        "item": {
          "id": "c657c7f9-ae4e-4eab-8b47-0e258efc9e5a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "186f2d61-a4a1-455d-9c33-05ee834000e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7bf39bb-da2b-41d7-a7bd-279b9d6c2e7c",
        "cursor": {
          "ref": "db803ad2-1024-4d51-af96-90a264552f86",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "6ae63517-5859-4835-91ed-cff35e7da8a7"
        },
        "item": {
          "id": "c7bf39bb-da2b-41d7-a7bd-279b9d6c2e7c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "148369c1-7e12-4b6b-9e1f-19da8f65e119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cd97df-3816-4d1e-af37-48c8b27b161a",
        "cursor": {
          "ref": "bc18bc6a-f176-4f07-a759-fdc2055da1d9",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "79bc62e5-7bba-4818-be18-37c914c06e1b"
        },
        "item": {
          "id": "24cd97df-3816-4d1e-af37-48c8b27b161a",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "226d13cd-8fa3-4374-a01f-66435a1b3ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b2274f-7e5e-4be8-a313-a89b6f26afe8",
        "cursor": {
          "ref": "c5fab2e6-89dc-4052-aac1-df0865cbb8dc",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bd6ec134-236f-481f-a778-33446058f3ae"
        },
        "item": {
          "id": "03b2274f-7e5e-4be8-a313-a89b6f26afe8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2d87bb76-fa5b-47f1-9a0b-aa4aaa47090c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d9a505-806c-42e1-ad55-1388db049add",
        "cursor": {
          "ref": "925611f6-f8fb-4dc8-bf61-d0a7998c9336",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "58c810c6-d2aa-4f7c-b287-586e5d5250df"
        },
        "item": {
          "id": "95d9a505-806c-42e1-ad55-1388db049add",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f3f9a732-388e-43fc-9364-0fac54f1d70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1430db47-1314-4cdb-b042-09ddd5854baf",
        "cursor": {
          "ref": "74279d0b-5070-466a-b904-2bb6c28aa296",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "15f77ea6-6416-46dd-91ff-da35c3bd24a9"
        },
        "item": {
          "id": "1430db47-1314-4cdb-b042-09ddd5854baf",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f49a81de-6227-4a98-bebb-426530fb63f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8187ac5e-1cc8-4e6b-aa28-06d387dcba0a",
        "cursor": {
          "ref": "bbe56dfe-c481-477e-bd6a-db85dc7cbb0a",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "77ec835e-7e1d-4d32-940d-d57762d09beb"
        },
        "item": {
          "id": "8187ac5e-1cc8-4e6b-aa28-06d387dcba0a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "e7c623dd-f790-4861-abae-9ee383b27f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a70bdba-f41d-49f4-ad1d-424c500b2618",
        "cursor": {
          "ref": "99c60165-08ab-4dfd-82f0-e22931116597",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e46392aa-88ca-496b-8ac9-a264b6fc5835"
        },
        "item": {
          "id": "3a70bdba-f41d-49f4-ad1d-424c500b2618",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2063084e-64e4-40ff-8912-fb69171061c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3034ff-9ead-4772-9e56-2c03fe8a8b1e",
        "cursor": {
          "ref": "a260fd50-74a0-4cfc-9408-429655b5f79d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "87ada1a0-6d97-45d9-a207-55ded698b518"
        },
        "item": {
          "id": "ba3034ff-9ead-4772-9e56-2c03fe8a8b1e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "639d2151-e522-43b3-ad97-9ce2cf3048cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8392c12-7c8b-4cd3-8b7f-52101b35d0fd",
        "cursor": {
          "ref": "aec48d9e-c6e2-4d71-9942-9ca2075ff1c9",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "462cab65-d91f-4de7-a0f0-999374fd866b"
        },
        "item": {
          "id": "b8392c12-7c8b-4cd3-8b7f-52101b35d0fd",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "06d9b931-5a2e-4c81-81f7-f9ecce1e0828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa099ed-c32e-4ffe-a2c4-b9fdc32590e8",
        "cursor": {
          "ref": "69505dd5-315e-4048-93af-0972f16b23cd",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "987acf9c-bf29-49cd-9ee7-d90d51ac00c9"
        },
        "item": {
          "id": "3fa099ed-c32e-4ffe-a2c4-b9fdc32590e8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f121cb63-e3a9-4582-ae6d-c7ac19e97d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c98c086b-a2a2-466a-b974-f3e122e12b05",
        "cursor": {
          "ref": "f8c27f3e-819e-44c1-ad0f-1c5b28bb1a56",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c3f3212f-6c3c-435d-8429-fbd47b2743fa"
        },
        "item": {
          "id": "c98c086b-a2a2-466a-b974-f3e122e12b05",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "09ada5b3-9d26-46f9-8943-b8d8afe4687d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9e2a4cc-776c-4ced-8fe2-35e21138a012",
        "cursor": {
          "ref": "b11e8e10-b07a-48da-9968-c921478b4144",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6e94702d-74cd-4d3a-a7fe-20e4286de7b0"
        },
        "item": {
          "id": "e9e2a4cc-776c-4ced-8fe2-35e21138a012",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "2ba4de5a-b8ab-4ad3-9c3f-3f4f2171da9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e561f7-c0fc-4292-a642-d3a7f35b47e3",
        "cursor": {
          "ref": "4eb53d94-76e0-4514-9260-362525effb93",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b465f6a7-6df5-4ee2-ab3e-d291d220a70c"
        },
        "item": {
          "id": "79e561f7-c0fc-4292-a642-d3a7f35b47e3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2fdcdd1c-99dc-4e91-9e04-3e0fa56d792c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9b57ea-3d88-4a10-823e-e134bddbcdc4",
        "cursor": {
          "ref": "3db28c71-97c0-489d-9f3a-6fe22495710f",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "adf465ad-e5d4-4089-9c96-a5c5c89e52bf"
        },
        "item": {
          "id": "cc9b57ea-3d88-4a10-823e-e134bddbcdc4",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "0c8b606e-a8d0-4e2a-9b07-0b62945e8935",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "33fa85d6-cfa2-4b95-96e9-c20f6219d64e",
        "cursor": {
          "ref": "cc163eae-7255-4f94-a666-95a1eab2e6df",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "435b91c8-d216-4aa5-b30b-fe5f3c536df7"
        },
        "item": {
          "id": "33fa85d6-cfa2-4b95-96e9-c20f6219d64e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "24225689-cf8b-4b57-83bf-b7e12235c508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "cc0242b9-94ec-41c6-bd9d-0133c1d30d2f",
        "cursor": {
          "ref": "624bfb6a-542f-45a3-9b2c-47e59b872f93",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e1e9b489-017e-45d9-a573-2daeb04cd469"
        },
        "item": {
          "id": "cc0242b9-94ec-41c6-bd9d-0133c1d30d2f",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "2255e898-334e-412f-ad1a-2d83b795d730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "bb12313c-feef-4059-88ac-27196f4a04f9",
        "cursor": {
          "ref": "94de952e-1182-45d1-a42b-bb47abc748bf",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5b20a218-5279-43c5-a452-66fb1a0babb3"
        },
        "item": {
          "id": "bb12313c-feef-4059-88ac-27196f4a04f9",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5e864253-2aee-4204-9666-cd5e123a6821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "b920f1ab-cbc8-4269-a96e-381e4100da3f",
        "cursor": {
          "ref": "ee85d5e1-37ea-4eba-af76-88c5e82d854f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e9b26489-11a3-4e9b-9f42-6a119bb03a03"
        },
        "item": {
          "id": "b920f1ab-cbc8-4269-a96e-381e4100da3f",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "db794df1-a93e-42a5-8426-af240390732d",
          "status": "Created",
          "code": 201,
          "responseTime": 10840,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff4936e7-e454-4dca-9767-2a397802940b",
        "cursor": {
          "ref": "6d55c0d6-19d8-4000-8c45-28ac2d00ee40",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "53c698cf-48c5-460f-bb50-bd9c3dceee13"
        },
        "item": {
          "id": "ff4936e7-e454-4dca-9767-2a397802940b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e251049c-1564-475f-a1fe-787834d0430f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "763675d2-4eb4-4bd0-96e2-82df327550f6",
        "cursor": {
          "ref": "f910d471-d0d0-4551-aa1b-469973eb92db",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "cf9f9b87-6c0d-4d77-a711-480080b1a01d"
        },
        "item": {
          "id": "763675d2-4eb4-4bd0-96e2-82df327550f6",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4694e987-7d24-4130-8b90-5de2ff2e6e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "364abff5-51e1-4383-a062-3cb53b02129c",
        "cursor": {
          "ref": "33ad4a17-6078-46b1-8529-274599f416c4",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9e991309-85bb-43c8-82c2-ce49f2de2b45"
        },
        "item": {
          "id": "364abff5-51e1-4383-a062-3cb53b02129c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "298363d9-eab8-4f54-b03b-fc9e8e423ab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e83ddc4-d37a-4bd9-95fc-e8b139d47fd6",
        "cursor": {
          "ref": "425ee230-1142-4634-b8f2-b88aae020031",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "b8a2183c-bd04-492d-8a4f-4d764a60852b"
        },
        "item": {
          "id": "1e83ddc4-d37a-4bd9-95fc-e8b139d47fd6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5638ff70-433a-4c4a-8c4f-e8acc4d15238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6cbc9f8-b187-427f-ae2b-cbfd55f36c48",
        "cursor": {
          "ref": "fc04f222-c3ac-4090-b3ad-213e7d6ac97e",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5655c4e4-8d08-4310-b7f1-27093e36a731"
        },
        "item": {
          "id": "d6cbc9f8-b187-427f-ae2b-cbfd55f36c48",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "acf7771a-3f55-4475-a9e4-7137e272bee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7426d7-1f89-4e7f-b9ac-84608d02bcb5",
        "cursor": {
          "ref": "689b6de1-f522-42e1-860a-85fb406e2919",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0245681a-5afd-48b7-92e9-023ae3bfb7ed"
        },
        "item": {
          "id": "2f7426d7-1f89-4e7f-b9ac-84608d02bcb5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "443a784c-e038-4438-888a-e411e2985f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a002df5f-8dd9-4e1e-8c13-1e60978d5d87",
        "cursor": {
          "ref": "9ad2198d-758c-40dd-94ca-ff0378c76dd4",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7cce4891-1f5d-47a0-a6f9-5fd9b2712f28"
        },
        "item": {
          "id": "a002df5f-8dd9-4e1e-8c13-1e60978d5d87",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "64d908c3-07d6-4f63-b3be-02333ee9049a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fa4a0a1-cbe6-41f0-800c-8899b6714444",
        "cursor": {
          "ref": "5d543792-90e0-4a71-b0c3-4530d15c473c",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "efc0e294-f690-40b4-a657-b0e4fbadba8f"
        },
        "item": {
          "id": "3fa4a0a1-cbe6-41f0-800c-8899b6714444",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0ae58156-ab23-46b2-9788-e7dfc77d7e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711c1eb9-ea48-47d7-a883-ca6555a46a3f",
        "cursor": {
          "ref": "b123552a-c6bc-4110-85a7-1da98f7ec93d",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "cab66592-aa3d-4a3d-bc3f-4c01e3d51d9b"
        },
        "item": {
          "id": "711c1eb9-ea48-47d7-a883-ca6555a46a3f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ea588c34-eda0-40e3-86ca-1d754db48609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d47a55-10d6-4329-9aa4-c18f034403f2",
        "cursor": {
          "ref": "4edf2d6d-9e1c-4406-b311-3bfc62e84ade",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "323559fd-733e-49a2-b7cb-88183abd758d"
        },
        "item": {
          "id": "c9d47a55-10d6-4329-9aa4-c18f034403f2",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7de78710-ade0-44a0-af57-2e1e16e71db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb8020f4-d462-4977-8352-bfb042438195",
        "cursor": {
          "ref": "f181ccda-b7d0-4a25-a67b-df34ba928e3e",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c6f8988d-117f-4087-b396-9ceba16840ae"
        },
        "item": {
          "id": "eb8020f4-d462-4977-8352-bfb042438195",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ab04cb58-55f3-4fb6-9b3f-e1d127ec03cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00b4fec-5404-48a4-adc7-dc3042ea2099",
        "cursor": {
          "ref": "04bbb5dc-2e40-4c0c-9020-7e79962c0274",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7572bf3b-3784-437c-81b0-f519fb3e319b"
        },
        "item": {
          "id": "d00b4fec-5404-48a4-adc7-dc3042ea2099",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "80e8e3eb-49f8-47c7-ae48-ee49046987ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb4c384b-5f4b-458a-83b4-8d57d9487182",
        "cursor": {
          "ref": "ec72ad8d-4be8-4d66-97c2-2a2e1b8f264f",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a79f9b2c-1abe-4180-9492-bf6fb429ed32"
        },
        "item": {
          "id": "eb4c384b-5f4b-458a-83b4-8d57d9487182",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0ac4e996-4785-4d9c-b415-c1bd884dd654",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5274a979-a1d7-4528-b31a-490d556d086c",
        "cursor": {
          "ref": "be1b1fde-a3a0-484e-a7b3-bbc0a079087b",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3a9b3912-a3ee-4a6a-b7eb-c3bc44cada5d"
        },
        "item": {
          "id": "5274a979-a1d7-4528-b31a-490d556d086c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "db14c91d-817a-4647-8d13-5779ee18baff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db84794c-c03c-4105-97ab-114c4c3574ef",
        "cursor": {
          "ref": "a36eb575-b3de-42ea-82c8-f3622a1bdbc9",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "c8299649-8973-4da9-b12c-816c7cb5fb81"
        },
        "item": {
          "id": "db84794c-c03c-4105-97ab-114c4c3574ef",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7226c06c-700c-499b-ba29-cf680ab47c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42647dd7-cc4c-457f-8a78-18ed356826f8",
        "cursor": {
          "ref": "ae2b00ff-a3b5-4940-9c8d-ba0c9bb9eed1",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4243f7b4-3f24-43fe-abd7-444b99ec2f09"
        },
        "item": {
          "id": "42647dd7-cc4c-457f-8a78-18ed356826f8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4ff74029-8ba1-4cbb-899d-606f83171ae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb46ee0f-4100-4c63-81f7-d60bd87f34ef",
        "cursor": {
          "ref": "2e788d8d-fa19-47ec-92c2-1b1bbbf05e0d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "bf44737a-d479-42ff-bb79-0d87de29c8ff"
        },
        "item": {
          "id": "fb46ee0f-4100-4c63-81f7-d60bd87f34ef",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "02cf94c3-a516-4ed4-9701-c77576f40177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5c581c-c316-44df-9dfe-153f1ac4be4f",
        "cursor": {
          "ref": "6882394f-222d-4982-ace0-96f4a735517a",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2f6da166-2b81-416b-9a27-86b7228c6595"
        },
        "item": {
          "id": "8c5c581c-c316-44df-9dfe-153f1ac4be4f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "111da196-71f8-42d3-805e-b59162774c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d9c6cf-12b6-4a9c-9993-831836b4f335",
        "cursor": {
          "ref": "010efbb6-1fca-4758-b756-41915d83300b",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "872b62a3-23e9-495c-8063-13bac803022b"
        },
        "item": {
          "id": "d2d9c6cf-12b6-4a9c-9993-831836b4f335",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a25c57fc-67ba-4297-9e0d-bfa63ad39122",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 71,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "4b218933-d6f9-4876-8c90-726415207f92",
        "cursor": {
          "ref": "4fa9b7dd-b4ee-4f9f-8430-6c47504c5556",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e763e321-3ed8-45ea-b067-9e478c640ad1"
        },
        "item": {
          "id": "4b218933-d6f9-4876-8c90-726415207f92",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9a75cd02-2835-4771-8e64-3bc4882e4c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32051542-410b-49fa-8d37-e32157956620",
        "cursor": {
          "ref": "ac1ce93d-8223-4820-93c0-50ded7091a5b",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ce66bd0b-f863-4872-afb5-2f3620f70801"
        },
        "item": {
          "id": "32051542-410b-49fa-8d37-e32157956620",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "773522e7-d3f3-40a8-9344-d069e1f074bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38793a3-7a15-4098-b12e-d88325f253f1",
        "cursor": {
          "ref": "bf92aaf4-7645-4aa9-bdf3-d026888841f4",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "b1fcfc75-69de-4640-b226-e4931955eca2"
        },
        "item": {
          "id": "a38793a3-7a15-4098-b12e-d88325f253f1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ba555d4b-d25d-44da-b119-b186ae570006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce477747-3dbf-4073-9416-f4681ed9a2a0",
        "cursor": {
          "ref": "9de0fdf0-9cdc-42a2-8a53-eb06791a1826",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c0db5176-3f5e-4681-a63f-22ed68c069b4"
        },
        "item": {
          "id": "ce477747-3dbf-4073-9416-f4681ed9a2a0",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "80eac2fa-ed6d-41bc-8b86-9fe871875ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f653104-c7e1-43fe-b3d8-e41fa2e0adbd",
        "cursor": {
          "ref": "cd351a43-63b6-4640-8832-9b7765864768",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "68402268-f86f-43df-8761-dd2c975ff13f"
        },
        "item": {
          "id": "9f653104-c7e1-43fe-b3d8-e41fa2e0adbd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "abde688e-48c3-4962-9168-85c47ca332b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90665d0c-db15-4a5f-be5c-958451e353bf",
        "cursor": {
          "ref": "9e483744-ff9b-43bb-9749-2da3f93e71fe",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "097521a1-834c-49e1-aa19-1737674cbbf3"
        },
        "item": {
          "id": "90665d0c-db15-4a5f-be5c-958451e353bf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d915c159-7c8b-4cb9-997b-9b288bdbc3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8774f2ae-f191-4e11-9bd3-42ac4362cdee",
        "cursor": {
          "ref": "42871a1b-a5b9-41b0-8b24-9abf07e40eb6",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "fa02028d-2b6d-4cdf-8fa8-1084d9fc6fe1"
        },
        "item": {
          "id": "8774f2ae-f191-4e11-9bd3-42ac4362cdee",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a6513b00-84af-4094-952f-c65d4b18c89b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7583ecf-275c-4429-94b6-18ff31a6448e",
        "cursor": {
          "ref": "50462fd7-bf08-4f9f-9f39-19e06acf3c0b",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "70dbca29-99e9-4607-9ff7-f1fbe5563b6d"
        },
        "item": {
          "id": "e7583ecf-275c-4429-94b6-18ff31a6448e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "693bf4e9-a7d3-4f7b-9085-364acdaddd63",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 74,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "e1b95c89-68bf-4c4d-85ac-eb3a64b904f9",
        "cursor": {
          "ref": "917936fb-3e87-4bf9-949d-d8e38c3ecd4f",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "86bc3b95-b04a-4485-a3d9-3e1c8233ab89"
        },
        "item": {
          "id": "e1b95c89-68bf-4c4d-85ac-eb3a64b904f9",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "11f181aa-e990-4d46-b9b7-aecbf6380eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ae859f-bc0f-4ae8-8070-de3b7d6a3221",
        "cursor": {
          "ref": "d113ceb7-bb46-4005-87ed-60aae33456bf",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b20adfb3-e318-4994-b75b-9d59b5a786a5"
        },
        "item": {
          "id": "46ae859f-bc0f-4ae8-8070-de3b7d6a3221",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1937c8ca-1c7c-4e1d-8fa0-7f822cb741d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1061f9a5-c848-4732-84ff-d5d06e99cafb",
        "cursor": {
          "ref": "d22808e8-235c-4b28-9c3e-40f7db05a496",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bb28cb23-5b45-4060-9457-35f07f618a19"
        },
        "item": {
          "id": "1061f9a5-c848-4732-84ff-d5d06e99cafb",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "fd007197-096a-415e-8b62-257a8dba7e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2642e14-6201-45a0-be9d-54367aa133f4",
        "cursor": {
          "ref": "6d0b76ba-2eb6-4234-9efe-c143fba71665",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "061216e7-447a-4037-8e94-4b2943b6ee4f"
        },
        "item": {
          "id": "d2642e14-6201-45a0-be9d-54367aa133f4",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b9787b13-2aa7-49f6-8b4f-efe0a8623c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4513a760-7743-4852-99e2-63a71221c7b6",
        "cursor": {
          "ref": "7c199cdc-d104-4e62-b2e0-bd01aa4898ee",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "09664620-f102-4044-8376-24112ac62f08"
        },
        "item": {
          "id": "4513a760-7743-4852-99e2-63a71221c7b6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2c72a829-0d4b-414b-a8ba-1d52d4626e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9ee7e46-b793-4203-a4a4-672f5822f0bc",
        "cursor": {
          "ref": "df6505ad-8bfa-4252-850e-caa7747ecb8d",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2fc8f4ab-266c-4a03-b088-469edb338e18"
        },
        "item": {
          "id": "a9ee7e46-b793-4203-a4a4-672f5822f0bc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7ebe02ec-818f-4b69-bdf5-131f4e875f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4c3ad1-2b86-4a21-83e0-f1e6a71b5204",
        "cursor": {
          "ref": "a4a8ca04-aa73-4fd7-89df-f02ef6c315d7",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "dc99994e-2589-4b56-af65-0211fa040a35"
        },
        "item": {
          "id": "7b4c3ad1-2b86-4a21-83e0-f1e6a71b5204",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e14eb15e-42d8-4820-bf67-b03443c5e985",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "2f5fe9c0-61dc-4838-8e4c-d976e0f11b96",
        "cursor": {
          "ref": "96975aea-5f1d-4d82-8de3-a0da2aa1c50d",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "7bd3cb1c-412d-4c42-bc38-a30b89fce21b"
        },
        "item": {
          "id": "2f5fe9c0-61dc-4838-8e4c-d976e0f11b96",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4abfdadb-934d-44b5-b535-c7c2742e4894",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "ad1faa1c-54cd-4751-a6fc-3321a44dec79",
        "cursor": {
          "ref": "b4af4af0-696b-4862-b659-51a9abf69659",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d3599c83-277a-4c2c-bca3-7b9d25c8940e"
        },
        "item": {
          "id": "ad1faa1c-54cd-4751-a6fc-3321a44dec79",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "fd4c155b-8400-4e26-8402-b562df72611c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 101,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "8e172ce5-2e69-4d48-9766-cd4ff37a1020",
        "cursor": {
          "ref": "c3ff7278-0e6e-4dce-9133-057497e8d8ef",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "84044fa7-fcd6-48f6-873f-f718f9d2fdf3"
        },
        "item": {
          "id": "8e172ce5-2e69-4d48-9766-cd4ff37a1020",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "651f2c8a-eabc-4727-97e7-39525d2a7f4f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "1edb885a-8c74-4d02-98a2-382034ce75cf",
        "cursor": {
          "ref": "b1cd4463-876f-4b44-b4c2-0a3f31de1f6f",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b84645f3-c860-4cf7-9533-65f057719483"
        },
        "item": {
          "id": "1edb885a-8c74-4d02-98a2-382034ce75cf",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "73803071-7569-439c-9a85-af07f11df0f9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "d98e81e3-e82b-4e5f-a1ea-76b3e9582dd0",
        "cursor": {
          "ref": "b3f4ead4-8e3c-4f3e-8b37-161dbf7bfb65",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d63fbd61-afd9-497c-b346-fd4792606975"
        },
        "item": {
          "id": "d98e81e3-e82b-4e5f-a1ea-76b3e9582dd0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a663b3f1-1249-453f-92a1-58ace225492e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "e2ab88f9-ea00-4d40-8de4-765968e702b5",
        "cursor": {
          "ref": "286d8aa2-f998-41f2-bb94-88c9c675633f",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "cf22cda9-b348-4db7-8f1e-23b26cecbff5"
        },
        "item": {
          "id": "e2ab88f9-ea00-4d40-8de4-765968e702b5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "6261cb61-ac03-4f21-b74b-f83d075a774e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66aa2a5-6eff-4bb9-b893-da2dd80f0232",
        "cursor": {
          "ref": "38b80a00-bdb3-497c-8e11-2786f9867ca3",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1383a308-a88a-4d52-85c4-2e16479fe817"
        },
        "item": {
          "id": "a66aa2a5-6eff-4bb9-b893-da2dd80f0232",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "95c6e5ba-e0fc-4bfc-92fb-c13cc1b8c9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b23c30-d267-4f6a-9eb4-d0f6433cb3ed",
        "cursor": {
          "ref": "a6535856-7c5d-4904-8fb3-77837f0f594b",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6518bbf1-3a7b-46e5-bcd0-d49b7fcc60e0"
        },
        "item": {
          "id": "29b23c30-d267-4f6a-9eb4-d0f6433cb3ed",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b02abdae-e014-4fc3-9037-9729f28b0b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5a34ae-6955-42d2-b94b-3f1fac3ab012",
        "cursor": {
          "ref": "0c258c80-edd3-4af5-ada1-f93f5f5db5b1",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "0e28340e-93fa-4098-a32b-8c2cce447d41"
        },
        "item": {
          "id": "de5a34ae-6955-42d2-b94b-3f1fac3ab012",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "eab0c052-2661-4c11-adba-7e55bdca7f55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e22804-fcab-4f26-ba7c-0b59dd7640d0",
        "cursor": {
          "ref": "33948999-fd08-4d52-aa2d-690d1c36b4c9",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "acbc2482-9da0-40b0-9ee5-c7f73f0c7ff3"
        },
        "item": {
          "id": "69e22804-fcab-4f26-ba7c-0b59dd7640d0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0c3476fe-04f2-477d-9a73-ba0dc68be96d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "709302d7-5665-4003-97d1-f30a754f76e8",
        "cursor": {
          "ref": "c3801adb-587e-41de-96b2-fb2aa4933888",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3b806286-1839-44dd-936a-ea9471bf8dc1"
        },
        "item": {
          "id": "709302d7-5665-4003-97d1-f30a754f76e8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "3a76a017-4c83-4c16-869f-36e4e231a322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa07f3b8-7900-4e46-8894-cdc348529a7d",
        "cursor": {
          "ref": "3d7d7ce4-c58a-4236-8dea-08fb4255977d",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "44fda246-3ca6-44e8-b2bd-1ae59d656466"
        },
        "item": {
          "id": "aa07f3b8-7900-4e46-8894-cdc348529a7d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e66d6566-59cf-42b8-a919-031d541d0463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe34ea1-ba6b-4ea0-b35e-0eda0943f838",
        "cursor": {
          "ref": "c773077b-1fa8-4040-8c42-875d87340bc6",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "013bb524-b068-4975-a6c0-c86bccb57aa5"
        },
        "item": {
          "id": "5fe34ea1-ba6b-4ea0-b35e-0eda0943f838",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c2d649d8-1c57-422d-912f-e0fd38de478c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2265a276-0dec-44c0-a294-77da72beefe0",
        "cursor": {
          "ref": "74c60387-8597-4ded-96b2-c8714ca37ca0",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "34817e0a-729e-49c3-89a4-9c39ea7e2559"
        },
        "item": {
          "id": "2265a276-0dec-44c0-a294-77da72beefe0",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9c0fc6c3-20e7-4f38-97d5-7647395f339d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd25ff6-6405-4467-adf6-b337bcfacbe1",
        "cursor": {
          "ref": "e19d7677-b49c-44c0-a36c-05c886baf310",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3759ac3c-9272-4df4-9118-178d782dd4dd"
        },
        "item": {
          "id": "1bd25ff6-6405-4467-adf6-b337bcfacbe1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8f09ed8f-7529-4015-b016-e361e7f13758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8963f81d-fc22-410e-9313-fcef6a898455",
        "cursor": {
          "ref": "57ab96ac-c007-474a-9421-5639f5032039",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0c376791-9b1c-49e6-bebf-e71d1ef06afd"
        },
        "item": {
          "id": "8963f81d-fc22-410e-9313-fcef6a898455",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "9685c129-e85b-4c87-9045-15b32f80adb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedf5c87-d0d5-4c73-9fcb-d470ec982cb6",
        "cursor": {
          "ref": "078d922a-fa21-4aaa-8198-4cb54443257e",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6ca8f55d-1392-49ac-8cb9-c12e2f0ba479"
        },
        "item": {
          "id": "cedf5c87-d0d5-4c73-9fcb-d470ec982cb6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "041b9991-8a2c-498c-a5b3-b29cb1e049da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79639894-3390-482f-95df-f0839ef70c26",
        "cursor": {
          "ref": "095932f8-fa37-4db0-96b6-04ce3c204dd5",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "da9cd480-b93a-4744-8461-d9b6ccc33543"
        },
        "item": {
          "id": "79639894-3390-482f-95df-f0839ef70c26",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "79bcaf47-b747-40e2-b474-ed09a8bd7fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39778d6e-6c2f-4e37-854c-5947bd18df76",
        "cursor": {
          "ref": "ad4950ba-2605-441f-861d-00cfca42705a",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "1d674ec1-4325-4d69-9989-96efd4ba7a6e"
        },
        "item": {
          "id": "39778d6e-6c2f-4e37-854c-5947bd18df76",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "16d6e401-2c98-4e12-b5c0-2cfc3b8b6396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a77e0b5-97b3-4c54-9d38-955e1326012f",
        "cursor": {
          "ref": "cd7d26bb-fc3b-4613-b925-5a13809595c6",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "db806d0f-4b6a-4850-a92f-bfaac0152b3b"
        },
        "item": {
          "id": "5a77e0b5-97b3-4c54-9d38-955e1326012f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "67979d3d-56eb-401b-96f0-15da9771c338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdbd7b9-7f7e-426e-8556-b00a5163ac42",
        "cursor": {
          "ref": "5cbcc737-1a02-4529-81c5-52b2185bef5a",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e9ea91d7-1d74-4c3a-b826-fb415674b714"
        },
        "item": {
          "id": "8bdbd7b9-7f7e-426e-8556-b00a5163ac42",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a68f7efa-873b-401e-8407-645ac955098b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96548a42-6771-4944-81ac-2eb8aaf08b2c",
        "cursor": {
          "ref": "f2b5e347-21c5-4ffc-abf8-5af5cd95f214",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "eb2c8c54-4556-4ba1-9ff2-c0753f219804"
        },
        "item": {
          "id": "96548a42-6771-4944-81ac-2eb8aaf08b2c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ad265e32-6262-48ac-a852-1c65a1648094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e23a8b-d71a-4821-8736-76661f6a5266",
        "cursor": {
          "ref": "a87e982d-d71b-49e5-908b-75eea1b015c7",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "549a7e6a-57fa-42fa-98a2-d398606f72ac"
        },
        "item": {
          "id": "59e23a8b-d71a-4821-8736-76661f6a5266",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "de1e35ff-a1e8-4405-a3b0-3145fd221a94",
          "status": "OK",
          "code": 200,
          "responseTime": 94,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "00797131-a286-4ab2-bb9e-34dc9ba05709",
        "cursor": {
          "ref": "23aaf7c8-01f7-49db-b2a6-45a1c44bff53",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "63ae4001-97ac-4179-a83e-458a94f5375d"
        },
        "item": {
          "id": "00797131-a286-4ab2-bb9e-34dc9ba05709",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bb5080f6-75fe-48a0-98e3-7ac4f33b03b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5404477-a4dc-4e5b-b251-56fa30dfca9e",
        "cursor": {
          "ref": "ea95f53e-b236-4593-b04e-d8886d8de5d1",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1066af14-57dc-4328-9fa8-d35236a5262c"
        },
        "item": {
          "id": "b5404477-a4dc-4e5b-b251-56fa30dfca9e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "85204ead-11d2-49f1-8d50-013d9dd3af7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f331966-bd37-40a0-9e9a-a06725d76334",
        "cursor": {
          "ref": "481d45ae-cfa4-40ea-9438-0160db667abd",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "24ead3ed-636e-45a2-8634-dce47d938996"
        },
        "item": {
          "id": "3f331966-bd37-40a0-9e9a-a06725d76334",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "cf3cc74b-7c65-475e-b98f-14ecbfd0bc29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f5d9a1-bfae-4e7c-9947-b480897b7dbd",
        "cursor": {
          "ref": "859f4af5-cb5b-460c-bd48-0a4cd1c877bc",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a748da6c-fd9c-4772-a205-190607732d7d"
        },
        "item": {
          "id": "11f5d9a1-bfae-4e7c-9947-b480897b7dbd",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "17ae33f7-2da1-45a3-8547-1c884d6a8df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca925395-d1bd-4b8f-a56d-aea04f44d59d",
        "cursor": {
          "ref": "4890f3c0-ac59-44ea-88af-784b6bbb6183",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "518935a3-c563-4c6d-ae34-866cbff7dec4"
        },
        "item": {
          "id": "ca925395-d1bd-4b8f-a56d-aea04f44d59d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "dff20f9a-7bb1-4699-9dec-e4695e39100d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8cf4fc0-a8d9-4906-84b9-8501a1c580b9",
        "cursor": {
          "ref": "ed88dd4c-a0de-4782-84cf-16d52c6a9141",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0d2c5d75-c555-4359-b04c-dd61b9ce07ba"
        },
        "item": {
          "id": "f8cf4fc0-a8d9-4906-84b9-8501a1c580b9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "6a57f540-cadd-40c3-accb-aa654cb741fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b25c628-4b7b-4b74-89e7-7478b7ab00c8",
        "cursor": {
          "ref": "e42908dc-4eb3-4966-ad1b-f908881a249e",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ee43875e-af68-4586-9a8d-d3dc4b860ca6"
        },
        "item": {
          "id": "4b25c628-4b7b-4b74-89e7-7478b7ab00c8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "89e56669-a553-4a65-a693-c9db61136048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a379331-bc46-438b-a3a5-84512f402cd7",
        "cursor": {
          "ref": "ed3be464-230e-4926-892e-b88d518bfef4",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "80437c7d-26c9-424e-a46c-053f79516416"
        },
        "item": {
          "id": "2a379331-bc46-438b-a3a5-84512f402cd7",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "942952bf-5aa9-4568-87a6-4c08caf3c446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52a8f9d0-324e-4ce8-96b3-e06b032819bf",
        "cursor": {
          "ref": "315d1916-5fb2-4fe6-a2e5-34c61a6bf4b7",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2a3141f1-153d-4d4d-8d98-a8e774768de8"
        },
        "item": {
          "id": "52a8f9d0-324e-4ce8-96b3-e06b032819bf",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1ed762a1-1274-466e-a40a-5e986d884f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3926968-9d48-4128-8a7c-697cb900b803",
        "cursor": {
          "ref": "836b509d-34f3-40aa-a03b-b9774419da7c",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e791ed18-2b9e-4a68-95ac-c3dbd8edba15"
        },
        "item": {
          "id": "c3926968-9d48-4128-8a7c-697cb900b803",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a877bd96-ced3-44c7-a6e1-08c1ccffd025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929f60ea-12d5-47ab-aa3e-e0117c4696fa",
        "cursor": {
          "ref": "96ee7aa0-99ff-4bf4-b865-20ea49f25efb",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "9342d657-bb6d-4d9b-9845-e6d1439a851d"
        },
        "item": {
          "id": "929f60ea-12d5-47ab-aa3e-e0117c4696fa",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "86e3d914-ddf3-44d5-9d75-f67ab0a63b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1420d0ef-24b0-471a-b593-10fad2197f3a",
        "cursor": {
          "ref": "b2a15167-0add-4d0c-ad58-00de1b5e2028",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e2df2f81-ea17-4df0-b9c0-fe8834138078"
        },
        "item": {
          "id": "1420d0ef-24b0-471a-b593-10fad2197f3a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "ccac67a1-e13d-4103-806e-b3de1c051e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07d5a67-c076-4b95-b601-c59953077193",
        "cursor": {
          "ref": "b3154fa9-3096-4618-b6bb-69e77fd01425",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a9c70589-6f94-4619-9410-1399f63b924d"
        },
        "item": {
          "id": "f07d5a67-c076-4b95-b601-c59953077193",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b814b876-e8ac-4b77-a290-b47f1c1f26bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc73420-84bd-4282-9cdf-7c3d61a50ecb",
        "cursor": {
          "ref": "fd5044b1-ef7e-4437-8341-0a8e9491d2e4",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cc28a2ce-061d-46e9-9229-5bc197c4a07c"
        },
        "item": {
          "id": "2bc73420-84bd-4282-9cdf-7c3d61a50ecb",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "da05d27a-1efc-4c89-855e-933e2277fb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f4f4dd-bd64-4388-8d24-35dbfc80d028",
        "cursor": {
          "ref": "c4df4cbb-5b35-4c45-8a61-b11353ba5268",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "af1408be-713a-407d-b735-85a3152f5a87"
        },
        "item": {
          "id": "79f4f4dd-bd64-4388-8d24-35dbfc80d028",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "856ce927-3d49-41e4-87b0-3fb9ecd3f410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3440fe2e-ff6a-49c2-9807-6dd74b831132",
        "cursor": {
          "ref": "8a756830-96ef-4fbe-8e5d-9d5c42828710",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b15d8fdd-02c0-4ee9-9df9-3797b2667b1b"
        },
        "item": {
          "id": "3440fe2e-ff6a-49c2-9807-6dd74b831132",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "487d2cd5-c509-4399-8023-4ae489a3e6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b44bdc-6c1d-448a-84ef-466a42442036",
        "cursor": {
          "ref": "f6d0427b-9f1e-4d61-8d06-37bf939933b0",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0b192233-ee08-4005-9ee5-3eaf12bfdec1"
        },
        "item": {
          "id": "35b44bdc-6c1d-448a-84ef-466a42442036",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8227524c-3cac-4c98-a3f1-0807193534fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec32b54-3fb9-4795-a050-105d7bc37416",
        "cursor": {
          "ref": "817283b3-690c-4ea9-96ee-504613e58a91",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1d4ec323-75f1-4824-b48e-9de24590f447"
        },
        "item": {
          "id": "bec32b54-3fb9-4795-a050-105d7bc37416",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b538e610-7f75-4233-ac59-f1daf8eeb1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1691c97a-b0b3-48c6-af64-9bd12f5facf2",
        "cursor": {
          "ref": "61b319ea-05da-49cb-9770-bc1d1070f5ae",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "be95bb6c-4346-4c1e-a2dc-3fbee07d1cd6"
        },
        "item": {
          "id": "1691c97a-b0b3-48c6-af64-9bd12f5facf2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "057a893b-f335-4d52-8682-16b65b49fb02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945f301e-1ddc-4308-af8e-ae7ab4beefbf",
        "cursor": {
          "ref": "11649909-3772-4591-8aa1-a0a0e223d5b6",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "18b996ed-dde9-431c-9c3b-e30c66d21c5c"
        },
        "item": {
          "id": "945f301e-1ddc-4308-af8e-ae7ab4beefbf",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "59a74c18-adc2-4544-b189-f7afac409efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a47421ea-9d93-469b-9e93-928a4bc1b51d",
        "cursor": {
          "ref": "02a7c10c-fa0a-46b7-ad8e-071035893d83",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e5c99845-b8be-4c9d-bdb8-2b4d80189b7a"
        },
        "item": {
          "id": "a47421ea-9d93-469b-9e93-928a4bc1b51d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "636382dc-f03e-4ea5-b973-6db8d05fa78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a46c46a9-4977-476e-a2a2-f00cf0ade086",
        "cursor": {
          "ref": "0edd38cc-4869-4dc7-b466-d50b3e155bc2",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "33470b1e-9b25-4b24-92b6-c250482e5e93"
        },
        "item": {
          "id": "a46c46a9-4977-476e-a2a2-f00cf0ade086",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "cb5490b9-3006-4e4d-8552-1acda6553745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c0ea57-2f90-4920-9fe1-b522dbef5145",
        "cursor": {
          "ref": "dae04a66-51f3-4dc8-b135-1eeef76da0a8",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1b5ce7be-961b-4add-ac29-197bff0a9e6c"
        },
        "item": {
          "id": "06c0ea57-2f90-4920-9fe1-b522dbef5145",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "89f5d0f9-2ea3-4a28-95ca-75e627f3019a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53cd8df5-1da4-4e00-b486-07bd3afb74ba",
        "cursor": {
          "ref": "d196cd70-95cc-4c1b-9a44-6947952edfb6",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "9c1887aa-265b-4249-b972-fba90cdd4922"
        },
        "item": {
          "id": "53cd8df5-1da4-4e00-b486-07bd3afb74ba",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "ddf61b7a-ed2e-4dfa-add3-a53a3b7fce4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff13a6d-e54e-4f08-85c6-6d5e22166895",
        "cursor": {
          "ref": "017bac9f-e5f8-45e9-a0b3-e9336cf792e4",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "0bdf677d-c506-460a-87e3-23eba40b3b22"
        },
        "item": {
          "id": "dff13a6d-e54e-4f08-85c6-6d5e22166895",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0ed7b4e8-f0b9-4979-86d0-35020ed7f62d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbf6cc1-67b6-427e-8c1a-c2cd77df45ae",
        "cursor": {
          "ref": "bf4d6ca3-c574-4585-ac70-02603d8e0492",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "73e7eb63-a2a0-4521-b9cb-efe116e896b7"
        },
        "item": {
          "id": "afbf6cc1-67b6-427e-8c1a-c2cd77df45ae",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "45e40b1d-3679-43c5-b6de-84ad528bee03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17cd72dc-80c9-49c6-aac0-8a6ad18718bf",
        "cursor": {
          "ref": "4981d868-bdd3-4122-8bd6-ec6cabce46bc",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "6895fb8b-7462-4145-9550-1204d738b90f"
        },
        "item": {
          "id": "17cd72dc-80c9-49c6-aac0-8a6ad18718bf",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2a68d0c2-a2b5-4d34-a141-e1d037a17924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01d4ea81-b7a9-44b4-b8d3-0aa7e3aecc01",
        "cursor": {
          "ref": "0f8410ae-cde8-4a6f-b267-83b67103f74d",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a2820e80-5c83-4473-b7ff-e8d2536c723f"
        },
        "item": {
          "id": "01d4ea81-b7a9-44b4-b8d3-0aa7e3aecc01",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "37f6eb5b-c267-450a-9321-059042f906bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "571fa214-6471-4a16-9570-04824ce86516",
        "cursor": {
          "ref": "be4bfd7d-133c-4af2-9d2e-d2a8ed3325c6",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4a1d2c03-9568-4ab6-a35b-22e45ca5fa2a"
        },
        "item": {
          "id": "571fa214-6471-4a16-9570-04824ce86516",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "2a4474ca-cfe6-42c7-86d8-bacd1eb9922d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480631cb-beab-4421-bc2b-291b07541ff9",
        "cursor": {
          "ref": "fc44b211-f9f5-4a0a-9d21-1a77c1b8f9b4",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2a005fd1-7cf6-4e96-9802-d541626e7fbe"
        },
        "item": {
          "id": "480631cb-beab-4421-bc2b-291b07541ff9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ba65192e-56cc-4352-b825-fc4a8302e9f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d5bbd4-7c65-4086-b4fd-60dd1e673af2",
        "cursor": {
          "ref": "2a7f31d1-3f74-428e-b89d-8d140b1fce30",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4b255fa3-90df-4e1e-9fdb-ecec46f1fba0"
        },
        "item": {
          "id": "d5d5bbd4-7c65-4086-b4fd-60dd1e673af2",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "cbf30126-788d-490b-b6cd-22ddfd477b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e519db-7d8c-46a3-959d-551de824d209",
        "cursor": {
          "ref": "9d972b85-b43f-439a-8906-df1b23c8ee72",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "aa179e45-83c0-4b9c-be87-34f5e0a92a95"
        },
        "item": {
          "id": "46e519db-7d8c-46a3-959d-551de824d209",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ae46ae3b-8abb-474b-b19f-d574afbff9ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbdfe2f-60fb-4a2a-ba1e-3624c4f831d4",
        "cursor": {
          "ref": "46f61af3-2bed-4e97-8740-9986fee699ff",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "ef75d19d-7cf0-4c2a-b03b-b0069033299a"
        },
        "item": {
          "id": "4fbdfe2f-60fb-4a2a-ba1e-3624c4f831d4",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "19f12114-3cec-4e81-890e-7b5d98e18fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "647bbec7-13af-436b-a37c-78e1fe0bf70d",
        "cursor": {
          "ref": "ed360cf6-a300-476e-a3ee-194b0941a2b3",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0a0190aa-7bb7-4c0b-911e-eb701a2cbae6"
        },
        "item": {
          "id": "647bbec7-13af-436b-a37c-78e1fe0bf70d",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4a58f450-3870-49c2-bb6f-d60c56ed7145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f359f436-192e-4ee0-848d-66867ea8e465",
        "cursor": {
          "ref": "0c3c3584-bc12-4b96-ae96-06fc3d139b4b",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ce2a1939-5c8d-4602-b148-dce6be50a807"
        },
        "item": {
          "id": "f359f436-192e-4ee0-848d-66867ea8e465",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "6df1af5a-12e6-42aa-b870-bdebabfcec16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47965e9-8f28-4d38-a91f-c1461566b637",
        "cursor": {
          "ref": "84f9ee9b-5ad9-4493-836a-5d518d18aa85",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "916ce190-0fa6-44dd-ab81-e59797214fe6"
        },
        "item": {
          "id": "b47965e9-8f28-4d38-a91f-c1461566b637",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ca4f5284-0e05-492d-bcd2-202df81983f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec0bfa5-901f-4b40-897e-05e44f9c4413",
        "cursor": {
          "ref": "41e29c82-3f77-471d-827c-9a1f7973e602",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "41af8ed4-bf55-4002-80c2-162e471a1d5a"
        },
        "item": {
          "id": "3ec0bfa5-901f-4b40-897e-05e44f9c4413",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bc8a2f5e-3ded-444f-8720-bbd91b9e66f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c80a3c-965f-4b6f-82c2-7d630cdf4cf1",
        "cursor": {
          "ref": "908782da-1120-492a-a3f7-a267a8dedb3d",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "09c1f85d-11c7-436d-b5c4-fb7f19e4fcb5"
        },
        "item": {
          "id": "c2c80a3c-965f-4b6f-82c2-7d630cdf4cf1",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8fa7e1c3-6889-4526-bb9a-dc08c50d483a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dea54e8-0835-446d-8d08-981521698b85",
        "cursor": {
          "ref": "7bad62de-e0f9-4941-a12b-670c1a02d850",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "286a05b5-044a-4976-9b68-7de85d182853"
        },
        "item": {
          "id": "0dea54e8-0835-446d-8d08-981521698b85",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4f31a48f-dd03-4f09-8d78-a17ccafabad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f7ab66-03f6-4229-8214-63624770feaa",
        "cursor": {
          "ref": "82c414a3-6fb8-45b0-a9a3-f1a4658921c6",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b1b9d88a-a1ca-42e7-9699-581213ed8d73"
        },
        "item": {
          "id": "d6f7ab66-03f6-4229-8214-63624770feaa",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "3cbf7c98-bda9-4de9-b795-8f0dcfda1c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be72c97d-c2ea-4458-8fa2-78e3fc86ae05",
        "cursor": {
          "ref": "af693d16-6dc2-4ad5-a2a9-d200fa19817c",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "367ff444-9a3d-41be-a469-1e7581e2cb11"
        },
        "item": {
          "id": "be72c97d-c2ea-4458-8fa2-78e3fc86ae05",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e68f7273-a7cb-44da-9753-88af811eced1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26deb58c-07be-4e4c-8932-260b3b00e002",
        "cursor": {
          "ref": "e90fccf3-fb50-4ce3-aa7d-0ed248556cbf",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7f143d38-2cc1-43ff-bbd9-f9f93a05dfd3"
        },
        "item": {
          "id": "26deb58c-07be-4e4c-8932-260b3b00e002",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "4ce029e7-b4b8-4ff3-a0bc-67965f1491e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b5cd0c-0255-4925-a1bf-75b1252a0cc8",
        "cursor": {
          "ref": "d54b863f-eedf-4754-b90d-9c544ef429fa",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "287e410a-a063-4b25-8777-6ec4caa66548"
        },
        "item": {
          "id": "f6b5cd0c-0255-4925-a1bf-75b1252a0cc8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "74fc1a5f-9991-4677-b29d-5464221502fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a28cee4-0c4b-4a20-a5d6-013be2c42263",
        "cursor": {
          "ref": "6cce8424-f528-4806-a146-a41b51013d7a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "6e80e026-43fc-4873-8c8a-b300aaa12cd2"
        },
        "item": {
          "id": "3a28cee4-0c4b-4a20-a5d6-013be2c42263",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "6d8b4fae-2d75-4bc8-8128-b5211d1c22b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc42ac1-aa13-430b-a44c-e978698c2231",
        "cursor": {
          "ref": "487d9e17-0b84-405f-b5bb-7c42487a03c8",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "293c1e4d-be4b-4b3f-9af2-c7c594860fb9"
        },
        "item": {
          "id": "0cc42ac1-aa13-430b-a44c-e978698c2231",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "48e15aed-6a87-4f21-8f6f-3cb8fed768cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cbebe7-b0b2-47e4-bc57-d0d140bad936",
        "cursor": {
          "ref": "0094f8f4-16dd-4188-bc92-ce5197b9bb92",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "9f522fda-a61b-403f-a57d-c8b134a0906d"
        },
        "item": {
          "id": "a1cbebe7-b0b2-47e4-bc57-d0d140bad936",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "fbab740c-856a-4b1f-8f3c-48f58d55b357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 147,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ff27b0-3b55-4541-9272-d29154078043",
        "cursor": {
          "ref": "08d4052c-94f4-4660-8f74-3ce310793baa",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "6d85f218-3603-4666-bc51-d3f5eb6905bc"
        },
        "item": {
          "id": "44ff27b0-3b55-4541-9272-d29154078043",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b09eb16a-6341-4f5b-b33f-5200f1a9c8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72987e7-7182-459b-9eea-9a91f4d054d7",
        "cursor": {
          "ref": "b7049f25-a7ef-42ed-9dfe-a65e9dc8c545",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "e248b005-4dc2-4994-b8d2-08154e8b11c1"
        },
        "item": {
          "id": "a72987e7-7182-459b-9eea-9a91f4d054d7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ec209ddc-ebe3-46dc-9186-da69beadb42d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8dac26-58ce-49df-af3a-036c734ef977",
        "cursor": {
          "ref": "68a0f7e5-e005-44a5-b87e-413cfed6008a",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "927a0058-3b93-4e67-88d7-73b337c7a78c"
        },
        "item": {
          "id": "0a8dac26-58ce-49df-af3a-036c734ef977",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3e054f19-5204-49d5-b5e0-3f63705e8343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba844ac3-f44f-41af-a614-cc2be657ff25",
        "cursor": {
          "ref": "8cfb45c7-1354-4184-8acb-9faf609bacfe",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "45be11d6-12ea-43f4-8300-f509f77a5a0c"
        },
        "item": {
          "id": "ba844ac3-f44f-41af-a614-cc2be657ff25",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a1ad50fc-dc18-469b-a0ac-c3d7b3d4f82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a87f64-97dc-49f3-b3ce-27da4647b81d",
        "cursor": {
          "ref": "51ba10cb-23b4-4029-a126-cf6b7a09213e",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9a736285-8500-4342-8dc2-1e929cbe83af"
        },
        "item": {
          "id": "20a87f64-97dc-49f3-b3ce-27da4647b81d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c6a3df07-8c82-40c6-b52f-26b660481a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24e6fc04-391f-48c4-b59d-68220ebab73d",
        "cursor": {
          "ref": "f2ccfb7f-307d-405b-9d21-507b948be3d8",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d1cd71c7-f143-4b91-96aa-89d058b97a10"
        },
        "item": {
          "id": "24e6fc04-391f-48c4-b59d-68220ebab73d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a9c6161b-3018-43c0-9391-97e264d7743c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffba47c-f02b-4c4e-843a-e7695a36e99c",
        "cursor": {
          "ref": "b074ee8f-8062-417e-aafd-c30c523f256e",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b56e1f75-f0b5-4e99-bb91-e16cf4efcd52"
        },
        "item": {
          "id": "fffba47c-f02b-4c4e-843a-e7695a36e99c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "891dda3a-5184-4a08-abfb-74e0eb03109c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f672f604-ed7b-485e-a1fe-4af3b1e90ecd",
        "cursor": {
          "ref": "91430d4a-090c-4992-bac7-73a9e9b08d06",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6c35577c-68bf-4922-92f5-1e919eee7247"
        },
        "item": {
          "id": "f672f604-ed7b-485e-a1fe-4af3b1e90ecd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "60a37ed3-a94c-4a24-b3ce-0d3737566c8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab99cfc0-6e04-4ad1-814e-bcc7ab557913",
        "cursor": {
          "ref": "3430eff8-d43b-4fd0-80fe-21a0e297a49e",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "80128572-e4df-416c-9140-3c4ffbc438e3"
        },
        "item": {
          "id": "ab99cfc0-6e04-4ad1-814e-bcc7ab557913",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "50726b90-6c07-4c32-8f44-d07ed5b9c840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd0d1bd7-5ac3-4f75-b380-3acf3e79f91a",
        "cursor": {
          "ref": "93767037-f4a7-4301-8f07-5d9288a8932b",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e97cc2f6-5fff-4b70-abce-20e94b6c789e"
        },
        "item": {
          "id": "bd0d1bd7-5ac3-4f75-b380-3acf3e79f91a",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ec49e658-ca45-4cf2-9a11-3d1de74d83c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf3ab4f-9b91-43e7-a139-bfb58859d305",
        "cursor": {
          "ref": "4de9d04d-02ff-4427-b2a4-c4275eba48fc",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "bdcaca52-3874-45f7-b857-26ae1d7f33dd"
        },
        "item": {
          "id": "4bf3ab4f-9b91-43e7-a139-bfb58859d305",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d172510a-80de-480c-9a31-81740feb7d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf6c65d-83a9-49f9-8e21-220d12f8690c",
        "cursor": {
          "ref": "5c85a587-f2e9-42d4-96f0-4e171c6b568f",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9e1efdd8-8ac0-47e2-bec5-2ad82f447d5d"
        },
        "item": {
          "id": "7cf6c65d-83a9-49f9-8e21-220d12f8690c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3713835f-7391-40f8-ad64-cf84405aa15b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "383ad7ba-58d5-435e-b70c-bcf3aa7da1e0",
        "cursor": {
          "ref": "945d6c61-cbe8-4372-8260-1b3211e41dbe",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e690e384-348e-452c-b0fa-87502e62fdad"
        },
        "item": {
          "id": "383ad7ba-58d5-435e-b70c-bcf3aa7da1e0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "16b91388-e6ce-4c07-be30-b2a275976f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43068cac-292f-4b67-92db-f682046cdfda",
        "cursor": {
          "ref": "449a9fea-43f4-413f-97b7-612270369a3e",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "b62ad550-206f-490e-8080-3cea90a3d523"
        },
        "item": {
          "id": "43068cac-292f-4b67-92db-f682046cdfda",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "fa4b0215-ac8e-4ce5-bb94-44c222d44d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c56ae9-3842-45b6-ab32-9a1a9b997ee0",
        "cursor": {
          "ref": "d31f7ed0-ddbc-4aeb-aa9f-628de66b1c3c",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e6092a6f-daa2-4058-b1b9-60627a13440b"
        },
        "item": {
          "id": "96c56ae9-3842-45b6-ab32-9a1a9b997ee0",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5f4a2d74-3e5a-479e-b3b7-ea37a222a218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb04f0e2-900e-49ae-9088-a4bf9d91e6e0",
        "cursor": {
          "ref": "c5e0e834-1d17-4230-92e6-cd2280ff1ee3",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0318d92d-e71e-4852-b79b-9b5f98c7750c"
        },
        "item": {
          "id": "fb04f0e2-900e-49ae-9088-a4bf9d91e6e0",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "b5d3ccae-dda3-4c50-bdbc-eee880301f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf91b82c-d9c1-4f43-a332-ffe4c305e370",
        "cursor": {
          "ref": "ee1ad683-22c4-4dfc-b9fb-8764337fece5",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6ff2ceb2-1a3b-4f15-a844-cb576e4f8310"
        },
        "item": {
          "id": "cf91b82c-d9c1-4f43-a332-ffe4c305e370",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "666afb17-4b57-4c2c-9c19-e426ab4f5e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6428f344-05a6-4abd-86da-0a15d7a6fe7f",
        "cursor": {
          "ref": "23751b64-8e33-4d4b-8ff4-3af78918acda",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "565b5bba-a306-4626-8803-f518ef0defa7"
        },
        "item": {
          "id": "6428f344-05a6-4abd-86da-0a15d7a6fe7f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "03a4511d-c5e5-4bcc-8421-0550d8d31f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2954c6-c8b2-4535-8f98-ecba2aa5e466",
        "cursor": {
          "ref": "dbc21574-68ff-4eba-85f7-12570248a00d",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c32c34fa-8706-4f8d-b1d2-c943ef90bbb7"
        },
        "item": {
          "id": "3e2954c6-c8b2-4535-8f98-ecba2aa5e466",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "4371ef6d-77cd-416f-8b68-da0af322db6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c8c0ef-f12e-4b5d-a997-dd7c153df680",
        "cursor": {
          "ref": "69d6a2d9-b157-430e-9bd2-fd1b25030ca7",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "74d06948-422b-4764-bddb-ed99bafb4c20"
        },
        "item": {
          "id": "d1c8c0ef-f12e-4b5d-a997-dd7c153df680",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "6d15a2f3-d40f-44f6-b23c-eb8a2856c681",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7459662f-88f6-4ec0-8511-83603b2ede8c",
        "cursor": {
          "ref": "531a366b-3b18-4fea-8310-f3ddfa494202",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "bc3cb1ca-39e5-49ce-b8a0-9b4de366fe6d"
        },
        "item": {
          "id": "7459662f-88f6-4ec0-8511-83603b2ede8c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "73df2984-11bf-4cdc-95ab-ea5a09a2e2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63f2de0-b4b2-4a8b-ac05-7c6a2276c31f",
        "cursor": {
          "ref": "7e144d00-00dd-4100-869d-258100819ce8",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "145e7cb1-531e-434c-8725-99cd6bec026a"
        },
        "item": {
          "id": "c63f2de0-b4b2-4a8b-ac05-7c6a2276c31f",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ccfe35bd-078d-409e-a961-8c9edca58a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7fc6ce-b6bb-45e7-9fb5-b994c76387f2",
        "cursor": {
          "ref": "4d406818-f04e-4513-870c-9440a436f209",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "45ab1fe8-7393-4c38-9dfd-0ae0c23b3d67"
        },
        "item": {
          "id": "1a7fc6ce-b6bb-45e7-9fb5-b994c76387f2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "4e1c214d-d648-4e11-8a62-b281b2862431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b156917-7b10-42fb-82b0-c0fd09bcedf0",
        "cursor": {
          "ref": "fcdf226c-c042-4a7d-a5ac-9428f42e5b1f",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "b4b7c088-58bf-4dc3-9a71-23cb524fd604"
        },
        "item": {
          "id": "6b156917-7b10-42fb-82b0-c0fd09bcedf0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5db8d214-8482-4bef-8202-a0bcb367feba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "141d34d9-c68f-4ca8-a233-7f391ad6ea07",
        "cursor": {
          "ref": "625fc34a-55a0-43c2-bc71-c972319f41d9",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "cf68b8af-5691-46df-8cd1-21d6f91904c0"
        },
        "item": {
          "id": "141d34d9-c68f-4ca8-a233-7f391ad6ea07",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "8a355b23-6b2e-4349-b994-22cd999b77f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f58852a-fe3d-409e-8282-5ce20422dce5",
        "cursor": {
          "ref": "b667088e-8299-4d20-8858-a83d53f29d95",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "458c3382-043b-42e3-a1f1-794de602168e"
        },
        "item": {
          "id": "4f58852a-fe3d-409e-8282-5ce20422dce5",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b13de37b-c71c-4425-ac57-68c1460ca938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "330b8ada-63f4-4ba4-9a3d-b526c05304b2",
        "cursor": {
          "ref": "8d0fd3e5-b536-4b23-ac37-b8d13efe70b2",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "211e34dc-7236-495f-8af9-49501084315f"
        },
        "item": {
          "id": "330b8ada-63f4-4ba4-9a3d-b526c05304b2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "8061ee81-0f45-4c2c-8e30-3e6b3ffc8d1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c37869f-e5c6-47af-bbcc-b7a03106a481",
        "cursor": {
          "ref": "c58c1a3e-88de-4084-92fc-d231eee675a4",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c9023778-935d-42fa-8445-8f09babb80d3"
        },
        "item": {
          "id": "8c37869f-e5c6-47af-bbcc-b7a03106a481",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6de89212-3381-44f9-95a5-a7c67e7bd509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e385604-d7ca-4792-adae-db5eb6cd5431",
        "cursor": {
          "ref": "0301ffa9-f79e-4be8-bdfd-ff940220d0b4",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "eea8d38b-c046-4695-91a9-9213da9a5f5e"
        },
        "item": {
          "id": "4e385604-d7ca-4792-adae-db5eb6cd5431",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e2ed33aa-a700-4912-b9af-2a0e225e32af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78f238d6-f9df-48bf-8ef2-6fe6bbcb33ef",
        "cursor": {
          "ref": "bd7f7223-b2f7-4bf1-85e3-fed7f96ec06c",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "99e1b078-60c8-43cc-a42a-9be30ad8414e"
        },
        "item": {
          "id": "78f238d6-f9df-48bf-8ef2-6fe6bbcb33ef",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "98b116de-4ecd-4555-b107-aa6cd2a8857e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f7a9f97-18a3-4a3a-80cb-5a9a5a75ed05",
        "cursor": {
          "ref": "adbddbb5-3a75-47fa-add2-99d4b288a5f1",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ccdb34ca-dfc4-42c1-95b1-b6848fd36af9"
        },
        "item": {
          "id": "8f7a9f97-18a3-4a3a-80cb-5a9a5a75ed05",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "68964889-282f-4118-aa72-bb1cf7986d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b36ef89-e0fc-4d89-b528-24563bab4bbd",
        "cursor": {
          "ref": "b4040ef4-1d12-424c-94e6-6e1af6ed4bb1",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "43c2a303-267a-4204-a2af-e30ecf96eec3"
        },
        "item": {
          "id": "2b36ef89-e0fc-4d89-b528-24563bab4bbd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f1931d7d-cd96-4a2d-b259-86f04e52c92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd77b6ab-b118-46f0-84cb-dc10ca96145d",
        "cursor": {
          "ref": "700c232d-a52f-4ccd-8c7a-22437773a1ed",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8bc9d83c-4325-4e58-aa43-a7d3e7cb8ba1"
        },
        "item": {
          "id": "bd77b6ab-b118-46f0-84cb-dc10ca96145d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "e027d97e-5559-40da-9c50-ea1650b0ae49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19839cf1-5fae-42f9-9552-a1719060418d",
        "cursor": {
          "ref": "71c91329-cef1-4c3e-b08e-5b263fb5d995",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f65b3819-cdc4-4703-a062-ea52d6895e95"
        },
        "item": {
          "id": "19839cf1-5fae-42f9-9552-a1719060418d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6a099f24-ef2e-42b9-9683-0b80ed99c560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee8627c-ff27-44ea-925a-48ef3541b1f7",
        "cursor": {
          "ref": "b3c7ae2a-8d77-4321-bc19-3881c8ee3e3c",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e279e53e-f22b-4397-8b7f-a50833e9495c"
        },
        "item": {
          "id": "eee8627c-ff27-44ea-925a-48ef3541b1f7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "861908d3-46fb-49ab-b745-4c2a8f4de346",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b8e7b3c-c260-4708-bad6-a0b4dcac2bfe",
        "cursor": {
          "ref": "afc48c9e-6a90-43eb-a6cd-aec7a35f7452",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ddd0ac32-1643-4e26-8194-99075d8add67"
        },
        "item": {
          "id": "2b8e7b3c-c260-4708-bad6-a0b4dcac2bfe",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c0f28e03-fcf7-4db7-8c07-55b8ec51867f",
          "status": "OK",
          "code": 200,
          "responseTime": 72,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c54039e4-fe10-4499-9ade-b4a61b12741f",
        "cursor": {
          "ref": "5c516830-0716-4d40-9940-23b5bb162efa",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1c836aac-fc9b-4dfc-afbe-0f0a2c9a38d0"
        },
        "item": {
          "id": "c54039e4-fe10-4499-9ade-b4a61b12741f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "19133858-973b-4d1a-ade1-7778629a8a4d",
          "status": "OK",
          "code": 200,
          "responseTime": 2780,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87a32c3-1e4a-4059-8464-2b824ea079b8",
        "cursor": {
          "ref": "c3cd227f-5dae-4e5c-9022-5dc990a39258",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7b657e71-cee8-4607-8cbc-18e3c7f92407"
        },
        "item": {
          "id": "c87a32c3-1e4a-4059-8464-2b824ea079b8",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "ce08fc09-b53e-48b2-ae47-f82502ca7c75",
          "status": "OK",
          "code": 200,
          "responseTime": 2654,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad2eb5a-d671-4b75-a9e4-8ac1e5f22181",
        "cursor": {
          "ref": "9ece616a-5c7c-4637-a6c1-c17e2a3cf7fe",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ca0b35dd-8e33-401d-a6ff-db94e111d6df"
        },
        "item": {
          "id": "5ad2eb5a-d671-4b75-a9e4-8ac1e5f22181",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "55f16830-c42c-4234-a5a7-ebfaf2c98b84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad2eb5a-d671-4b75-a9e4-8ac1e5f22181",
        "cursor": {
          "ref": "9ece616a-5c7c-4637-a6c1-c17e2a3cf7fe",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ca0b35dd-8e33-401d-a6ff-db94e111d6df"
        },
        "item": {
          "id": "5ad2eb5a-d671-4b75-a9e4-8ac1e5f22181",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "55f16830-c42c-4234-a5a7-ebfaf2c98b84",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "134b76d2-3ffe-4d4a-bada-55bc0cc4b5a2",
        "cursor": {
          "ref": "45cfdf0b-b89a-40d6-9cd8-c44b60718e26",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "13ae86c4-d80f-4515-ba76-5a93d36a0087"
        },
        "item": {
          "id": "134b76d2-3ffe-4d4a-bada-55bc0cc4b5a2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7e4ae7d1-e069-40b9-a9b3-e8f29184526a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17fffe3-beb4-4f3d-9534-7040a5041cde",
        "cursor": {
          "ref": "f0f2e3f7-fd31-406d-9e09-6d532a94e7cb",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cebf46b4-d859-4bf9-8e26-c55218a7a6ab"
        },
        "item": {
          "id": "c17fffe3-beb4-4f3d-9534-7040a5041cde",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "492da1b9-6942-46ed-bf9c-49414933c580",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}