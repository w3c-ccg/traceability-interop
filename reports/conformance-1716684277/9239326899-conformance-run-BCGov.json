{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "535873f5-a98d-4301-8232-ff7e250ca6cd",
        "name": "Clear Cache",
        "item": [
          {
            "id": "bad09149-611c-4dbc-99d2-62322aea1546",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "47d29c10-912f-46a9-9f18-3defc4ee3508",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c4cbc854-4c6e-4496-94b8-af075b81e1fd"
                }
              }
            ]
          },
          {
            "id": "9f85ef77-6d6a-4e99-b86e-8e544deaf4b5",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "30bf8f9b-47a4-401b-b4f3-a811de5e69f1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eac8befd-877c-476a-8d42-b26deff3c609"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1ae8d894-f623-4069-9a02-2e9803271c91",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "2fca06e1-8598-4f9c-a587-7d33d6c927d2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "01badde0-3a30-4265-a881-4c921005d070",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fe65b434-8c13-4179-a1b0-0b824d7ef99b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ebc608b7-8499-4981-8126-e23610d08b6e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "515ef582-e5cf-4578-a471-00701ca979e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bf1e3d76-43ed-4185-b0a5-50580b29c74d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9662c1b2-b702-4127-b46a-02ea71724227",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac31421a-66f3-4e6a-b317-0aacab05a738"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f97fdf24-bdf3-4bf7-bbf9-80ada1988a0e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e9e71b67-6225-4044-b071-1d5c022d1fc3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc6e1afa-848a-4bb6-92c6-b2af0ac9f023",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2f7d8c9-213e-4ee0-b19b-b66a5a26dd7b"
            }
          }
        ]
      },
      {
        "id": "51e8011b-1818-4bc3-a29e-f9e93280182e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "86569fcc-6579-4e48-a0ae-85834b54c736",
            "name": "Negative Testing",
            "item": [
              {
                "id": "590ba3f2-27ef-43c5-aa24-3cc5f74d0014",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8fb52faa-189b-4e64-b57a-9e48e27b26f1",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9422d595-d26d-4d97-9909-89484228ce85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "031f4535-3c78-4f30-8a1e-b6ae89748ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5010a7-ea6e-4b9f-8948-a613c1af09c5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f45592-d9a4-4873-8357-be786fb5b022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6cb0e391-3c21-4fa4-8ef9-aa52ac775757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f30294-536f-4092-843e-5a4f1976618f",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42efa49b-365a-4262-860d-c7546867cb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b23afca8-306d-4647-b8eb-6a7c3a650ca7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ed033a06-a1fb-45b6-9579-c930ffa76697",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dfed55ae-ed82-495b-be0b-1bc098d3d51a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69ea171-d420-4ca3-ba21-5c8dd595dc2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c260c267-4670-4e2c-b847-6cb475f8af88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95ee107-c7fc-4097-bf25-a7cf68ba9833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e295968d-a96f-4d5d-bc04-b9797967b576"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7c600357-8b19-4e52-ad30-13ebaec388d2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e24e5d4e-63e8-4ae6-bd5a-aaf9ba5d3c6e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1e8c6dcf-3d9f-448f-9232-d022a6725449",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "b52d2073-e61b-49c1-b839-59a6d2387774"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f51ddbd1-135c-41a5-b4e6-ca4a0bbbd29d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "949e7bdd-e3b1-492c-ab85-e3c4738cbc01"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dbfd23c9-605c-4743-be8a-d13314856681",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ca773a2-1e10-4157-a125-cabc21b6679f"
            }
          }
        ]
      },
      {
        "id": "6f5fca64-d1a2-474f-b2d0-d48c43aebe2a",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "93e8e40f-9abf-4c62-8ea5-188c9aa63305",
            "name": "Negative Testing",
            "item": [
              {
                "id": "09047b89-43eb-43b2-9694-7fe0dff1aedf",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "3ff18ed2-46a7-4248-b78b-21d9387e14ec",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece11919-dcc4-4061-8ecf-2ffc5148a313",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c104161f-8ac3-451b-a0f7-e1835257a1d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e839f64-d6b2-47c0-b684-b0101e829f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4463ebd7-ec77-4b9d-be00-07ba63c744ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0df9d03-f7c3-4f6f-8331-b3c2a5bbbbd6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48feaae-e846-4e49-a477-ee201eb763b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1951c658-1f5e-4d8d-87ac-0a08af28c369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a8f8d5e-ee2d-46f7-9366-db9b8004a305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc5cb890-9db8-4ee1-8425-c66e8a953fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f000ca-6bbf-4a11-a470-5204c424523f",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd42e7f7-2471-4cbf-9f23-080cbe29e8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "100aac71-f672-4348-8a75-7752c5f6c386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75a7714-d473-4a2d-9537-54f578ae3386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "350e4580-e137-4fda-8a01-6dc35a347b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9c08c2-64c1-4698-94c3-a75614112765",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb55cfb-06d3-40d3-bcf2-3502cc2e755a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2b82c26-00b1-49d5-9b0a-92839bc673c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be4db07-3279-4908-aa40-3c5ca392633e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05785026-3c64-4b14-82c4-7cbd8bb21b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9877e696-7c5f-4a6b-ab68-8286336d5bc6",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a08b1e2f-23be-4d98-9caa-e96472df0c53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89e43216-fc71-4fec-8292-782f84cbb69e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bdd5db5-8044-47a8-931b-11e5c5fb4381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79adbc0b-81fb-4933-8658-2d2d2ef118cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ad04ad-e3d7-471d-8364-505906a31500",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37174fa9-c138-4fc8-bb1c-3395b053f1c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e2479e-58ce-4135-8556-51a7f9d732bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb044df-a401-414c-bae6-cb53dab62db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f8ad620-8fbd-4e88-baa2-de3d65027097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17aa1af6-0efd-411e-87be-7429812c546b",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bce1bc3-b6a6-499a-9c57-1a9a514ae20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "631b767d-b845-49e2-8270-af58a93d610a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc184ec-3612-425c-92f0-0cf578ca2501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f2d63c5-9202-42f8-8106-11cb1206b237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7cbae00-527b-462c-8712-8d8269061dcd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcefc93-7174-475f-a1b7-1e2ca6ab5d7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f09c89d-434a-436e-ba7c-c76f87bb38c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4a1bf1-657a-4286-a360-7e562cf183b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "faf3848b-d512-4c1b-957b-ec3fb0bcd033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea51a31d-fdeb-4516-9137-7ee597e17167",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac93e9e-9ea9-45fc-91a5-4c2bdbb9bbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b4d6a53-dc88-4a13-96bb-5551ccd32d91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfe7e6b-ebde-4d31-aa2b-482209679b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa71c40d-0edb-43d7-a057-cc6fe4ab0964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b04e5daa-7ebe-4f9d-bc94-1b2fea041b5a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a57068-6e38-4ec1-8b3b-50e5f4e910ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "535ef59d-70da-4258-ac31-4f1352ac8ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2c79cc-0f1e-4ddf-9e71-f73242092d5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46785a82-8e3e-4f9c-abf4-f6cfc1f79ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbccddf8-efbd-4ab6-9dad-6377a308207a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfc26953-857b-4dc1-980d-e02452f47614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4acaf350-c1f2-46f0-88cd-a42d8d6e459c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0536ab7-aa2a-410c-80fb-970baf0428bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b5daf41-d051-4a60-a2fd-5d2efdfe4323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195edeaf-9116-47ab-8ef4-6e7eb1e59184",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ecaa76-418e-4982-9272-aca838f63879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e957b81f-2ec4-45e1-bbda-103a042ce3fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949da00f-1ab2-40b7-bd6a-303422109db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6b0b6ac8-4b54-481a-836c-18f339a92df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa94dac-f9fc-44d8-a285-752610f95423",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c89f4b-609d-4913-9a3b-46a2411d9cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9c2dafd-2e3a-4dbf-862f-f1836f8ddd0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30abd47-cac0-4ece-8053-819f01ae74ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a088d440-aab2-44a5-a230-740a0b051977"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6718456f-5184-422c-8909-a795c68f20a6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715c52a9-d593-4823-adb8-bb0badf8b475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "809c3991-55ac-4945-8140-b28c1961a3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aee5197-aaa8-471b-94dc-b974afa14b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abf551d8-01bd-468c-bc8f-3aca8911fe33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c978a36c-b782-467d-9767-c1e3dfc2bf25",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c803e94-c068-40b8-b6d5-ccfed341ece3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c068391-4e7d-403b-a5de-96cf9dc583c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f8c827-5903-4a67-a2c6-7f5f0032c363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6399ef6a-1dbe-4246-8fcb-0573dd177f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da47e1de-a876-4f68-8482-a83c49a46bb6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc23808d-1764-4416-94ec-a0f53a1978d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e13b7d15-2250-4e25-aa14-d88c14999bce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2fb0a2-b17a-4268-a63e-6c94396f7fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "508fcf79-c4c9-4b30-89e6-88fe6f18beae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d875ac-7b04-4fad-b00e-f9d00dd26d48",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65a7329a-700c-40fb-9528-3545f7ac4199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528abb55-f54c-4819-9a4d-f75069d80a6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abdcb5bd-0a9a-4ef8-997a-d73b26327075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f15f8ff-7279-463a-bee6-9ebbdabca571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a74708-c813-43cf-bc51-3a5b3e632f66",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bae5595-c5cc-4242-8e7a-81f918f7a4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348a8718-97b6-4e77-9159-bb6893a5ec66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dba7bb5-28f4-4018-ae27-3bd373382600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "887c41ce-0946-45f5-ad83-0cfb5efd9f82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db4b300-2dee-43e4-9d9a-7c6f8349d8df",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9465e0-f573-4ec5-b951-e398144dfe68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2047e44c-b4f9-464e-a89b-476dfdeb9407"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ebb932-b9f4-416b-b87b-e35fd26deb7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b032ed-f444-4305-8d8d-b474eb481838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1de0b2c-af03-4e73-8231-8cc12b1200d5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f89d5e66-99b6-4c89-8995-59618f152767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83ff1494-fdc1-428a-88fb-73422cb392ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2e12ad-e459-4c1b-87fa-6efa7416961c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d16fcf13-8141-4e6e-9a65-53027611322e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2431c34e-24a8-4001-b4a1-b2a239ac1bc5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996301e1-d41c-4ddd-b621-e0b8357d9e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6991482-31e9-4edb-8551-4783277b53ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b84092-0952-4291-a43a-de6e04125d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45ad2ff7-d173-41ef-8d06-db56f69e2c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d352ea7-9967-4170-8ed2-d9a729740990",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76fcfba7-74cb-4487-8b57-8ce54968a479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b89094de-1488-4234-be67-8c07679e9394"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f371e5d-293a-4495-99cc-babe738fe77c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "15d3ad26-c4c8-4a6e-b303-27ccc3d458a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fcef263-08c9-46cf-aa9d-9a95a1d50574",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "635f8851-c226-43d5-ae7b-aadb5477ac97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4949530f-8bdc-473d-b262-a77f769d7f8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa6a7d3-a8b9-4f3f-a10e-5d974502714c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "740a48fa-ea2a-4306-9b44-6e36e108effe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9388fe70-5417-4211-ac3c-6109b05b28fd",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4ebc65-9a30-4f13-b826-38662b1d8eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81189291-a47d-4c2f-b0fa-28aabcae2f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56e09bee-d6e7-44d6-ade7-ac8962301926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "24cbb954-a6da-499d-89a3-b8ffc4db4536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bb558c-2d44-4948-99ab-c144604ec525",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5557a29-495e-4b9b-bf59-d0b0d677a20d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15a2c24d-b4ce-47ad-9391-0c648e2651ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae01f91-f188-47e6-98dd-4b0a3f26bc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f284bc50-c376-494f-a03a-893e0e7fd594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6291f73f-bbf7-4d90-98f9-ec40013fe819",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e1b264f-c442-4720-af7c-7eb75452666a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29ff89e3-b1d2-4d28-ae10-22ac0c009684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61d96ee-9b86-47ec-b1eb-895a3e70d74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "342c4def-4675-46ac-821e-467302b1279c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493c5304-69a0-4c89-8aff-cc18171077b3",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0520a105-e52c-457a-855a-3967fafab2e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "755d3190-d803-4c1f-87b0-54dd62d6cdea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc9e4645-8eb3-44fa-9073-5538951b440c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e4d54a-346d-4747-919e-b7ac7d42b854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4514e98d-f107-4f2e-9318-13c323a7a862",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49488d52-23aa-458f-a57e-f7d36f12ea9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ed716e-d750-48dc-b058-b04a80c6bd2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87aead0-54cd-4243-8b58-37fb5b7a5f66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "24dcf4c0-12e5-469f-8cc5-a1cad3b2d5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbd5448-b171-4ca2-bc59-df36991d5a88",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac878cc7-d4dc-467b-8087-f59906803368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47da1dc8-79ba-4014-b20d-7273134045ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2142423c-b744-4057-8940-9f14081b9459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e826bd67-5b0f-4cc0-8342-e1565bef7c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051b64aa-0ce9-46d6-b02e-57c00f4cc41c",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00101dd3-2616-4a57-a824-1a28170ed230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2ff1cb-48a3-44e8-a70b-b3be572d33fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83121273-3a9c-4f3b-a054-7defedb397d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e638cf04-0fb5-409d-89d1-c7f0f2d9d4e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd2249de-4cb0-4bdb-a4a9-19bb28d3f8c3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6e9e61-f99b-4ac9-ad36-a86f2d3faa3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080b4087-a3cc-48fe-83a6-7b1a81b22a45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "430b79ee-0b94-4e8d-892a-5a05e41e1d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a4c4915-236e-4879-b47b-33370a37832a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88d45187-2e63-4037-9228-cffb077bbd67",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b591e626-29d9-4b54-8ba4-8f0770e5960b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f42ecac-f65f-4d61-8548-c1b5af7726f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "615740af-a59b-41b0-a390-d75091f93a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e4741e5-1463-4fac-8e99-105e6634c38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86234728-5a96-4032-8030-acc319951100",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c482e7fe-e3db-4c7c-a7c4-1d511c954601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3b5c32-f647-4d67-add2-4e533c637990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608c3c94-82dc-419f-bc3a-6cdeca54a7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "88c2c515-28d1-42db-9f13-3c986fe84b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de300f04-8fb9-4c4a-80bb-e55408bbee9a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed461941-32bb-46ed-8915-77e647f001e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36673f79-7f8c-4cc4-bb54-78d3faf4fed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df04ea6-0dfc-46f1-8a31-caee29c97d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3c12537-a55d-4436-82a2-6843a2d30054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60136509-bec1-448e-98d1-a4e7fa7bfebc",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04ad879f-fc5c-4473-800d-96a2e3b84d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da3017fc-5ac4-425b-beea-4357bf0fcf28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6034ec-cb8e-44a6-8246-54f75a1a52d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d72b735b-485d-490e-9db9-efb6297c74c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62aea286-25e1-49ff-be0f-c78dc8fa24e5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca081697-4249-44f4-9468-56996e6996d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d6f903e8-2e5f-4372-b8d2-2637036ae1b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc6b9525-7018-4bf7-8956-f0bf99ddf8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ade0f59-4b2c-4026-a3ca-40a0cd997b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f097b79-e41c-417e-8315-5ed123ab0354",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562cc4d4-6fa5-4afc-bb83-8920298edfd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d6c3f59-9e0e-4f7b-ad7e-d4d7a8c941a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b384b062-a7ef-4c90-8cfa-93d25685d942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0bde7b06-27d4-4ebb-ae0e-be7ddb1ebb06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc20545-a413-4b8e-a3a6-0b07c2be9c1d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f1a515-d6e2-4a49-a33b-0c7a7b4df937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1ebe70-7d7e-4b41-b2c8-d891bfcbbd07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a682d19-c21f-4318-a667-4d6746854048",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "15ac2ad8-8de1-45d4-a9a7-e62a609b3028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca14d60-47e9-4c6a-b65f-b3f36a0a7ce4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67380d8a-09fa-4aaf-b0d7-68776a1c218c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec5e7f96-3a9b-4f37-ac26-46b69cf513f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9d813d2-bfd9-4ff8-a119-7dbb923d704f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1026bc2-71f4-418d-9a7c-8a87a195d1c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232aeb70-9c26-487e-9f43-7097c87a99fd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b7fb69-cb4e-4b24-a5b4-1429af356203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d523f914-0d01-4b05-ab03-1465a2c07219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3fe435-4cac-4d67-bbae-c05c97d0795f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3baa07ac-c30d-480f-a424-2541ada35ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b0d3aa-caf6-46b4-aa9e-18ea7c7c7346",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa978fe2-c96d-4f48-80d4-3a80c4db100e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e8b5dd-5ed6-4a0f-8a02-ab98596b9219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b492906-e4e4-417a-939d-2905923decba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6379efc-16cf-4f1e-bc4b-df2cd6655fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c34c854-5010-4ba3-8d43-38c92d83a763",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbecd76-dcce-4507-aaf1-9bd491ecdad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0a8461-f162-4163-8093-bf46072c0170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35818cd5-a166-489f-8d00-40a7ec9d439e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "18feab4a-17f8-4e28-8afd-c2cdc080c424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "739f26a7-92fc-4181-8ab6-d31c23dc767a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70911036-01e9-4ea6-891d-e2cda11df91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d8a1945-c248-4397-8ef6-5230a760c3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "948dc2fb-d86f-44cf-8c9f-dd48579ef1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff94167d-84b0-418c-8413-1afa6ca0e29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8327b9-7f34-4e26-9b7b-3cc8e95801c4",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eaa354d-de33-4e05-9ee6-eb31238fe6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "142ea529-bc0c-4781-93b1-03e9f23b01d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498131f6-535d-4196-85f4-14de889ba4ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a47ac6c-f858-452f-a20f-f1ae5b8e741d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2bb4d5-2cd1-4ab4-a931-1363cea01c26",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc2704b8-01bb-4615-9453-0dd531082e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0bf451b-be6b-49a6-b980-95544e60925a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1e9c20e-f7f2-4edd-a5d3-9ff14a4af9eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "78943cca-f059-4531-a7dd-8c2ac478df17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cde277-61e9-412b-bbe0-33fc4398332e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c989ec6-4773-4322-9d2c-52e0b2f7dfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1fa55c-0b7f-45b0-a8d7-42c27911efaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10abafa9-766f-43f7-b61c-2df0828ac9ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1c8430b-0b31-471a-b4f8-ae0b5c847a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f2a6bc-70a0-4e30-b37a-5839bdc1079e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "008c2c73-c329-4c8c-a3e2-7cf6fa638ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36cb6d17-f0ee-400a-902a-7422b6b039bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bcad05-ae5c-4c92-93bb-84fdf8044cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a13ed56-5dbe-41a4-bc22-3fa6ba15eeec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93a1879-0d95-4137-b7a9-b821c4f3edab",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de41b031-fe13-4feb-a776-8741628e791c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d01bf7b-683d-4422-a513-0d5024b4e723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e45c49ea-7914-4a0e-8a31-0dc6f8fa12f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a76f1b33-f125-4979-9e47-55c7416e2c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1743ae03-e630-40ea-8919-6a6722621836",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b6ed338-dd96-4e23-b6ae-99952623e9b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f1637b-bb34-4f6c-b38c-9ca8e2239866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1af8b5-87d5-4dee-812e-6bef5fa8bdd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "089b3224-c6fb-4422-b7e7-713703108558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d4d020-5ebd-4328-8bfe-448eb1653622",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23de474d-748c-42fc-b669-38df4dd233f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03028be-ad07-431b-b23a-42edd2348dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985c708d-a9db-495c-8d79-e29167b641e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4bece392-872b-4528-b395-49454c8d6478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36a3448b-904b-4022-a41f-bbea3b88620e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e77fbdc-d14d-42bf-8755-56f2f9c9e6d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e093f3d5-b64c-4082-b15c-2a2198d80230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6dc1449-b178-4340-84fc-1260adafc191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "54e5fe81-f445-4894-93bf-c6f54f463700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db92c5b0-f1e0-4fb1-b5dc-45f2de00a511",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116ca43e-4203-47a8-8006-4df9071d5430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed79ce4a-e375-4510-9381-4fea280c296a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf1a0ff-c6a8-4c39-9973-fdf2afe5f83a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dab5d18e-d1b3-42fd-b767-ffadb6ca1f00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f90655bc-a2d9-4db1-be45-c1331674fe89",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5a9b56-ea68-4923-9054-bf6850ced84d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3cc974-c04d-4f18-9338-fa4e196add36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca821378-e025-4791-8d51-f23e4c46594f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ceef1b9-fa60-4e89-81fc-55d9aff06e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bd190b-fa1b-49c9-beea-0a436ce51c86",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf995f2f-594a-4eb0-9073-090f9f011baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a488574-fd4b-4910-804e-8d8469d85076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c2113c-0571-4ddf-bd93-32bd3d015dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "20cd1002-ccc9-42d9-96cf-72a92617e1fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6472b453-b579-43d0-aa51-31f055f4fefb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a781520-7c3c-4551-a38f-3f27aac074e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db99ab2-0d60-4b7f-8095-9fe766ad18be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd1013b-b8bd-4229-b8a0-1349782ff1f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77130b74-d3d0-4d53-b198-c1686229b97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f6c1773-e78b-4e9d-82a2-5b0f8f168831",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988a5c62-a3ad-4bde-852c-e2a988ae3542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a7a715-69f2-4dd4-bebe-7689942e248d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6228685b-10b8-4eee-a214-8195ed5203f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5f45f0e1-f1fa-44b9-ac37-10f776ce66a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d34df7-568f-47d8-9c45-619e8966bdda",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccfcf18-20f8-4d21-b27e-0154469e1bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f2f190-1d21-4e5f-b49e-d9adcfaf75dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c73ee2d-4942-4501-a76b-f5b9e13ae422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c00032f-339f-40ee-aa8e-6e02182aaf06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace5546f-0d17-4f86-b1c2-281dc0af6ec6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a539264-75d0-44fe-8515-e150852205f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b1aa95-986b-42c9-bbe1-d78bf069f961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b7ab82-3b2b-4bff-94f3-a629d94d5109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e053d4fb-9663-49ca-9d7d-8a17f8de36a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e439018-abb8-4ba1-a630-747f56f480ec",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1905ea-5a2a-4f68-ad48-450310d3abbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc82437-63c9-4ba9-bd53-be8ab1411984"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cf410d-60cd-4bcf-91c5-63d220e87c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d59ea07-0d7d-484a-9afd-e503c5aa7824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762a1f5b-b406-4e81-9b41-aeddff225936",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d2c761c-f710-4e7b-baf2-af463138e425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9725e5be-19ba-4b0a-9b37-4392a8a9caed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe82f245-fd0c-4765-987e-fba538ccb4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a26886-657f-4f5b-92a4-4f194ec5acf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "360f289d-3ef2-46f7-8cb3-1bec8309872d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba8d248-4074-4581-a3a0-25145700a778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c30598-421f-4dfa-928c-2925fb31a6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "decea2eb-4af8-4db7-96d0-e72ee368267a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "59dff4cf-3c51-450b-9673-4bdd1e81c5c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dff0ed10-4ef7-47ad-9a24-af7d6564a917",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f8af82-af9b-4865-8fda-4b735a74ff7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03521a37-e620-4eae-9d73-72ce142e4479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eaba9c0-794b-4b77-a46c-fe1b2a439d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "40158805-301c-4c86-b0e6-d276ac2fe49f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c68b17-8da4-447e-94ce-f6e6f3f5c54c",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82a651d2-c8c6-4042-bd9c-7cdeef4b80e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408c58d2-497b-4e3f-810e-dcbf6431a5b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c01d2f35-535d-4eb9-ac3f-d36b28cb7030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cebac23-4e35-472d-962e-21c56b3c62a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09328169-3c5f-4de9-b165-09ed14e48ab5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc878b6-8df5-4cd5-8832-652767e10e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "400ff77a-c9ae-4dc8-b312-4cbef6a92c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1dc7d2-5150-4341-b3e3-16d872822b95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b702da2-bbcb-40ef-a141-6117ed58650a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ede0ee3-c823-4ae3-8bfa-f2958980a033",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8d9171-faad-4e21-8224-c50945d47087",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6387ef4-f1a1-42c4-967a-f59614940c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d6644dd-1d01-42df-a61a-6217cae47885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ccc9a3-e830-45cf-8aa3-ccb3085ca71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac4437f1-588e-413e-a198-10135ca56e23",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd4c864-e37c-44d3-9842-80b9144a8799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd470e45-689f-4e0b-9394-e68720b57f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6975613-2f6a-40dc-a7bd-b3b7116ebb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86532e0f-f7ea-486c-9bcd-7579cbea196d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2719f69-aeb3-4e03-9ef4-9e29432571ab",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0656a8e0-f562-4a3d-b404-aa776c29ae1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c7e0ad6-6f0d-4530-b48d-4818792f27c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61ba04be-23a4-4925-be2f-9efd674d5bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b60e594e-23f7-4e2b-b233-d7fef9b4a37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f005854-d666-4236-a8b5-b33a97a58723",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a5382c-26a0-4a8c-8028-7f3be6d9801b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8bb5ad2-abe7-4e1b-a58a-0cfa9af98328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92269836-5abf-4950-91a0-c883937f2701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "596ec8b8-22b9-4a23-ad9b-a60807d903f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d780dd68-70cc-48c2-9f83-ba103643e257",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2460db1b-bd2b-4f97-9f23-84fe333f013c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c196e5f-ee90-45f8-825b-aefb03ffb5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af5147f-23a2-437d-9050-c5b525369cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "24cffd16-7350-4086-b2c2-4169b36e89e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8ad8c42-f8b4-4d8f-9af7-a4e48b75e1cc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c725d55b-e592-4679-8e87-3743f87ab833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50155cf-d4f1-4bf5-a2e1-2e79f7db41b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc16d1f-26eb-41f0-8899-112f253dd271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec91a583-04e8-448b-be02-7563219b621f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3073f60-c50b-4bdc-91e4-98f2240e124e",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b13b37-9eac-4eac-94f6-38a7cf5d01cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6163e16-c871-4ca5-8f2a-f476eaad5a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "571d1f1c-6418-41c6-8236-7d44dc47fbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51f35d6a-b047-4cb0-9412-a525fda37cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccdaf0a3-7e2c-49f4-9dd6-616c44047683",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fe3d38-085b-49a9-b54d-a789b894b5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "938dad0a-5a1a-4170-9f1f-3ecc0e42f9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "784f3247-085a-4db1-8a56-c663195ce542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2c2428c-078f-4a34-a2aa-3f87fc9d626a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9887a2ba-f440-49b0-92a1-7d5ec4ef476a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e8b93c-eb09-48f1-adfd-a04620430deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7347fcf6-e64a-4587-a44a-f00f3d40c3fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3183035-42c5-46e7-90fd-7574fb788fa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9fefe4d0-be20-48c6-a4b5-a65a32371515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab4ca2fc-1118-48ea-975c-fce6799ce57a",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3be19a60-986f-490a-a7fd-162a2424e67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9074d65c-bb55-4109-9d2f-04c5d7418df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230852c4-ef44-41fd-8160-bd4a85bc55d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9c4187ec-de32-4f75-b7d9-bb9c9aa57f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb21a3b1-713e-43aa-9eee-aba7e38ecd72",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c90fa5fc-4dc8-41d1-8c2c-e5d46c9fe0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e3351bf-6bee-4d6b-8f71-75b2fde88d2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6034d8c2-4a17-4b8f-856b-067cdc0e1fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "466ab8af-767f-4541-9c7f-3a7a6531aeff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225aba72-5132-4f61-89a3-c2aa44b6e6a7",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0433fd1a-7ff0-4000-9b26-9676b58e3083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10bbac77-822b-482c-b1bf-1c0156010089"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51706d8d-cfae-4f58-b1f1-ca7b8beab047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ce6faa6-ee6d-4b61-a254-f4c70ba90837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d348f225-fe34-44c2-a3d1-1b5bd8bf1da2",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be9377a-bd86-49c3-ba14-a2f7a5148bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67735dd-20ca-47dd-90f1-d9b77f92a11d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b866661e-b14f-4dfc-b4e9-b7b2ff785eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d90065af-c922-4551-bd95-f048d6df9338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49c4f6a-63ad-42bc-837c-56497d3675ef",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa12502-ea2d-4652-b37a-12b24c4fd507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d0545bd-abb8-405b-ab14-8063731bb024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc4d54ed-4305-455a-bd20-cc4e57d02d14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58e6e041-263e-47a7-b7f7-ca1eaaa24035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90942090-a116-4202-a803-13f9ef95f9c3",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4139dda9-1ecd-4ee2-bc7a-5a72ed7809ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5640f97-4fb9-4be9-92e7-1705986b8db8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "863a4755-8c61-48fb-b1cf-447ff09cbf68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ed42be-d5b6-40bc-8c6d-4722dfc1240b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c85f6d-7cc4-4c02-9bb3-084d3e936b30",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ae6796-573b-403f-bc8d-d7b4405c760d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68f4ff15-a314-4cc6-a69c-4d11dc6898d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f5a5412-87f1-4561-ae47-24c40ee7b1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4d822f33-58e8-4646-bbce-780d8c629c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9335a34-36f3-4ac8-be04-06abb3f92ac1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5e5102-c110-4c62-88c8-7742afd81b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e2245c7-7078-4597-8bc8-e932f96fd102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b53b6c6c-04a9-43b3-85b6-b80e3224b328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "60d023d5-f058-42a9-af00-f8ff09715e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854211f1-6e7b-4e92-aa2e-081ec7244802",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0024b296-c8c5-4401-a72c-8e6c5a3b5bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ab4c7f-e418-4432-8afa-fbb35b7d1cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a442e2ea-8f45-4d80-a98f-c7ad28f608a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8637b676-05e9-4035-ab06-6af357e3536e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df6d4427-1890-4375-8647-d08a75b8092e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd75e6b-3d20-42af-a49c-436090ae48ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b64d2ed7-74f3-465e-8cbc-9b5412399097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940268d2-95aa-48f4-bf7e-8fbb61083618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22c71ae3-64e2-4b22-bcd3-4ca5cb25610e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854f5bf7-1884-4831-b83e-3bbfcaa67423",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2e4913-3adf-4223-8a26-10e0932601a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9695371a-97f0-4edc-a44e-f2923041f9cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7712f368-786e-40b5-89f6-2c18b35262b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43e4c61c-ced1-4848-b129-86313224bbb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde58355-316f-4134-8934-0dcb435aa07a",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f5f839-4324-453c-a107-93099b19575a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cbade9f-b0f9-4a85-91de-7f0be61826e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8fb04c-82de-4745-9adb-8fc6c8ab3cab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "32676e55-b0e4-4e33-8f69-e828c644a983"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23756376-9c11-4dae-91cc-41ee5c9ee2da",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8726eab8-9870-46fe-8452-69bfffef0a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2244b5-1b52-4316-8f8e-b68bc3b9b01a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06404e58-7fcb-4daf-b7fd-08447385f070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5344340-b84c-4e83-811f-20195b229bfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70db52b-4ac6-4402-9c25-67d0be328570",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846f1c6f-6353-4fd9-9dad-55a95baa22be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e025a3b0-0d74-4e0e-b105-771a91cc74ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31a96f0-6eb0-4af4-af67-3cfce032ed5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3755e24-e271-4758-b9a1-487645f188e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9498788-217f-4951-86e2-9083fb535045",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5975331a-123e-41c5-b9ab-3df567922fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bf368d7-5408-4141-9d77-533fe349d218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c488eed1-dad8-41f2-ae9c-c7fa19850da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0abe19-c70c-4027-83e3-308bb680062d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f490dd4-a4e8-4fdd-be37-3b764b63ea94",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76ba4a6-dad2-4356-8c87-a02a83939ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8022daca-4737-48eb-b43c-0f090832174c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09ff05e6-b681-4a18-b842-1d28783acd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "08f1f808-9c05-4a6d-9b3f-6baec606015b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd36758-d3a1-4b2f-b36e-f709fb58d669",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20d8034d-0abb-499e-8f32-a92e2dd41cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a37f2c4-d5cb-4825-a4e1-46f7d1e2af82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bf3b290-4444-4c99-a0d1-c4f6e225119d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "036ed500-69e7-42e2-aa23-24508a0db74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d120c63-9b93-4b8f-917d-a83e1d98913e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4648ec4-cae6-41d8-8208-d840d75f6314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e1ec9ae-354c-4699-a8ec-5e70e736fa67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed05a516-1c06-41d4-9e44-dab3da770edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae9c1b14-c529-4cdc-83ba-e0b94abca5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fbf0713-7290-4014-ac03-94af9216bc7b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135a94e4-09db-4f6b-8f28-1512b766b87e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c552b697-f7f8-4d08-b362-d64c8fae6fa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34eb1e74-dd54-4044-bbd7-f876b9d52b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c961f0e1-9c1c-44ff-b9ea-20175a37f033"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "140a8eb8-c2e6-4a38-aed7-421b6d2aa982",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f99606c3-8b9d-454d-9873-99d5560cb7dd",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41e8d6d-db51-4ada-92c5-7250cc65b04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "424b8401-99e1-47a6-8508-a8ea9ded3787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a900f108-b354-4b7c-bd83-dd199636f67f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a225b07-84db-423b-a2e0-f1292784861f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "afb2a181-e7f4-4547-a3c6-764d2a081e36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a9c7a2d-8c35-425d-9492-d6fe61c3d919"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf283934-a393-48e6-a4a7-3bbf8c5a3bfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c5d7413-f002-4a6a-89a1-a107d6bc1616"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "95d9d8b1-11f1-42af-a560-1b1bc629468e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5786a4de-9341-4922-b48b-59913f577158"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6a2d0ffc-32db-4ceb-92d6-41c3e567de8f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fd3b82ec-5816-4875-9d77-8965277ed55e"
                }
              }
            ]
          },
          {
            "id": "daebcf34-6cee-49e3-b36a-e3dccfec4f00",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bd8ed0f6-0a29-498f-9e40-f72caae95b73",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "33b76dcc-ddbd-496f-9c08-6f6d6c2e5ac2",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca56d73b-3bb1-4672-98e8-c226a6b67801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "506a7ad2-a873-456a-bb51-daeb2a0873ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aeefcc7-f3ae-4d68-ba1f-b6f8c22ac67e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bba1b408-5d44-4672-a18d-89644c4308ed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "536015cc-cd34-44de-b7ea-1412cf97496b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e659b356-502c-44ef-a3c6-e72e7909f13d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2bc0ae3-8daf-49f4-8ea7-1f80cba48698"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f18cac67-a297-477a-9360-ee4d69e61ad4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "64d48364-8423-4a63-8d06-623d94492f1d"
                    }
                  }
                ]
              },
              {
                "id": "53fbbd9b-193c-457d-ad06-6889a5459e8d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9234010c-70cf-47e0-a967-814e99f796cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a678c79-9b25-4fe1-bb1d-4286e8e2c7be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "22c4bc71-9106-47b5-bf46-968dde5197a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a2c442df-2466-4ae7-abe0-5710b96289c4"
                    }
                  }
                ]
              },
              {
                "id": "e69a1336-17e3-4175-af6e-cc82f61d1abc",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b1f4e4b-894c-40c3-91b0-b88ae092f568",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f3b1b2b-fb3d-43c9-9321-7cf51b0da63d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4074572b-206b-42c8-8bb8-c1524bab8d14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8748aecc-63e5-45ca-aa4c-69c30d5f5bd6"
                    }
                  }
                ]
              },
              {
                "id": "e452afa9-a3e4-4281-bc2a-039242e4538e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bd8c390-3e48-4ffd-aff4-c9ae721794b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2f523a04-224b-4178-a433-ae973e7045f5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da181f47-18b2-499d-86be-48a2ce765721",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1ff08eec-e102-447e-9341-5d2a1e4ed766"
                    }
                  }
                ]
              },
              {
                "id": "604b1095-26c1-4abc-b499-600281564b82",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "39fc47da-3558-4c3a-aa90-628f3f6ab6c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57cf8924-cd3f-4ed3-9cfc-101a5c16638c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a6c3e2cb-e4b5-4861-aaf4-88538c7b3662",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0e06388a-9846-4611-8b38-7878499485f1"
                    }
                  }
                ]
              },
              {
                "id": "b86fdb9c-ea9a-49b8-9990-2cf7b971ec52",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70601026-ee35-40eb-ad24-56ec15047dcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8db967d3-a3b9-4983-ac53-315e6eefd537"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11319d12-5a7b-4f56-9c71-dae5e68903fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5dc67ba3-ad92-43d9-b0d6-4328280d9ad1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a619cb8b-01ea-4a90-bcf6-a992af70fe26",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9adcd68d-e2b8-4a22-bd7b-2a6669543ff0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5322a48c-91e7-4749-9169-e2ab996359cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "17f3ec65-d00e-4e20-82d0-b16dcaf6849b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7fd6c3c1-c4ff-4856-95f8-8f2408085a15",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "712ebcac-733e-4a53-b295-b4cab75493b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b6628f02-f3b7-4408-a55a-b47c39b670c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "91e75c3f-b02c-4ad8-8e42-b3cec264cc3a"
            }
          }
        ]
      },
      {
        "id": "8df00c23-277e-4e5c-8846-b10fe74f3c1b",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "15b104d2-767b-4967-84fe-d1500e3d4d1c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9d332f84-6ae4-4fde-93c6-e9d8c8c28a33",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6f75624a-230f-448c-adb6-ed113f50bc73",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "765b1fec-8c39-4f54-a32a-659033e4343c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87cef554-83ac-4938-9b76-6bb1ad9569a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a9d99b-9ddf-4493-8ed1-30a67faebe95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "24882f4a-ae47-48d7-9f45-83a98589cf72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965e215c-74e0-431c-9d42-ea40bd6eec3b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a96e7e-f64a-4dbe-8f28-c7c80169219f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "489281bd-f6e9-46dd-859f-cba84381f4b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb3eace-7232-4dbb-a77a-5cb155595258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e870158-ba2a-44d6-b47d-cd11a07f6e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e30043c-638a-433a-a0c7-aaf54ef817d9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6303b253-08c2-49a6-9945-dcb4cd71d3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1509ad29-bcd0-4033-a44f-705896d9e036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a18355a-bacf-4960-9b3d-b1907dec18db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d45beaa-d133-4504-b374-f7fb08395e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63639e97-f767-43fb-b261-09457749376a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52b7feff-1043-4e97-bad5-cfc5f5fc0957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87670019-5313-4a4a-b91b-114b72183d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c6bb0c-2f62-45ed-bc56-1f4bb96c37e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eb4bd98-4478-47ac-acb2-7e5016f87a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7031912-79ef-48b6-a81c-3237c895ccf7",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e612c69-8a4e-484f-bfe9-17a12922873c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bfee843-f161-42ad-acf7-d5c47a284fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcc3711-5f74-4ef0-b4f1-598f628576ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f040530-8101-4222-a29c-87d641a815e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbab4eb2-04c8-472c-8e76-bc192f616e5b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b539e29-a02c-4392-b865-28961c788906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55f953f-bb38-4672-a78d-1cf778de4fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef362fda-fbe5-4e41-856b-a4d77e91d04b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26d4ab8b-c059-4c25-bbc2-12be86941c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f57033-1478-4bdd-b29f-8e1fcef73dab",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b199031-5103-4e48-9916-dad2929fc606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16a41c4-e245-4051-8e69-ec47933f2eae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8beda863-e5a9-4a64-9dd3-6aa1e20b9a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "459328c6-acaa-4671-9d70-f1484c33b92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56290535-370b-4dda-8f58-6b28d6832f22",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "badb425d-a5c7-45aa-99b0-614492e3a979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea52e020-7264-45f8-924d-6814ed54c273"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c04ed6eb-7f4c-45f3-8433-7cd8b01aa57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5d3659e-d71d-439c-948e-efe118ff16e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eef87ab-c1b5-4f88-b8b7-7d95508c619d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1fb28e-11f4-4762-9388-fe7ddc5416b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f737082-9163-4a03-a143-ca569f706ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcaf27c-2f3d-4faf-8659-5d201b3124bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9bb5417-51b0-411e-ade3-1b5a1f152a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ffbb345-4741-40c1-8758-a4328d181307",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a9d781-e112-4de6-8fee-2a6bfe104d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd4efbf9-6c01-49a0-8ddb-eebc662aa462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6827d1cb-2e9d-4e47-a612-c033807387ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29785e19-6781-45ed-8efa-7d0ccde52a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa7d3bc-a711-44f4-b35f-6b4991e30a10",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f33023-2b71-48aa-adcc-5e8db5f1ba6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92484ce-5773-4889-886d-77756022163b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb94a96-f9a9-4a15-8ccc-a580f47cdf44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "12c8512e-53c4-4332-8ead-4628091b46d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c6ef1f-7774-40e5-8b19-2b8a00705dce",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91abd17d-75c5-4f8e-b06e-fe2ef4e37821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c409eff5-7e30-4074-9d64-faf521042f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac417036-b982-4151-a452-fb16992b4180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9d510e-11f7-4851-9989-6f25468bda60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cdf8edf-0c2d-40ac-be42-bc7c6fa2a769",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "295ff518-62f4-41a5-bf44-b211a9f7125d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a56b1ff1-ca5c-47c6-81cf-18eaad0ce2d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4a88cb-c325-48c5-97cb-22934f4cff45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b4fd05d-3046-4dc0-b54a-e5cbb13bb96e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c7f6c3-ce0a-4fd1-b0e4-19cb613d4be9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9875f9-b8e7-4b7f-bbad-205e19a76c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8036d75-eeca-4883-a6b2-c46674b9855e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c07cf78-e486-4388-b98f-0efa6ad3e2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5072b746-bf93-4cfc-be5c-c0b4a3b72f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62dc884d-1712-4e0a-a5cc-b62dd1391835",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70417b78-46af-4d5f-8ca9-cbe34a9196dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa67b0f0-079a-46e7-b166-a0adb46bcbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06bb31dd-a323-4a1d-bbce-c46117439037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2ec93e8-1867-4088-bbf4-4f835dd74874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c629ac-7515-4dbf-b93c-35c333fa2f30",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc409f80-08d0-47e6-9d1e-5a630739aa63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f6595a-b583-460d-8911-5c20b3f60e2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6df85527-c77a-41dc-8a16-bc34c9b972b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "89197b53-8ace-4efc-affa-51525f689809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb11b82c-0674-43a7-bc72-32d56595a481",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34be6c1-9078-4f87-8769-57ff76a2080f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4240371-79b7-4fe9-951c-e3d1539fdc3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de7ee070-0470-4e08-9a10-77ebc449afc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3ad73c-a358-4fe1-85f3-e2b23715ad04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9793409e-30ec-444a-96d0-c3100801be9f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77042464-52b4-491d-aa73-0d0c0ec387e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2085e02f-7ec0-4ede-9c6b-9019d2d41f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "711e0523-8d9d-4bf3-baa8-c6d0b383db22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3291b474-8869-4231-8947-cfde6dbfa371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd0cadf-054c-4309-9099-6ae325349784",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5335578-3b7b-4468-b31e-39fc0610d3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc9645a-5b9f-4c8b-b605-2b21d9950c67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d467776a-0172-4ba4-9f8c-034269ad229d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "368f6865-6fc4-413c-94a7-a9da1c16ea2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5abf1c2-a8d4-4bae-bac9-190d6232c4ea",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e5d0e7-de14-49f9-bce5-43372a2c6cf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a511d80-35f6-47cb-853a-4a02a504bdae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72aa3a1a-4fe1-409c-935e-aeae8196d7e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1bbfb2-9fea-4e34-90b9-5b45a6d9d415"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3714186f-2362-4448-970b-12a14987fb61",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79a9d1d-b8b6-4c41-a730-76a3bdf88bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be07d99-2de2-4554-aa40-ce9854f52529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72119545-5084-49d5-85f2-35fdd793eb7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e51d2c6-f8c2-4e05-a120-cce29be022d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bd9ebc-1315-451e-9112-633870ed6458",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d3c2b4-cf75-44de-9085-b4463ab3e1af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5ffec8a-a6d3-48e7-b4a3-79203914f408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914f86e8-f2b6-4edf-a81c-c106a5b74785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b781a569-698e-4c70-bae3-e179a759f4b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a223af-2583-4c5b-b756-19c5d99e39f4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "953bd4a4-8b9c-448d-a780-9b66c9da0b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9faa3cc8-9bbf-46aa-91f1-633f480ded11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d536fbf4-68e6-4afb-a924-9c92dac274ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dca9dad2-a9d5-40da-8520-def36ecd7234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d4ff5a-e794-482b-aa85-b34120a3e4b5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7844017d-1680-4b1d-86cf-e2fe8a5e1d1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbcfc9a3-db99-47d1-a4b5-3732672978fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97dc1296-8241-4e8f-9899-149ef5d4796c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd54b74-1549-4fa4-afc7-ccc0e77d3a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8980a446-3436-46dc-80f6-abc44fac7803",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6112c46b-5107-43e0-9505-c69d504427d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bdff1a3-f9d2-4f27-a724-ae8647905bd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90789a5f-cff6-4297-bcc0-e638e0b46416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "22eda9c1-2f20-4c3b-b2e1-7ed9444d4e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c646f2e1-07ce-4e9e-ac90-9a580624dc63",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45717691-c777-4e0c-ad54-7d12aafe7a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "725afe61-7502-4800-bea9-48fe75d9db36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3e1a8a-8496-444c-b3e1-cc713f07d2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e7b60f-08c0-478e-a574-50b0f274139a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c5d01e-249c-4f25-9bac-c3d4603f9b02",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bb4e44-8ee6-4028-9739-02915de4506c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e817cc9e-c4b9-41db-a939-2fb35493bc60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313b3494-5df7-4ac1-bd1f-87e2082314fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "94f1d280-3899-453b-8ba4-da5fc7999de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2087d24-c6fe-4ea5-aff4-416dd8d3eae7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b58be3e-3d29-49c8-9ba8-57926893ffab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5870e04f-3e65-426a-89d5-f6878ebfa52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ee9824-ceb4-4527-9d08-341e8704e20a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e430551-a7c8-45c8-9a60-38bff5c9600a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eb36afa-5646-4dec-87f7-84b2b2e129da",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85801a0-c52a-4325-b94e-b4e9b6146113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad6d26f-51cd-4399-8fa2-229e0518d8f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0c9bdc-3325-44ee-8598-73821c7d8fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5e2c2b-6393-4546-916e-61a79f21d44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d71ae1-0ef1-42c7-93ac-b4dcdeaebe38",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5c3e63-c542-43c6-a1d8-1176e58b3fcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cfdf239-e0bf-4982-9f6d-288b47ec4ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab221a2-f36e-49b7-8fc4-16cc690202cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ddb6cfc4-85b4-45b8-a3f2-e4bb073e3aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7307dd47-4a82-4378-8677-0a4490d51218",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af51908-7a8a-4d9e-b36b-9feeddf3aace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d360eab-79d0-4e59-ac3c-6a415d9ff4ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02041605-d90f-43b9-8dfc-c7159f29acfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02ed0b4b-91cb-4069-a43a-e20109102368"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952c5080-97f7-41ee-801d-134cad9ca912",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a3b370-6a6a-44f4-a99a-4e34e3155768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ed3da6-5982-4b0b-9105-604c10ca8dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca640334-b10a-4387-aaab-d0e6df556104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ca6171b-9298-49a9-ba40-4843d85dc93b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b326ad0-adc8-4d2e-9958-beb61c12ba21",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3e7940-bbe7-4740-8edc-2177f4c1e789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6e02e16-e251-47d6-8d26-af908f68e7b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfdab21d-145a-4696-bb72-51e2da407f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5825c906-5480-4886-b71f-2460d80fad3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3a7e30-b474-4e6f-a998-41c09ac87692",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8aa5f75-d77a-44e1-bab9-3dfd083962bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b93b8268-071a-4dc1-a1b6-69372e2469e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "791c8a81-9b20-48e8-aede-73ea5a7b16b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab68ffd-a501-449c-ad1a-5bb5a97cb607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ad71ad-90eb-4e49-bcc8-e7c3357b9967",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae073974-c537-4aa1-a403-1defcb5abf14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3976fa36-15b7-4727-8749-62ca0478ffa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c6891ef-cf0f-4c16-86fc-f84bca6e579b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa24efa6-3693-466e-9c4e-36b754a067ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4220de0-19e4-4066-89a9-5492e0529424",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b53b52-8081-4c2c-b58d-122fa7c132d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3736f6e4-34b1-406c-a04f-861c557a0523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9882ff62-646a-46ac-82db-dc72106ff6b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49d6d5e9-dd3c-4d09-9dd1-bf56b0ebda39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c232aa26-d4ff-4712-a364-50d5f6a43aba",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9842b4f6-4fe1-4fc8-980c-93d3d077bf18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b812e9f5-9086-4822-a398-f7cba9d1fb6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c72054-77cc-4673-b0df-cb5899c47213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd28a6c-5d43-4cdf-b680-319602d05096"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0d2b9aa2-96eb-431d-865c-6bf80b172304",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "683d7a27-75e8-4144-a680-c39671d5e3d0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e34c9755-8220-473e-9243-8334972b9572",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9582674a-546d-4523-9099-ff5d7def8027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0d7c1fb-48e0-488d-a671-1acfc11de9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20c8c547-961b-4984-b002-e70e8db2993f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b68df97d-2de7-4f12-a485-189069547962",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "845f5b66-9815-4964-af05-84c94a66fdf9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ead4ad3-91e9-46ad-9b34-e54625b6eec8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70f42ede-a6ca-48ec-93f8-2c276d2e7c13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7a98f783-d3a7-4621-bd82-b272a51259d6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a4c4b399-4156-45cb-a054-7c1b3ad2aa1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00dc93c7-c806-4d64-a1c9-e5100f6db46c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9c464744-28da-4368-8ee1-5b97916d58f4"
            }
          }
        ]
      },
      {
        "id": "f79daa59-a397-464f-8b17-2810a4388079",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "eb0d594a-1c59-47a4-b1a1-e87b2db7e7fb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9052ff5a-7c30-4fab-ab55-b9af61ff684c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8dc7a282-f8a5-4f38-bb8b-3c76bfd9b133",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e8456c-54d7-406e-ba63-439e957341cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37286543-3984-46c6-8db8-40b9e36c7dc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64cbebf1-847f-42bb-9e68-498fb44c51f6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1f45ed1-0c18-495b-8808-a884f541deb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41369b6d-0869-4190-ad6d-68c7286f5940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e273a950-b325-43dc-8952-9b65a2afa70c",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fce132a2-80d5-4dd9-87d4-18a265c7dcca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37332e10-0c8d-4529-9f89-8cb82f715815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2084920-fbc5-43f0-a890-226d6a4ff427",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "492129e0-1703-4e58-a106-77fbe2907e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e9f60a9-f71d-4301-9e9f-a01100ad4ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba85405-4312-4467-a7b6-c0bddd600f8f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a636b331-f882-42ea-aeaf-1fe26fee5c41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4464841-46d1-46b0-9df8-a4bb9bc135ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66432eff-3366-4fbc-a8f4-3b39dc2a66fa",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e75e69b-48ce-41c8-ae4c-4bd79a5b9784",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab60df5-38ef-4bdb-816a-760f042649fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88c3dd9-36d9-4c24-a0a6-b698d20bcbba",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2134187f-806d-48c5-9a0a-34af17d31ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa6fafb0-c145-40a5-bfd6-ccbb5cf94354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81f1608-089b-4c40-8f4f-95f742ea97df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d8c1d0-cd07-428d-a78f-c95d9271dce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a87f2b-99a5-48ae-ae41-bb8308925fe8",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6b20f4-9329-40dd-aa76-ed6a8bf9f9ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00579a0c-3c4c-4068-9aef-4fdbe0992c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc43d518-00e9-45ac-95cc-533c8a39a698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6286dc81-370d-44c2-8be6-e6cb67b5a2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c6fb7d4-00b1-4e44-87d6-c8df37e9b36f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98711eba-e6fd-4c33-8e7e-69914ec9ff83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83a8d66f-a709-4f5c-b779-dd3426ce215d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d893f7c0-d42c-4445-b66f-8840e6374a3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3da6097-0c96-47c5-a9cd-9ddb55d2f945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89416df-0ce6-4efc-bc26-01ac3079f2d0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f3f1c5f-e768-414b-b6f1-9dac721eb44e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1b368d8-f724-4052-afa7-b3eae4ebe7d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f66c83b-9811-4afa-9535-385685b1b466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a4a32e-6138-4e87-8b23-b826ecbeff99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "866aa13b-2efc-41f0-bd72-0c8572f8d901",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e50be0-5954-4224-8682-77c269f33a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84c8a13e-84e7-4f5f-823c-9c163e3abb61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f875da-28de-431e-9978-8af252123ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "062777b6-fc51-4a1e-880e-79e3a8b8f91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1fa2179-024f-492a-a667-197f34d8d2c1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f91585-9809-4d63-bede-9500735090fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22d15dd6-9932-4c22-9b48-b149ce184e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "876ef795-1dcf-4de5-9247-360045e53ee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbb9feaa-4157-42b8-bc09-4ff8fd04eb6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08a4688-f9f9-4a38-9fc9-2b3875efe33d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbcce13-7e52-4a50-92a1-1d7b1d94755f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9719a280-6a90-4b8b-addd-552404590353"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78fe53a-1f78-47ae-bc8b-90b1fad87f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52417e65-82df-4c89-a3a9-aa20427a5af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f95170-75b7-4ac6-9ce6-02737cf31922",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55546396-e082-4994-aad3-7dc7d848c859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b07e08f3-565c-4070-ab1e-57c0b5b7e370"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ccef629-7e6a-4957-8bd5-2e0674e02b45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888ba840-3e14-4ec0-9c05-5c03bc72e00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8189e00b-7c93-47c7-a202-d4572faedac0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8f33e31-e110-45de-8eb9-6ad741180e6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf19b61e-ecd2-409c-a161-7d91294374b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aed8fcc-5048-4147-b7be-bfdfff3ee500",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f30c64-e440-46be-8c41-1c359c037bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90851f5c-3398-42bd-b061-385f9d341eab",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "672a34d2-0a00-43f6-b6c8-cfce531b3b6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91493872-307a-45cf-a6bf-4850decd79ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a6558e-c4ae-4e9e-a377-1279722f5435",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97dee131-860c-41ad-be30-dcf31a6566e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58d6afa0-b71b-4630-a966-e8eb6941a781",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bdb741-5678-4cce-ae7c-8d46573fab80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72d547ab-9605-41f0-a194-d6bd35a7f761"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b898d249-4757-417d-87f5-70aa626500c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76773662-bc48-4e04-9f77-c59f0f42d773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc9692a-6ea1-4a8b-b3dc-7e4b57780e3b",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343ca5ee-0d41-4f76-908d-f09bc530019d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "545441c7-f4fc-41c2-a20f-9b71f649d73c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c854b690-bbbf-4535-a0f9-5638ffe401ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ae00e7-d22e-467f-a166-dec25a7a2347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61268f76-cef7-4f89-8bb1-283ecbc9396f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af0dc023-3253-4bc3-8d74-24624f51dde1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23bcbc29-5909-4ea1-9a48-e62b140e7481"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf1b3fc-612a-498b-85bf-bc97606cc996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751c9071-98a4-4b40-a991-123235f25098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df34af9b-fdaf-45ee-96ac-999bb5668e72",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38843785-040d-4348-8dc1-d2130e40a1b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3714919c-b7e7-4ac3-8480-b1c3afe5a931"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2766732-104f-46b1-bcd2-d2eb390ce628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fcd50b-d785-4541-b687-0e0b51584b17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d10e8ba-c72f-4d9d-8553-fe1695c174b3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0335be75-3cc7-4166-8195-b5a61b646bca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a39145ab-d1e2-44e2-a346-2eff16635893"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64530a8e-5226-449a-ac90-7c6bea273ceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c685702b-c78d-483a-ace6-f20480346b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5645e5-83b2-4695-8a4e-621b46ca5eb2",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbdf1148-0578-405f-b529-0b5979798244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d5576f9-17bb-4599-8982-940ffca975a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9a6e73-d19b-4935-baf6-07b74eee092b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8377ab31-ec9e-4968-8793-1f443d41bbaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318c89ec-2596-429e-ba14-674b714f6225",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d534911-2950-4329-8f83-0b1af3155a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6ae9ed-8532-44b3-9b85-54f9ddc68973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3d12bc6-c64e-4b6b-bee4-ca52c8cdcf84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c288216-9667-4402-a058-45e46e32f9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34e5652b-efbe-4e67-9ecc-87bcf94ad988",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba8eaac-b4bb-4ed6-b583-5a3a8049e2c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6e24200-458b-485d-9d1b-02d676d20faa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b88e318-8978-4ed2-80e0-49e276757697",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4e3be8-d39d-4b9d-acbf-8ec58467b14a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ca9cb10-5c32-49f7-8b66-f89b89544a07",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a230be2f-bdbf-46f2-b2f2-b197bada4ac9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdf7b586-792d-482c-abb5-474ea6ae5aac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4d3b7c-251a-4a9a-a093-4e366edd299a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347bde24-0d9d-48fb-b590-da6667f0f198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8979379f-05af-474a-bdf1-e99a09bc2c27",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "679d6c1c-b061-447f-8105-403644843b14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49cf0b91-d941-46e2-84e7-8451f4731c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31902e6-b362-4e42-93fd-e94a560605a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41f6efa5-d132-47df-9f1a-4944cf3ede41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd52bb7-653b-49b5-ab82-1e6ef2d2fe3d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a0011b-c3dc-499d-884e-76adb2feffb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcbd2509-6ecd-42b0-a4a9-65bea8e80365"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a91b75-1c5c-4aa5-9f5a-69611048a247",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72c6f93c-ce63-4a94-9f17-2a51b36187c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3940895-11f2-48c3-898a-26a5cb9a6074",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270eff23-1bb7-432c-a259-fb7a1670e85a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6738d942-e241-4a5a-8b38-d20c5daa563b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1a7884-7352-4601-91c7-ad6ff755873e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8563dc49-e854-440d-9e54-4aa66693ea6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b725417-a57f-4b6b-8522-38c26b6273a6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faf42645-296a-431d-89b4-c32cc3ff545b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "128563bf-f35a-41b3-b254-eb8feac433c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7422ed-8cae-44fd-b509-6999b572fc9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aa6b573-a341-43f6-a88c-5c95cd09198c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be266efc-7b76-4a6c-90cc-7907f69b1f1a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cbe7fe5-02f9-4c36-ba7e-9c04f4140061",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2d5f6a8-1701-44ba-971e-1239fb231656"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7b305e-cc64-4d99-8097-a9d0d4a676d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2429886b-6087-4252-9872-fa34fda1f7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99553fb1-e167-4ec6-88f2-d718bb902e6e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe33d0e-60a7-4cd6-9219-0ea71a74d9c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c62d6151-238b-47f8-9974-b683ba412552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd5339b-bcd8-4173-853d-a9ef452fa998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0cc4aee-1633-49e0-8aa5-b9d8031a6195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b66e2d-b24e-4225-8455-7daa62710652",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13544cc0-ec52-4e2c-8dd2-61ca6714bbdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63531a77-aa7d-4b80-8722-095bf13c3726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8157c70f-0005-42af-acc1-eff64f236589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e84de687-a70d-49c6-a057-6141d235d54b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3174042-15f7-4460-9da1-7f39ec1663b8",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "061550dc-daf5-4218-8116-d4dc9cf6509c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1098ad5a-e9b4-4d2e-8b3b-9aa7bad8b7c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9869413-1c34-4cd5-a240-f0086be19b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b65388e-e804-41a0-ad32-0332ec013e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a36adf2c-c5c4-407f-9c64-69579655ece8",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630fcc96-1284-4776-aa50-0a8e10891cee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2de4bb9-cab4-4984-ae22-1f1941d523ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1251c87-f41b-4814-a60d-1c3155d6edd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c553cec-af5b-4169-bfcf-e2140e24ccc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2277e3c0-00aa-492c-bc8b-ce2d5e8183d0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378149cd-070c-4b33-ade2-4c0dcb758368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dc78ef4-fbd8-4744-ae14-9468d7dbc0ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e1a4ba-5135-4f15-ab81-8d58f4bdccb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f468177-ad90-4c83-8dd2-549ab67fcfad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56934959-25bd-47bd-8cf8-7a044d35c6ed",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4416f320-ae04-4496-9d74-62ceb1e9ed92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "345f2718-5d0c-470e-b67b-b11063f33f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b071c637-1288-4ebc-98a4-e652b1d35977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d8012a8-08cb-4cbd-89f0-7135e6c9bd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92adbda7-b23a-495a-a666-e5bde7c61087",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867e53bf-e71d-4b7d-8cf5-a731e85f807e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "571a90f9-7f1d-4ae6-a084-45d8dd62fd11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab9db0c-803e-4d06-947b-390d5aeaefd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d50d5b-27d6-4424-b90e-1c36119971a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3579425-beb4-4efc-8e77-fe3e4940c59c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369c6c3e-728c-4961-956c-96c18a3d656b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2f42f11-dc8c-41a6-bee0-2dcc01c17c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12643d1-1345-4815-aba3-cbccf0b16bb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69637cd-4780-48e0-b50e-9d0993aa5a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d169e061-8319-4f50-9e61-a09664345d77",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa960d4-48e8-457b-b9c5-42d8482d2b51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c5b241d-0c23-4567-b28e-be24419a3d61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "976b43d1-38b9-40e9-81df-a063294bd82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71728c52-d2bb-4fde-8954-cb89ae03097b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7202d2ff-22a0-4bb9-bb6c-1b5b8a571958",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7432a2de-807d-4114-a41c-885c1be430bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620ff938-eab9-41b5-97a1-941186b933bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c87945-678a-4ed7-acfb-c557387ee698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786c94fe-d540-4244-a039-b9815faac035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4b0ab0-e625-4d6d-a794-f6729b410675",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a07e632-2a76-46a7-a4e1-66ef89b35564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ec48a1-6b6c-48a3-80c3-75d50a1360ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a4ec32-308c-4968-973a-bbdbe65de1e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f572b83-17ec-4104-bac7-c984b490ef57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8189fcbc-8e6a-4050-865a-7bf9cec965f6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d09ca1a5-29c8-49bc-98d2-51b88a240141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3df0913-7b87-4150-98dc-a1d916d48747"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f765291-5f9f-4d35-9fd1-327444a5aadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f35abb74-2877-4c51-a297-882d65c44820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "164687eb-8cf4-422a-8b39-b3b67ac65629",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bfce811-ba44-44af-9439-550b9180f5b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40f7eac2-34ea-4511-9c0e-a9dda4645c57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a57f643-8817-44d2-9af6-58d2e4a4db09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a2631b5-3b2d-470d-8370-ac899d085cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b56de68c-c8af-4573-b5c3-4898ea7a4ff3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f82c88a-5f3c-4353-922f-1404665de6b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a2205c-2526-4855-b6d2-eda2b767b40a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6067c07-fc01-4429-9c8e-0f1369b8e8ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4fee8c0-223c-49e1-825f-6fe778de6904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bbf6195-0de3-4b1e-8ca3-6b0032b0f118",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86367c39-c74c-45de-b5a7-8e77f6c98912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0475a7-8479-4030-b5d6-35e70567a3c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3975c1-53f4-4883-8574-10673186359a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21543ac4-e3a1-49c9-ab72-8bea7d92079d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4629b859-53ac-49df-86a8-2d50e66b3482",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a3a13e-1584-4277-bedd-631e76f9508f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9431a0dc-d6d3-42ed-af4c-3dc368090b48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03602d6d-9809-4100-bc8f-aecf0e5c8ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ec1b5a8-ee57-4994-a113-be7d569bee30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5754df9-c56e-4705-b126-db1e4ddb9c11",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05878698-e3ed-46a2-805d-e5cbb9dfbe12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe3a2ab0-7064-4a45-99d0-0e9ea62d31cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "522f04d2-d512-478a-9063-182536f6d38c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86fad28c-4b7a-48e3-a148-99f3e7a5c2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bde6aa9-8e15-4e58-b413-8e77e501924f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f4a5ef3-31fb-4d66-8125-6db26492e195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478da0e5-59a1-4ff6-9a58-af9681bb3b96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3390f08-d286-4127-bb67-d3975311dd66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff39c3e4-d822-4028-bb74-abe6964caea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062324cf-43ef-4ee7-92fc-4b4534579af2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf89d5b-e558-4090-b4d0-d3e1b927ea67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "537fa680-dbaa-4c36-80bb-44a19c9efbfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "506c7dcd-1502-4f23-a164-acb30a3bee5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a8a5a8-1394-4602-b87d-a46cb7cbd2fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88573295-74a4-414c-821f-525c747ed4e3",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcfcab6b-7587-458a-8405-a47cde2111fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b594192-0c02-46bb-96d0-c4200061d42f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04efdbae-eccd-4965-af01-0b3e4148190d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50aa9a3-abd0-476a-97bc-d034c4fd2950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b3ad99-cdf5-4fc7-8c66-c76dee39d999",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21afcda-c504-4263-b0c9-c28856d4f478",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbcfa2d9-35cd-4339-b0bd-8aeac38d2242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a366757b-a938-40d3-815f-8c6022ae9334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fe26e5d-483f-4d9b-8783-431f0a0f71fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f57107-8a98-4854-b528-3c99ab8ff09d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06ce198-49e0-4992-8a4b-92868e55d949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "095185df-5e42-4d65-b3e3-6a92e07ccad3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cca3f14-801f-4226-a63a-ed56f9e29b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63cae6e2-967d-4ff0-bf1e-5ab1b3c7483f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6a89e9-deb4-4711-974c-72bef13927aa",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74269f4f-e4ef-481d-a7c4-c5d11eb0b466",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9902a9d-ed70-4b71-9543-6adf21f7c763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "541e337e-3c72-4352-a416-ace559bcc8c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28cec1f4-c52c-4233-a52f-1bfd91ea4034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4e9681b-1b06-402b-a3fa-ad6ee909e928",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640f1d18-2b9b-46a3-a953-268560c52cdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c03b364-29da-478c-81d8-4d3186a6a7d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19593305-4a53-4442-90d1-3d8e67750347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f81ab5e-743c-42cf-be6c-d2bde1797b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c27f5c-5538-4705-ad4f-22ed0883573c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe7bf5d7-3381-4f35-bccc-3290a9574902",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9448009-9c1d-4081-8df8-99c0b33e1c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23cc95cb-3b1b-4012-9675-02d5ee6273cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11361779-190f-44da-8702-8abdc3dfc001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd2ef27-793a-4bff-9890-ce899ccca4b5",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dba79fc-a7f7-423a-8167-5c2c67acd2e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "997a6b58-b2d4-4d7f-9b7a-ec6b80e11986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aece09d1-57c5-46c3-8028-be774dfc750d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e71a3f-0f1e-43c1-9cb4-1effb4997eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0805f0-997a-4b85-b16c-9abfa84714e1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08046f76-85ed-458b-ba68-d8faf2910120",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b02e92ab-c1af-4af6-92c3-bb62c6fc674e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81bfb5a4-55a4-4366-b88b-799846c31ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4406ab2d-bfbf-4760-9dd7-3baf21be2e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4ae8c0-6758-4feb-a3d5-d1ed59fb7182",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a050ad-815a-48b8-92cb-7ad87f4c7880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "339b0bb7-b0b2-485b-964f-693e8b4a5cf3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba08052-f9d4-4c17-a573-99bca0d7b5b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11300270-0bdd-4053-a4aa-b3727fe9d3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a351cefe-7f20-4189-95db-50676c6cde8f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029e509f-3553-4283-9dcc-54da452ee47f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "446d6f09-1e69-431c-8821-8dcfdb9ce1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37dde1d1-30e1-4633-b7a2-106887fe277a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5c2278-547a-4d5d-a06a-82333d710e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857f2af8-6c72-4f4d-8a2b-adb8ee7f8032",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb15410e-8b34-4e8a-afc8-4afaf3a87cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e450590-e96b-471e-bf8d-55765f025140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b800e4-1b5b-4027-a6c3-7edf183db172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c293ffc3-9305-4895-ab77-d3506405cd9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dae3f8be-cf1d-4510-ad83-7a5a9e2e6ded",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc3a9f35-9c34-4f14-bf24-af81efdccbff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b4faf4e-66ac-48c4-900e-e43a59c4dd89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbeb0eb8-eddc-4d0f-9c47-fb6576b4ef63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436a9020-0cd7-46d3-953d-fdc2e974a3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "456e171d-0966-4e07-95c8-24be6fc23f04",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb9baf5-840b-4f20-866b-cacd0d90ebe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "762e260a-57e1-4ebc-ae8a-9cc7f70314ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f70ca12-a3b9-434c-b025-b03e4ead7e11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8eba00-c746-41bc-83b4-203b892728e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9ab30e-1cd6-4d84-8cbb-25b84f85f46e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a81bc013-0d58-4aca-9bb3-fd65e50d558b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76042630-7536-43ec-8a48-3a568d3eb40d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f900b4b-f69b-4fcc-b65d-8f252db4941f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c819f777-a10c-42c5-8354-12d3868bfbf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c1d384-fe87-4dea-9e31-4a262299da7a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c35663-09fa-4fdd-b3f8-b8f0c83613df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a149db3-bf8d-4519-b088-8a3caf74dcbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4d7e68d-a6ae-4e3b-acc9-7e5a1e97d6bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ff36c82-9f2a-4799-aef8-ac33af898446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f3a561-f932-473d-9244-264c2c4fbd57",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d5f009-fc3b-4c0d-ae83-1bb24d4fcae7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71687d3a-5301-4d66-827e-d52aed02a954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa11382-357a-4b5d-bd99-09a0b5ee8e29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "452d89f0-3eb6-4fed-9af6-1a4889788782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "973577c8-125e-42da-96f6-e834c9a48caa",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeb30939-b822-4ba1-bfd8-f8bfd611d119",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fc402b2-a2de-451b-8ddb-67baddb4ee80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc4e276-95b8-4482-bc32-2182be6f6bf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5875fad-faa8-469a-9696-3b1f2f554dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe1c2893-0008-4260-9d52-a98239379660",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6aa8f1-2531-4f3c-827a-c95fa8e906e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72840cec-b6fa-4d2d-8ec6-ce48039c7b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36399140-df2c-4e13-a7fe-156a5f464185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b139f556-8058-4cc0-b555-5ce35faa2f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacbce3b-a99d-480d-b7a5-d655c77a4153",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cbc64a2-b300-411e-bd38-d73eb0f73e18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cb4b6ca-f9ca-48d8-a00e-887e13569e79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78dc6a9-423e-4567-b6d5-1cd4388dc70e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d3c9a1-570d-4029-ae0c-7be54c713ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ceecae6-ec2e-4630-9367-823fafa96011",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcb8613-f25b-42a1-8669-140f8a79b0eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b6f0f28-c9d2-45f8-b388-f10efaabbcdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "767f0070-328e-42f0-ab21-5518a1741070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef54026e-5a67-4802-9910-4603c9afefa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc11d17b-e14c-447e-8987-9a8d08b883db",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ff1705-a76b-4020-80cb-1ed1caf53e8f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b0be8d1-38ed-4f41-9711-8119d2a0fceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b831f8-f69c-449c-a665-5b60ef72ea99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d64d55-5062-4d00-8c01-22b3ff538cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa40bd23-1079-4b1a-a154-eafe9fae9f26",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4815bd78-d00a-43e5-a052-13a35c567afc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23670c79-9469-4fed-b4d9-21110f13ea89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69bea9a7-d1ab-4a63-a315-40a4bf5557db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d005b14a-3a1d-4ffe-8f93-87da841103d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e178af73-aa4f-45f3-91ba-ba94b0742a8d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e4f516b-e9dd-4d1b-a51d-36f6e8c67b44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "322431fe-0790-4a19-8286-ca566aa5f247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7294b1a8-3b00-45cf-b873-81deed3db73b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f20fba-e64d-49e1-80fd-5d6203bfcedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992dfd29-1272-4057-8a45-521e29c4a0d3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b053a4-eaab-4830-b02f-a7a9f35e6711",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2499905f-d021-4587-8722-c19d9dcffa59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca0080e-f99d-40f0-a82d-47133f654af2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "befafaaf-000a-4bd5-9002-9635af702bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7870882-32ef-47ae-8c8c-89371a825a49",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a36d33d-0d01-4bb3-b98b-73167259250e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea0e6740-4abc-4cf7-9636-a1244b9328bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b08828-1b8f-4e45-8e07-09d982356168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba8475f-026b-4dd9-8faa-6f297b0b60b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd61826-782c-47ec-9aef-0b95e4fdf686",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ff3d3b-b3d3-4024-9926-c2731054ecfb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f5682f8-5d55-4a1b-84c0-2e568c4e1c7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b403a93a-a853-4523-8be1-af74b793bcad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4e2dedc-4660-4d2d-9cde-87ce01a91ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41804d26-5584-46c4-ab81-5c9c03e732dd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d288a34b-55e5-4171-8e72-81e21cf03c06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34a297fa-a6ac-4206-b977-c20d1dcd3c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e49d9d0-73bf-4018-bae4-026006b1419e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce45c2f4-ed2f-4651-b779-0bc0456ba1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c9995a-8e78-4568-ae94-bc5df30f4b8e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15a8ec04-4a09-4ea5-9d50-8bacc589ba13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49df54e0-2595-484a-8d84-17d4623715e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93753fe6-60b3-4400-9872-fdc374a615cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f71fec84-fb43-4d3f-8288-2ccc02f3e232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc900499-3395-4e6d-8fc3-c9ed8fb0328c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3d7cf4-fcda-4187-aa74-101bc1994471",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3df9cab6-33e4-40ad-b501-ccfb2c63e86e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdf5656-13d5-4eb1-bc60-1fe8047617b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a43aab7c-2795-4c18-a0e5-a7bba829ec21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2938e6-5bb6-42ee-9d16-ca512863bb83",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c950d2-0859-4a97-b1c2-44df578bf987",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f74f4a3-152f-4143-bdcb-8c6893217e0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44583902-d7b3-4964-bfd1-913df24f93b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975f8c24-cdff-42d7-aa9d-949853c7eca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35900148-8cb6-400f-bfdf-405f97afd2a5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c326249-ce52-4703-9be0-24b8bc94f486",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9717fd6-dcc6-41ab-b519-1217d31037b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3c1168-6ad5-47ff-be0a-33cd7e20209d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae0935a-e7d0-442c-b662-a845b60df131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a6cacc-e1de-4acc-96bc-8eb3717e4fae",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c990ef03-bf42-488d-87f3-9f5f7a0448d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4a7bbcf-2219-478c-b190-0a7a1da2822a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bafd687-ff3e-40ac-b382-78be15a075d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55242fd5-c8f7-4d62-9c68-686997dff4c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197b8d26-fafc-45fd-b5c8-14d5c4afcf9c",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073dc17e-3e34-4fc9-89b6-8f9fe93fa1d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef9efb9d-0466-4443-a10b-5d017c9391e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1dec908-47a7-4f9d-ac5b-88b44c646213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c8f8589-880e-4f6c-814c-6f45caca50b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cc53ff9-2bc5-4505-8a55-df23daf59565",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45abfaa0-cccc-41a1-b344-f41ea66aa796",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "901ee5d6-f10e-4857-8ebb-630a02694148"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea62516f-a1a3-4f4c-8036-cdff3193f511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63e5699f-fec5-43ac-96c9-cb312f403532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12dd33b9-a370-4580-a515-a77195d87f30",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a413a42e-a8ce-48d9-8536-e71e0364483a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec00c538-e371-4a38-b60a-011eee125a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8592694c-9f66-401b-8e13-382dded44dc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbf6673-3bab-4501-8145-5b0737cff50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18db7e3-d43b-4f2a-acd1-0c6c1b23a0da",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36243821-9f19-4737-a29c-a2c848f9ed81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38dd3ba3-bf99-4158-bb09-dfa78ec6c2b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb29169b-0b49-40ff-b134-bf84a5fccb34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6bd004c-cf71-4c92-a88c-bfd148d94fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9378f8-4fe1-4e83-9f26-0fe9a5c15d71",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be9f679-c495-4741-9a36-c76958ee6159",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "974b0b11-00f8-4f9d-b680-76cc65632271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b4616d-5bab-4311-864b-648e0c2dd477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b15f4e-4801-48d5-8ac8-b1e627a48812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d81ceb2-766c-4c45-9dc2-03af1b66a3e0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97b9f4b-e861-40f9-be07-76bfd82ab404",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c026fe7-8d02-4ae7-bf66-6d9020ad3ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca5442eb-56e1-4605-802d-75578aaa8af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b10b3aa8-efef-4d84-ae5b-412f6841d444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeda5af6-63e0-4e63-86a8-8b2445a5cee8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e480019d-07a8-4e77-ad1b-8ffd3995a3b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9ad291f-245f-42aa-9211-8cb56a1e12c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c74780c-40ce-47c2-95a9-c4757e041f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae1c45d7-fbf2-427c-9904-763da25a2c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de82bc5-211b-4924-92e2-de21f0ad5b1b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "095cca0b-2051-4bdb-8f31-3ece40829448",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f609eb0-71d2-48bf-989f-8476c469ce99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ecc79b-9bd2-480d-a2d6-84ccd6d7971c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed57d50-0f71-4898-b256-f41308a64d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b920c336-6b4e-4131-8cad-f9b9a8227516",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132644d7-4cff-41d8-9a87-6759843b68e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d500cd07-2bd8-4d01-9d52-cbf2edb3cbdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc37d65-a82e-49c4-a052-e49bc08b88c3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9260ff9b-fc8d-4085-8b0f-deeb612e16e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "400829d8-f53f-4f0e-9e4c-1347888fd799",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05b2ba0-0ed3-4a39-902b-8dcb4ec09feb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ded09f71-5299-4109-8ee6-c84e0bdc953e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04400ca-3f70-414d-8734-6d608a7e576d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ba4870-4bb7-4b29-937b-2d36ad563c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f076882-689e-4f0a-90a1-cc5ccf0a2d95",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b6973a-ce8d-4827-9a0c-315f753b177c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fe0d6ff-2764-404d-ab0a-51f72e656a36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ca78d8-638f-4880-9c59-ccfd1effcad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57f44c7-1c1b-4255-abbf-30d08ad0735d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c47223-f1b9-4191-a24a-3e26d20503be",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45b72c4-9ed6-4c06-9801-c29f462dbfb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a80842d-cb12-42a9-88de-9689da5797b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de40add1-b37d-4185-8b76-dc6b064c1d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7a47563-c28d-4481-ac3d-43f0d5aa6e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "445e82dd-53ae-4248-827d-04dcfb739b2b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32495ef-97eb-4cac-a1d0-95b06bb6128f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3096dae-0706-4e9e-8b57-d1beaec9cf5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de980b4c-9a68-418e-a317-7f30c3e13d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a8b13b-b00a-4e8e-9e05-354b1c39f975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba4f255-cb59-41bc-a237-3a8d6fef08b5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd7fb63a-16ca-4a9d-baad-51c169a4e5f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c526ee0c-4ca0-48f2-bc26-791a6574ca39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7543b7b-5735-470f-b852-1d1e6be6c04b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1bba9d9-a87a-4ea4-9b75-6de36db49ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48efd85d-d485-4b64-8ec7-36aa865b9eee",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4773024-7dd0-45d6-84ca-6245a9a59992",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3eebcb33-4a82-42b7-858b-c7ec38cc4ea3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22742a0b-9937-4ba3-aa53-cad2383f4f24",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f29593f8-bd34-4c8d-89f9-b983e9d98692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2b8c6f-ae67-45ce-a77f-6306f31a2690",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2233624c-f1dc-4018-8242-4ef51dde9dfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "171e350c-e4d2-4036-8ada-68d07036e292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24bc682f-f984-4a5b-b38b-82730d9509f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5321b44a-6738-402f-8b2b-107a2624a1b1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23989680-84ed-41d7-b6e8-50c659e2c3e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2eeb29d9-1464-447c-b3f2-79ff48aa70d3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8437f59-8939-4d1a-a6d9-1b4db73cec13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "be7aacb2-0897-408d-bf3d-87b4bb56cf70"
                    }
                  }
                ]
              },
              {
                "id": "381bbbe2-313f-415b-b41d-bff133aaae95",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "960e0ff4-fbf7-47f7-9fdf-60a4d8fdc1b0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3bd39e9-1175-4e9f-86d5-f0edf2c557aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "df3d7b3f-ddfd-42ec-8200-41f2a97ee533"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7a6956-9d69-4236-acd0-641744cc7dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7c37aae-4347-405e-9f17-2e93f6a0d583"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a2d10f0-0d44-4c36-9b30-e66f1ce232f5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a22fe9a1-1a17-4bb2-9c3f-4ce716b5a019"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "743fd4fc-767a-42f7-9649-d2ca3179a1c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "678ac7b6-ad3e-41e4-8d88-174ee9db740f"
                    }
                  }
                ]
              },
              {
                "id": "17d90e7f-aa3d-43c2-97da-0a70c8c15c78",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "14911b2b-bb73-4fa4-972d-75d8349b96e9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be11ec65-5eac-4ed2-9fb1-fe6c73a939a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "71e545aa-e6ca-4011-ad11-32845732b304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34def608-054f-46cf-ab0c-7e711a32758c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494a7afc-c3ba-46d8-8771-3ab7b36f8c62"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bb2ab9bd-c735-4178-84c1-685ce7c7fa75",
            "name": "Positive Testing",
            "item": [
              {
                "id": "848c3366-4ec8-4545-a001-2e6516698462",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bac0982c-22b7-4aff-a909-d41d661e41f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "272cf2c9-74d5-4cae-80c0-cacd468eca08"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b1a3c993-abb4-45af-8cb3-85631a76395e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9805281e-e7fb-4959-bc31-8b31b73a1690"
                    }
                  }
                ]
              },
              {
                "id": "d86bc72d-6ea0-4895-b6e5-67a32c66d373",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88df6e1e-933f-46e2-92b5-8d4216353e7b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fca443c3-c062-4440-98be-5660cd7ff288"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ed3e46f-0453-4c86-a98e-2abaf1e01175",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f95e2625-b578-4dda-8c74-f814c12d87cb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6da31275-6c9a-40a5-89eb-35b65020eb77",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "84d31d17-a5f5-4e56-835f-581f0757b2c2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f687f74-82b3-4f59-b66f-b8bf6b23dd06",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "169608af-89e2-426e-83a3-472e1196fd23"
            }
          }
        ]
      },
      {
        "id": "75167307-1206-4d3d-b0ab-38b4f8f097ae",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a135489b-9672-45ad-b850-9c4d04ff8e0f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15c6e89d-0a4f-41ef-a9df-51a65ad6d26a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a372f30b-10f1-484b-9613-ac497db68681",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274965e4-23d9-49cc-84ea-81e28f4440bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "9bf68486-5456-42ee-b5fb-d08278e44232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bea84f96-2192-4066-bb1f-22c4eafb9cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "942c3587-a417-4433-af2d-cdc86f9967e1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8b08eb2-4424-48b9-bd45-9ffdd19d954d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a445469-343d-4e3c-a691-99a3d01c04c0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "52e8e6fb-382f-447c-b290-fd64395ac970",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7dbcb9d-1a2e-43f5-80d7-681550754915"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4770a3c-02b9-4b32-93da-0487ff362fb7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e299a445-ae67-4a3a-b955-96ebdbdecf55"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca51e093-270e-47ba-8dc9-f2e68e9c327b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1c6914b4-d5f2-4dc9-9fc8-b09484112111"
            }
          }
        ]
      },
      {
        "id": "80e4b155-564b-456b-bde2-426c6c226f01",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4340dd3d-1a9c-499e-bda4-fb1121398c53",
            "name": "Negative Testing",
            "item": [
              {
                "id": "48c9f3ea-00a0-44c2-849a-6086c46d18da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2b362faf-bfd5-45c3-af01-7de31688a9ef",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493eaf2c-f41d-4365-b812-2ee68c4ea839",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96ff2c16-f520-4b97-879c-b44289294e11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bf736f5-6a08-4fbd-a713-a3b79b8613de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80d80bf2-c6ac-475f-a178-345973a6c89a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "052da96f-4408-461f-9940-578fd76eb326",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2a1fa22-2644-4a0c-bb07-b88a390d9bd4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "14f1edba-9d8e-4c36-9bb9-04cae3db67f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dead866a-ed6f-4f78-82a7-3d0e10c723cf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "988427b2-4d3b-4bb0-b2d2-cd33481f95ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4aa854e9-f17b-496f-bebf-c144e4b5f8e9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e392567a-78f6-4a10-b73b-f4dd462affa2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a51f1a05-398d-4e76-95a4-330a76419f0b"
            }
          }
        ]
      },
      {
        "id": "de829fe1-d35d-4d27-9191-242707345a3a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ce14efa5-55f4-4639-b66a-f905ee56873f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b6a18d7-9523-4e00-a3f0-8e3e82d64d62",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5499d0b7-3ddb-4402-a261-be7ef1694dcf",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9260e51e-a238-420a-bdc1-43a4f893f013",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "431d81d9-101b-49c8-9bd9-28ea65e9fba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0af0b092-b458-44f4-9587-e925c1dbd9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7e989b6-4db9-4444-808c-19190683e219"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abb4b16a-d653-48f6-bb0e-fdb6ba1b13b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aaa6f96f-ad38-4e22-9852-ac9b27c84833"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c95f3e8f-f359-4af2-9cff-1c0aa3bde914",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2076c9bc-f72f-4f6f-88fd-e9c9ea5c7030"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "246568c1-be7f-4253-861a-f7290a497bdf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "28b4461a-7ad5-44b6-a7ad-841e017b428c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43d8c2ee-52f9-442e-97b8-d8b8bea8e19b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d675ce80-4f3e-4b1b-bf98-7f135bf5e597"
            }
          }
        ]
      },
      {
        "id": "c0da2362-7c4d-4b89-8128-9297296bb648",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fc6b61b3-8b76-4fb5-8ff2-32dfd33f37f9",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "63d4f414-49c3-419f-96e2-f5b73e2323f0",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "2957cb06-0c9a-4913-ac35-0f960616dcbc",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "653801c2-1d1c-4546-9178-2900ab461b25",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "79355d14-752e-428b-8f6d-bd131cbf8069",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 5
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 247.52380952380946,
      "responseMin": 13,
      "responseMax": 5659,
      "responseSd": 783.6123790141502,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1716684012531,
      "completed": 1716684083226
    },
    "executions": [
      {
        "id": "bad09149-611c-4dbc-99d2-62322aea1546",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e88a1478-f1f8-409f-ac34-8b36fb3479ca",
          "httpRequestId": "43e7aa93-4b5c-4d12-9fb4-3b8f5ddd25eb"
        },
        "item": {
          "id": "bad09149-611c-4dbc-99d2-62322aea1546",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "73865727-49d0-487b-9d7e-dbf7ef82ad96",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "9f85ef77-6d6a-4e99-b86e-8e544deaf4b5",
        "cursor": {
          "ref": "9524aad1-e5c3-4623-bcac-d51c34d98520",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "278e8d2a-ba93-46b3-994d-dc15c3b2d8ac"
        },
        "item": {
          "id": "9f85ef77-6d6a-4e99-b86e-8e544deaf4b5",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "5f2bd990-cb61-4e59-95a2-c2ec5360bef2",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "01badde0-3a30-4265-a881-4c921005d070",
        "cursor": {
          "ref": "2e7a355a-613e-4b0f-8535-f7b10771742b",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "62af8269-4954-4194-8f2f-ddfed9d4d3ce"
        },
        "item": {
          "id": "01badde0-3a30-4265-a881-4c921005d070",
          "name": "did_json"
        },
        "response": {
          "id": "92a9c407-cb08-421a-888f-16746b7b1495",
          "status": "OK",
          "code": 200,
          "responseTime": 383,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb52faa-189b-4e64-b57a-9e48e27b26f1",
        "cursor": {
          "ref": "5b1abda9-61ed-46b3-bf3d-7fd5aeccf3c2",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "39683a76-d759-420c-a03d-02d7b24c971d"
        },
        "item": {
          "id": "8fb52faa-189b-4e64-b57a-9e48e27b26f1",
          "name": "did:invalid"
        },
        "response": {
          "id": "f65820af-6a43-4640-999d-bd3a4310fbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2298,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb52faa-189b-4e64-b57a-9e48e27b26f1",
        "cursor": {
          "ref": "5b1abda9-61ed-46b3-bf3d-7fd5aeccf3c2",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "39683a76-d759-420c-a03d-02d7b24c971d"
        },
        "item": {
          "id": "8fb52faa-189b-4e64-b57a-9e48e27b26f1",
          "name": "did:invalid"
        },
        "response": {
          "id": "f65820af-6a43-4640-999d-bd3a4310fbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2298,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5010a7-ea6e-4b9f-8948-a613c1af09c5",
        "cursor": {
          "ref": "432803a1-396d-4802-8eb1-6470294083b2",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ee1b32fb-65ee-4bb6-820e-6f5910d548d4"
        },
        "item": {
          "id": "de5010a7-ea6e-4b9f-8948-a613c1af09c5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "816818e4-5a23-4ccd-8045-85c641a03bb1",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2599,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91f30294-536f-4092-843e-5a4f1976618f",
        "cursor": {
          "ref": "19ce9d02-0d96-44e0-ba14-d3ee9b9c1429",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "029bb19c-3c08-4bc9-8a8b-652ebd69c8c6"
        },
        "item": {
          "id": "91f30294-536f-4092-843e-5a4f1976618f",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fc34f0b9-bcd4-4e87-a437-96a53404e250",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2033,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfed55ae-ed82-495b-be0b-1bc098d3d51a",
        "cursor": {
          "ref": "8842c432-58c4-4e4a-96e8-bdeecf710ace",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2adaee26-f06c-44fd-a6de-eb54819f068f"
        },
        "item": {
          "id": "dfed55ae-ed82-495b-be0b-1bc098d3d51a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "be9a0101-a57e-4e65-8cc4-6759218be96f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24e5d4e-63e8-4ae6-bd5a-aaf9ba5d3c6e",
        "cursor": {
          "ref": "7a61f2d9-1cd8-4f5b-af68-b82658e42709",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8abe6610-0cd8-4a52-bef0-7d7da8525845"
        },
        "item": {
          "id": "e24e5d4e-63e8-4ae6-bd5a-aaf9ba5d3c6e",
          "name": "identifiers"
        },
        "response": {
          "id": "4c8391cb-a19f-444f-970b-5e2a92856701",
          "status": "OK",
          "code": 200,
          "responseTime": 2423,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff18ed2-46a7-4248-b78b-21d9387e14ec",
        "cursor": {
          "ref": "ea4f6215-925c-46fa-b9bb-3baba28b387a",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1cdf125d-6bf6-4997-92a2-6f1f50071ec2"
        },
        "item": {
          "id": "3ff18ed2-46a7-4248-b78b-21d9387e14ec",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "502511a6-77c9-4895-ad03-681fd341dc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0df9d03-f7c3-4f6f-8331-b3c2a5bbbbd6",
        "cursor": {
          "ref": "dd9405cc-03ea-4957-a3df-82c9bcd9702a",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f5e40ee8-9a0a-4554-9822-d1ebf780de5c"
        },
        "item": {
          "id": "c0df9d03-f7c3-4f6f-8331-b3c2a5bbbbd6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0722ec03-2a49-44ee-8860-61556883093e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f000ca-6bbf-4a11-a470-5204c424523f",
        "cursor": {
          "ref": "c31a0fa2-a50b-4b4e-85e6-9b75ef1e5ff8",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "19f84208-a8f9-45d9-8107-ba46913c7d09"
        },
        "item": {
          "id": "d6f000ca-6bbf-4a11-a470-5204c424523f",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c4156266-0154-4ac7-9182-725be78b89c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9c08c2-64c1-4698-94c3-a75614112765",
        "cursor": {
          "ref": "af18acb2-0d54-42e0-bf4b-e6a2dd2796fa",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7dfd84ac-ee46-404e-a330-bb6cefd293b0"
        },
        "item": {
          "id": "bb9c08c2-64c1-4698-94c3-a75614112765",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bade8514-f8d6-4f3d-a7cc-1c4828f57392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9877e696-7c5f-4a6b-ab68-8286336d5bc6",
        "cursor": {
          "ref": "2b9d904c-d1dc-497d-93be-03c5f51a5f42",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0afd222a-77ea-41fd-8380-f550c894650b"
        },
        "item": {
          "id": "9877e696-7c5f-4a6b-ab68-8286336d5bc6",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4c5cf2d2-b6d1-41cb-bbd8-756a0e68f5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ad04ad-e3d7-471d-8364-505906a31500",
        "cursor": {
          "ref": "dbc9d616-6637-4c09-abcc-025c92f81297",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5056c1d6-6579-4ff3-aba9-57e56f0c7978"
        },
        "item": {
          "id": "95ad04ad-e3d7-471d-8364-505906a31500",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2e139af1-c404-449e-87e2-8e7d4ab0476d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17aa1af6-0efd-411e-87be-7429812c546b",
        "cursor": {
          "ref": "7c085722-8388-43cb-902d-f2d7c295dea7",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b05c9033-f68e-48df-8c32-11cb7562e93a"
        },
        "item": {
          "id": "17aa1af6-0efd-411e-87be-7429812c546b",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "820c899e-c27c-4a6a-b93d-d1d88239c46e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7cbae00-527b-462c-8712-8d8269061dcd",
        "cursor": {
          "ref": "a4ef6093-e2d8-41b4-a9d0-e0f0e0bece25",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "6b739354-1259-4f7d-b849-a06d3948e9d3"
        },
        "item": {
          "id": "e7cbae00-527b-462c-8712-8d8269061dcd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b8757310-bee8-49b7-a379-841bffb9df40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea51a31d-fdeb-4516-9137-7ee597e17167",
        "cursor": {
          "ref": "b472bf76-2284-43c5-8423-6bb0e721aba1",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5e622411-365f-47db-b567-c227091964fe"
        },
        "item": {
          "id": "ea51a31d-fdeb-4516-9137-7ee597e17167",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1da6acca-1174-44f5-958e-db39329a5766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04e5daa-7ebe-4f9d-bc94-1b2fea041b5a",
        "cursor": {
          "ref": "480078a2-03f9-4894-8dde-39c8cc9359b5",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b5f85202-8459-422c-9052-6148df757f75"
        },
        "item": {
          "id": "b04e5daa-7ebe-4f9d-bc94-1b2fea041b5a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "63661d2a-97a3-41ea-a061-83d9fe36195e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbccddf8-efbd-4ab6-9dad-6377a308207a",
        "cursor": {
          "ref": "857823b9-48f6-4d34-aa5b-b3452d335248",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d51b456a-7681-4592-ad97-f5ad910c60a1"
        },
        "item": {
          "id": "fbccddf8-efbd-4ab6-9dad-6377a308207a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "48413b70-4567-40f2-9567-3220e5a076eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195edeaf-9116-47ab-8ef4-6e7eb1e59184",
        "cursor": {
          "ref": "232fa70d-0287-475d-953f-912f5426aa47",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ccbd20b1-bbff-4cf0-9956-df3713d9db20"
        },
        "item": {
          "id": "195edeaf-9116-47ab-8ef4-6e7eb1e59184",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a4d8dd32-84c5-4f2c-983c-d5f3ccfeaa3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa94dac-f9fc-44d8-a285-752610f95423",
        "cursor": {
          "ref": "e7dbe673-f2cc-4753-9cc2-2913714d56f7",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "667a72cf-50dd-49ba-aa5f-2d9597e9a5b6"
        },
        "item": {
          "id": "1fa94dac-f9fc-44d8-a285-752610f95423",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "507f9c52-1075-4143-838f-669a93ad8127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6718456f-5184-422c-8909-a795c68f20a6",
        "cursor": {
          "ref": "a46deb7b-950c-4228-a476-65abad0561a4",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2798b23c-2e9c-4d0a-8a67-c511f765845c"
        },
        "item": {
          "id": "6718456f-5184-422c-8909-a795c68f20a6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "87036715-88cf-4bb9-9822-57c8b8f50b23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c978a36c-b782-467d-9767-c1e3dfc2bf25",
        "cursor": {
          "ref": "a57e0ff9-6303-4710-9f63-c7e1ecba915d",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "aee5e358-2b74-46bb-b6b1-27a9381e3ab0"
        },
        "item": {
          "id": "c978a36c-b782-467d-9767-c1e3dfc2bf25",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "9639fefa-cbdc-484f-918e-a33ee9b3cfdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da47e1de-a876-4f68-8482-a83c49a46bb6",
        "cursor": {
          "ref": "2da67fb8-56a5-4f03-adf5-65050e48508d",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "eeb7f022-9bd9-4780-9a5f-0df49c70d1d3"
        },
        "item": {
          "id": "da47e1de-a876-4f68-8482-a83c49a46bb6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "d5e98286-95a1-4cac-bdfe-29ebd15abf72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d875ac-7b04-4fad-b00e-f9d00dd26d48",
        "cursor": {
          "ref": "77c69ec3-2f77-4553-b8f0-4f841d4a5103",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "afc10f60-7ded-4b6b-8839-d833031996b7"
        },
        "item": {
          "id": "36d875ac-7b04-4fad-b00e-f9d00dd26d48",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "943ce7ce-5a25-4131-a4c2-6d47611c3294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a74708-c813-43cf-bc51-3a5b3e632f66",
        "cursor": {
          "ref": "38da51aa-085a-4d30-a938-247b9975f565",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a32fa1e7-9729-4eeb-8547-2b365003865d"
        },
        "item": {
          "id": "79a74708-c813-43cf-bc51-3a5b3e632f66",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "77333d37-b0b6-464d-be43-abe5bf5c1046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db4b300-2dee-43e4-9d9a-7c6f8349d8df",
        "cursor": {
          "ref": "04c022fe-f137-467e-8428-9a4ba828122c",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b796b8f1-536f-40b1-a8f8-f6d006e71e65"
        },
        "item": {
          "id": "4db4b300-2dee-43e4-9d9a-7c6f8349d8df",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7eab94ef-7e55-4af0-aae7-40997ea435a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1de0b2c-af03-4e73-8231-8cc12b1200d5",
        "cursor": {
          "ref": "80ce3668-9b1e-4bb2-bf76-25e8e02fa795",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7d3b81ed-80f7-4b23-b656-a14895a55834"
        },
        "item": {
          "id": "e1de0b2c-af03-4e73-8231-8cc12b1200d5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "272eda40-5f57-4f5f-9a7e-c0c7a8ea3c8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2431c34e-24a8-4001-b4a1-b2a239ac1bc5",
        "cursor": {
          "ref": "b427a89f-a77f-4366-87db-a10556f74a99",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "800565f4-f430-4aea-aecb-94bfb384874f"
        },
        "item": {
          "id": "2431c34e-24a8-4001-b4a1-b2a239ac1bc5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "32558af1-3907-418b-86ef-6c5a7c42b190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d352ea7-9967-4170-8ed2-d9a729740990",
        "cursor": {
          "ref": "4fb7341a-8876-4a88-b220-34cbf53faac8",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "4feb660c-23c4-479c-8ad6-69e825338ec9"
        },
        "item": {
          "id": "3d352ea7-9967-4170-8ed2-d9a729740990",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7a163327-a8b4-4d66-b49d-553dcade156f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fcef263-08c9-46cf-aa9d-9a95a1d50574",
        "cursor": {
          "ref": "ca5ce8ae-29c2-4962-890c-b665e741ed5f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c8f8e594-3112-43b4-b9b2-d5442e071669"
        },
        "item": {
          "id": "4fcef263-08c9-46cf-aa9d-9a95a1d50574",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "97dab573-e180-49d4-b39a-938fc3129ebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9388fe70-5417-4211-ac3c-6109b05b28fd",
        "cursor": {
          "ref": "c6a8583a-c04c-4f6f-a771-139a0b55fe6f",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0d33f83c-ad36-43e1-90ad-14521a144faa"
        },
        "item": {
          "id": "9388fe70-5417-4211-ac3c-6109b05b28fd",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a09e7dce-5833-4702-aa1a-63fb41b29b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bb558c-2d44-4948-99ab-c144604ec525",
        "cursor": {
          "ref": "12b5bada-7c7f-4e6b-a220-e0ea937c3dd6",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7e22608d-930b-44d1-b1e4-7dbafacc1fb6"
        },
        "item": {
          "id": "d5bb558c-2d44-4948-99ab-c144604ec525",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a03f6292-b245-496b-9454-202c61e83f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6291f73f-bbf7-4d90-98f9-ec40013fe819",
        "cursor": {
          "ref": "c692a1b7-df20-415a-a8e5-01fafcb2e5da",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "515de854-0b34-4606-b5f2-f93987bbe9e4"
        },
        "item": {
          "id": "6291f73f-bbf7-4d90-98f9-ec40013fe819",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "62d42a68-41b0-4928-be34-3b1db215a684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493c5304-69a0-4c89-8aff-cc18171077b3",
        "cursor": {
          "ref": "45026257-d23a-447b-b425-3a2a777aa1e6",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "57aba4cb-8070-4f9f-8d10-2bc00a50ae69"
        },
        "item": {
          "id": "493c5304-69a0-4c89-8aff-cc18171077b3",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "9225970b-5d34-4e38-8991-f52d1875f14a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4514e98d-f107-4f2e-9318-13c323a7a862",
        "cursor": {
          "ref": "993992a2-7402-42f6-999d-0b90f4a63b54",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7af21e22-0361-4a0a-af6d-e87b3c7a8150"
        },
        "item": {
          "id": "4514e98d-f107-4f2e-9318-13c323a7a862",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "df3f2c3d-20bf-4c18-9bd2-c8a5132f1764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbd5448-b171-4ca2-bc59-df36991d5a88",
        "cursor": {
          "ref": "fac5ff9c-85b2-4535-b1f1-05c4b0f43eed",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "27dd5e4f-e5ba-4de0-af28-fcb59526cf8e"
        },
        "item": {
          "id": "bbbd5448-b171-4ca2-bc59-df36991d5a88",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "84e9e0d9-2e3a-43d3-bc0f-0e3e22552a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051b64aa-0ce9-46d6-b02e-57c00f4cc41c",
        "cursor": {
          "ref": "7883317f-0a98-4cec-a70f-aa2449c74407",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "7905e4bf-8a43-46fd-9ab4-f54c8f93e3ed"
        },
        "item": {
          "id": "051b64aa-0ce9-46d6-b02e-57c00f4cc41c",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "71975e0e-18ff-4048-b77b-5db8c4ca562b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd2249de-4cb0-4bdb-a4a9-19bb28d3f8c3",
        "cursor": {
          "ref": "22ddd54a-9ce0-4edc-b07f-a41a26f26401",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5ed2bb43-408a-48d7-89d5-28c7c555fd76"
        },
        "item": {
          "id": "fd2249de-4cb0-4bdb-a4a9-19bb28d3f8c3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4e5f5abf-d4d7-4e1c-9430-a33a3c859ae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88d45187-2e63-4037-9228-cffb077bbd67",
        "cursor": {
          "ref": "eeb3b6b9-b7d1-45c5-baf7-628a4e8f6a2a",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9289ee97-06b9-4ce3-8976-e8f3d67b6a59"
        },
        "item": {
          "id": "88d45187-2e63-4037-9228-cffb077bbd67",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "32fcb5a9-18d8-423f-88b8-4e17225f3094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86234728-5a96-4032-8030-acc319951100",
        "cursor": {
          "ref": "cb56c888-127c-4efa-92a8-84f283eb25a9",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "0fa3672a-dc0b-4ab3-87fe-f147ad2cdc63"
        },
        "item": {
          "id": "86234728-5a96-4032-8030-acc319951100",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "023c7d13-ff3b-43f9-ada6-70376ce29839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de300f04-8fb9-4c4a-80bb-e55408bbee9a",
        "cursor": {
          "ref": "a4aab120-447d-40cb-977c-4ffc87b3ecc4",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "097a465b-832c-4bf8-b855-7315f0303959"
        },
        "item": {
          "id": "de300f04-8fb9-4c4a-80bb-e55408bbee9a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "43bb2532-3c9b-4f66-9675-646b2bab3283",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60136509-bec1-448e-98d1-a4e7fa7bfebc",
        "cursor": {
          "ref": "2f70e63f-5059-4e71-83a7-7aa03777d5bf",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "fe0bf567-ab05-4305-9985-e3445665c015"
        },
        "item": {
          "id": "60136509-bec1-448e-98d1-a4e7fa7bfebc",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9cd94da4-b584-41bd-a27a-facebad247e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62aea286-25e1-49ff-be0f-c78dc8fa24e5",
        "cursor": {
          "ref": "6241ab13-4272-414c-938d-6f4bb99db957",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a54efbdd-0583-4a57-9adb-41b5c99fa658"
        },
        "item": {
          "id": "62aea286-25e1-49ff-be0f-c78dc8fa24e5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "81ad9d64-928b-46f4-bc98-fc075fb04cb7",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 74,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f097b79-e41c-417e-8315-5ed123ab0354",
        "cursor": {
          "ref": "b8e621d4-b563-4d4d-b099-e8e502aa4240",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e4c5bf94-6af6-4395-87ea-718a0a8b7067"
        },
        "item": {
          "id": "9f097b79-e41c-417e-8315-5ed123ab0354",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fa022f82-83f4-4f4f-9ebc-a2b9459c0acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc20545-a413-4b8e-a3a6-0b07c2be9c1d",
        "cursor": {
          "ref": "f0a894ea-af6a-4ebf-a88d-4022546d7a41",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d829ba19-2af1-4f32-9347-e11b072822c7"
        },
        "item": {
          "id": "ccc20545-a413-4b8e-a3a6-0b07c2be9c1d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "74443c0a-5eac-4557-bfbe-3b35f7185082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca14d60-47e9-4c6a-b65f-b3f36a0a7ce4",
        "cursor": {
          "ref": "75adf53d-7dba-474e-80aa-86c5aefec557",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "38d953d8-b597-4ecf-b06e-5bc1448ada78"
        },
        "item": {
          "id": "eca14d60-47e9-4c6a-b65f-b3f36a0a7ce4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "8d020d65-c72e-4ba2-81b4-ddba7f4e2da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232aeb70-9c26-487e-9f43-7097c87a99fd",
        "cursor": {
          "ref": "e454f942-b393-4d31-bc59-6aa7fe6a5677",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "aa2e03a6-3105-4a99-b5cc-0574b319aaca"
        },
        "item": {
          "id": "232aeb70-9c26-487e-9f43-7097c87a99fd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "2679a5ff-e329-496d-b4c9-f84de56118d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b0d3aa-caf6-46b4-aa9e-18ea7c7c7346",
        "cursor": {
          "ref": "edbc4088-18d9-45a6-8c68-db0d71d13535",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b6e270fd-f0e7-40bd-b507-b61a36fc83d4"
        },
        "item": {
          "id": "44b0d3aa-caf6-46b4-aa9e-18ea7c7c7346",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "acfb5ff7-b180-444d-b5d8-906d99efb2e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c34c854-5010-4ba3-8d43-38c92d83a763",
        "cursor": {
          "ref": "04ab94a6-06dc-4249-aca2-80becfa2d3fd",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5a2fbc74-c69a-4646-ae7e-dfd093e69ae9"
        },
        "item": {
          "id": "9c34c854-5010-4ba3-8d43-38c92d83a763",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6e40c431-b731-4054-823a-45de16515d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "739f26a7-92fc-4181-8ab6-d31c23dc767a",
        "cursor": {
          "ref": "ef90bc14-bb35-45b3-bb42-bf1807e07e7d",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1468fcb3-0e84-469a-80d2-72d3ca076144"
        },
        "item": {
          "id": "739f26a7-92fc-4181-8ab6-d31c23dc767a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "3ab47350-88a2-43ae-aefe-a2b48de1e23d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 76,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8327b9-7f34-4e26-9b7b-3cc8e95801c4",
        "cursor": {
          "ref": "d26397c7-46b7-44a1-8382-3c49a6d2237a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "adf6bc33-0ee6-4f93-bfb6-6654853acebc"
        },
        "item": {
          "id": "0b8327b9-7f34-4e26-9b7b-3cc8e95801c4",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "eb43fbf0-20b5-41fb-85ea-db921e8b57eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2bb4d5-2cd1-4ab4-a931-1363cea01c26",
        "cursor": {
          "ref": "9ecc08a6-1395-4c97-8178-e2972b008901",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "0f5cf3b6-503d-461a-b1c7-e2f4e7802849"
        },
        "item": {
          "id": "fb2bb4d5-2cd1-4ab4-a931-1363cea01c26",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1e22576d-4440-4b1c-823b-cd35b9c28c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cde277-61e9-412b-bbe0-33fc4398332e",
        "cursor": {
          "ref": "e701a3eb-3e91-4b71-94b7-91d9c5fdeb0b",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "85754976-59bc-4e3c-94a9-e4463807f57a"
        },
        "item": {
          "id": "64cde277-61e9-412b-bbe0-33fc4398332e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "de3876fc-007a-4e99-9dee-cba623d45710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f2a6bc-70a0-4e30-b37a-5839bdc1079e",
        "cursor": {
          "ref": "c02dcff3-b213-4824-84bd-727961b290b6",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "d092d5f9-3f43-4126-8ad7-b8165aec6ffb"
        },
        "item": {
          "id": "50f2a6bc-70a0-4e30-b37a-5839bdc1079e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "85694382-511e-4e12-942d-116a5566ae37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93a1879-0d95-4137-b7a9-b821c4f3edab",
        "cursor": {
          "ref": "8de19c13-9f66-4e89-b8d1-a6102c809741",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d43bf49e-5697-4f12-9879-9a22b80f785b"
        },
        "item": {
          "id": "b93a1879-0d95-4137-b7a9-b821c4f3edab",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4a5c7777-3503-48c0-bd49-a0d0f3319b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1743ae03-e630-40ea-8919-6a6722621836",
        "cursor": {
          "ref": "18602049-052b-4f06-ae9d-fa879a76afb7",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d2fcd9f5-7a6e-44bb-b644-82e933109550"
        },
        "item": {
          "id": "1743ae03-e630-40ea-8919-6a6722621836",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9ff72319-e897-4eba-a140-b32b8d6d4434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d4d020-5ebd-4328-8bfe-448eb1653622",
        "cursor": {
          "ref": "e2d90e91-c945-45dc-b5ca-de2123a027c9",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2f5926d1-fc0d-4779-a2cc-c8ce1537e9be"
        },
        "item": {
          "id": "30d4d020-5ebd-4328-8bfe-448eb1653622",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "37355d59-3883-4543-977f-2c82c134d91b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36a3448b-904b-4022-a41f-bbea3b88620e",
        "cursor": {
          "ref": "c3a76ee0-3a6f-4697-807d-ba8609db1814",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cddf82ca-1c3d-481e-9e85-a84e4c94662d"
        },
        "item": {
          "id": "36a3448b-904b-4022-a41f-bbea3b88620e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b0029727-abd1-41a6-9f82-e023ef0bd32d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db92c5b0-f1e0-4fb1-b5dc-45f2de00a511",
        "cursor": {
          "ref": "3cb818b8-659a-415d-b15f-1a05a9ce1041",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f67f22cc-8692-4373-9a3d-d3c410f8d7a2"
        },
        "item": {
          "id": "db92c5b0-f1e0-4fb1-b5dc-45f2de00a511",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "2702b11c-7167-499a-9454-eefd8047cfa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f90655bc-a2d9-4db1-be45-c1331674fe89",
        "cursor": {
          "ref": "1599e90c-6f9a-4d89-b982-23c2054006b7",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6fc2adfd-b710-4efe-9367-fd682f6579a4"
        },
        "item": {
          "id": "f90655bc-a2d9-4db1-be45-c1331674fe89",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4b634461-a8e1-4b97-9355-a6bd73227aa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bd190b-fa1b-49c9-beea-0a436ce51c86",
        "cursor": {
          "ref": "b20bb689-2a10-4332-a04a-2bee9246ff3a",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "864c7dd1-0457-417a-82cc-c4ae990a0728"
        },
        "item": {
          "id": "27bd190b-fa1b-49c9-beea-0a436ce51c86",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0f2f7a32-c39c-4ac6-af75-d29fd3faf879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6472b453-b579-43d0-aa51-31f055f4fefb",
        "cursor": {
          "ref": "62d43250-3b4a-4aab-bc9a-39a90431eac5",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "72c24559-7de8-4201-b6ce-d8099c2ba106"
        },
        "item": {
          "id": "6472b453-b579-43d0-aa51-31f055f4fefb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c11a9ed6-bcd2-4cb5-9a80-b94d0276a2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f6c1773-e78b-4e9d-82a2-5b0f8f168831",
        "cursor": {
          "ref": "83205bb3-81eb-46b0-a651-3899ac8169fb",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "16c2a5ea-dfde-4236-a6a6-2d88b4078364"
        },
        "item": {
          "id": "6f6c1773-e78b-4e9d-82a2-5b0f8f168831",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "560cfe25-91c5-4ef3-a2a9-ea05f7f42ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d34df7-568f-47d8-9c45-619e8966bdda",
        "cursor": {
          "ref": "d0ab8f54-6e10-4cfa-812e-99701eef7d98",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d9eafa20-a441-4857-9c82-062227b3543a"
        },
        "item": {
          "id": "31d34df7-568f-47d8-9c45-619e8966bdda",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "448d5ae1-aed2-4647-afee-d1b65bae0647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace5546f-0d17-4f86-b1c2-281dc0af6ec6",
        "cursor": {
          "ref": "b178f140-7664-4c20-935c-9809f5b8f744",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ff1891f4-c81c-4108-a49e-a42e93025a29"
        },
        "item": {
          "id": "ace5546f-0d17-4f86-b1c2-281dc0af6ec6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "19223c11-f9b1-4531-ac3a-85d886f5427a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e439018-abb8-4ba1-a630-747f56f480ec",
        "cursor": {
          "ref": "85d3496b-2cf1-4727-baa5-cf5807d407b2",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a1e40aeb-a06d-4457-acb3-9b6a35a484ab"
        },
        "item": {
          "id": "6e439018-abb8-4ba1-a630-747f56f480ec",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "84335b55-6f8d-4cdb-83bc-b58d9dac3e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762a1f5b-b406-4e81-9b41-aeddff225936",
        "cursor": {
          "ref": "c58f3600-e700-41fa-b42b-cf0c22572208",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e44750bd-309e-4ec7-9a1a-2ec6f99b72a0"
        },
        "item": {
          "id": "762a1f5b-b406-4e81-9b41-aeddff225936",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "88411485-059b-448e-bc7f-51af9e3e73a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "360f289d-3ef2-46f7-8cb3-1bec8309872d",
        "cursor": {
          "ref": "9c7f9ca1-0b10-4ebd-ac2f-1e4cfe5905c6",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2ce3988c-1fcb-4f91-ac10-3a89faf45880"
        },
        "item": {
          "id": "360f289d-3ef2-46f7-8cb3-1bec8309872d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "794942ef-96e8-42bf-9a30-e845d87c69fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff0ed10-4ef7-47ad-9a24-af7d6564a917",
        "cursor": {
          "ref": "5cb87683-7b22-4b5e-adaf-2a87c87a3aa2",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7d2553f5-208b-4d68-969a-885cd85aab6a"
        },
        "item": {
          "id": "dff0ed10-4ef7-47ad-9a24-af7d6564a917",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "23450315-1f99-4b13-b2f4-224659877252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c68b17-8da4-447e-94ce-f6e6f3f5c54c",
        "cursor": {
          "ref": "21258c20-e490-4bd0-b9aa-0c0ee0b1d940",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9f8924a6-8314-4ba2-a4bd-d583a583ea03"
        },
        "item": {
          "id": "b2c68b17-8da4-447e-94ce-f6e6f3f5c54c",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "79620422-1a6d-4fac-8c18-15649c6e38f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09328169-3c5f-4de9-b165-09ed14e48ab5",
        "cursor": {
          "ref": "9b83a0eb-2f18-482c-ac04-8b3bceb16ba8",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "8368db78-d84f-43a9-9e12-bf7c64ac8d30"
        },
        "item": {
          "id": "09328169-3c5f-4de9-b165-09ed14e48ab5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "3410a446-7c41-4981-ba94-40914388b92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ede0ee3-c823-4ae3-8bfa-f2958980a033",
        "cursor": {
          "ref": "6b9d1330-28c9-4259-a435-d961c07a3c57",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8f1a8bd5-2fc9-4a61-aace-aaba200f57f1"
        },
        "item": {
          "id": "7ede0ee3-c823-4ae3-8bfa-f2958980a033",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "67bdf301-ba7a-4a87-9a6d-2783b7712889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac4437f1-588e-413e-a198-10135ca56e23",
        "cursor": {
          "ref": "383b93fc-b69f-429c-8b5e-4fb96bd3c320",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "54098c41-c31e-4a60-a7bf-cc486098749e"
        },
        "item": {
          "id": "ac4437f1-588e-413e-a198-10135ca56e23",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "88b3cab0-cf14-4d2f-bc53-01292b171072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2719f69-aeb3-4e03-9ef4-9e29432571ab",
        "cursor": {
          "ref": "6f0c63de-b2a4-4c63-92ec-b62b7eb1991c",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "982664a9-b91c-4f82-baff-220890a5afc7"
        },
        "item": {
          "id": "c2719f69-aeb3-4e03-9ef4-9e29432571ab",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "5a8d0e96-67f4-4503-bac6-36308bfeab61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f005854-d666-4236-a8b5-b33a97a58723",
        "cursor": {
          "ref": "71e51f46-adda-4ed0-aa5e-b08aab1e011c",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e9fe3485-ca44-4d3b-bd9a-447b4a247c90"
        },
        "item": {
          "id": "4f005854-d666-4236-a8b5-b33a97a58723",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5848d590-92e6-4d16-a429-50e09236e07a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d780dd68-70cc-48c2-9f83-ba103643e257",
        "cursor": {
          "ref": "077d4059-7c89-4eb8-a7a1-df39d4fb7d8a",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "560b50e7-a513-448b-8f1f-bfb5283035f1"
        },
        "item": {
          "id": "d780dd68-70cc-48c2-9f83-ba103643e257",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c014a211-4d4b-45a1-914f-61c49a67056f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8ad8c42-f8b4-4d8f-9af7-a4e48b75e1cc",
        "cursor": {
          "ref": "74960144-abda-48c8-8fa3-4f52ac559630",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3410840d-8356-4495-91f3-67788fc2a689"
        },
        "item": {
          "id": "e8ad8c42-f8b4-4d8f-9af7-a4e48b75e1cc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "355afa06-4b4a-4c24-bfd9-1689dfc3394e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3073f60-c50b-4bdc-91e4-98f2240e124e",
        "cursor": {
          "ref": "4ae50395-65ef-453e-8668-c3697b09ff0d",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "02f43346-4e8a-4cef-b6d9-695c4f7d63e5"
        },
        "item": {
          "id": "c3073f60-c50b-4bdc-91e4-98f2240e124e",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d78cb5c3-0169-4532-aef1-3be83cab0a0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccdaf0a3-7e2c-49f4-9dd6-616c44047683",
        "cursor": {
          "ref": "c7eb6c2e-8687-483c-b187-cf941091df6f",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "b43f9f6d-e205-4152-bbeb-233bf25eb0c4"
        },
        "item": {
          "id": "ccdaf0a3-7e2c-49f4-9dd6-616c44047683",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d38bad4e-562e-474c-98c7-1d958fe21e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9887a2ba-f440-49b0-92a1-7d5ec4ef476a",
        "cursor": {
          "ref": "ec6ca2d0-6b20-4af0-8f2b-f302e60d7571",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9454f047-a957-409f-ab6d-3f72016188fc"
        },
        "item": {
          "id": "9887a2ba-f440-49b0-92a1-7d5ec4ef476a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e3c3ef54-d4db-4613-bec4-642b13241cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab4ca2fc-1118-48ea-975c-fce6799ce57a",
        "cursor": {
          "ref": "0d09209c-642e-4183-a356-67ad432caab8",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "91047339-1f57-4442-8d57-7e8a66f1ce95"
        },
        "item": {
          "id": "ab4ca2fc-1118-48ea-975c-fce6799ce57a",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "1c8863d5-7c70-49f0-be3b-efbc0f3739ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb21a3b1-713e-43aa-9eee-aba7e38ecd72",
        "cursor": {
          "ref": "e9d833ca-66db-49c6-8e13-9785aa5f5c91",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "34a8e09e-ce20-40ab-a501-e28a860ba421"
        },
        "item": {
          "id": "eb21a3b1-713e-43aa-9eee-aba7e38ecd72",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f305e08c-72ef-4545-88e3-3797e118065f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225aba72-5132-4f61-89a3-c2aa44b6e6a7",
        "cursor": {
          "ref": "aa2d9ba1-d96b-4536-9454-3a59c6024a93",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4473bbe6-8e02-4614-a52e-2be700626ceb"
        },
        "item": {
          "id": "225aba72-5132-4f61-89a3-c2aa44b6e6a7",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "57bdf4ce-ebbf-4b45-8602-a2c498b548ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d348f225-fe34-44c2-a3d1-1b5bd8bf1da2",
        "cursor": {
          "ref": "4f3295c8-773f-48e7-b8f8-fc30932b7ec9",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4e3be905-7c3a-4e8d-831a-8be36065dc62"
        },
        "item": {
          "id": "d348f225-fe34-44c2-a3d1-1b5bd8bf1da2",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ef1dd0ab-9508-48f7-98c2-9da4c3b10db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49c4f6a-63ad-42bc-837c-56497d3675ef",
        "cursor": {
          "ref": "ba478266-4dfb-454d-8518-ba261ccc6bc9",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8ecd964c-2196-4e4e-ada1-98e25023855a"
        },
        "item": {
          "id": "c49c4f6a-63ad-42bc-837c-56497d3675ef",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5699083b-c36d-4b33-a7c7-7aa46ea0c32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90942090-a116-4202-a803-13f9ef95f9c3",
        "cursor": {
          "ref": "5e844716-deb1-422b-a0c0-adfe4d7a5ecf",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "b6a2733a-a31b-4fcc-8d6e-d20f2736b1bd"
        },
        "item": {
          "id": "90942090-a116-4202-a803-13f9ef95f9c3",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ab4f5c85-dab4-4a08-9d3b-66acc812f485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c85f6d-7cc4-4c02-9bb3-084d3e936b30",
        "cursor": {
          "ref": "1ddc7ed7-f62d-4a05-a4a7-5ab41ec184c3",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "aa7cbbcc-089d-4aa3-9819-1d0adb3c9221"
        },
        "item": {
          "id": "a9c85f6d-7cc4-4c02-9bb3-084d3e936b30",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "80473a33-5bb2-4368-b775-0ff9d8c55e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9335a34-36f3-4ac8-be04-06abb3f92ac1",
        "cursor": {
          "ref": "13559586-b660-460b-b780-88da2b2317cc",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4e533655-1675-4a23-ae5b-6e99a08f4b54"
        },
        "item": {
          "id": "f9335a34-36f3-4ac8-be04-06abb3f92ac1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "83203da2-86c0-4862-b72a-0bf08b3f753d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854211f1-6e7b-4e92-aa2e-081ec7244802",
        "cursor": {
          "ref": "c766f731-429a-41d7-a40c-d4a82b405cdf",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "223ec65b-b6e2-4e75-9527-78db4a095bb4"
        },
        "item": {
          "id": "854211f1-6e7b-4e92-aa2e-081ec7244802",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f0e87ef9-7f59-494d-b2fa-0a1586f0d674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df6d4427-1890-4375-8647-d08a75b8092e",
        "cursor": {
          "ref": "7f2e63f1-1c23-4a41-bc9b-2597f273424e",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "72e94896-33c4-48ce-965e-42e9887b2f07"
        },
        "item": {
          "id": "df6d4427-1890-4375-8647-d08a75b8092e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9abfcc52-d40c-49f5-9114-c4b9681115c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854f5bf7-1884-4831-b83e-3bbfcaa67423",
        "cursor": {
          "ref": "3058c51e-3bf0-42b2-a4ec-6958e8db32e8",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b4fb28c1-adda-45a0-80b5-630df83127fd"
        },
        "item": {
          "id": "854f5bf7-1884-4831-b83e-3bbfcaa67423",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "749de0d5-4cbc-4979-86d3-d470f6b10d69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde58355-316f-4134-8934-0dcb435aa07a",
        "cursor": {
          "ref": "26288a23-ba18-4a98-843b-067effa61e9a",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9a231351-0144-40e9-96f5-bbcd3c54c982"
        },
        "item": {
          "id": "fde58355-316f-4134-8934-0dcb435aa07a",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4e9d028d-728a-4e9c-9be4-e670530e671b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23756376-9c11-4dae-91cc-41ee5c9ee2da",
        "cursor": {
          "ref": "43f8cdff-312b-45b3-8fe1-ebf9c4c3f15f",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "3119da57-22ce-487a-9f09-363d566c8820"
        },
        "item": {
          "id": "23756376-9c11-4dae-91cc-41ee5c9ee2da",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4aca86be-07d5-4910-9982-6c30cdfc069e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70db52b-4ac6-4402-9c25-67d0be328570",
        "cursor": {
          "ref": "142d1c63-eafd-4cb2-b159-0a2ec61a250e",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "7e67b0ed-5315-4275-909d-1a71e9840ab7"
        },
        "item": {
          "id": "e70db52b-4ac6-4402-9c25-67d0be328570",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "b6800c28-b9ed-4f68-b518-2cd1c1f0ba2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9498788-217f-4951-86e2-9083fb535045",
        "cursor": {
          "ref": "a7a6c46d-e60d-4d42-9e41-354d36c4ab7a",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7199516b-1668-4658-adef-ea254dd394ea"
        },
        "item": {
          "id": "a9498788-217f-4951-86e2-9083fb535045",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "08068dbe-d165-4998-8abe-706406f0a94c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f490dd4-a4e8-4fdd-be37-3b764b63ea94",
        "cursor": {
          "ref": "b9875021-721a-452a-aa3f-8833a3b73d2d",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5ad0bee8-b4b1-424d-90af-11ea3702611d"
        },
        "item": {
          "id": "9f490dd4-a4e8-4fdd-be37-3b764b63ea94",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0cb029db-61d0-4771-bf87-01e8ce62bfad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd36758-d3a1-4b2f-b36e-f709fb58d669",
        "cursor": {
          "ref": "bd87f1c4-7bbc-468d-879e-c9faa58135ad",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "020dcedc-b695-44bc-a63f-ebb9541b6ee2"
        },
        "item": {
          "id": "dbd36758-d3a1-4b2f-b36e-f709fb58d669",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6723b536-877e-483e-b900-bcc83c4c35f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d120c63-9b93-4b8f-917d-a83e1d98913e",
        "cursor": {
          "ref": "018cfac0-1afe-4e00-8395-41db3abd9a8f",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "04d8d878-aedb-4f35-867a-a5a68249e009"
        },
        "item": {
          "id": "8d120c63-9b93-4b8f-917d-a83e1d98913e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "924adbe1-68df-48b7-a620-6d12a5adfa56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fbf0713-7290-4014-ac03-94af9216bc7b",
        "cursor": {
          "ref": "ea0dc7b6-c7bc-419a-a7e9-45772eef84ee",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6dcb0da3-55c1-4ff8-bcea-ee62016735cb"
        },
        "item": {
          "id": "4fbf0713-7290-4014-ac03-94af9216bc7b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c934653a-25e3-4dcb-b2ce-ecef39637979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f99606c3-8b9d-454d-9873-99d5560cb7dd",
        "cursor": {
          "ref": "816978eb-050a-4ea0-ab26-6cdc45ae7044",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a0b4ba6b-71b4-4cf4-9e84-0bc9e43e2bef"
        },
        "item": {
          "id": "f99606c3-8b9d-454d-9873-99d5560cb7dd",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "93f423a9-a8bb-4ab3-bb87-c1043655efe3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b76dcc-ddbd-496f-9c08-6f6d6c2e5ac2",
        "cursor": {
          "ref": "37939427-c0ef-4346-bd43-5a7988e9d9cb",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f91235d3-8838-427f-a099-bd948e1a72df"
        },
        "item": {
          "id": "33b76dcc-ddbd-496f-9c08-6f6d6c2e5ac2",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c13fd764-be51-4a46-b01a-bab2a153841d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "536015cc-cd34-44de-b7ea-1412cf97496b",
        "cursor": {
          "ref": "debf3fc6-a789-4fee-a54d-a78a6a0ebfa5",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "14a4e465-48c9-4035-8dc9-ac2d1942bf7b"
        },
        "item": {
          "id": "536015cc-cd34-44de-b7ea-1412cf97496b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "11e15c02-6cb5-4d0a-8ef4-f4acdaaa9d8a",
          "status": "Created",
          "code": 201,
          "responseTime": 5659,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fbbd9b-193c-457d-ad06-6889a5459e8d",
        "cursor": {
          "ref": "7b0b3792-38c5-4c46-b147-6780b6ccb48f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "eda93f9c-ea26-4246-84f9-ee609afe74ac"
        },
        "item": {
          "id": "53fbbd9b-193c-457d-ad06-6889a5459e8d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f07cacf3-b3ae-4b14-84aa-18cb807207b3",
          "status": "Created",
          "code": 201,
          "responseTime": 4733,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69a1336-17e3-4175-af6e-cc82f61d1abc",
        "cursor": {
          "ref": "3ef12097-19fa-4f05-8442-3f02bb805cb6",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "736d6dd2-bb95-4242-b182-7ee17162f3f1"
        },
        "item": {
          "id": "e69a1336-17e3-4175-af6e-cc82f61d1abc",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5e91c216-c991-49cb-ad4a-1057edddb0b9",
          "status": "Created",
          "code": 201,
          "responseTime": 4080,
          "responseSize": 1229
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e452afa9-a3e4-4281-bc2a-039242e4538e",
        "cursor": {
          "ref": "5cfde7ce-a266-4f9b-95c4-9cd1219ec380",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ee5f1b07-a965-432a-94a1-c6256773ec94"
        },
        "item": {
          "id": "e452afa9-a3e4-4281-bc2a-039242e4538e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b45e3a3b-dd5b-4ec1-b04e-2186c9d8f9c0",
          "status": "Created",
          "code": 201,
          "responseTime": 4745,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "604b1095-26c1-4abc-b499-600281564b82",
        "cursor": {
          "ref": "a38c3cf2-9f07-4f44-9294-7cc8a7c76043",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "842cf55f-f3d9-4306-abf0-8edeb16c2e0d"
        },
        "item": {
          "id": "604b1095-26c1-4abc-b499-600281564b82",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9d1f02c0-a72b-4bd7-937a-b0ffdbdfb10b",
          "status": "Created",
          "code": 201,
          "responseTime": 4012,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-05-26T00:40:56Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-05-26T00:40:56Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "b86fdb9c-ea9a-49b8-9990-2cf7b971ec52",
        "cursor": {
          "ref": "ffc25c45-8719-41c2-aa1e-eeafdbba7851",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "502ec072-eacf-490e-94b8-89c3639ef2d4"
        },
        "item": {
          "id": "b86fdb9c-ea9a-49b8-9990-2cf7b971ec52",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "7f99c4d9-0615-4853-9299-e5a43704fdb3",
          "status": "Created",
          "code": 201,
          "responseTime": 4132,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f75624a-230f-448c-adb6-ed113f50bc73",
        "cursor": {
          "ref": "08fb304e-8cf2-48e1-b054-2dc6c6848d31",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "33f692cf-63d9-438c-9db1-5126eed35e17"
        },
        "item": {
          "id": "6f75624a-230f-448c-adb6-ed113f50bc73",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5b7a0d37-1021-4d12-81e0-8219216765f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965e215c-74e0-431c-9d42-ea40bd6eec3b",
        "cursor": {
          "ref": "36739979-2967-47d3-af43-b976da54d86a",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ab8e4b9b-0c53-49f3-8699-2e21f09d682e"
        },
        "item": {
          "id": "965e215c-74e0-431c-9d42-ea40bd6eec3b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "83abc89e-14a1-42a6-91d6-596cda5cec7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e30043c-638a-433a-a0c7-aaf54ef817d9",
        "cursor": {
          "ref": "188f2adb-e0bb-4f20-a288-100dfb217b7f",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "84f3a5e0-ebfc-4f0f-a159-2d4c19afc42b"
        },
        "item": {
          "id": "4e30043c-638a-433a-a0c7-aaf54ef817d9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "05f782a3-4a15-4541-a59b-4b01afa8e8ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63639e97-f767-43fb-b261-09457749376a",
        "cursor": {
          "ref": "fc17547a-6e9f-4709-824c-c737a11ceb0d",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0991aa00-2add-4606-98ad-cc00651054b0"
        },
        "item": {
          "id": "63639e97-f767-43fb-b261-09457749376a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9b376ee6-e895-45d3-b12a-21e4c18ae1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7031912-79ef-48b6-a81c-3237c895ccf7",
        "cursor": {
          "ref": "c24edb03-22e5-4db4-af53-c9ef697ca4be",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e5096f49-781e-4d6b-959a-3950adc6196a"
        },
        "item": {
          "id": "c7031912-79ef-48b6-a81c-3237c895ccf7",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5486a1d0-1196-466a-adb1-4ad354913e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbab4eb2-04c8-472c-8e76-bc192f616e5b",
        "cursor": {
          "ref": "1dee1354-fe9a-4cae-aca9-acb5a41c35d2",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "837d813f-fd5f-4845-891e-de3c6ef47383"
        },
        "item": {
          "id": "bbab4eb2-04c8-472c-8e76-bc192f616e5b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e8982d13-c88d-4bbe-bf1d-a8d4e5564aba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f57033-1478-4bdd-b29f-8e1fcef73dab",
        "cursor": {
          "ref": "c293f7dd-7b8a-4d47-9b62-422b7f218946",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "394a51d3-6c65-4cd0-9ad1-8be4f2981eed"
        },
        "item": {
          "id": "98f57033-1478-4bdd-b29f-8e1fcef73dab",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "afd34119-82ff-4beb-b070-5dffd5577c93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56290535-370b-4dda-8f58-6b28d6832f22",
        "cursor": {
          "ref": "449f9927-b121-4432-9e84-f93a9f294674",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "212e09a2-e96d-4667-bdf6-37f7d96306cd"
        },
        "item": {
          "id": "56290535-370b-4dda-8f58-6b28d6832f22",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d2ea7b79-34d7-4f85-97dd-773a6af20f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eef87ab-c1b5-4f88-b8b7-7d95508c619d",
        "cursor": {
          "ref": "be9478e8-ec6d-4728-acef-94b62ff7ed97",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a320eed9-37ce-4612-8dd8-d7995409e33d"
        },
        "item": {
          "id": "9eef87ab-c1b5-4f88-b8b7-7d95508c619d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "16822ec1-b498-43b7-a897-51bbf5d2e385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ffbb345-4741-40c1-8758-a4328d181307",
        "cursor": {
          "ref": "4bb13206-1a58-41d7-bd57-1f57d8e67c61",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "39a8b931-2d08-43a8-8b67-8b73e6a1b48a"
        },
        "item": {
          "id": "7ffbb345-4741-40c1-8758-a4328d181307",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b6bd539b-28fb-46ef-bf9c-5535ab211a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa7d3bc-a711-44f4-b35f-6b4991e30a10",
        "cursor": {
          "ref": "0377c065-ddf7-4765-bda1-72e0a3af9709",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "3ae8770f-ad24-41d7-9dd3-eda5f3323ec2"
        },
        "item": {
          "id": "bfa7d3bc-a711-44f4-b35f-6b4991e30a10",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "34df6852-f52d-4334-bb37-763f438fe7b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c6ef1f-7774-40e5-8b19-2b8a00705dce",
        "cursor": {
          "ref": "a8a1dbdc-2dcd-40b6-a1a7-abe941761ac9",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9c9a03d2-93de-4ae8-a20f-f43779add634"
        },
        "item": {
          "id": "38c6ef1f-7774-40e5-8b19-2b8a00705dce",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6ac21ef1-86fc-44ac-9a10-35a8a286b0b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cdf8edf-0c2d-40ac-be42-bc7c6fa2a769",
        "cursor": {
          "ref": "bea7b869-4ee9-4a26-aba2-2072c695ba4c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "902a3f5a-d333-4887-8280-32efcad036a0"
        },
        "item": {
          "id": "2cdf8edf-0c2d-40ac-be42-bc7c6fa2a769",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "72256306-51c6-4862-90b0-fd63a326cb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c7f6c3-ce0a-4fd1-b0e4-19cb613d4be9",
        "cursor": {
          "ref": "125b8f59-69cd-4606-ae70-c8e5dcb93a7a",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "a08621b4-37e8-4448-81df-1509fea97026"
        },
        "item": {
          "id": "50c7f6c3-ce0a-4fd1-b0e4-19cb613d4be9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "81b7fd07-2e61-4d47-97a7-ee00b65f9b8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62dc884d-1712-4e0a-a5cc-b62dd1391835",
        "cursor": {
          "ref": "c48a5c2f-0d02-448f-bf69-5218235e9578",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "67fb10ee-f4cd-4e83-9b71-e54703fbc746"
        },
        "item": {
          "id": "62dc884d-1712-4e0a-a5cc-b62dd1391835",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1bb9d7da-822c-45c4-a4cd-7336f14bd0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c629ac-7515-4dbf-b93c-35c333fa2f30",
        "cursor": {
          "ref": "6159bd5e-1222-44ea-bff8-36ebdac71c6f",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2ecf9522-1ab0-4520-9195-0eb7e3a9b25f"
        },
        "item": {
          "id": "a3c629ac-7515-4dbf-b93c-35c333fa2f30",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5f495922-bcc2-484e-837c-2cbef321b29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb11b82c-0674-43a7-bc72-32d56595a481",
        "cursor": {
          "ref": "b4ef9f07-8fcb-47af-b3c4-cb553e74a033",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c89c665d-d285-452f-aab5-83992c0e962e"
        },
        "item": {
          "id": "fb11b82c-0674-43a7-bc72-32d56595a481",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ee80b3aa-7895-4db7-ad20-d13570ddad32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9793409e-30ec-444a-96d0-c3100801be9f",
        "cursor": {
          "ref": "df9f19ba-310a-4566-b6fc-e980f9b3fb25",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d215db66-ca66-47fc-9468-7dc54d600ef9"
        },
        "item": {
          "id": "9793409e-30ec-444a-96d0-c3100801be9f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9a680c58-40e3-499b-9e20-5935adb6134f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd0cadf-054c-4309-9099-6ae325349784",
        "cursor": {
          "ref": "8c08a3c4-996f-4a8d-89d9-78f20a588c67",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9ff1fd20-b287-4af5-9f01-d10b3d2f383f"
        },
        "item": {
          "id": "ffd0cadf-054c-4309-9099-6ae325349784",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2cc340bd-c102-4348-830b-feae3b0a8260",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5abf1c2-a8d4-4bae-bac9-190d6232c4ea",
        "cursor": {
          "ref": "2da42cdc-30d5-4d09-abca-17839df04751",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "039dfc33-e5aa-4e83-afcb-8122dfcbad1b"
        },
        "item": {
          "id": "d5abf1c2-a8d4-4bae-bac9-190d6232c4ea",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "692fa92a-72a4-4bbb-8af1-cd07dff0d0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3714186f-2362-4448-970b-12a14987fb61",
        "cursor": {
          "ref": "f2d6525f-b4f7-4612-961d-c6b0a225bac4",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5a282658-38b1-4260-ab90-02849b98ab28"
        },
        "item": {
          "id": "3714186f-2362-4448-970b-12a14987fb61",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "9a1e58d3-78e3-4e0d-918b-c25111eb9ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bd9ebc-1315-451e-9112-633870ed6458",
        "cursor": {
          "ref": "e30e3cf7-7775-48c2-ba95-7ffdeb320d28",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "73bf0150-f1f0-47dc-a8ab-cba86bc8e4e7"
        },
        "item": {
          "id": "b1bd9ebc-1315-451e-9112-633870ed6458",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6164207a-53ed-4e29-9efb-f72f92f39309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a223af-2583-4c5b-b756-19c5d99e39f4",
        "cursor": {
          "ref": "06ab5e0a-d519-4b55-a014-a25cc53a571e",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "39c24bf4-70b0-4eee-8150-c49c2e7544af"
        },
        "item": {
          "id": "40a223af-2583-4c5b-b756-19c5d99e39f4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a82e80f9-7a73-4b04-af0f-0adb8daaf598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d4ff5a-e794-482b-aa85-b34120a3e4b5",
        "cursor": {
          "ref": "b726096d-8b2b-4531-9311-70c4439fa773",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d83c6754-ffc4-45f0-a88f-111f19f6f4c7"
        },
        "item": {
          "id": "33d4ff5a-e794-482b-aa85-b34120a3e4b5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5edf23bf-6046-4e74-8294-b7cc05d919ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8980a446-3436-46dc-80f6-abc44fac7803",
        "cursor": {
          "ref": "d65ae246-7c36-4db4-bf19-ea58634c85bc",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "48b6af20-1046-4eac-84a2-661937c4585a"
        },
        "item": {
          "id": "8980a446-3436-46dc-80f6-abc44fac7803",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b0f2574b-dc2f-48f5-8bb9-8d5598e43213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c646f2e1-07ce-4e9e-ac90-9a580624dc63",
        "cursor": {
          "ref": "8e688917-7371-49db-9fa3-97d8ffbce2e3",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e8695a8b-c2f6-4b79-92fc-2bc864b31488"
        },
        "item": {
          "id": "c646f2e1-07ce-4e9e-ac90-9a580624dc63",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d60febf7-ac4d-4366-a6c6-4966cfaa5553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c5d01e-249c-4f25-9bac-c3d4603f9b02",
        "cursor": {
          "ref": "26a80a25-1567-4570-82d4-e28c8532cd1e",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cb7c1529-8691-4da9-b514-3472300f45aa"
        },
        "item": {
          "id": "e0c5d01e-249c-4f25-9bac-c3d4603f9b02",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "86f8710d-da9f-47a0-b40d-21a15eb9a0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2087d24-c6fe-4ea5-aff4-416dd8d3eae7",
        "cursor": {
          "ref": "0f400f43-bbca-4657-8044-5789ae5edcd2",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c7e9d4a9-ff77-44d7-a75f-ab98115bac32"
        },
        "item": {
          "id": "d2087d24-c6fe-4ea5-aff4-416dd8d3eae7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9409799f-e082-4ee3-81d6-e8de2d9c3bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eb36afa-5646-4dec-87f7-84b2b2e129da",
        "cursor": {
          "ref": "1868d9a2-b67a-464d-9b6a-40a958e080b1",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "19ca1090-3be3-478b-a261-47184841bf5c"
        },
        "item": {
          "id": "2eb36afa-5646-4dec-87f7-84b2b2e129da",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "431b3a1f-fd98-4996-9fe8-177e127ac8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d71ae1-0ef1-42c7-93ac-b4dcdeaebe38",
        "cursor": {
          "ref": "adfeec2f-2b48-4df2-b3b3-bf7ca458b542",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "51a20a56-1fbc-4e55-967b-8d6153d026df"
        },
        "item": {
          "id": "c9d71ae1-0ef1-42c7-93ac-b4dcdeaebe38",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3359cdb8-bccb-402f-9df3-8057c480bc6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7307dd47-4a82-4378-8677-0a4490d51218",
        "cursor": {
          "ref": "fd7bbcc3-7021-4065-b1cd-0d41d4b2fa0d",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e0ff6bb4-1e10-4198-b7dc-069331075389"
        },
        "item": {
          "id": "7307dd47-4a82-4378-8677-0a4490d51218",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ec4e7cd7-f4d7-46de-9cf6-aaa60a1a16f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952c5080-97f7-41ee-801d-134cad9ca912",
        "cursor": {
          "ref": "e9312114-04c7-4972-912c-2fa91e083d9d",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "989e1f61-c371-45ab-aa5d-2d3fbf63f5ac"
        },
        "item": {
          "id": "952c5080-97f7-41ee-801d-134cad9ca912",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "16083d92-f66d-4164-b932-4a2b67b9e89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b326ad0-adc8-4d2e-9958-beb61c12ba21",
        "cursor": {
          "ref": "ecbf09cf-58ac-4091-98b7-d36ff301b45f",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "2703b36a-3d89-4a6a-8413-8fd3d501aaa9"
        },
        "item": {
          "id": "1b326ad0-adc8-4d2e-9958-beb61c12ba21",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6485a1a6-75c1-4265-8270-25542dfd1c18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3a7e30-b474-4e6f-a998-41c09ac87692",
        "cursor": {
          "ref": "2e391ff0-932f-4a0e-9140-7fa049744064",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bcde5531-dfe5-4130-9f44-1068d9bed5db"
        },
        "item": {
          "id": "4f3a7e30-b474-4e6f-a998-41c09ac87692",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cc5dd003-8aad-4929-ba8d-cad99e1c2623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ad71ad-90eb-4e49-bcc8-e7c3357b9967",
        "cursor": {
          "ref": "59eed20f-bd1e-47bd-b2d1-0204d20cb44f",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a018db33-5038-45b0-9716-af9f16b2f4b9"
        },
        "item": {
          "id": "f5ad71ad-90eb-4e49-bcc8-e7c3357b9967",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1d65af91-fb1f-452a-a15e-2bf8c8abbe19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4220de0-19e4-4066-89a9-5492e0529424",
        "cursor": {
          "ref": "97fb962a-730e-403e-886f-ba0f231ae88a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "98e3d734-bb81-41a9-a41d-d2f13af9466d"
        },
        "item": {
          "id": "a4220de0-19e4-4066-89a9-5492e0529424",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "77e2a65a-f869-4ebb-961d-6708e4190c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c232aa26-d4ff-4712-a364-50d5f6a43aba",
        "cursor": {
          "ref": "add26a3c-3093-49b4-a28c-6b4d26a0f022",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f0abb90a-fd0b-49c6-83a5-9d49e0b3949b"
        },
        "item": {
          "id": "c232aa26-d4ff-4712-a364-50d5f6a43aba",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "dd289ae5-855b-4b5d-9aa1-56f25ef32dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683d7a27-75e8-4144-a680-c39671d5e3d0",
        "cursor": {
          "ref": "b37c6a0c-8482-4233-bb93-b397e6473dbe",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d92f8f43-3dbb-4270-af1e-5ed4a625d5ea"
        },
        "item": {
          "id": "683d7a27-75e8-4144-a680-c39671d5e3d0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8c932632-037f-48a6-aa7e-1e6eb333d836",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc7a282-f8a5-4f38-bb8b-3c76bfd9b133",
        "cursor": {
          "ref": "dd71881d-10e5-4afa-9525-d26c36a5433c",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8a550361-b368-41c7-b6af-9e4173689d7f"
        },
        "item": {
          "id": "8dc7a282-f8a5-4f38-bb8b-3c76bfd9b133",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a6dd292d-f98f-46c5-bc00-11b7a73279bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64cbebf1-847f-42bb-9e68-498fb44c51f6",
        "cursor": {
          "ref": "1cfa9125-969d-42d5-a757-651c659b3546",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "25914571-aeb9-421c-85bf-25aa643940b0"
        },
        "item": {
          "id": "64cbebf1-847f-42bb-9e68-498fb44c51f6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "328305e5-8be4-450f-81bc-fd78e54f3e2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e273a950-b325-43dc-8952-9b65a2afa70c",
        "cursor": {
          "ref": "247aa6b3-942f-42bc-b2fb-7757d080345f",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5645cdf8-4f08-40ec-9035-72d3b0d02a3a"
        },
        "item": {
          "id": "e273a950-b325-43dc-8952-9b65a2afa70c",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "98a7172f-1f03-4265-b664-83469bbe324c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2084920-fbc5-43f0-a890-226d6a4ff427",
        "cursor": {
          "ref": "28728707-cba4-43e8-93bf-43812aeeb9e6",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b8339e5f-0ed3-485f-aa79-cb3f766e4966"
        },
        "item": {
          "id": "a2084920-fbc5-43f0-a890-226d6a4ff427",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0c91fe82-7dd1-4475-a5ec-621fcbd280fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba85405-4312-4467-a7b6-c0bddd600f8f",
        "cursor": {
          "ref": "c292eeda-2c82-4b4e-a32c-a425c1eb7915",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3a23c3bb-f884-486f-8424-326aed9175c3"
        },
        "item": {
          "id": "bba85405-4312-4467-a7b6-c0bddd600f8f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "25f7e9e0-5ebe-49d1-add1-99eb91a69178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66432eff-3366-4fbc-a8f4-3b39dc2a66fa",
        "cursor": {
          "ref": "b0c40c5f-ea0b-4285-a512-659a920fcc28",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5092c535-2e84-43a3-a610-06b7f015b342"
        },
        "item": {
          "id": "66432eff-3366-4fbc-a8f4-3b39dc2a66fa",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "303c9b9f-ed06-4e17-b57e-5ae773deaba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88c3dd9-36d9-4c24-a0a6-b698d20bcbba",
        "cursor": {
          "ref": "c89cbd18-11fa-4508-bce3-33adcd57ab32",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "dca028b3-2f76-481e-b693-36a34e4edf01"
        },
        "item": {
          "id": "d88c3dd9-36d9-4c24-a0a6-b698d20bcbba",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "229e8c73-ce10-4efb-95be-c934dee756be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a87f2b-99a5-48ae-ae41-bb8308925fe8",
        "cursor": {
          "ref": "e5e1d797-0695-4540-9cfc-dd6f7d14773c",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "1e202653-c1d7-4e53-a43d-d4277ce959de"
        },
        "item": {
          "id": "54a87f2b-99a5-48ae-ae41-bb8308925fe8",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5c1351ed-e15d-4549-9934-1927ae997d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c6fb7d4-00b1-4e44-87d6-c8df37e9b36f",
        "cursor": {
          "ref": "1a6ef878-3314-4426-9433-b3c8aecffb2b",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "da37fb89-e8df-46a2-b273-839c9166ccf7"
        },
        "item": {
          "id": "1c6fb7d4-00b1-4e44-87d6-c8df37e9b36f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "aef2e753-290c-48e3-ab06-02cc74180967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89416df-0ce6-4efc-bc26-01ac3079f2d0",
        "cursor": {
          "ref": "942dc156-82ff-408a-86f7-de022e3e248d",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "322b876d-ed70-4471-862d-d43572fd6342"
        },
        "item": {
          "id": "f89416df-0ce6-4efc-bc26-01ac3079f2d0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "5c9f2e85-c880-4998-8a8b-9577beafaba6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "866aa13b-2efc-41f0-bd72-0c8572f8d901",
        "cursor": {
          "ref": "ce056684-6068-4f56-87a6-1e42abe8862b",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "88d12b1a-f9b4-41a8-a939-5cb9b1e70cd8"
        },
        "item": {
          "id": "866aa13b-2efc-41f0-bd72-0c8572f8d901",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1f5d5037-11f5-49e6-b763-aebc1c1a0c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1fa2179-024f-492a-a667-197f34d8d2c1",
        "cursor": {
          "ref": "6f41e027-bb6b-48c4-a18b-6a17c6c4869f",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0f5bae54-26fe-485a-b96d-2975ca033a21"
        },
        "item": {
          "id": "a1fa2179-024f-492a-a667-197f34d8d2c1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f44d1d5e-ae15-4474-8892-bbdcc1f361fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08a4688-f9f9-4a38-9fc9-2b3875efe33d",
        "cursor": {
          "ref": "f50fb769-2d7c-48e9-aaa6-94cc3a6eeb83",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d0dc1706-b9a5-400b-a12f-094acb6a3663"
        },
        "item": {
          "id": "d08a4688-f9f9-4a38-9fc9-2b3875efe33d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d3401742-6467-46ed-84b9-e770da6666f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f95170-75b7-4ac6-9ce6-02737cf31922",
        "cursor": {
          "ref": "1201c9b9-700a-4b01-b0c9-c32809c1c7a8",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1f158604-de8e-4496-a7d7-661ca36ce665"
        },
        "item": {
          "id": "13f95170-75b7-4ac6-9ce6-02737cf31922",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "165848e6-e5a3-46f0-ac7a-267c2431bf53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8189e00b-7c93-47c7-a202-d4572faedac0",
        "cursor": {
          "ref": "3e4d8ebc-a2df-443f-bf38-f8ace5ec57bc",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e52ed5f9-a479-4225-bfb4-8fb2913e3aa1"
        },
        "item": {
          "id": "8189e00b-7c93-47c7-a202-d4572faedac0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "affbb330-d7e3-48f4-952e-da5e790c5eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90851f5c-3398-42bd-b061-385f9d341eab",
        "cursor": {
          "ref": "9eb49b51-4d5b-4eab-8cd4-373d77b1fd97",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9346e6d9-192b-47a1-9423-736582fd578e"
        },
        "item": {
          "id": "90851f5c-3398-42bd-b061-385f9d341eab",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "276990c9-99ec-45ec-be03-d0012a8f4ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58d6afa0-b71b-4630-a966-e8eb6941a781",
        "cursor": {
          "ref": "64f6a2e1-433d-471b-96bb-f18f2db00d81",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "85be49a7-b376-418b-a967-259969ccbbbb"
        },
        "item": {
          "id": "58d6afa0-b71b-4630-a966-e8eb6941a781",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9b4d8665-1881-465c-9b1d-f38e0028a29e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc9692a-6ea1-4a8b-b3dc-7e4b57780e3b",
        "cursor": {
          "ref": "399222fa-5c82-4785-a3d3-dbd1769114a2",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "eef0b604-37a4-468c-8952-df48460f8733"
        },
        "item": {
          "id": "fdc9692a-6ea1-4a8b-b3dc-7e4b57780e3b",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "15265a85-a618-4abc-a40d-e3a00dd8b666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61268f76-cef7-4f89-8bb1-283ecbc9396f",
        "cursor": {
          "ref": "95ed9bb5-547c-4fae-8336-9fc99d5cbeee",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "90bd5929-72ee-4c80-aa03-6b80c7765233"
        },
        "item": {
          "id": "61268f76-cef7-4f89-8bb1-283ecbc9396f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7d790049-7f0b-49b9-8d01-6331b73c8469",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df34af9b-fdaf-45ee-96ac-999bb5668e72",
        "cursor": {
          "ref": "f81c85fe-49f0-4180-a613-9c85b2461a92",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4848eedb-a972-4490-ad1b-9bfd6ffe9644"
        },
        "item": {
          "id": "df34af9b-fdaf-45ee-96ac-999bb5668e72",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "87ba8e06-e3d6-44dd-9526-8ec325bcaf8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d10e8ba-c72f-4d9d-8553-fe1695c174b3",
        "cursor": {
          "ref": "c5089f94-9c72-494f-b67b-6e8d87e3b313",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1eb93439-0e25-4b88-9c75-60be7f7fa75f"
        },
        "item": {
          "id": "6d10e8ba-c72f-4d9d-8553-fe1695c174b3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4680d894-dc9e-4cc7-a753-9797ba6de0af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5645e5-83b2-4695-8a4e-621b46ca5eb2",
        "cursor": {
          "ref": "13e96dfc-30a5-485d-baf2-f5e7443b3bfd",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1b257ce2-7dac-4abb-a153-33640cf75004"
        },
        "item": {
          "id": "3d5645e5-83b2-4695-8a4e-621b46ca5eb2",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "85604d7a-76b1-461f-99d6-96b57bcbecba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318c89ec-2596-429e-ba14-674b714f6225",
        "cursor": {
          "ref": "33e7420e-dfac-45cf-955c-c98653953f0e",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d3cf7a59-3fdd-42d9-983b-bb0b007124b9"
        },
        "item": {
          "id": "318c89ec-2596-429e-ba14-674b714f6225",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "efb2df87-9b02-4840-93cc-832d2e6f0870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e5652b-efbe-4e67-9ecc-87bcf94ad988",
        "cursor": {
          "ref": "e07c99ba-1853-4c6a-bc06-d2a77fc005d7",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "196d483f-0763-477f-b37a-a153dd8c51be"
        },
        "item": {
          "id": "34e5652b-efbe-4e67-9ecc-87bcf94ad988",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1f9c53f6-7644-4084-9d38-d7f8e8d3ad9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ca9cb10-5c32-49f7-8b66-f89b89544a07",
        "cursor": {
          "ref": "1182bf79-67dd-4197-8cb2-57a71f8eae89",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c62a1835-3fd7-4e2f-a898-c99b630937b1"
        },
        "item": {
          "id": "1ca9cb10-5c32-49f7-8b66-f89b89544a07",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7dfb24a2-0456-4ed5-9195-6afb4f51411f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8979379f-05af-474a-bdf1-e99a09bc2c27",
        "cursor": {
          "ref": "1e5ce849-9d00-4816-87ca-7ed1155a58e7",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "074ca6dd-96d2-47de-ae79-37eb107f9648"
        },
        "item": {
          "id": "8979379f-05af-474a-bdf1-e99a09bc2c27",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bc7fce93-19eb-4806-9d25-6683bf6c23f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd52bb7-653b-49b5-ab82-1e6ef2d2fe3d",
        "cursor": {
          "ref": "950ecfd2-0632-42a3-aeba-a3cd68e30f64",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "1434b9cc-1c90-4647-b278-6e61e980b037"
        },
        "item": {
          "id": "bbd52bb7-653b-49b5-ab82-1e6ef2d2fe3d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "84f561d9-458f-44ab-8184-645efe076009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3940895-11f2-48c3-898a-26a5cb9a6074",
        "cursor": {
          "ref": "0d56d83a-9ec4-4954-96b9-0dad13a542c2",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0eae5555-5c65-4e7b-b5a9-3f766ed54ce3"
        },
        "item": {
          "id": "a3940895-11f2-48c3-898a-26a5cb9a6074",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "1ed37253-9fb2-4b31-8226-62b405c1f9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b725417-a57f-4b6b-8522-38c26b6273a6",
        "cursor": {
          "ref": "6f3c02f6-253f-4e2a-8df2-9b12f0229570",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "43ad1d5d-fd4e-410a-bb7b-e1c96b8a397b"
        },
        "item": {
          "id": "1b725417-a57f-4b6b-8522-38c26b6273a6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "da3e3880-7268-4969-8ddf-47e71f6f9f69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be266efc-7b76-4a6c-90cc-7907f69b1f1a",
        "cursor": {
          "ref": "12a0a50b-604e-4b11-8a59-a45d54cf9355",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d43f793a-f7eb-4019-be22-0e67118977e7"
        },
        "item": {
          "id": "be266efc-7b76-4a6c-90cc-7907f69b1f1a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cd8ea411-62a9-4e52-bce8-4c3adbcd25c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99553fb1-e167-4ec6-88f2-d718bb902e6e",
        "cursor": {
          "ref": "1fbcf603-5635-4b34-b74b-6e10fe88cefb",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "cc5589de-7c1b-428b-acfb-fba8070563a8"
        },
        "item": {
          "id": "99553fb1-e167-4ec6-88f2-d718bb902e6e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "faaede1d-4502-4321-ae3a-a4f5055f294c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b66e2d-b24e-4225-8455-7daa62710652",
        "cursor": {
          "ref": "84af9363-42c7-4992-ba92-8761182ab1c6",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ad00192e-c727-48e7-916e-31fad3442b4b"
        },
        "item": {
          "id": "c5b66e2d-b24e-4225-8455-7daa62710652",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "477b93af-4835-443c-8014-9e80cd434ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3174042-15f7-4460-9da1-7f39ec1663b8",
        "cursor": {
          "ref": "cac1fd90-df20-4239-aa4e-7b0b9d95fd61",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "91065a3e-778b-40ec-80ff-b2680194fe46"
        },
        "item": {
          "id": "d3174042-15f7-4460-9da1-7f39ec1663b8",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a2502017-4da4-4e14-a144-d424406246e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a36adf2c-c5c4-407f-9c64-69579655ece8",
        "cursor": {
          "ref": "883a8b46-19fc-438f-8dfa-d0bd69f8219e",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8972205d-633e-4d40-84eb-f91945977f39"
        },
        "item": {
          "id": "a36adf2c-c5c4-407f-9c64-69579655ece8",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "48c2dac7-0ccf-42dc-aedd-5ad1407fa0fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2277e3c0-00aa-492c-bc8b-ce2d5e8183d0",
        "cursor": {
          "ref": "646f5599-bc61-49b8-a2a6-a07db3b72386",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f8a96d1c-e563-447c-bef5-0850756887b0"
        },
        "item": {
          "id": "2277e3c0-00aa-492c-bc8b-ce2d5e8183d0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1fb41132-99f4-4d66-a099-8063df9e5874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56934959-25bd-47bd-8cf8-7a044d35c6ed",
        "cursor": {
          "ref": "a6d22a6f-2dc4-4357-86e3-8323ebad7e2c",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "390d876c-be13-47d1-960c-723c8fb80fe3"
        },
        "item": {
          "id": "56934959-25bd-47bd-8cf8-7a044d35c6ed",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "12852495-adf9-454e-8ce7-fbfcab161edd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92adbda7-b23a-495a-a666-e5bde7c61087",
        "cursor": {
          "ref": "60af173b-6559-43b2-944f-5f0a36d7a308",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c5ff1b1a-fb91-4ddb-8114-603875ba0fed"
        },
        "item": {
          "id": "92adbda7-b23a-495a-a666-e5bde7c61087",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9e57454c-f8d1-42a3-bf4c-b07786a12218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3579425-beb4-4efc-8e77-fe3e4940c59c",
        "cursor": {
          "ref": "c8bd57a0-225e-4250-be09-e23083b0861a",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f5f3492e-e8af-473d-84db-a1b15e6678a0"
        },
        "item": {
          "id": "c3579425-beb4-4efc-8e77-fe3e4940c59c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "fb082cd3-5224-434b-92bd-ad420ccc30d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d169e061-8319-4f50-9e61-a09664345d77",
        "cursor": {
          "ref": "7f522052-bf95-4544-be9b-ea56ed6c3e22",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0680e308-3425-48a1-a22b-caca8c4e6513"
        },
        "item": {
          "id": "d169e061-8319-4f50-9e61-a09664345d77",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "35c0e953-f994-459c-873e-073a56a4813a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7202d2ff-22a0-4bb9-bb6c-1b5b8a571958",
        "cursor": {
          "ref": "475c8a0f-4973-404c-8370-3e5db7bde0b8",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "a4d1c06e-78e5-444b-b8c7-090b66d19cb2"
        },
        "item": {
          "id": "7202d2ff-22a0-4bb9-bb6c-1b5b8a571958",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "063c16d5-c2f9-4359-8df8-104fc0d2f8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4b0ab0-e625-4d6d-a794-f6729b410675",
        "cursor": {
          "ref": "592e2c09-0dca-4df6-8e68-4d8848bfa49f",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b1339d01-cf6e-4852-9b2e-8e12e1461f3e"
        },
        "item": {
          "id": "8b4b0ab0-e625-4d6d-a794-f6729b410675",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "750a7737-791f-44ed-9266-ef43d242813c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8189fcbc-8e6a-4050-865a-7bf9cec965f6",
        "cursor": {
          "ref": "22fd9303-e00b-4d88-9aac-37f350047029",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9d0e99e3-9924-49f5-abc4-855697cd2da0"
        },
        "item": {
          "id": "8189fcbc-8e6a-4050-865a-7bf9cec965f6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f7835d5c-e0ed-4951-b44f-9c7ee6496af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "164687eb-8cf4-422a-8b39-b3b67ac65629",
        "cursor": {
          "ref": "4a6fbed8-75bf-4248-beaf-20537761cfa5",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "90c81da6-ccfa-4518-97c8-971090d623ee"
        },
        "item": {
          "id": "164687eb-8cf4-422a-8b39-b3b67ac65629",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c8d1dec5-b2ed-4d24-becf-319f5e2fc9b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b56de68c-c8af-4573-b5c3-4898ea7a4ff3",
        "cursor": {
          "ref": "dca1daa7-a6ff-48a6-95c8-72bf80089df0",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7b5b0257-3624-43f9-9d29-bc957c982e73"
        },
        "item": {
          "id": "b56de68c-c8af-4573-b5c3-4898ea7a4ff3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "caf8922f-ad61-4016-a263-a6a949ad1ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bbf6195-0de3-4b1e-8ca3-6b0032b0f118",
        "cursor": {
          "ref": "10e840a7-fec5-4c53-9ad6-f15944f4c50d",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "15833014-3c43-4883-a344-f9c6417d31f2"
        },
        "item": {
          "id": "9bbf6195-0de3-4b1e-8ca3-6b0032b0f118",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "53ccc690-db7a-4468-b064-bab0ac64b15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4629b859-53ac-49df-86a8-2d50e66b3482",
        "cursor": {
          "ref": "3a15bb16-9bd2-4bec-bdf5-1b3176d7f00e",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "6159e966-ffa0-4eac-8364-99218ef9e7cd"
        },
        "item": {
          "id": "4629b859-53ac-49df-86a8-2d50e66b3482",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b99a7429-304e-4609-bd5d-21dd3c104097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5754df9-c56e-4705-b126-db1e4ddb9c11",
        "cursor": {
          "ref": "4f5ddec6-ef0c-4e40-a180-699ad1562f55",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "98ca5fbc-1741-4757-bb89-85d3a579f1ab"
        },
        "item": {
          "id": "a5754df9-c56e-4705-b126-db1e4ddb9c11",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "dce58ada-d8e5-4e59-bbda-9e39eadd3d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bde6aa9-8e15-4e58-b413-8e77e501924f",
        "cursor": {
          "ref": "371bf88c-f06e-4da9-a2a4-9ab9ab59a0b6",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "eb85458f-9a32-4d64-98df-f88ba9527103"
        },
        "item": {
          "id": "8bde6aa9-8e15-4e58-b413-8e77e501924f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "42a88701-7834-4224-bccd-989bd558dd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062324cf-43ef-4ee7-92fc-4b4534579af2",
        "cursor": {
          "ref": "6e4b9e98-cfb8-42cc-bde6-39707dbc3344",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6b98afeb-723a-4fe2-9fd2-82c34d5cb41e"
        },
        "item": {
          "id": "062324cf-43ef-4ee7-92fc-4b4534579af2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "08671003-a537-4119-99c0-ed5ae76cca49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88573295-74a4-414c-821f-525c747ed4e3",
        "cursor": {
          "ref": "2dad29c1-4bd9-43ad-9b5b-1a0eb2ee6201",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "58048d2e-a094-441f-946b-8c443ec07561"
        },
        "item": {
          "id": "88573295-74a4-414c-821f-525c747ed4e3",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0d2b80e0-914b-4938-84e7-9bfb8821cbff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b3ad99-cdf5-4fc7-8c66-c76dee39d999",
        "cursor": {
          "ref": "4d478aab-1350-4160-a3e7-d5655d477b7a",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "a862fa18-0e94-4e78-93dd-ebd23f56afe8"
        },
        "item": {
          "id": "31b3ad99-cdf5-4fc7-8c66-c76dee39d999",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "89addcad-6cfa-4bee-95a6-7ee3913382b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f57107-8a98-4854-b528-3c99ab8ff09d",
        "cursor": {
          "ref": "b97e085a-48a5-493a-8633-c37fa83c09c2",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c628bae0-3a89-4250-9da2-1afbe1d7808e"
        },
        "item": {
          "id": "93f57107-8a98-4854-b528-3c99ab8ff09d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "5ef47d61-c10f-43bb-84aa-48e6933b9ad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6a89e9-deb4-4711-974c-72bef13927aa",
        "cursor": {
          "ref": "c8ba769b-8b1b-49ab-b732-ed5e32bebbba",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7e4b7bbb-3e62-476b-b7bd-a91412e0d375"
        },
        "item": {
          "id": "3b6a89e9-deb4-4711-974c-72bef13927aa",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "718006ed-7012-4375-97b5-235f45ca9c77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4e9681b-1b06-402b-a3fa-ad6ee909e928",
        "cursor": {
          "ref": "fdb06aef-149c-43d0-a596-d3f969983a0d",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "d03cf490-eecc-4210-8a65-90c363b8fd36"
        },
        "item": {
          "id": "b4e9681b-1b06-402b-a3fa-ad6ee909e928",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "0dae07e1-fdf8-403d-81a2-f8bef094feb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c27f5c-5538-4705-ad4f-22ed0883573c",
        "cursor": {
          "ref": "5cd205d7-7e01-4e3e-aa46-135d431adea7",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "74a7c28e-8453-42e7-bacb-6a61325f56eb"
        },
        "item": {
          "id": "89c27f5c-5538-4705-ad4f-22ed0883573c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c3081ac6-05ac-4c91-a814-0855db096b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd2ef27-793a-4bff-9890-ce899ccca4b5",
        "cursor": {
          "ref": "39fa2cfb-241f-4271-903e-03b9d57ed40e",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cf1aa238-cc06-4f7d-b01a-59ea3bd01bcf"
        },
        "item": {
          "id": "cbd2ef27-793a-4bff-9890-ce899ccca4b5",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2adc8147-1cc1-488c-a78a-3a15c14d1c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0805f0-997a-4b85-b16c-9abfa84714e1",
        "cursor": {
          "ref": "8389f6ca-add5-4bb2-8cca-d7c565517052",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "76d7c737-10cc-4ce9-b7ce-7fc170bb633b"
        },
        "item": {
          "id": "3e0805f0-997a-4b85-b16c-9abfa84714e1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "be30ec86-b49b-47c8-b3ae-57c30b2bc6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4ae8c0-6758-4feb-a3d5-d1ed59fb7182",
        "cursor": {
          "ref": "76c51ebd-321e-400b-be84-a91938f00450",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "e8a00a2a-471f-4c84-8062-37bbb097c7e1"
        },
        "item": {
          "id": "cc4ae8c0-6758-4feb-a3d5-d1ed59fb7182",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c3fda46b-bfa4-41d8-963e-ec1a8e29602b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a351cefe-7f20-4189-95db-50676c6cde8f",
        "cursor": {
          "ref": "24bea568-bfa3-4ed2-8eef-9a383aeefc46",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2a022c73-05c7-487e-b34a-37f982202906"
        },
        "item": {
          "id": "a351cefe-7f20-4189-95db-50676c6cde8f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "13b308af-a174-4990-9fdb-91b3522d89ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857f2af8-6c72-4f4d-8a2b-adb8ee7f8032",
        "cursor": {
          "ref": "bf7fad72-672f-4182-a079-50e3a63db5e7",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a38412a0-0f3c-430d-956a-f15bb96b20a2"
        },
        "item": {
          "id": "857f2af8-6c72-4f4d-8a2b-adb8ee7f8032",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e4f73a55-bacb-4c49-90c3-9c22e93bd498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dae3f8be-cf1d-4510-ad83-7a5a9e2e6ded",
        "cursor": {
          "ref": "1d11025a-d53d-4e78-97a9-6acf29cbec82",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "35176ee4-5185-4d3c-b6b8-31ce5667289a"
        },
        "item": {
          "id": "dae3f8be-cf1d-4510-ad83-7a5a9e2e6ded",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5358a3dd-3d29-4042-86a2-0259625ce509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "456e171d-0966-4e07-95c8-24be6fc23f04",
        "cursor": {
          "ref": "97769498-448e-4183-a067-1d22d082b81e",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "23f9c405-9949-47c2-9a24-6a94d585bbbf"
        },
        "item": {
          "id": "456e171d-0966-4e07-95c8-24be6fc23f04",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "70c1a8f2-3dff-4330-a0e8-c3bb9f7b49bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9ab30e-1cd6-4d84-8cbb-25b84f85f46e",
        "cursor": {
          "ref": "b279353a-18bd-40dc-bfdd-9c6759ce5f03",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c779c787-67a2-4771-8adb-b7cc40a0f17e"
        },
        "item": {
          "id": "bb9ab30e-1cd6-4d84-8cbb-25b84f85f46e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ab922c84-f8ed-4218-bd8a-95901db971cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c1d384-fe87-4dea-9e31-4a262299da7a",
        "cursor": {
          "ref": "ba099660-c94e-49a1-93be-236c34dfb7b3",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "152c2e2d-f5ed-4026-96cb-82f086367bce"
        },
        "item": {
          "id": "b1c1d384-fe87-4dea-9e31-4a262299da7a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "08152d71-d4e8-4f9b-9527-b03658049583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f3a561-f932-473d-9244-264c2c4fbd57",
        "cursor": {
          "ref": "1225ac7a-5c8f-4a83-9844-0e20f179ab16",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "1809dff3-6aed-4cdb-8ca7-5860571ecbfd"
        },
        "item": {
          "id": "e8f3a561-f932-473d-9244-264c2c4fbd57",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9f391c66-a24f-4c9a-857b-9a8df46d0be3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "973577c8-125e-42da-96f6-e834c9a48caa",
        "cursor": {
          "ref": "2b5da21b-fb0f-4745-9618-b9db173d352c",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6f346a91-98b1-40df-9a6b-35ca1cec53a1"
        },
        "item": {
          "id": "973577c8-125e-42da-96f6-e834c9a48caa",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ec200cad-e3e4-4ca2-9f7e-e2a3801584a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe1c2893-0008-4260-9d52-a98239379660",
        "cursor": {
          "ref": "c7cdf186-5407-48d6-8a8d-ceff5ff71f88",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "b6f60532-2e8c-409f-93b2-1e5ebc65357b"
        },
        "item": {
          "id": "fe1c2893-0008-4260-9d52-a98239379660",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "ea6125f2-f97f-4642-b427-323e8de2c0ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacbce3b-a99d-480d-b7a5-d655c77a4153",
        "cursor": {
          "ref": "008fc229-0b95-4359-8a78-8b205a6bc544",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "f858e603-cb29-42e0-934a-4f6ca270c84a"
        },
        "item": {
          "id": "aacbce3b-a99d-480d-b7a5-d655c77a4153",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "9abd73be-8793-4f67-b2b7-b81cf7105e5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ceecae6-ec2e-4630-9367-823fafa96011",
        "cursor": {
          "ref": "3fd3dda0-a477-47e3-9f15-c721a128a00a",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ac5a0eef-7403-4a55-9ba2-5bc6c1a646fa"
        },
        "item": {
          "id": "0ceecae6-ec2e-4630-9367-823fafa96011",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e53c8dfa-d282-4e34-ab70-e63ac01680ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc11d17b-e14c-447e-8987-9a8d08b883db",
        "cursor": {
          "ref": "3e861cb8-1da3-47ee-8227-e6319ff99f73",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f35f53a6-ca09-4ec3-b06e-33646adcad63"
        },
        "item": {
          "id": "fc11d17b-e14c-447e-8987-9a8d08b883db",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3af1baf8-db00-4c0f-9e80-355d01a4d0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa40bd23-1079-4b1a-a154-eafe9fae9f26",
        "cursor": {
          "ref": "862d2ccf-1210-4ac7-b859-31c88209a8b4",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "63b0a9b6-0300-42a0-a581-0ab606e5f648"
        },
        "item": {
          "id": "fa40bd23-1079-4b1a-a154-eafe9fae9f26",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4effea83-d3a6-42a1-a146-e4ed9935adde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e178af73-aa4f-45f3-91ba-ba94b0742a8d",
        "cursor": {
          "ref": "f578953c-9c38-45bc-8314-f59ecbbb606f",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "779ef320-f0c4-4864-b930-7597961767c4"
        },
        "item": {
          "id": "e178af73-aa4f-45f3-91ba-ba94b0742a8d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "51b43a49-80a3-4460-a1af-fa60bedb29cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992dfd29-1272-4057-8a45-521e29c4a0d3",
        "cursor": {
          "ref": "2475ed5a-5f09-40e8-8d8f-e9bb02a73940",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1e9d78b5-9df2-4f76-8702-11042ae8d265"
        },
        "item": {
          "id": "992dfd29-1272-4057-8a45-521e29c4a0d3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4169d2e9-ed31-4ec1-8283-a325e53d0ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7870882-32ef-47ae-8c8c-89371a825a49",
        "cursor": {
          "ref": "8061f83b-bc3a-4956-bb72-7561193e66b5",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "66ab3f33-e2b4-4a0a-9c47-1031dff00902"
        },
        "item": {
          "id": "d7870882-32ef-47ae-8c8c-89371a825a49",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ab5ad322-1be0-4fbb-84a3-3ca6e1d60889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd61826-782c-47ec-9aef-0b95e4fdf686",
        "cursor": {
          "ref": "a43e0866-d77e-4a3e-9aab-7ae3773c078a",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3391b59a-ceb1-43e2-8a48-fa22473a6a7d"
        },
        "item": {
          "id": "ccd61826-782c-47ec-9aef-0b95e4fdf686",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "e2d7cc36-0bfa-4632-8e3c-f667ac6152df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41804d26-5584-46c4-ab81-5c9c03e732dd",
        "cursor": {
          "ref": "29abb286-2f0e-4c13-bfb4-6383c3c2c200",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "57ed0b67-8650-4583-a386-be440cafddd3"
        },
        "item": {
          "id": "41804d26-5584-46c4-ab81-5c9c03e732dd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f41fc4f4-658d-4d41-ad48-b8d68f698e14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c9995a-8e78-4568-ae94-bc5df30f4b8e",
        "cursor": {
          "ref": "bde76f1a-0369-4ba7-b790-ca8fc5b9afb0",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0cab7c0a-a82b-4c81-b404-5ca18a46249c"
        },
        "item": {
          "id": "a6c9995a-8e78-4568-ae94-bc5df30f4b8e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "68adcad2-c955-4f91-af38-e2b43e559173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc900499-3395-4e6d-8fc3-c9ed8fb0328c",
        "cursor": {
          "ref": "349a7e4e-ec6e-4e58-9e03-7ddc7a945361",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ce227013-ad03-473e-a828-492c863c44d8"
        },
        "item": {
          "id": "cc900499-3395-4e6d-8fc3-c9ed8fb0328c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c2e74e84-4338-46d7-98bd-c1a351d0988b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2938e6-5bb6-42ee-9d16-ca512863bb83",
        "cursor": {
          "ref": "dd8ff81f-a722-4557-9c1c-872d801fbf7e",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "85886535-55d1-4837-a6ee-2f3f62171247"
        },
        "item": {
          "id": "ac2938e6-5bb6-42ee-9d16-ca512863bb83",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "92b5b625-bbe8-4055-816b-aa396aed659b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35900148-8cb6-400f-bfdf-405f97afd2a5",
        "cursor": {
          "ref": "db2c2a92-4b24-4b18-9f7f-36aae8990bda",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bb334144-7148-41f2-8233-57a7b298bad4"
        },
        "item": {
          "id": "35900148-8cb6-400f-bfdf-405f97afd2a5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "124e515a-a5cb-4632-868b-e5b0d9a4b500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a6cacc-e1de-4acc-96bc-8eb3717e4fae",
        "cursor": {
          "ref": "86afcea2-4ed5-4aa5-9fa9-76c5917f7d06",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6bc9fa4d-0db6-4752-8c6e-f01511e6634d"
        },
        "item": {
          "id": "c3a6cacc-e1de-4acc-96bc-8eb3717e4fae",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d5e45c1c-2970-4f90-8eb6-9b3a67c644d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197b8d26-fafc-45fd-b5c8-14d5c4afcf9c",
        "cursor": {
          "ref": "06d8a4d5-4558-4d53-9d5d-e0d4cb55b091",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c9f1d924-3844-4132-8832-ea73596f1aca"
        },
        "item": {
          "id": "197b8d26-fafc-45fd-b5c8-14d5c4afcf9c",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0ac37b1c-08c1-4c52-97a7-63197edb2492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cc53ff9-2bc5-4505-8a55-df23daf59565",
        "cursor": {
          "ref": "5c61eb1c-ea05-4947-b769-7a50df65c3e3",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "89edf652-3f87-436e-b8f9-b290b7a5ec00"
        },
        "item": {
          "id": "7cc53ff9-2bc5-4505-8a55-df23daf59565",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "15ab4c57-e0b5-4be1-9fa2-b3ed2320f325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dd33b9-a370-4580-a515-a77195d87f30",
        "cursor": {
          "ref": "474b09f0-b77a-4d8f-abdf-2eef3d59f626",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f6777d96-1982-48f8-b523-b72291a8b67e"
        },
        "item": {
          "id": "12dd33b9-a370-4580-a515-a77195d87f30",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "a85aa5af-f992-4171-9cf7-9d674db1b309",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18db7e3-d43b-4f2a-acd1-0c6c1b23a0da",
        "cursor": {
          "ref": "6f699aec-2734-49be-9500-3caed7de23c1",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ffc9449b-4825-4457-b06d-26815debbd05"
        },
        "item": {
          "id": "f18db7e3-d43b-4f2a-acd1-0c6c1b23a0da",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f1c2028d-1af7-47c4-80fc-a8beef5da641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9378f8-4fe1-4e83-9f26-0fe9a5c15d71",
        "cursor": {
          "ref": "2059a415-16ba-4d1b-b6b9-6cc10c054e11",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "54e6aa33-c8e3-4811-a7be-b9e4f5b5c3bf"
        },
        "item": {
          "id": "1e9378f8-4fe1-4e83-9f26-0fe9a5c15d71",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "487676ca-ac1b-4d6c-8236-bbbaca6407e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d81ceb2-766c-4c45-9dc2-03af1b66a3e0",
        "cursor": {
          "ref": "7ece79d7-0f51-47c0-bea9-2635e0392b30",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "004b4cf4-1883-4d17-a396-6fa8c8dcea64"
        },
        "item": {
          "id": "7d81ceb2-766c-4c45-9dc2-03af1b66a3e0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1e6c2db7-5c6f-49c3-a651-837c2c9542eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeda5af6-63e0-4e63-86a8-8b2445a5cee8",
        "cursor": {
          "ref": "eca38d95-984e-46f9-af41-75f7a3b15895",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e6da90c5-da6b-42e9-8b6f-2b95f2adb774"
        },
        "item": {
          "id": "aeda5af6-63e0-4e63-86a8-8b2445a5cee8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "37255298-20c5-433b-9c2b-cffe3ed3205d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de82bc5-211b-4924-92e2-de21f0ad5b1b",
        "cursor": {
          "ref": "f3843b35-73ce-4691-956f-c31473a9ae8f",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3091f510-30d3-4e4f-a3b2-dfe2d014754c"
        },
        "item": {
          "id": "5de82bc5-211b-4924-92e2-de21f0ad5b1b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b990dc96-5680-4d37-95a3-68e2fab62120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b920c336-6b4e-4131-8cad-f9b9a8227516",
        "cursor": {
          "ref": "27571da5-2a25-4ae5-b661-eead77bc2c9d",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e0a3bfce-a58a-4502-ab04-2b9e537ba830"
        },
        "item": {
          "id": "b920c336-6b4e-4131-8cad-f9b9a8227516",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4cfcd049-0fea-4879-b1ad-0a1dbfbc7977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400829d8-f53f-4f0e-9e4c-1347888fd799",
        "cursor": {
          "ref": "fa3fc180-e4e0-41f9-be21-a7770fa3dde8",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "53ef70da-8be6-4392-871c-84c3997dfbb8"
        },
        "item": {
          "id": "400829d8-f53f-4f0e-9e4c-1347888fd799",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "26edcfde-eeba-4af0-9e70-afb26973f5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f076882-689e-4f0a-90a1-cc5ccf0a2d95",
        "cursor": {
          "ref": "5ad9b10a-e498-4d33-a550-113fa2c36a4a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "be16f62e-92f7-49ea-8e51-7c42046ac98a"
        },
        "item": {
          "id": "0f076882-689e-4f0a-90a1-cc5ccf0a2d95",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "8487e4b8-5757-47f9-b631-d0b40dcc877a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c47223-f1b9-4191-a24a-3e26d20503be",
        "cursor": {
          "ref": "02fa9ca0-031b-4b65-8774-a2319c2b8076",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f6357f7d-ba33-4de7-8fbe-56a582d2504a"
        },
        "item": {
          "id": "66c47223-f1b9-4191-a24a-3e26d20503be",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8cf3619b-fa6a-470d-9c22-92f4c24c0739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "445e82dd-53ae-4248-827d-04dcfb739b2b",
        "cursor": {
          "ref": "126b0fe1-72ed-4282-8cd8-558a06a0ffd0",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c1bead6f-a8ac-4788-8842-aee8364272f9"
        },
        "item": {
          "id": "445e82dd-53ae-4248-827d-04dcfb739b2b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6063803a-c0b0-4f57-b56f-69eadd700bbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba4f255-cb59-41bc-a237-3a8d6fef08b5",
        "cursor": {
          "ref": "cd47a7f5-cf82-471a-b689-1c30cc80c4dc",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "a0e839fd-a094-439e-8fc0-3a6328169a38"
        },
        "item": {
          "id": "9ba4f255-cb59-41bc-a237-3a8d6fef08b5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "547391f4-436c-44fe-a86a-7363574f226f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48efd85d-d485-4b64-8ec7-36aa865b9eee",
        "cursor": {
          "ref": "878fe5e6-a1e9-4ab6-aa3e-7ec96c1937d1",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c0476973-e260-4e10-ab2c-40e263cc4cac"
        },
        "item": {
          "id": "48efd85d-d485-4b64-8ec7-36aa865b9eee",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "bb3ff43a-c230-4b3b-bb5a-a0933b0666f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2b8c6f-ae67-45ce-a77f-6306f31a2690",
        "cursor": {
          "ref": "3d89fd8d-362f-42bc-be6e-fc75a7ae5b7e",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f413f1d2-2aad-42b7-b6d2-92d33760a541"
        },
        "item": {
          "id": "af2b8c6f-ae67-45ce-a77f-6306f31a2690",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "0c3d0df9-381c-4444-95f9-4c017997c308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "960e0ff4-fbf7-47f7-9fdf-60a4d8fdc1b0",
        "cursor": {
          "ref": "3a3cc1d1-08f9-4249-b9c1-6d816df096e4",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e7963f3f-e87a-4934-a35e-1f4b7749f765"
        },
        "item": {
          "id": "960e0ff4-fbf7-47f7-9fdf-60a4d8fdc1b0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8a37e5c5-8e5f-41b1-92ff-538c58033dd3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14911b2b-bb73-4fa4-972d-75d8349b96e9",
        "cursor": {
          "ref": "3bbf4d19-4bbe-4ce0-8f8b-e4173df3ebf8",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "8ec473f7-42cb-48c2-a135-2e6640b6853a"
        },
        "item": {
          "id": "14911b2b-bb73-4fa4-972d-75d8349b96e9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8d670bd7-2877-43bd-86b2-d6cebd85b6cf",
          "status": "OK",
          "code": 200,
          "responseTime": 2421,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "848c3366-4ec8-4545-a001-2e6516698462",
        "cursor": {
          "ref": "b21b0d90-5eb0-4298-aa95-f22f27318a8d",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5622ad62-8894-4280-9fbe-2b4b47380565"
        },
        "item": {
          "id": "848c3366-4ec8-4545-a001-2e6516698462",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6821b606-b7a7-4d6b-8171-aff2904ffa2b",
          "status": "OK",
          "code": 200,
          "responseTime": 2678,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d86bc72d-6ea0-4895-b6e5-67a32c66d373",
        "cursor": {
          "ref": "a26e7463-4398-4cd0-9986-4866982b14d3",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7a65a1f3-ac2f-4a1e-a7e7-6565a09a1813"
        },
        "item": {
          "id": "d86bc72d-6ea0-4895-b6e5-67a32c66d373",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "badc213a-4007-49f6-9982-e497b1e5251f",
          "status": "OK",
          "code": 200,
          "responseTime": 2626,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a372f30b-10f1-484b-9613-ac497db68681",
        "cursor": {
          "ref": "93bfe8ff-d51e-4148-8cb4-81d320e32838",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d3747fa5-9bc8-4168-a508-c10c977d4750"
        },
        "item": {
          "id": "a372f30b-10f1-484b-9613-ac497db68681",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "165b1508-ccb3-46ce-8ba9-4d882b07596b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a372f30b-10f1-484b-9613-ac497db68681",
        "cursor": {
          "ref": "93bfe8ff-d51e-4148-8cb4-81d320e32838",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d3747fa5-9bc8-4168-a508-c10c977d4750"
        },
        "item": {
          "id": "a372f30b-10f1-484b-9613-ac497db68681",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "165b1508-ccb3-46ce-8ba9-4d882b07596b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b362faf-bfd5-45c3-af01-7de31688a9ef",
        "cursor": {
          "ref": "cdb58125-3f2a-4acc-8622-8c7146e40ae1",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e59c32bc-43cc-41cd-b238-d6b049bf2e49"
        },
        "item": {
          "id": "2b362faf-bfd5-45c3-af01-7de31688a9ef",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9e887d14-2085-4833-a297-52d5714674f9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 73,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5499d0b7-3ddb-4402-a261-be7ef1694dcf",
        "cursor": {
          "ref": "9a8b2d2c-a9aa-475e-8428-a3b77db68248",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5b5abc92-0ae9-486e-8542-a69f219e399c"
        },
        "item": {
          "id": "5499d0b7-3ddb-4402-a261-be7ef1694dcf",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "785686ed-e61d-4b00-b1a1-aaafc049bc06",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 82,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}