{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "810e62bf-11da-42ae-ae1d-366bc075dd2d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "fbb8a61d-88d2-4d60-bf80-af12bd53fef6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "efc0d99d-b3b5-41f4-974c-6a4f03347a1f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bdca0333-57a9-42f7-ae14-d09ae6bbe56c"
                }
              }
            ]
          },
          {
            "id": "2e1c87f3-7859-4ea6-9d5b-b30f90de00f3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8a6b7370-db71-4c1c-a65a-068fe7fce5f9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "3291af27-81fb-4236-afdb-822c5733d974"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "356ffc03-dd33-4113-8848-22cf644b7f5a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "aa183d45-65bb-4cdb-8620-674d6d2a28cc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "45abf198-398d-4906-8b25-28439c627b81",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0ed4df3-c386-4ecc-812c-85f456b73246",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc07b607-5a64-4556-ae31-4a7b96d68c6c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "803d0d85-0905-4001-bf86-e81cb50168c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "29c9c7a4-19a7-4999-88da-dface0615f59"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "1684c764-88fe-40fc-b949-cadd28719f9b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a5d6cf41-50df-42ef-8a9f-c3cd512d6df5"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c588cca0-28ed-4673-9dd1-fcee03653d76",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2eaabf11-f617-4e25-89cd-1eff33a7a2e2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb7dd214-0d62-413c-82d8-d9ab75fddfc9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e69dce0-39fb-4fc7-bc25-31a4c19e3545"
            }
          }
        ]
      },
      {
        "id": "9a6e6fd3-9b70-4051-87ba-517a82633546",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "689a6072-19e7-4951-b9f5-3098d79a998e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8345367e-aabf-4097-b477-d900d9644371",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "53dd46b8-6f87-4c45-b99c-0cbfc31e1766",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5106f252-ee0d-4387-b3af-c5d555c07dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "325b2715-752e-44d3-a905-3a330dc57e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19ddc9a-9e56-47e0-9207-5bc1981fb6a3",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3caff282-4ae5-4bdb-bbc7-23efcd5e8488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46b3ac9c-55f2-4f7e-867c-29650a6dcaab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "810e39f7-20a7-4740-bc5f-cd37b231a8da",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f901dfe-f27a-4bac-89dc-9f8b275669e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "79d1c491-2c89-4ca9-a8ca-89f492e6db2c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c265e209-61ac-49c6-a102-aa4606bbc66d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "101d3718-dcb4-4d87-a632-2ed7a0af65e7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0736a2c1-eedb-4daf-84a6-be98856dbf2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68e3cb59-32dd-488b-a14d-17727236cc22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ad502e-bef9-4be9-8af8-9db6418c9049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb9194b-ae21-4477-bad1-54a8e5a4c96f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "31fd439a-8012-4b2b-bf37-a10073bf7256",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bc021fb3-0d7a-4eee-9979-668a91f8c138",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd643bc4-aea2-462d-92d2-8b7853114858",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "11ceeacf-288e-4d71-a155-2f2b361e05c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d08b13aa-1afd-4e6c-9bee-53aa57761a87",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "93f6057a-cb97-40bf-8577-b758ade1341d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b81655f-523f-4d68-a392-a5b1489efbb9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "796f69c4-16e9-4e59-86ab-1c235150f3a5"
            }
          }
        ]
      },
      {
        "id": "c93504bc-74b6-408f-bdd4-9f789683afce",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f1b03ed5-6713-45c8-b700-e7e090389d0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "11303e4e-0e45-43b0-86f6-da98f4962b8e",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e3eec19c-ba34-40f3-867c-62bed7cad5ce",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb5ea44-d7b9-457d-9b22-b5d3cd489f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2402bcb-ef93-4a20-a35e-d41cba7eb540"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7959d9-859c-47ef-807c-9ecdaf0dd09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cf20401-5f15-4b55-bfad-ee142d333059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8977f99-e90f-4d6f-b3c4-41190b26e628",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d89fb1b-a4e8-45cb-b04d-82703c91af6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dfad8d5-db1d-460c-a9f5-75bf93047e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65d810ca-4113-4cce-8639-a63aa14d410f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3beb3d3a-ef0e-4f80-bcd5-298ae9ff5304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cef67b-393c-487d-bb01-18756755e529",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ee98fe5-c8f3-416c-a1f9-c7a0f0a2066f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ff2ef7-fadc-4f80-a554-87b6903799a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089036e3-5030-4b91-b3ca-4e34b5860ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89e691c9-e2a8-4029-8922-6159d62b60f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e083ab-270e-4e5b-82ac-873d09300f07",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ccbbd56-febe-4024-b5aa-3497814531ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffcebd56-b6b8-4336-acfd-c467e954afdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82176e47-6bd6-4554-ac70-5904380f08f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b8e0232-a509-48dc-8882-49b4a592ea58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "881217ff-7f71-4ff5-ac91-be66f67367fa",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "665c7cc3-1c66-4e6c-bd3e-74b85b859cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4dc689b-edac-44d7-91c4-0ef1469fa09e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb269b91-5a84-46d7-b6c0-793021561046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8801ade-d06c-4ca2-959b-824893683f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558a294b-fdc4-4bf6-ad50-e006cc267edc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da883a5-5462-4e6a-843f-d68b532135df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3496d9c0-16bb-4ba7-9a39-8261c2bff31a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1161492b-c92b-4131-897c-54e52050ba25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91f1a6b5-13f9-4efd-a035-ceef580d9438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad6879b-b3e3-4ee7-a35c-118b616143ae",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef57b82-4053-4caf-82e4-7b13d1fe60bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65906a71-041f-4e27-9d7e-90a0ac89a341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e71ea7-fffc-4733-979b-1a0e9f36f562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93caf2c3-ba6a-4e6e-a51f-4e7c39ef3617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "217896be-924c-45fa-9da0-7d0d1ec17821",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c26e486-825a-4a34-b3d6-37aeca9d044e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57c5f04d-c7c7-4b1f-8396-56ea0595951c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4816e68f-2d86-4f93-a49b-38fe79fa397e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c728f62d-665e-4234-9ef3-8df2f8cff905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be120f1d-431e-4191-85ca-f6ce85caa8a5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86995c65-60fd-4f6e-bd73-763147ed90ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3917e54f-a914-4806-9611-6df6f734cce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f15e26d7-5270-44aa-99e2-ecd1c7afaa1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b6edfb2-149e-4a88-a9e4-45fe5b99e210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4c3b1d2-0a91-4d38-a048-1f5cab904e9a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "308037cc-adbc-4a56-9b40-dd5074670c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53fcb549-54c8-4827-8d34-105c63f714d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1bbd1d-4805-4866-9d12-6d12746b631e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6494f98f-2991-4894-8260-f58ba754dca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1c2d66-30dd-46ae-8aa3-eb7f4a93bf3b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "146679c8-17f8-4426-b537-a0db71aeb58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15cce5ac-9e19-4e43-895c-64a189e9dd6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e02be6-ff29-4aec-8281-cccc1767775c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c947cd3c-85af-48f7-a1f9-a3efc920c7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08da264-5b96-4e3c-9a54-69b69feb59d7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31ddf74-b868-4f42-b324-1b8670890fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6aadd358-5d71-4464-83fd-c15834c3a628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa27965c-b94c-4ca9-8642-9c71de85fc05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b392399e-2792-4ac4-bf33-e542355f76fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78f3147-24fb-4405-bef5-b159daadef41",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2435eb3b-cc0d-4f34-b280-1c1d2546636b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ba65407-fe29-446e-be25-561431f8cfa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49612369-7521-44b4-99f0-e288fcb6112d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8ad2f046-217f-4e25-839c-e2921ae88e56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a74d7a0e-8af5-4875-930e-cfcc0bc9b79f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34db1913-c654-4d83-a236-e8ee5072456f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe02f790-2f92-4e9e-9ceb-9c7382bba719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1155da-de5e-4263-b0b4-e0de5f0940da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d26dd70-6fe0-4506-b9d8-8ae62a792bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace2ac0e-e726-46cb-9763-15c536cb140b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649638b8-78ae-4af2-bb56-07cebcac7f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2823348f-eefe-488a-83eb-15800507f1ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c26464d-9ba2-4c22-b58a-f99a15c0cb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b45d201f-4e66-4f31-9ccc-ea93a478f07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d88e5fc-82ea-4e1f-ab0c-6ae0faee8a5c",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd0b6cd3-8318-46ae-9cf2-cc7e6b127514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59bf7ef8-6a13-48c6-9cef-466947b3387c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0f3238-2911-4875-b177-f27692294369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b4d31ca-4ab8-4c69-b238-fc2be9176bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a6de2e-a19a-4911-b384-1d0a5be3542c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "306c78e3-3666-449c-9321-4b895df3bc92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "647899ba-d1b9-4bbc-abcb-c7fc1e3be5f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97bcc10-ef66-4c40-b53f-919b53bf00d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ce8ca995-5a6f-4595-aca7-a962e1c43bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370319b8-b950-49ad-8169-d5d994abd55e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b73136a7-c4b2-44d0-9a78-10005cf5d255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "262189c1-abb3-4f77-9740-8a90fbdebfcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2af73262-2062-4f25-8d0c-6fffb3e28600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f6e85cc-66b6-4a6d-a82b-8dff299d71c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c1b114f-5679-4fcc-b716-414ae655d265",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebad5ab-fdb0-46e1-9323-1a1da2483e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f8705de-ec13-4d7e-a85d-219ffb7bcb33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fbaa206-e7b8-485b-b958-8f94d93b43d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed5e7328-9634-40bb-b3b1-2345bef461c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494e6229-391f-44fb-a151-edc7456a8abd",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa76ac89-3f7e-4b21-9f8e-3646dc96fc11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee700a73-e35a-4fe4-ad87-016f4023207b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db183e6c-ebb7-45d8-9c3f-f4ae5be050c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b184841f-6fa8-432e-a3cb-2d97e157a12c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4edfe72-19eb-45c4-a4d1-e5ea52b15753",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14db7350-29e4-4861-9b1f-9a7679f63ad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77bf77ae-d3d2-4198-9a7e-88664ba3981f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77aa2c8e-7eb0-4f8e-b8a4-6969d1dac856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b295970-5c56-45b9-a37b-ff5b3a65422d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7094db68-2e4e-418f-9b2b-4d78822db421",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b1ea6b-d255-4d6b-acbb-c53cdfc4bd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf6e31a4-4c43-43cc-9535-32a79d3e4c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935a97dd-d34c-4694-a309-925098c6e3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c83f31-254c-4635-94b8-eac21d37c236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc99d89-f950-45fb-a125-c4736a01ed53",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c96cb62-4427-4727-89bd-015a713d1298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10b2701c-4a2a-4e63-a76f-9d155854d59f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8633ef-a531-41a7-9af6-393138873a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5867c90-f4b0-404e-8153-daef13304c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7900149a-f79b-4a7f-b280-fd1feab53fae",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a4b796-363e-4171-9123-a3c5db453790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98756138-f39e-4742-a754-67d8505468a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2152e495-7f7a-4c02-a669-3f951c3154e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d05f552-2eaf-497b-8f58-c4ee110d30ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b550e4-8e39-45dd-90f2-d493e0885202",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60db3490-eea5-4881-8ded-ac6d7b309e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a966d939-405e-42ab-8eb7-b2a80013bce1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "866b1aec-b88a-4b19-9e53-8060e4a08975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0c00876-7144-4174-b7cc-6a9f974693a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef562aab-e423-4dce-8588-f7bdd52d2571",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716b5570-e5da-4db5-b1a7-3fa720a6c312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b7145a8-1d6f-4824-8a51-4bc8a548b209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938b1b23-90d3-41b0-bc0a-5b3c4507d4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d277e2c9-7d07-49d1-95f8-286545332aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2069c0c4-1d8b-4274-9217-1e19f36977cf",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5895a6-92f9-4de5-a958-7d7903fa80d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991a1d04-feb0-440d-bf80-815f3370d9ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "729d61ee-5eeb-4416-a357-6b37aad437f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "116c69ad-a35f-483d-bd6f-77a1dadb7e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff93766-cab2-412d-a851-826527275ee5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92f4bf90-3a09-4970-bb6c-b780d8d5b8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "036ff0db-853d-499f-a0b3-07200ed43b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df49b38-a0ee-4199-92d5-ef07db24c081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbfaee90-932e-4315-b54a-6b0a98f769a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75cbf55-b1bb-4842-8e43-8645c0b99df6",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5ee5ff-2c22-4f0d-8c3e-138d639226fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ed870a-8e03-4bbd-b43d-b72500487348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bed1ea9-3d75-4358-8805-fba7fea0dae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1cc28e-1a23-4cbb-bb92-ba6a88b88c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc6b23b-1d44-47d5-97b6-3cfeff3ac2f2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc5a983-5a37-4a1a-ba0c-05d825636a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14694b64-9b4b-4130-bad8-bd8d86e88035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27cbd773-f0e9-48e1-aecc-3c9e48554b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ab734c-4120-4575-a90a-37664a8f1a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e7c0c7-0a9e-4180-8abb-4302c787e2a9",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7d0876-939d-4071-b3e6-b5b81794f38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0302e981-f472-4174-820e-ff9bd35b62f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9784715e-1855-4800-910c-0d9433edf9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "70ef5d2b-0544-4a9c-a9d3-f249fbecd120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1149d27a-f197-4495-8150-158612a678f2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7056a373-4e67-4e8c-88f5-be2c5d0de1d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f05be56-1d58-4571-941e-b876dfcdeaec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de542a81-51a6-4ac8-9ebf-f0c060dd6211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dddaf3ee-8e4a-4d33-b2d0-e753676aaea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "569b4bef-20d0-4da7-bc45-941790cdeabc",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa6f9e96-c249-4a88-bc5d-d370b31c0414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f5c0f0-006b-4b94-8758-803aca4f0fb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9ee26b-28dc-4bcc-8e52-d323bacf3089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "86f0963e-26b5-49c0-a026-27f81271b179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c33f4f0-0bc0-4328-aa4c-4c6c444a11bb",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90d6f5b6-5cdf-41ed-800a-feea5fced349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dfe90ba-11e0-47c0-a5fb-74221b16c475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec994cd-4700-47e5-a358-dff849eab805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56846be5-ac31-4c28-9408-8929be348897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90d9b53b-0177-4f6f-b75f-54f97535edc1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6cbf787-d1b7-49e7-bf23-be49e04bc27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2786d80b-2cc6-4973-b9b7-36f37087fb77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3feb70c7-58c8-46b2-bb8d-a2a96f4e966c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b7af50f8-45f2-43f7-a146-e8f8e4ee1f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a13c68-4393-466a-9816-ecf7a158dac0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d91532-9ddc-4f7b-be5a-bd6d6baa1eb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5349e02c-3d22-4a13-abf0-4397968f2084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a64bc915-fcb9-486c-a20b-e8b74f261932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2d9e4d-8f02-4150-9c4d-7ad184fdbcda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4da697e-eac0-4605-a9f3-9021ade785d5",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a607779-eb16-4c92-933b-7fff7990594c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27cb3ecb-4de2-419a-bd32-aef305c7d290"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "740b12d9-4481-4428-bf2d-d2c4e55d577f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ac5e0ae-4e91-46d1-a428-3527798e31fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bac3448-4498-4dc3-be64-ce06d192bb8f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a5b4bb-8803-4867-b717-157ff4c9cd22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b10f267-e22c-4123-b7e0-bc0d43b0e9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6a783d-8bbc-4054-b79e-26422db51af6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b28b928a-f3ae-466a-ae1f-543feeb8114f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f02af2-89d4-43fd-970a-8234f4923252",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b8af1bf-dbe8-4a27-9313-9240f42266c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89993865-f061-464c-a399-c77f3835f83b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2d6783-3631-48c0-9c2e-82527111d91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4694d8be-a924-4508-82ba-ed6261014d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4db6b9-6435-400e-a0c0-68c9eba19441",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2bb57a2-4815-4471-bbd6-6507170d9fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46791715-0619-4674-94a7-5248256abff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e8020c2-7a6f-4f5f-9e39-5c5aeb731567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5dfcdf-3a19-49ae-b339-063ed09f1980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50f627a-dda2-47a7-8781-cef4a1bc28a1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da28bef-7533-46a7-8cec-b8518958adb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a2bd329-5de9-4575-b1b5-433acf28851b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ae826bd-dea0-4b92-96f2-aba4647c6bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bef07c16-4633-4095-98ac-8497c38b0fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4cbd74-5a62-4873-a345-478ec18c81b8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e34ab9-f4de-41fc-8c77-9788da8404e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85a8da31-969a-4e62-86e1-e9697ba1e459"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ce8607-4235-4b9d-b48d-2eadbbfee8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d5d3ff71-ec54-435d-b8e1-0f68377a0139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cab74b5-d817-43c0-b0b6-1c5c1c11413d",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "234edebd-d26c-4983-ad27-a3058c8c1d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8fcb6c5-922f-4829-8361-ea570c069f34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b88cb3d3-1c75-4210-9c0b-e746e7cec55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f89bae-07ca-4a76-a00b-949bb1968fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9daaf0d-8011-4ffe-a5da-5c73647120d1",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9db5f4-35c7-419b-9ea2-c0359bd2afa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48641205-bcf0-4ffb-a8ab-718219003610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49e301f-24b1-4437-8874-779171540a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d054b895-51c4-4fbe-8f39-6a1d5d8d13b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53354136-ced1-4b13-9585-844ec6e475e9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7d9cc7f-1a1e-49f7-9419-b40536c10e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f51b4c2-959a-4013-9035-4858fa78c88d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fedd26b-86f3-4f80-b783-8aa7d59ed837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc49c14e-ee23-412a-b249-1e4670f5f24a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67cb3b81-863e-4e5d-85cb-ecda7a93c575",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "725f936f-2a0b-451c-87df-18f788604d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6aba5f2-8514-4681-9d0b-574b8525e875"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebc43ab-5bd4-4dfa-866a-25275c6f2fff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "51375cd5-a44b-4c32-81ed-10815fd9a3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c4642d6-82db-4e65-be92-bbd5a516ab4e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "810e391c-dfe6-45cf-a95b-bc348f00a866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ec864a-ca54-47d1-a8b6-abae8bc93563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33fa5648-710f-4e91-9971-68bd3e5cb919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c4d488d-0fd2-4912-80cb-20f2463b4a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424c5db4-e95d-4a84-876d-c08d181a956e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426f6b74-6487-4e4d-9654-a9c8b00f73a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f04e97-287d-4c91-9572-666514915754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce47fae-c437-4f12-a31e-4b6c461b884b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a24fb56-caec-46f9-93b8-90fb7f134a6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938c6251-8341-4124-ad1b-99d51b059ed0",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed805e8-1118-4465-97d7-449f0f2b9d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b092ca91-706d-4329-94fe-0b8b5a45a99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cedf3419-74b0-438e-8c44-e026e51e326d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1082dcc0-0d54-4021-a789-a34a5379f946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e2dbf5-79b8-4971-900f-2fbe1f533dea",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4045f114-2f7d-433b-9168-03eddebf8d93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3239897b-ec5f-40c1-9355-ce9755376095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60c937e-f216-4395-b252-7f39deafc030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "085605d3-d764-4d1d-b363-4c2771b4ce50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ee2dcc6-0002-44c0-9f03-564a573d345e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162a28dd-5c79-4556-b261-a1f858d0d873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d451a3d0-953a-4c5f-91a7-81780b8af6e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a9c16f2-391f-4f58-bd01-1bc05126dd19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "22fead6d-a0e9-404b-a808-93008032ce7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69203c48-4dad-4b8f-b585-6778f622af40",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffb5114-f1a0-42e3-9741-69c4ed669fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01112790-58f8-469c-b219-b5a37460ef81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4503929f-9028-4d71-8ea5-c073af723189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c496bf8d-4176-426b-8e78-b095703305ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06ad4ae8-9b12-42f8-915e-2b4d92a3c51a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83d74c3a-f17a-46ae-8e2c-ef9b5e484e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b60dadfa-e2e1-413c-aba6-6cd3e93733f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57142ec7-b112-4432-bca6-e37961142c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f183edd1-8085-4a6f-9c26-d38db78e9145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae308852-a542-4b2d-9d18-1677a50fe15f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35efa3c4-fdeb-4e6a-9f5a-2362a9779c69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be29952f-abff-4e13-a205-d1baf64515e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4ae8d9-3da1-4ec2-b96e-c37e65ffe1e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eda19d3f-b162-4787-8524-049611ea8db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff800bb-8c75-4ea6-a04a-9962c1864d36",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390d3915-89bc-491c-b86b-69a9a2fb6d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d5ce28-a610-44b6-a882-d353ffb90153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a64d634-fae3-42f0-8992-40039b903ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f00cacce-a99e-47ab-bd62-09cf53308b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf08731-0fa1-4151-a3b4-2878d3f11e3e",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd594a2-9559-48e6-b33e-ed908e4d96dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eea9430-e3ae-4a18-8d31-ee3478754b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7bdc907-7d88-4bed-ad3d-8faae56873b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "8da794f4-cf01-4c7c-8177-4cc3eb1f2919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0498fbb-5fde-4561-83fb-399f6cc07c2d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51bc964a-ab86-4382-a995-9a2dfcd5a697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7bed50-7b42-4cfb-98eb-7be660d3cc30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83cebad9-d64d-4e68-8038-db2a8c442ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d1b08fd-89be-42b0-8c6b-8210e49c1c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7596cbd1-2af4-4776-8c54-85dcec21da25",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd6d0a6-4c03-425b-aed2-f69399baaf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b147043-ffbb-4882-a40a-fdbfdb78039f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b74f038-29f4-421e-a5d8-90d1e8ce0994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "298a6093-fa70-4b9b-bb56-a1a5e4a698f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172c3dc3-6349-45a4-bd7f-cc43135b7393",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3ca135-4370-4b72-9744-dff244484ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9216858-8a05-4221-b9cf-eb08ad0124e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ea4b79-ebda-4a09-bd9a-6472c04e6c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7bfed1f0-3f37-466b-8bd9-23dcf386ab7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e593b440-9df1-4a3f-b5ba-2e0027eff0fd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52bd304f-f81e-41e6-b9cd-2e637874fc6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc98e1f2-67d9-4bec-92f3-f88bad17ec42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4dce1e-01de-44da-8b91-692e0aad4dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5caf35e0-df10-4566-854c-dfabe64a7083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5194c4a-9135-4ee6-a9a3-798d1ffbbfe9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50112ca8-5cf2-4f4b-899f-8e54412f3803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f625894-47a2-4736-a45c-1a1a0fd152c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2eda0a-0a48-47fc-953e-ed5f8935c4a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdc4a12e-8b08-4e55-ab7e-e6b825593cb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6526eda4-ba38-4b57-9bcc-9f704cc39f7f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a6a885-523d-4f8b-8798-464a3576e635",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aedbb8da-cded-43fb-90ff-2272a98e97b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93ac8076-ffd2-4d46-8021-9a5381421f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "34ade46f-e1b9-42fe-8f18-71291ccb3670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294aac32-2f7b-48dc-b740-22ffc34cf50e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f30dd0-6a7c-4e36-9196-cde3bf9a627d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00d66e47-7e5f-4f82-bc14-c3a41dde396f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "648d874d-7e4c-483e-89bc-8aca499c7939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3082c6a5-dde2-4776-8f74-f9c8c21fceba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8228694a-f11f-4110-a4a7-bc606be84ad2",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3c88195-9229-4793-b317-ebdd4a64a538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fe4cba3-eec7-42c0-bd1a-63bea0e38147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b381f30-c653-48d5-bebc-2f6f8f4e87f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe4c6f7e-e1d6-4c53-bafe-7cbe83041a22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023ff6c4-9634-4279-af0e-1be2e758f629",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce8db270-77ad-40ca-890d-a6ef30b1a4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5e9b21-189d-4c87-8f73-6c4ee9adfeb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf153cc5-62d6-4c16-aaf2-9bf17875a573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2975acb2-54e1-435f-819e-03a76b5ebaea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9cf22c-bd44-4bfe-b983-332eea34b878",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d84f03-37b3-4581-b225-10d88422dc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "259904c7-10d6-4abd-9f7e-fda6f4545ea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41ef7455-4a02-48f3-ae3f-2ad9115764b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bee9d404-0b55-43cb-a219-98d428872772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416fd4f4-992d-4c50-8b94-e1ed3829b022",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50cad33-dc62-49bb-b861-fbe7a52201ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798aab62-aa66-4b3b-90c6-4d83df5ae2c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24af4978-85f1-4c57-a824-8c4c842bc72e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "97827705-d560-4897-b1c9-d8c7cf8628aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8b344b-3670-47b8-8cf0-1c413617ffb1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5092883c-d60d-4e0f-99ab-f5f829511e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7feb81d8-2ec6-45eb-ab74-bd808bfe779c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7eebd8-68c8-4759-9185-c588a77bbd07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c349360-ad16-4702-b9ee-731ea3383631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ec63070-f152-4ad5-8287-c2f9f641940d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc965da-e085-42e1-a288-31b64155631e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92e46a4-5021-4291-8fe7-3f57930e2e69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3042d52-df5f-4050-9341-a101e3698cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3347f397-2f2b-4c2e-9498-3542853ba297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c87ade-41dd-4eff-8308-3d7745db0f51",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e109420c-123b-4ff8-a495-522ccde1540e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a57cd93-ad58-4993-b48f-11c5b218f82f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb61d9cd-9a87-468c-b076-47c31f07ca65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "120c4678-f069-4dc3-9f7d-afc97a572b10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7426ec-ba89-4aaf-828e-82f5db71b867",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e742993-1ed8-42e7-b536-4df13b851db1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b85a82b-7692-4d9e-84dd-cdce0856a034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bc900c-31a9-4bc3-8344-3624538fa645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d973fb0-708a-419d-b18a-602f7006a0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a848df4f-a70b-42d6-8ebf-fe32e3eb8edd",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29958795-11ea-4ccf-a789-66648d2ad7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20795a86-5504-4317-80bb-3c23842e42fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b82e7da3-01f2-4dbe-95c2-1f8ac9029986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e12190b3-fe7d-41bb-8d36-1cf982d4bcbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3d2107-555e-4a44-baf0-c9fc73b6b9ad",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11732b8b-534c-446f-9fe5-99e3fa1ca3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f1f3a0-427c-47d1-95d0-56d15b7086e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8836969d-5587-4f64-b613-a18e66f42a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26d3b79c-5c01-4a76-abd3-86be58bfd87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e361e25-cb4c-4673-8f66-defe82d1cff7",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a03267-4480-4351-8623-84a13dfd7e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e63aac42-6588-4d30-b6c6-5305b89a6e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d8ef97-72f3-46d2-9a67-307c24b59344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f309a34-2ac6-4b30-be37-b34d40d31642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb98b45f-1ae5-4445-8c29-af887eb595bc",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "087d4a20-8257-4c42-9df1-7326af0af4c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac74eb98-654b-454d-9d69-27148c393ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04513564-28bc-44e2-9751-cb32fa78975b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3cc55d-93e2-4a11-b439-94c6f910fa93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e452717-e677-45c6-bf6d-28be8c5a4b55",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe37252-8c9f-43e1-a5c2-822b3ff429c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d011f3-9897-4947-9fd5-83ac3217de17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce10b4ae-a96f-489c-8522-a59583ed8be3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb7833a7-abbf-45db-ade0-4ec9b82391b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079b36ea-df66-4504-bdde-767f610ee65c",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4221bb-4185-494f-871f-368935de5ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac1ad7b8-e6e3-4d22-8042-ce899193d260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d615e9cf-8d39-4422-8347-03e4e3479ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a118e7d-10a8-45ca-b311-69537531c195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e316b1-cdaa-486e-8a01-56860caa0628",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a133b1fb-4658-4941-b5ee-e1e4543e88d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1758741e-55e8-4d5b-a31e-6e890961f787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b4072a-3fbb-4c84-b184-c7e18440a669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47f6c1dc-3668-4a94-821b-be7e846523c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2151e0c8-f08f-4524-96ab-79d2e0628aff",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15242df3-c2ac-441c-a0bb-9688d04610dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4625142-27c4-40d0-8204-ef254d33aa50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39a4a414-8b32-4af0-ab27-b563dd131824",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "81dc6e82-7ab7-4ed3-b328-c0576f4ef1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c03235-a40e-4f74-8c37-e961b3cf2acd",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "625b7e66-ad39-4ff8-b3db-5b4d77c4e741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf0eb04-eaf6-4223-bffd-f65f1a516041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e98fcf8-891c-4e9a-a682-ad0e9124e892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2ae672-c5e9-4ab0-b2b0-b2ca4d87f70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6603c2-ba31-4a01-9869-fe442984f60b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4ed932f-4c76-40bf-8a5b-f882f610cead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6907f14f-c25e-430d-a8c5-ef9edcbbec87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40774cce-1254-4714-9867-37c988796463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "298b7da8-20fc-4b7a-8f1e-adab6924f583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e699831-5b01-451d-97bc-89220e5385c5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b297799b-1298-4ad1-8a27-c7dc566436e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a02340-26c3-4e77-914f-d458729cf8c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20768922-d240-4296-ad68-b50b21079059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54359c0e-1230-4b18-a797-a5222b8747d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e25dac-06c4-45f6-82c4-6e5c016c6748",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b0d6fc-3730-4e80-bbfa-8ac565985710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f1ea23c-e08e-4258-aa96-a745a4b4a62b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6c63b0-c429-4e23-9cc8-033634e23a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e49c0a3-7da9-41b3-90a2-f3142f1a9d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b8a53e-ecd3-4c9b-80ab-aa57513f2028",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a6c6f0-32a7-407e-af00-0d14bfb642c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c50ad9-a5ee-4884-a353-77108d0857a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5fc7cf-bed1-473b-bdc4-042c704b2462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "38ae0ea5-9443-4ada-8453-6d29ffa3d5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c7d8b1e-c83f-430e-9e1c-1a4949404cfb",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f0fda8-8d0f-4bd0-9035-f124752a725a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f184d8b-c705-43ca-a444-56c42cc5aed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229cc061-d98b-4af0-8ed5-7126f3c9a4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8eeed9db-9175-4c10-9451-2cb0e46687e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab0ddf3-51be-4bb7-a0c3-de5fae6a74b9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2312c8-24e2-4b57-befc-73b8f2ebec7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a81f221-868d-4c49-be10-d82296be86b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b184a47-6861-45ea-9f2b-e98bc3334a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cf034a4-0d1e-4797-ac5a-c8f2d979c50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b67d1e3-f705-4788-a866-18a672df1fb9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaadd15d-e4de-4a81-87d5-e24dfe6746ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "603dcdb2-8b5a-46c0-a379-52040e7b9a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e618c8a-31c0-40de-ba1c-8430e2411436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "95334afa-74b7-41e0-b504-74dad9c0a256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f289b98-2772-406b-bc5e-c8e1db19ab79",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ade8a020-54fb-4179-80e7-3c1fc5f6bb1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4270fa0-8f38-49c8-b545-bdb8a7b3fffc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f3cf662-08e1-4c04-b3ab-de26aaa4c76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3a6562f-cf44-4597-a463-235e276a0f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f132cf-b146-4c98-9c31-3fdb77e050e8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8469a78-274b-403d-9243-994217f15114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c2a3b4-8742-4925-98cf-5b31b07caca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e873fe02-4a2a-4347-9711-841dbcf74289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f10506e-8a0f-4ebd-90fd-d31fd8441234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d949d43e-19f1-4258-9d4f-0fdd83501865",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f46f8e-8fb7-49ba-b71b-26648efddfc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86aac2ab-418b-47be-89c7-8b661a706b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b314ec15-092c-47f5-9ded-7b192ffae54b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "57d3e43b-ffc4-4473-aafa-6853df478196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f750e56b-e349-4dca-89f7-1599e6c91bb9",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa6140b-76b7-4bd1-a064-11ddcb35e3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f755fe-6ef3-4a34-b7db-c035cc61d4f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb4fcf6c-7757-48ed-9c28-02fa3827486e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e476ac7d-7891-494d-8af5-e7502e681d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6894708b-1cdf-4ab7-a47b-0d7a59480daf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4bcd8fa-7a77-4b1e-ab02-d279e695a73a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "be6c38b2-dce6-4a07-8914-90aa10f248f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee84ea5-3e73-4695-bdbd-0806ae8a644f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b6fb43b-de4e-4ac0-9a9f-ea66672060b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6e0c46ce-7d07-4a28-9f8f-01cbd7a6c303",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "af4e8b70-8374-4f48-85a5-14de7b578f18",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921613e1-68b8-4dad-b6e4-c6754af6d12b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fac67b92-b8aa-4977-be07-46ff5e3b1b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e8eb38b-4f9d-4ba8-9a67-9a135a8c72b2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d59042d-21fa-45a0-839d-801b46735f92"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "411037bd-52df-49ed-baba-f64abb1f373b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9b63b41d-3b0c-4eb7-b7dc-8d45a33ca1fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40435b62-7b68-408a-97fc-251862f1c0bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3e9aed4-04eb-4c40-9f30-c76a9f2ddd1a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "afc1bafd-8153-4d63-ba82-6ee6a01e1e21",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "af162ccd-97c0-46ad-ad07-34b97634f437"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9d02907b-65e4-4531-a46b-39b1ad319213",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "09c1111c-2c8a-4365-b197-6ddbd4746ac0"
                }
              }
            ]
          },
          {
            "id": "10c10f1e-8786-4284-aba8-047b7c094d92",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c0711bef-9b8d-46a4-ac48-ce6afb042cf6",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "daecb8b7-82c8-4dc9-9a67-425285d27e86",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846190e8-98a0-45e2-b9cf-52f98be6fdea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "30f06ea3-2e94-4dec-a49e-123a298e3168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe891f1-b61d-44d0-a529-47b480b4b566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "441e1dd8-9a23-4257-a6a6-79fe863fee3f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d03407da-f753-4c1e-ba7d-329e8ddf7954",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "78a7580e-aed7-4cc2-adee-685d9c8ee6eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2a66cd6f-11a2-41c1-bec0-70f40c977110"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1d68635-0e3f-4bd7-97a5-7fe73391d602",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d16a2d3e-0081-4d7a-9f13-fe532c268ddc"
                    }
                  }
                ]
              },
              {
                "id": "7502c7bd-60ad-43cb-8bd6-1289e8829855",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8774c349-6f21-4e8b-9771-54719823f815",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b05c498a-704d-4a0e-9f49-ad732c09a95a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "82255983-e636-48b0-af89-1e749f4c2a0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e8291cf5-3670-473a-9f31-e061d0398e43"
                    }
                  }
                ]
              },
              {
                "id": "f56e974e-b088-4edc-bff5-99070df95255",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91712162-1f78-403f-9dc9-42a2ab8badd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4e38659c-f8ba-45a2-b0d6-80d243166446"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3734a3d2-f180-4b8d-bd97-1f96d2c74e8c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "89eba405-b13c-47b9-9d0a-7ea80da2fd57"
                    }
                  }
                ]
              },
              {
                "id": "0a49b098-8058-4a55-8ad1-7f656b15e194",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f679ab6-7386-4796-819f-de063514a8be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c6bedf6-92ea-41e1-afb0-a4f8c6071a3b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5803a26a-b9fa-4f09-b55f-0bcbe8ea8834",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1722a6bd-ba15-4679-8213-4854e7e291f6"
                    }
                  }
                ]
              },
              {
                "id": "5b7160a8-6b8c-4c1e-a036-10e85213ac57",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4a13ad0a-f5d0-44e8-9060-b9f88251fbf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "248e68ce-3386-414d-82f4-180698b24399"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef35675a-1463-4040-8b92-1f8a985cc77e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8d14f973-7ef5-4f1b-aa67-425216e8ced3"
                    }
                  }
                ]
              },
              {
                "id": "d6691ff1-d94d-4d71-820a-847bd53e1eab",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb7516e6-952b-4df0-806e-033374d3971e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03ea1815-89c9-433c-ae72-d4d86aaff00c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "feef60ed-42b3-4773-b86d-82454e366056",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1f8f2fd1-a696-418c-909f-df6a74adf5a6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "86b294bf-2ef6-4598-a7f2-5610b162058b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fe902588-424d-49d1-893b-39c346c03488"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "30264b0b-9247-4298-9501-48958ddef49f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cf9a70f2-65e8-4041-8973-fc94c13c9a28"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6fe328d9-b5a2-46d1-aa19-6c3359b58645",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cfa23a7b-67d7-4550-8d51-1ebf8b3b7b7c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c1a05845-cae9-45b8-9918-deb2f76255b5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "983af82a-7395-42d0-8f48-bfdd97ced1f2"
            }
          }
        ]
      },
      {
        "id": "e43ad67c-4164-4376-9264-ccf090680856",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5e754d72-cfe7-4c4a-a5a6-871b010b6aee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8551da2c-5333-4b4c-a860-8790d7d4a271",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "06da723e-993d-41d3-929f-cf580496644e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbab49aa-2c11-4271-ba52-ef59f69bf26b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d18b167b-c95e-4bdf-bee2-998f72675c4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7971a416-90b3-4995-9fb4-05365e284038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa96b2ff-eb90-4ee0-b436-b25f3eee434c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d3a93d-c5c5-4836-8e63-2df9d727296f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9707e8b-f439-4cef-9293-b51068578f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cad387c-d429-4e92-8f4c-fb66f8951fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7422bd1-ad8c-4bf8-b0fa-af892fe7c4cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "15e50b94-a194-4a8d-a168-e598fb5501db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2615ded-28a0-4e8c-b585-6acc853e4798",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "262487e3-81dd-4dec-8ce9-f263daca5bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52d359e6-8ebb-49aa-bff6-a2951d9a3021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93620d5c-ccc4-4541-a24c-8f5fdd1cb2f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ddfe859-1c92-4a89-85e1-1a6195d6daa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b2fdb9-e576-4bfb-9a26-bd75d9fd3387",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a6f81f-4040-48dc-8411-49be0a141761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19b766dd-ab97-4ed4-a342-540f5cef0819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace98aac-0e6a-4282-ab14-94385e7fbf63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f24c8a9b-624c-4a33-8694-9d7f88f6264c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28aeb284-39de-4203-95a4-490714d8a508",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e023ee99-34d3-4e16-9204-66c74db72f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f31d07-6bfa-4d59-bcd6-e8965932b7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699f1a7a-569d-43d7-b97a-fa02ca3a1516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12608531-f999-4dde-8f96-68e3d6f9da62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a1688c-237b-41b4-a8e0-be3069ff24c6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96f3050-5354-4788-84a4-7a98b10ceba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7baf55f-98fa-4b78-8eae-2fd485b45eba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90d15520-1ad2-444c-8e60-c9a1e31d9edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "682a0a38-8c76-4a64-914d-1e4722f33322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea818b17-db9d-43b7-8888-10bf6af92c08",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ae43d6-2e70-45cb-904a-c1b8f1ef9c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d6c942-32bf-461f-8bc3-e739f5664c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46ba2dcc-7ff3-4838-9ed7-4f09014c1f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dcba26b-bb6f-4911-886c-d57278f28112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64e351fe-54fd-4be7-a1a8-384c67859241",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ab4f28-ed77-4dd2-9477-4679c3cccec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0e9193-d83e-40df-ba52-3bf2ad49ab76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19e332c-582f-40a0-b3aa-89b751c5f129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b679638-0052-4604-9527-a4befaaf5483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba436e2e-f966-4ad8-a561-28c486d051ff",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f705cbe-99a9-455e-bae8-e8896d77595c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70bca911-d474-44f6-9d8d-15306007e2af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab40c9d-00d9-46d7-8183-52a9376e9d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "08cf9cd7-d0d5-4350-9872-d0a1d206d766"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c047bd05-06fe-443f-964a-23a588c4283e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f97cc4-36a0-45d1-aed2-755f179b3698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d44daaad-adc2-4fe6-ae86-b3c344307f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6714c2-8ce3-451c-ac3a-4d1034008fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec60c66d-4f89-4901-b9a4-fb5204f592d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710b2b65-8f3b-4478-86ec-6918c2bc5c59",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b98cca-89de-47d2-b0e6-28a3163357e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2408a667-488e-4ff2-878d-6192b3f4db6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6562d9b-dd64-421d-9e66-5b1234f2389d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "79a9f5ea-0b10-44b1-b4ee-9cb4eb1f1395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4a0744-4be4-4006-afaa-eba8294a9927",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5042a8-be6e-4de5-84a3-f88b3a585764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5c6b2de-d3c4-4c8e-b2cd-91100ca3e3f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d4f3ad-cc87-45db-8acb-ed5c9ee1f42d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "77b456e2-6d78-45e0-aa4c-8fe6e2439af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c248f86-3238-475a-b96f-bca0af01353d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f29be2-5515-4efc-bbcc-f9ff49370844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e87d88-83c6-4e1e-93cc-fba5589cc26c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9705e194-4bc6-4de7-a157-9307d27408ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61b66442-9fbb-4eef-9f88-023ba6604ac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f40159e4-de77-4102-b32d-c1421169342a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98cb8360-8ea0-4bc1-8049-c2bab2684afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4be655d-8917-4efc-9324-628470b003f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a5214e4-20a3-4b9d-b1be-664653902fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f844277-b34a-4476-9f76-138888711f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5208e4c5-1fb0-4f7b-9c5a-42b4b753617b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ca8aca-3727-4fae-847d-284d8966d499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22c0565d-34c4-4970-be2f-e481102b5b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bf0eda-35ab-47ef-98e7-daa1c8e4567b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "822ab116-5034-4db8-b010-9d6c7e2f12bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ee5f0c-9dd9-4037-adb4-6155caa3da18",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5221bf-0087-4c34-ad3c-f144e17dd153",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eeca7d5-72c3-4e8c-8a51-079149d93cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e518c218-3e44-4974-b24c-989561cc0464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "43bb4490-a730-4f1f-80d6-838ff96dd7fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666491e2-b689-4ebf-bdaa-f4a9d45b5248",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f50df767-2deb-4847-9059-2042ecadec92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6be034e-1be1-4abd-957e-dc3121254551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f50978-ce60-4173-9d41-39f30e92caca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "13703597-10fb-4a8e-a816-0c68775c33cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813e8cb1-2e2e-4b2c-81d5-62d34dbe56af",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7eeb9d-1a68-4c20-b0bd-f30ce1514863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68de50bc-7ee2-4d7c-8a21-70af41fca1d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45af27d3-4d0a-419a-a4a8-c68dc42248b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "38ac5f92-b54f-4935-b980-684f320bc596"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75845c8c-72c1-4bd8-8683-51925785a10b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b0a51c-9148-4732-a7ac-873041f61cfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da94a7a6-222b-4bdb-ba91-750eb08baad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033728aa-7f62-4636-851c-e22fbea23ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5bd3991-0bb2-4cf9-a014-cdc47e603280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6bd8f9-b5f9-44f1-8169-cf6a69947fad",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8132984e-7e71-40da-b135-e249d2922720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07ac7860-2c97-4544-a1bc-75b2ea9220c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b292ac5-c44d-49f2-bd74-f46587194a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "064d37da-1748-4177-90fd-426c9c7af6d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f787637b-e067-4655-99ab-b4e454b4fdba",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e624d4d-bb86-4dd2-a873-a560da30ca8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6e9bb8-24e4-4003-bef3-d84a1bd034c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0258a53b-00a1-4464-a61d-c965f17f91ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "95c0b1a0-a226-403e-90ff-12144458d80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35f24ec1-3b90-4fc0-86c1-bab5c44c8edc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1f7483-7b1f-40a2-9fec-ea455ebcb5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee422827-5260-4a82-b209-4b4a8266b946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3137371-de2b-4e23-894d-4d49ad0cde9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b871e55a-5893-4f5a-bc3b-488cda7b1e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5116698b-048a-4bd1-b115-b4ee2b390217",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb51ef0b-2fb2-4d86-9459-533924c8d8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9e414a-9fc0-4115-a5ca-a5fbf6432b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "607f7902-41a1-44df-aca4-7d86b02edcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1676692d-cf3f-4d20-b029-9fb86b0120c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2c86a6-7b62-4351-9a20-26b2e4a64420",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be80578e-d7eb-4abd-9c72-534571465e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03ec8b1-78de-4682-8a95-dcafe5ffb2ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86509a5-8fa8-445e-a0df-95f349778af1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6d3c71-d662-4783-96e7-5778864f664d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce5225b6-382f-4d33-a837-6d2e15afa51b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a851123-2a42-419e-b858-6e49d129bdf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5af45e16-0761-4bf6-97b5-dab020a939c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d535cf26-5e5d-4187-a497-cabf362facf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "208a4760-f7cf-47c9-8419-819451bd2524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a45ddd5-978a-42b1-8170-4d0a15f4e38f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d2fda36-7260-46a1-a8fa-0acad890b3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "335b2852-a638-4c04-b2ee-c42404c71a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a598ac3a-ec1a-483c-9be0-188a23245980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31a55207-5170-41cc-8c2e-0a64a3c1d7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9ceeca-564c-418a-b5d6-c78278ed9b94",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a66a6ea-a691-4f6c-92be-9d88c1c9a788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c6d331-1acb-46a1-bc32-37d7fabfb5dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7316d0-e709-49d3-969d-3e19ad0a97cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a664748b-42c4-44d1-a54a-042ce2315308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e8b7d2-ffad-439b-be08-6d87cb9ef152",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "550ad5a0-b5ad-4ddc-9531-afa9fc7f4e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26fc9f2f-442c-4d7c-b36b-19421df5271c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2020b8-c9b9-41ab-bc4f-7390cf214ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f93d2ef4-0059-4c6c-ad27-39b73ac759ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50399996-5731-4852-bdbc-4129d72fb07f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b22b46a-ffc5-472f-b82d-eb705d630e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760cfef3-6c1e-438c-800f-3d7935e42493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cd8dd8-831f-43e9-88de-b7ed0af49b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eb58d25-6cb7-4a99-8c8b-0d1acfc8b08e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122f80a5-e272-4f6f-883c-84c47d775e08",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0d4a3f2-459d-4b8c-a0e8-0f5e3726a8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f9417d-51ce-4f92-9fcc-dfd969457f6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19f91e70-0f83-45f5-bf6b-8b99441f81e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d665231b-4fbe-4a5f-a7c8-5702248b0f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73018a4d-dc58-461d-9750-d574e0b5b068",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9f6c4a-350d-45a5-b390-2a1c014ce926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "920eca6b-4051-4d50-b14b-baf0512f221f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "719874ac-11b8-4df0-8f30-8c3ae827694f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf151b5-8703-46e0-9687-d44e4521cf28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897a0efe-6bb1-400f-92fa-d95c345b3d32",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e77c68-3314-4513-913d-390ca1d26239",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2e427a-131d-48ad-a350-0594ef455ac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f7473f-4a6f-409f-8570-14c825a8889c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a973c32b-ce56-4f32-bd10-ed04b5866025"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f656b076-dc7b-4310-8915-8902f96895d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5bf6a7f2-242f-482f-94fd-928f3626b1cc",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced77096-c0c3-46fc-9323-954e894e49cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5555fc2a-9861-4065-b645-7e3e66957ef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08023c27-d10a-4d29-ade4-9d7b49063fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "be4cea9b-9aa5-4c2a-9121-3c1f97f943ed"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db837918-9600-4579-8536-f69858557071",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "950a4408-4362-4713-9847-275e9e2503cc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff478c50-1dad-424e-ae11-38b5675e035d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac45eefd-8fc8-4ab4-a9ae-6fe398405553"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "079634c4-4dd3-4f9a-a0d5-308459948ac1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "588d01d5-8c1f-4369-83ba-fdb32b31c1fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3acb5b5e-5905-49e8-ad71-295b2f5d1960",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "79e38633-1599-42fe-bb45-34f01d770712"
            }
          }
        ]
      },
      {
        "id": "d5e2ffc4-fcc2-44a9-9883-ef2d1b7a9525",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b3f72ad3-241a-4d92-9626-4fa2fed7e629",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4fc0a15b-2ef6-4410-bf53-302ff4440b1c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "caaa3b0a-9295-4ec1-9dee-33b9d8887574",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137e944a-77a6-4e39-aed6-bc2b2270ddb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeac8a07-f480-4798-a1b6-ec75ad878ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9fa18c3-81b9-402d-971d-2b1c0ce02bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d164e68-1f0e-40c6-ae61-defd6110cf09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609036af-6a95-4fab-890e-b94050c9c01b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a371111-95bf-43c0-b93c-1031195bdc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22dc93f9-c38e-4919-9e2a-c68d3aa2f7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59f8f8ae-4e89-4aab-b183-378ea7770146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9c97e0c-8cbe-4976-b101-b024b9741576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d1d1a3-4c94-4de5-8c9d-cb4bb78caa36",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1014022d-1ddf-4724-8f14-1974451f6080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44336ba1-64b6-4929-b3e4-25e81f03bcc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b54f61-a6ed-427d-a07c-c6356b91b61f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a26f14d6-513d-4cf7-b9d3-208bab16d5b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf866d4-636d-4ec3-8ce2-b1ed4bf68fd3",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb08065f-a2be-4f6d-8c2f-6eb995f266cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957d470e-6ae9-4086-a946-96ddb2a982a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7769085-4700-4212-9bf6-fa851b9d3c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4eae0078-aa68-4ab2-b214-ee2a79a9f27b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dedb67f-5eda-4e4c-bca0-2b152aec54ef",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f879065-7475-4cad-b530-247cd1330311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b986aae-c50d-49e7-b762-e08b2db88c9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b470dd-419a-4464-9030-d03f998fe6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d8c2969-b705-4366-86ee-f2e7e334f010"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f610bcfd-adf0-4b26-83d0-6ab77067ce2b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b7278a-446c-4fe6-8b25-ecb938d8ffa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8bde864-f9b3-4afe-80e6-080da8150ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cb8b50-9467-4c78-bc93-9278b7d11079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "806c5051-11cd-49f5-a2e5-71a4a7a9be7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4252ce94-93ce-433b-8a06-1b6e6bbb7189",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aca89ce-c090-4f04-a1fb-6ad9ebe4fb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a5b0d6e-55f8-4480-b89f-6b002625ebc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d8b103-7f5c-48c7-b9c9-787fcd4c0b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "de6cc324-14cc-4da1-a802-fe8acf7b46ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9c158e-54eb-4f49-8bf8-3fe1f04e9653",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa950b0-7fe7-470c-8c01-3f40b6a78f8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e8a28e4-e6fa-45eb-b7bc-055c9fb829a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efcb7fa1-72e5-4332-8da8-83ef481f14b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e80785d6-077f-4843-a2f3-0ed259be56da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276bf60a-9abf-42a7-9275-308d9e51e386",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de6c035d-cd4d-495d-b7d3-9905dec96343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "111c66a3-e181-4fe4-9b7d-0031d1a1a0a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c94695-8240-4999-9906-a54f5bc363f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b44996c-9853-4b9b-b7c4-d2247a675795"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac04714-c0b6-4c78-a228-8ea997178d4f",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e484b644-5096-48bf-91cc-fdbad35c663f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6676ade-22bc-4ac2-a64d-bb4dc7781e6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a56fed7-5f24-4b03-a5fe-90fa9cf0d5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f8ad3a3-1ac9-46bf-b68c-3ccdd073bc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d11f915-7edb-4a72-a03f-c3a41d0d48bf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1174ea3-8186-4522-9cd1-cb5ab378b360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39eb058b-6565-4cd8-9b70-6a01464e2606"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6583a51-f969-4752-bf5f-307bd9079d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "53ef1bb8-f68a-413b-9300-53d30295adfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e0264c-8055-466c-abdb-3176c03c4ae9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebd47a1b-29aa-4069-99bf-f41eb2aa2221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ff6bf8-4f4b-4040-89f7-61a971dff3e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "967d357e-ead7-4ae1-b924-5a602f2e568d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc552e83-fbe5-434f-b39b-25bd8cbf899e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784905d0-d8d7-4a5c-96f1-7458e949cbd8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e0a2497-68b7-4f1e-a2e0-3bfa893fbd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25f1b366-3429-4631-b569-a334a4d0e176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86229cec-3f95-446c-8518-a06605840b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecded29b-1d63-42d7-a488-568cdcfcaba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29eb695a-c315-44f4-b5b2-f3681981ca97",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33c4d1d6-77e8-427a-93ae-0b85592f0dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5935170-18b5-435a-bb87-39bc149217b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcd9627-1988-42b8-ab38-afe55fcb7847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fdefdb47-a422-471b-b79f-3021ddff63d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b642165b-8ecc-4e19-96c4-47b1cd75f21f",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7175e8b-9ec4-4a20-aa86-e5801e717a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9c68b6-ddeb-40f5-b04c-1a4ed6bd6d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "293984e8-0379-4515-a559-076424c50a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "45f74582-e42c-450b-ba59-7f9be8bf050f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7115d822-d12a-4216-974b-3c297cc38756",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f1e3b1-e191-4d20-8cee-6378be4a5c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40364dc8-01a0-4339-bc6d-93a78f8f4ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c2dd240-84c7-4afc-ae40-33de1c69e1fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2ad662-85d7-4f46-9830-7fd45989504e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72c6a4fb-3d14-47df-ad50-654570e4a323",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d420cc3-bc97-4827-b3ed-a25c7bdbc8a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca25fd1f-4358-4495-9e6d-3a8b25ea84b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d050417-1fa9-4f95-bd2d-76ecc8d0afab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "96dc65be-e357-4306-8159-cf61c7bc6d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a43bba00-8815-4e4a-af03-66c345bb4041",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbde9b9-01bd-4934-b478-3a891ae9fca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc5cfcf-3047-4c79-8474-b5188724cc54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9a6bc5-651f-4f92-89d1-5c6182223b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "46320659-0efe-464c-be62-1637ec6d1cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7564756d-dfd6-4b80-b468-e30d4d3b67b0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae5388a-2a86-4a11-ba6b-2f18e7347e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0bebc8d-a327-4021-850a-adb0c061b886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13db54c-83e7-406a-af93-91f03433d6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd0f244-c65e-4e1c-ae1b-7e6546be7a1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e493fe8-dbda-4c15-9961-acd03385a892",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b292f8-3a3e-42ad-8586-42632573c6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfd80e77-9d63-49b9-9043-fa131f4d3103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cffae4f-be00-4545-bba9-add22621f7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec34ba8-8e19-4228-9e06-5c5bdb6415c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fe4eed-eb1b-41b8-8646-80f10b90a16d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b338aa6-14ba-498e-9c43-e36838bd9253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb335e0c-667f-4ffa-93c2-bd4ecd621fc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb2d4f1-94ff-4f0d-88ba-9d4129a7b0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "63c184c8-660a-4bcb-b9c6-c7920ae4fd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31bd440a-334d-43f6-84ca-e15d019959dc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12e5183-6abf-454d-880a-3a368d2f077a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c06b723-65e3-4040-9696-a1b74f1557d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0293dc1a-4ada-487f-9e0f-41c9787d0ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90adcd57-611f-4a44-a703-9a025944894f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "024ac3f4-421e-43c0-ab8d-272a49b166e4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe2f83ae-5259-4483-beb4-9a3dfe7b7ead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7f8fdd-ea9f-43ce-b802-1f3fe17138dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6606f747-9bd1-441e-b337-3e225a9d99fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0933bd0-b546-4bb2-84e7-f5eb2d1941d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b66ce9c-f031-4026-ae61-303c8b400a96",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c659fda-f007-4100-9c8d-ba429697791f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f3f0ed-a10c-4a36-8177-715d3acab004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7378d67-22e1-4b11-bfd9-e33da949c042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e2e3fe4-dad7-4e34-8f64-84766e15b516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec00639c-2a3e-48b0-8e63-18530785fa45",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f4d8658-6cf8-425a-b612-6b048593e357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72a5a9e5-cc55-4552-b2d2-3684f0640e9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b015e8de-c8b2-46a3-a565-7999c5596895",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "727e41b2-aea7-4563-ba8b-2c52cbebd43f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44f7958-1655-429a-9e52-383642f8476b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2aff02-4d26-4bd6-a4dc-78d638bf7e19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89225b7-9984-447e-8381-eb3742bbe807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde78317-881d-4a23-9dd2-0b7244e69cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4ffd0c-da03-44c1-9f9c-2600d4c37ceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26cf9eaf-17e5-4bd5-9adc-9a4ca6a46cda",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b99c1b-cddb-4968-aab4-6c7d60aef00e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09cadfb-9562-4fd4-bb01-2e7b0b4c51d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6663ba-c3ea-48f8-8c3e-9ceae8dc4b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed9f7a6d-8572-4dfb-9e6c-2742f2c8d4a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052ab8c9-87ea-4240-bf25-30159c919344",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea9c857-6cfc-4d63-9895-de6ca9070fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a992243-1e13-4c13-be39-cab011bcfcbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e870de0-11bd-45be-a37d-53dd9601c057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f412ba86-9b80-4a08-87d2-4ada938e2e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf28c35-4fca-4bc2-be80-be8354734534",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a468ca3d-f822-4b73-8694-06f743d8630d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8796de4c-5b18-425b-9d59-e3ba02577a06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0da203-3ed8-4d5a-8e8d-b064f17bacf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4ba75a-3826-4eb7-b79b-f9793d0db3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ff3136-38f5-433d-b657-6d0059da387d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fd8d9e4-05b7-4f35-996a-32d025b0ce91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d823615-44a1-4d80-a8be-1beccd4cfc79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e84fde-b6dc-48a4-b433-f1ef92a26cad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71000abb-f95b-4e80-9ea2-2db8668bb91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9d187a-02d6-452c-b849-768f0453274a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779e9d51-c3e5-4e23-ba8a-ea2e41b4383c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e8238af-a031-43ea-8ca7-e132be8ffdc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c43a71c-7a4e-4f60-8a70-99aec9fcd997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7143e2d3-0848-4ec1-bf21-f679005f5e21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bcf40e8-4277-4b8b-84a5-c1ef3a868b9d",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1967a56d-f0ca-4972-bdc5-1b83239258bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46395ead-eb7e-4d6f-8a69-71acb76a2d13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d23fed-49a7-4ec7-95ef-38993bb87c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7a0f5c1-da33-4f28-9ff0-ce81d8543815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "142a6e93-ff90-4c31-991e-87f1e8238b2f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9017207-6302-46cf-add0-049eadd83a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "202eaecb-4894-417d-98f1-20078510b89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91c55a4-327f-4b15-a76a-496596b2d2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3e28bd8-7689-455e-8888-e10276e82d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b14f17-d791-499e-9ff5-2be02be2360c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af010017-c539-48a8-91c9-638688ce1636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5e5119-085e-4625-a98b-94377b1a3389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8025bced-fc2d-4e79-9380-82440a6cd147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43e7c5ab-9bf7-4406-aef8-6ef05156b69e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edf4b90-cb1d-49e3-9f3b-5b94c4c7fad5",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f21b2d-a3ae-4ee4-a3e3-0d829c49537b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d1a91f8-7959-48e4-97d7-b66bff39d209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fba12f-a135-47f8-ba54-b7918cfac890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cff567d8-3ae6-4022-b1c0-86648646b423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e99a8d-3caf-418c-8aaa-76e0f665ef59",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa779d7-0e15-460f-be29-c685e099b3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c550e816-5698-4d7f-ae35-a296b2517e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "086c7aeb-d624-4106-877c-f902f2d84f7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "753bc331-6517-4d6e-8ca9-6215a1855d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d676887-c795-4526-8ca8-e3a71d509b52",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9313669f-cc66-432c-8282-a32991d964dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b1cbee-837b-4552-8ade-013236bb9865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5557e7-01ea-49f1-8b58-e2f7d0f30b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b64b2cd3-a611-4563-a11f-5994de3be31d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b55c3a72-085f-4596-94ca-30f6c69a89ec",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "96e99036-6874-4092-a4ec-caa76c87b103",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b560e6-e259-4044-bbdd-6c8be6b2ee49",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "df5b2998-fbeb-45ed-8a22-689811323ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaca582a-46a7-406e-95d3-1a585c6f4b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ad49b90f-49a6-408e-a190-14f8c28f89c6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cf575f2-5409-46dd-91da-9353c4f7f924",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03841c96-15e1-4b21-b4d5-818f9e085922"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b660bfa7-0f9b-4986-9eab-2b1cd54411da",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3fd878d8-38b6-414b-a57b-06b5c74e0835"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ae397244-e4c1-4cf1-971d-0e00e5bb039f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "04112143-b8ee-4e74-907d-0137f166da5a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "603ae381-dc2a-4f4a-b233-f172229abb45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1557288f-8e0f-4ca4-afe7-db98ce56e1cc"
            }
          }
        ]
      },
      {
        "id": "59e9994e-d5e5-48eb-8a7c-795f5cf9bad9",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f5a8b0d9-1fcc-461e-b0f5-ee25ac0cfc52",
            "name": "Negative Testing",
            "item": [
              {
                "id": "05d57687-c77e-41f3-964d-00e5a24b1261",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "faa60c4a-7c3e-41fd-aae5-7c20eab166f1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1317ff8a-db3a-4bd1-b802-52c62ef57eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa97e20f-d067-4b2d-afb8-f981c75d2bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b8eef4-ba49-490c-abbe-014c53fa86c0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c74a1924-e700-4217-a53e-37ba4fa9295e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f109e5-23d9-458d-9862-9b2b017c5120"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9936435b-bfd4-4a06-ae0c-e0303788ae47",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4570c6-a137-4fcd-9fba-fe92fda52be9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec806c5e-0403-4ca7-be81-5c84bec0bffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cddfcd88-9d33-4360-ac08-a60bb384538c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34d964f-27ec-4cc7-81ca-6657a46ba817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa309319-6128-4f5e-a37b-0772d5a36b59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1122162d-cc34-4fe3-a191-9a848eae412e",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f87f42-a588-4e16-8e26-92c9cc1b64ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f5583c0-934e-415f-baad-407dfe98818b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e07e1c6f-5981-459e-8747-d33cc0fb076a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a03a78c-e964-48af-8168-59630b39b4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94945bf4-d85b-4d4a-a582-e16751ecc92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "871d8e48-05e6-427a-adf3-1594e9d2dce2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b56988e-d7e2-4f55-8ef6-6deb4d5b7776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a165b2a3-0e17-457e-999d-0fdab3c439fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c29e85b-91f0-4a44-98bf-0d05d174cabe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3c9bc9-1ba0-4276-9714-1b681bd3546b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89479157-dac5-40a0-9ff8-14379c0ac281",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf74fcfe-9ce4-4c9e-a001-89b419a99aa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ecbdff1-2070-44eb-a2ca-069d4a0040e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e7dd96-566f-430c-866b-7f49db58bd24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a6d551-3a00-4f9f-948e-d150f88584fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15a8d315-5a51-4029-affa-f7f8faeb7ff5",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afe84a2a-9553-42ff-aa0b-6219983464b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ae035de-fa90-4cf8-9dcc-ece31ca398af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03b68b12-756d-4a15-b6e6-8ebea084d274",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a74b6b-b107-494e-ac52-655d05e6f49c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14c94cb-16e4-40cb-a779-3d3ee60cffd9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee1638b-e281-47db-bd92-8378982700f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "475a0f2b-7640-4a3d-bc65-7c2aa0d9a75b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd2e78b-f34f-475f-8769-21f7a97eb0bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd7423c-67f5-4fe5-8dee-e600b77a5a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66191524-acc1-4a90-900d-7224d83d3987",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff563f7-e88f-4b19-9baf-4edf2145e96f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420ed36a-79d9-4e26-a49c-e8fc51f3bce2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca361ea-2127-4759-8398-145eb7fe47b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d31ca98-0c25-4432-bb73-c9aa8783d6f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ce2c34-71e4-4727-8e21-f45e74d5c3c8",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4ea615-3ad2-4ada-a27d-47231a15d0e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6546183b-c37c-4345-bf76-d5570e41491f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab7bb6c-c7c0-4090-ab38-5585d8265f56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cddfb61-500a-49c1-b38f-391aa2829083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f778817-2361-49a5-8cb0-a20869ae5f64",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b0e337-08c6-4660-b0a4-2c128b8dfa21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e37e368c-9fbb-44c6-a237-e7049d534f01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5faf679-2eab-4470-b465-c08b75f51c0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f75cd6a4-dd70-4b6c-88ca-dac649572b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41c4038-2d54-44cd-84f1-69baf2eecb53",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4735a0c6-b085-4076-ba42-822e97b2d573",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2597e170-8211-4075-9308-e380d42eaa8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bd4ef1-25b7-4803-bc74-4d1d21559236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377a9c91-f094-4b45-84aa-9607e29b8d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cba001-02fd-4220-9dfb-0b83a40b59d8",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe1bafd-ad25-4d6e-8fa8-06154fc12278",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45380104-7fc9-430c-9450-68101f77cfe2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7639d45-c498-4092-bf36-832fdc57a0d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2479a1b6-7992-4f2c-9864-6acaf37d0362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0482c35-0d84-46c4-9101-918e06941db8",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1381a9e6-a36c-4e52-9d6e-4aaa1e876836",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a8d57fff-1e41-45af-b80c-600b400be34f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37b5482-c3b2-457a-be7a-7717ef9eb34a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a02000-a38b-4056-a5ff-7613736333c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f5d146-da19-4a66-aa6b-b9cef7c19963",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1266b6b1-9034-4fee-b4df-3bae51248b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae130126-e420-4ba1-a2b6-0f97f33ece11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "375f1a22-30f7-48f7-a316-69e0d21ee4dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e861022-8672-416e-ad37-79c9b42d0f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69064db8-8551-41d4-89c3-07ef05e82c4e",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ff8cf2-b5f7-4636-a3e3-f35bdc5d80e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2b0e33-9756-4795-b6db-69f69db8fd0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c6a6dfa-f4e0-4732-9fc3-7a484d03e140",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "503ff810-98a2-431f-b9fe-182f6386656b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dc50859-f98a-4427-8303-ab24d12375c0",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "782d58cd-1935-4ece-80b2-a80011399e57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "173d8519-61e3-44d6-aa6e-49a9c773a8ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab17371-24e6-4eb3-8e0d-5f7d10d7ef80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74bfc73-7874-4578-a4cc-58e6fb724032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82e8ebc-1f42-452c-aa95-9909f2e96d9e",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685336db-3cf1-4c00-a3b5-85895f6ef1e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e5674dd-dc5c-4bf5-a1ba-8f8e1dcf2821"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b743d5-79fd-44cf-89f2-96620cd6876a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c23871d-3846-4ad0-8b1f-6f2755a342d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9614910e-921a-4816-82c7-5f23162d047b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d174c189-c05b-4be8-b1a2-073cde5a2af7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "572adeda-a90f-4c3b-bd0a-ccbb1f77fb01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bd01cbb-9e60-425d-bdd3-619db966b9b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b22c43-c590-422b-aad2-dd07731607ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "259fbcc0-b53b-40bd-b4ae-c5751148edd9",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de134b30-e2ca-4b4d-986a-beb91fc3a8f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c31def0-22aa-411a-a3c6-0e01f158a00d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6f83d8-b333-4b42-be0e-0e7cba5055ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ad80f1-236a-47fe-af8e-fe1dbd022a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72ae569-d728-4fe4-bb25-44d514f6d72d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6208d48-6777-4b29-89f0-c9da4f7dda3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af71a4af-9eac-4aca-ac86-426c8c8c0f88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91a8991f-e447-47fb-9dad-547d365f1dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b27fd0fd-0fc3-4020-8458-30f34dee9a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce45fb0c-3337-499d-aa8d-87c5d958a7aa",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771aed9b-d5c8-4418-9759-9600dd94fcce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "477d2496-3716-4a11-89d3-6f0d47e010cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "763b0616-1f53-41df-9811-4f46525b6724",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c3b7af-955e-4537-afbb-4a3cf4b4599c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93ad96c9-4bf1-48d4-8177-f4d9ef9d39b3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab6bac4-a41e-4622-95f5-0be857d97cf2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03437946-6c2d-4dac-b72f-6432c2913af8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85c154e3-db76-49fb-b914-543602e260ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81bceaab-3257-41e5-b2e9-1e88c36b7c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44b6b31a-9d38-4228-8d14-89207aaa4231",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fbab442-e462-4df6-bfc5-ae19fcdd1499",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d0647af-995f-402c-8d2d-b1269ea02eb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65dbc04-4d41-41a1-bcdc-1d1776f61c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a4a0679-91fa-4c7f-8c20-b073bc37dbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b46c463-8ce4-4ac4-bc74-50c6f0bf5b2f",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0efbb6a-987d-4aa5-b722-b5dcad85912a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55016b0f-d1af-453d-b104-7e3a65a080f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e82376d4-5d0c-4699-9df1-5e012e831763",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ca55b1-dc79-4719-a7c2-cddb211f3f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a512d046-7eb4-4828-9db5-53d1d8ab7021",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2002fd42-2408-4059-96b0-58c15b1ec839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496ad5c5-c1da-4126-88d5-bd42730204ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d844b2d-931d-4873-95b1-1206f40d9010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f317419f-6eb3-47c2-99fc-7d0f824c05d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8103f819-c716-48db-b582-4efe08db777a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed54e2e-e5a8-4f59-a3a0-35ef853cd1f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cb10680-7def-45ee-bf81-550f8b2df221"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc20df0-4fe8-4d2e-bb37-15becd5a8057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc732c1-9545-442b-95b5-dfbe472e9be8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d627fead-8dbf-4687-9194-7b365e2f15a6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e381bfe-eb9d-460e-a022-7424d8f42131",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5eb1a567-090f-4909-8365-08c620ee81dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbf59b37-3ba5-4e73-8fb8-297742f0f2bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "372631d3-19ca-4b1f-abae-fdad57cfb1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bd4ad2-9453-41da-94cf-82c880620d72",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f3ffc1-adc8-4c33-a9e3-34cd9c43aa14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0b674d2-20fd-40e8-9c1f-22b6c207ce84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27eb403b-6bd5-4f99-931a-53ced85daf93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35072502-0e22-431e-9927-93e569a25665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1928503-4c5d-4441-a1e5-a0d265debdf4",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea979a28-f259-47bf-921d-78f1ad91b5d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b68456af-6fa1-46d6-9a49-e1092fdcfd26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8154ec9c-0e15-41a8-9b36-258f07a4232a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a37ed35a-16b8-4d6f-922e-bd7120a36b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75fec0c-4bd9-44c0-8a68-6a4ffd4df56d",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5c4958-46bb-4570-85c5-ddb2b917af14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "399ae210-97f3-4c19-87f7-a116fce46376"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ddb024-59c8-42de-b458-299d35afaf7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4cbb2c-8478-474a-8c32-64dc343eefb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "704f0ba3-3980-4233-8b38-a28a18ff1ec2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c502bf26-96d8-46d9-88c2-101bc6bee082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "431f4bad-342b-4003-b590-aff9b8e76ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5378aa5-da26-44ff-b3f8-d524aa389655",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a53dcd2d-b092-432a-b3d9-56f25553f611"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7de3d0-ef2b-407c-b9c6-1d493fa61a2d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a35373-1cf2-4092-b2ae-1555a4d22ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c2a5db-7ba0-4a26-8d2c-9c71290de4cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d61bcee1-2e21-4d4b-917a-e9f2b416168b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6112d68-a2cd-4f72-8756-657891ca4d9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0056337-76e1-4247-a832-16e7b0ab2698",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3cf34e-b4ea-4d9f-9630-e32d1f6835a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c407f97-fca9-4a57-8141-caf0c17f7850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8008efc7-595d-4d65-95e1-05f5f89456ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444245bf-c067-4d7f-b42c-a7c87768a1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168fd442-a799-4f22-a0eb-12b89ef1d262",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eac7bc8-38e1-462e-881c-d5a1413b7276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc1ab77-1261-4c63-88cb-2bf1dc1c1ac6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be238683-d8fa-4678-a253-0d24a27cdc12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26494259-587a-464b-8a53-791127c65d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d7a429-05ac-46ab-b1c4-5c03224b1c03",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97f1246-962e-423e-a7ea-896d9d1f1236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59acf79f-9e45-499d-92ba-e60be6f79904"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ab1bd5b-cfb4-4950-829d-f493d5ac732a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5151319-0352-4117-9827-47601bd4aff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34001ae9-9656-45ed-8a31-40a2319d32dc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f11ad04-0769-4569-ba18-0919ad576894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25415b9a-c8ac-4c26-89b9-fb530c2adbfe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da280625-fd43-4c0d-8321-b3912733bcca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d6834c4-5ae6-4575-ae58-c2fa83f25113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5e72db0-b303-4625-987a-311eaaf4652c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7bac59-1805-4826-9118-17ac561052c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d7c3b4-2c2b-4ae0-8cd3-ddd639f6205a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f3dcd5-4f85-4ace-a0e6-7d33b4d411dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec729b0-eec2-4b37-841b-20697cc12cf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe63a0d-1090-4aca-8a23-ecb3fb90a8ed",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ab3eb2-e2d3-4e38-bc60-a4e6d56df023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82e46a81-ba3c-4d50-9bbd-e847d75b82e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02114e8a-581d-4e17-acd5-57e91109ebda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70fb923a-958e-467a-9113-0f7edcd4d5ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b438d91-f618-4fa9-b1cd-97498d380e88",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2bc32c-db90-4469-a1ff-9ab60c3e98eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd9f755a-9a3a-4b75-baa1-ccac34f5133a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e20df5e-eed0-4f4a-8a05-b8fcb54bc43c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e7d025-48d0-49d0-bbb7-e6966b1cd9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491d331f-956c-4199-8822-4cd6d6c1f9d5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40992e8f-3f0a-48c5-92dc-99deb052146b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfc79930-d556-4b51-aa0d-9f5195abd629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2436a9fe-8d1c-456a-90b1-17273da54411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cedaba4-1e80-4368-bba6-d98e27e2ae18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a7b6f1-62eb-42dd-97fc-b8965ecc7a61",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "108dc875-a58b-4fb1-aa8c-a123a263703a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0adcce1a-bcb8-4fc8-bbb1-bec04901fe80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a82a50b3-2061-4914-8992-d4857d042f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ce8f77-738c-484a-8b59-f2a60737197e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1ae8b3-9c9b-4f75-80c0-925e7270b83b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee91ee7-ffe5-498b-b0b4-bfa0c8123a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab1b64d1-59ef-4007-9fbb-2e00a0ae5501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7873e11-227d-45ca-afc5-9298dc91c2cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17e27ada-1338-4a20-a752-85b32b856cbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95b82b6-bf31-498f-b6ec-8cf72f7ca2a5",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3548d8c-7669-4556-a5db-5162aa16618c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff89502c-806c-412f-961f-c7f63a896cb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fefefb-76a2-4591-ab1e-4cb618aff44b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0c2a75-c853-4a75-a1b6-a269393e8a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3cff29-c974-48ed-873f-dc9209c57f64",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d0632be-656d-4e04-9ed8-30e323e30057",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71b58021-025e-4dea-a7a5-4513e9fa7de1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4985e6cb-765a-420c-9b3d-9bda1acae262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb55853d-792b-4ff5-9ba4-1829a3f36a35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec94fc67-c54b-49b2-b673-6125f19ef728",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412b401f-0e12-4351-9e26-35f13cfee12a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58d13fbd-2b96-4da3-9767-b170b485cb43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97290c15-e8bc-4749-bdea-2075ce49ef2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "841e037e-180f-4cd8-8b8d-ae28117fce2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fefb51f-bde7-4738-a8b4-46a896fd75e6",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b481b5c7-c381-4e3c-ba77-125fd5f8ae9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13ee4314-d627-40b2-ba6a-e0b07f7b810e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f4c46e-7c91-47c6-9388-37ad3cfd58eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae9ee2c-06db-43af-b78d-dce3d2d2868e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "534f62f4-13a0-4963-92ab-7b3c0c0d419d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a3aea6-8cbd-4922-bb43-948f75c69a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a036bac-89fa-42ec-9fd1-fa7961762bd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9665c328-b29e-4fbf-85fd-419d36a45371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649a269f-6654-47a2-9d8c-b8b3697d93dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1bdc097-847b-4abe-8e8a-a50fe697b69c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5393c67b-6882-4bd6-bdca-a785be1ac001",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5d8d44-4d7d-48f7-9ab5-6ad6c0bbc90f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df686f0-fc88-4443-b4e7-712e4272d0f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e993a3-2e57-4159-b41f-860b754516bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca3f620-bce0-4455-821c-11e54c5a8416",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed1682d9-0083-4030-8a54-05c4e5c59ff5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b3d37a-dfe5-488e-847f-1132c5e096e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b8d9910-1cec-43fa-905d-3a3e18fe9850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018ccb54-a34c-4182-a443-9375b2e933ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79638b2d-c230-45a9-8eea-9c25885ae644",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26eb9037-20a2-4df8-871f-d70714233542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ea5e4f6-1fe8-43ad-8328-b43901ab90a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2784b7c-f0a2-4606-9ccc-48462a5f0398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a88a9359-adf4-4b63-82f6-5675bd5276a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327a1a33-cef4-43c4-9339-95ca95792b40",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc93221f-1266-4a8b-b167-10c1e507ba04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78845c9f-8499-4635-8d9e-c1cedd39c60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a69c6f3c-6f20-430b-af70-c9b8ff3f78e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "563fe512-7b01-4668-be2a-f2a73a188151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db28b64-d9d4-492f-8376-15348a52c98c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ff46f2-4e67-454c-9576-414ef319d8ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a419021-f4e5-4f59-aacd-9ae483009625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8210d787-65ba-48c9-8d92-004a429c5731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c8610e-3cf7-40e0-bd07-0047fd09c045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7658806e-ece4-41bd-a68d-0816a656780f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bba9eff-237b-4060-ad54-a76db75155d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f88f0f-d550-420d-bd54-817440ce6081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c9be4b-e068-4136-8f34-5a83a4a957c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d9e7cdd-4250-40f9-a002-76d0479b6bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a319e73-a924-433d-80e5-fa5f21d64d87",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb3a1497-6f18-4d20-abff-6d64f9c8e118",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518a1151-bc2b-48e4-be01-090785a88a46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a24e22bd-47de-46c3-a95f-deb335409ead",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebb12e0f-3f96-44b5-93c7-fcbdcd8bda4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4387ea06-a77a-43e6-8388-36c7c15180d8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e3bb7f-93dd-4f20-bb1a-d950e70924d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a05ee7c-b81a-4d3d-8468-74e5ce887bb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "509d6fb9-a208-4ffa-b903-7cc4ab58ce1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23867103-b61b-4426-abbb-eaafaeb1ca82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df93d8ac-2aa6-4aa5-aedd-53ae3b01228a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d999012-0e7a-4253-957c-b4cecc5a5b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb547acb-3613-429b-a751-4f51e9bc507b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25261af8-7de2-426f-99bd-4cf99eb210d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29db90d-4a44-4b42-a6c6-1a008f3abdd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e7309d-d9c2-4799-9d87-af06c401af58",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b34ab5-ceb2-4d6e-93f0-02ba639dc2b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e43700-210b-47e5-96b8-794bba5b31bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a66dbcc-e5ba-44ff-9825-d39c25976949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad726312-178e-47f2-9516-b2543f5e9f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "901b7bc6-9482-41d6-94a3-a049f3919636",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00054478-9534-47c6-8d43-4e1a00837c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff3282c-c9cc-4e0b-946d-b7492c9f56b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece9bb08-fd8c-4216-9566-c09cf83a2793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43aac788-e289-4112-9d32-7b9e73ebcfbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca5b0a9-2c37-4358-85f9-993d2acd88cb",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff4e860e-1f1d-4e22-a420-88c69dd11a7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f9a5ade-9194-4f7a-bb83-a6751487e758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca8b0ad-38a9-4ae5-a777-f6a3dd3568bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c558a3-f721-42c9-9567-6ef3565ae691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbd73db-6615-4406-9bce-103bfbd48e1a",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aca9a3c-c414-45c6-9688-8b83b6128b01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9f2cee3-6fbb-48dd-9511-0d6de434dd97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39ebbfd2-f194-4a75-b932-94f9c5453925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc5be9c-5c60-4e16-9169-a838bf68cd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf40d2e-2a03-4487-b63f-7e4de79a393d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf36cbd-bba1-4d37-99b9-a92a1aca3fdf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c089a15-63d7-4f3f-9553-21ed33142bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1b10ef-018a-4a27-baa0-9f6241997c07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f743ff-b16e-4d5a-8d53-7c3cf5a80aca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb2c6b8-e0b8-4549-a0f1-31bf84847efc",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e85190-07b2-440f-8703-d8c02acdd720",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7f67465-4b2f-4858-9936-fc96929cd8d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fbcb442-f078-49c1-95f0-53e6b4a43718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1087dfe-8e16-4e01-9918-837310447125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6127254-5e11-4469-8353-08aaefefa136",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db44bc2d-916c-4b54-a9d4-407999d020b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6954e17e-11cf-400c-9c10-ff2515480f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7929c0-155d-4527-984d-1384c9e22cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "332b3ac0-80e5-4444-98d8-128afb6f1353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e609cbf-6b04-4a58-9b77-332caa514212",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9959365a-0e02-41f7-bdf4-8f4d8981e937",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73f91bb2-352a-483b-a3e2-40417e459ee8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3fd9387-8fc5-4124-8090-0363e894fcfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb28c30-792a-43ce-a8f5-d133009c641e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28e289c-e7e2-4f3c-93fc-7456ac80dc7e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e5734e8-0d3d-4336-b748-c30daf981a73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd0cf5d4-c322-4497-a822-044bb69fb17c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f20a89-25cb-413e-bf2a-72af4222be7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3358be1e-82e4-412e-aa25-e52eeb473dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa26eecf-04aa-4ff3-aab8-0be14ad49283",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735713de-bfc1-450c-baa6-4a293e9d683f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95338d5e-6afc-4371-8927-c0bf49df00f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "373a6796-ba20-47a5-8e02-441582e94543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2371ad4b-8c04-4d23-beaf-08d4491722ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325eef13-7d79-4ead-94fc-a01f1066b64c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da9f433-15d0-4568-b9b7-b40f656b58d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6895c74e-72fb-4fa5-8a00-78e6ba5cddc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e224f58-de6a-4880-ae0e-a7579e860be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f02fb8-9d5f-41c0-8662-2f2d7d6b50cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959a451e-81bc-41ec-842b-2eb471ec4d4a",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def119b9-6c49-4a03-ad5e-d0ca44f5064c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9346fad-6cae-44d4-8a53-3393a492ba28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39ba01c-bfab-4ba4-adb5-a103cff03317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d431a14-96a8-4e3b-8625-ba55ff295da2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca917d7-671b-4478-b00f-adaf124d39d4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d21374b6-d437-4017-bf4f-ca34ade7d6b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c571029-1081-4a68-b335-3bb854da5bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af57a673-bbba-42dc-afde-8da4bf726bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fdd4c2c-577c-48f5-a1b0-0e1d6069baab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06b625f-7873-4501-bf24-01580b1b041e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f24000d3-88fa-48c8-a487-fd7431183d20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12fa1513-b2dc-4ce5-b37a-40c8843d0671"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2d5bc9-0de9-45b7-b462-a8582f21f80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7e6295-56cc-448f-a01f-346d7a8c1b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675b286e-174b-47bb-8fed-ddef0d01b138",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "516fef3f-6399-410b-940f-d63b224d47df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7236628-6edd-446d-96d0-c1f260a487b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3659e5f-5048-42a8-8cd9-f17341ea56c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "598af0b9-d123-40c6-ac0a-d26d04089641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "006ba245-e07f-4c0f-a77e-63ba8d48d93f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01893555-94d2-4e4b-af89-d2938ca3f130",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5da071c7-1757-47eb-880c-dbeae0cc59fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6592bc9-7452-4638-ad0a-ffd8a017f699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5582ea30-9b29-4ae8-95e6-f4ff0d737c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b587490-ad44-40e8-ad71-a7495b03da50",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f17ccd-b3c6-474f-8111-b21db4c3d8b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cef824bd-0402-400e-ab3f-eaa2474cabf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "672f206d-785a-4a2e-8d59-7ccd0d1cbeda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f471e79-1115-43b1-b5cc-327d174e1b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cddbed2-025e-47a5-8be1-485514607f2c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "692ce86e-8be4-472a-a605-3d5931bb6c5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08f10754-9bb6-4d58-84e1-532259542d79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4699417-7ebe-4b58-af7b-1ec4c1fd1824",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c217ebcc-ce12-4493-8f64-7ed7b8dfa3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203d0535-61b8-498c-b0b4-7826a8cdd4e1",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f0366d-865d-4f8f-a3cd-b189028772d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49d32c12-32f0-407a-b1b4-ede2cf0555f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85168ec5-401f-4b88-a38e-6bbbd459baac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0bea5f4-7e15-420c-9b22-25498d0c01c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dac56b-a3c1-493f-ac17-20e12fde92c1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6d092a-a5b8-47d7-a517-e296e1e53d6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "144c861f-dacb-48c2-abf1-5bde47bd4368"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fabbd692-60ba-4f18-946e-4a32c094109b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ad937a-1848-45fe-b94a-b6f7670231f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9eb5f1-12f4-408e-ba4e-491d2e2e618f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c050953b-1bd7-4e9e-89bf-453a60122bbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee4e7612-4f30-46d0-a618-2388f2be55be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17476f94-cbf4-4640-8599-17690e82e05d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf7c445e-1984-4712-8496-08d4e6fe41d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ff074f-157c-49f1-8e07-7eec9b42fb19",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9410effd-d987-4bd8-8b61-548e7c58ac3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59659540-cfb0-4d5c-bb0d-188c815a3064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2437fce1-3e9e-44fe-a77b-16f54f771b16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9858207-5cd8-4d23-9c2e-44e408ed9f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f057d4-8f45-4c62-810d-25fc1c896849",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafed047-f010-46ec-8bb6-c7d4c1870053",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ada48a9b-4c61-4986-a741-3830a95f0717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf15262b-8f3f-44d1-ab28-5811639a6781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9ac4a8-77c3-4b3c-927c-543862524963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdaa4a39-227e-4eaa-ae24-9fbdf78564bb",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2039c232-b895-4602-9697-69bdb6afa44d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f9c8403-7fa1-4d54-845b-eeb6fac8eedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d55fdb-06f4-466e-9d35-639156bb5a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ec0768a-edd5-4c29-aa0d-7bd4e2dd9031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5149df3a-8b15-4084-acb1-5fff4f4fb668",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf303ab-16d8-48d2-a0c7-2db4f0e94971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d7dfeec-4782-4c9a-bef0-1048a65876c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f789015-1a4d-4851-8caf-d772e0369c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad768f10-d6e4-4aa0-a49d-82d128f49cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b18bae5-004b-4392-bc58-720d771944f6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046fe10d-a518-4694-adc3-f137e09b9b71",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d1db723-992a-4e92-bf62-98c8473f0654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "345e144f-c5c1-4cfd-8dca-0230e188aa5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d18ce20-c630-40ba-887c-4b2400c33801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be1161d-0a5e-452d-96a6-9089ea680f12",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe211ee-9fe9-4e64-bd41-5fdccf374d56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d0000e5-931a-4a40-9b02-2b8f8eab2024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d98a9e-43dd-4b31-aef2-4ffffd6aba51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0380a8a9-7dbe-483d-b60c-abd7caf8dcdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e60eac-7324-4005-bf7d-6c2e7f498c2d",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666e1eee-ad8d-4371-ba84-a223b1e3a4f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "329f2c68-6ff5-4af6-bc63-3c45f1095788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7033d21b-ffba-4004-afcc-827b7b50ed4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64dad569-2e9c-4d3d-bab9-b4ac60fd14ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "143bdb5c-144f-4f7f-888d-de57bc2246f6",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd363d9f-c9a8-47a7-a35a-7278aa43c882",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08d09a9f-415a-4e37-85d3-e43c7db7ba7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8994af92-b0ca-4b5e-a92f-ee13dd49dfd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6ec9edd-ac4b-4e90-bc09-ceee80ec7f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049465d8-53da-40f6-96f5-2bb96f5cde52",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b315852-d534-44fd-a66c-7b336615203a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d346f0c5-6a75-4ddf-aa5f-57289bf94429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f5ad1c-1b46-4488-afa8-afc88e671d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a343473-ada5-401d-a3f0-e59f552889c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8c1b01-e6a5-42e9-9f91-71ad0d9a563c",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d944c69-b62c-41e6-863a-9c0576e97a36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "239a4012-a233-4667-944e-2dc4342d7006"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a476b1-8c27-4bbf-bccb-3b388d41ac3e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7c86cb-13f1-4e7e-b14a-f7e7f3f64783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c642e15-5868-49b3-ab09-8e2e3e3c874c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8900cad2-bbbb-4b2d-984f-1788d58473ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "211d81fa-5850-4eab-8011-fff299da4323"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6464146-b857-4d03-96e6-4867f22be32b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3929569c-c16e-4e12-a554-2827030c9713"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ceab3b5-2760-4294-ae1a-5f5e3a10ddc5",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ed3564-bb3a-431e-8268-35db9fec4fce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1778ff92-e598-4296-8b26-9f48636c1c50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68e9c6de-c76c-4e74-ac7b-3eed46ca6035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f36b381-28dd-49b4-8aa3-5dce2eb6cde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e440e1-7f44-4e5c-98fa-ba7ea5c42b27",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f42d5424-ac5c-4562-9015-fe8340d99da3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4b29404-e397-4653-8cdc-c5b9637fc4ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63457a14-a2cb-4dfc-bf56-b71fbfbe555c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cf89f7b-8706-4436-acd9-c572104683b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a5e73a-8248-4644-beb7-424f4449cbb6",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5f50078-1b9c-4d44-833c-7bdb7f3caa5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0e1d834-89af-4e35-9996-495ce86b4583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "533121a6-7ce4-498f-8d1c-b13262fcfdfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38f2c540-c181-429b-947e-5c80889afa3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7af7372-8ad5-4ed5-a159-dab338907035",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf631bf-bb4c-4d32-8ff3-04480c7902bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "febcaa3e-6eeb-4e75-8e03-0a93c9752b85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "916d95d1-8a28-4c6e-b526-0b8ab6bc71cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0d928dd-bbc9-40ee-858b-50f7352e81c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7cdecd8-6f5f-4a46-837d-3f40b527e346",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13f6e19-3b80-4a47-8633-e2a64c6e27da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "456c32af-c5dc-4496-bbd7-996519505232"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6030751-d76e-431b-8624-dc0808b7a96f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb3612c2-5270-4a06-8059-a47e7be8ecdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850ec271-8dcd-42af-b858-8261f89a4c6c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b1af7f-0c92-460a-b7d7-a1dfca300a1e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "456c3b4e-e699-43bc-b5b5-44833b282196"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e59ed6c-4efe-49de-ab56-ff2efca1dc72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dee6b098-a393-444f-8df5-d6e4faf452e8"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a3d293b-9a0e-4d09-95b8-ac67c3c40953",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48345fd9-bc02-47f4-b86f-5d91ca17cde5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "64f62f89-f0a3-4e40-a316-bfad042a8ab0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ccb82a89-e6ac-4fd8-ba7d-e765df5f7efe"
                    }
                  }
                ]
              },
              {
                "id": "40c2a46a-e9c0-4342-aa5c-44f958296f24",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fcebebf1-ce70-4067-834d-5b8426277c3d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfaec3d1-6580-470d-a0f5-3f31b66a116a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e95492f5-f603-4b2b-84f9-01d22cb0a60a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1331ab0-6ae7-4a8c-83cb-612c795c49e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4f87c7a-5f16-4467-b0b8-ca09e1bd11ad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4bd2c675-6b62-49d8-98cd-0be85a7feda3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c100cfa2-25c4-458e-ae80-c28cba4231e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f758644-ecaa-4181-b40b-ff4bff2dc5d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68f61117-b756-4d3d-a33e-2d7a6ec0bf2a"
                    }
                  }
                ]
              },
              {
                "id": "77714acf-37e4-42b8-8321-e34a6ae48eb6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "7c0a0851-133b-4ec5-b159-b62e1a41afcc",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5cdf6e-b42a-4efc-948d-1dcfdeda2892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8b7d714d-5dd5-47ce-83d7-230d0b427d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8275347f-1da7-4975-8d65-a2d17bf32bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9cf3b2b-ab3b-4295-8ec1-631d15435f12"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "15f099dc-a6ab-467d-82f1-76d76a828ae6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8b8ebb24-f1b5-47a9-81cb-cda0c6737e56",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7992fc20-0873-444c-92a1-af9a1045600b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1cf961ee-8a34-478b-b857-6ac6d2d0c216"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a3efdd9-ff7f-4eaf-8ef2-0df33829eef8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f5919bdd-9d64-47af-b440-926f478f58a8"
                    }
                  }
                ]
              },
              {
                "id": "4b7eb4dc-d828-4e39-914d-e2f57d8f7be4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca374504-55bb-45f4-891c-1c318926b870",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a62ce99b-ad4d-48a8-87bc-4bd547dc32e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1aa395ce-3482-4a1e-9c56-07348d553149",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61955c64-976e-459a-92b1-af339f434f89"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "26a2569b-f51d-4744-a1b6-624cc9017121",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "043748d4-6a6c-4db0-9fa2-7ad3b2b7c082"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61655d6c-4b1b-4016-a7ce-0c0f80b61d24",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0736a69a-b3b3-43c6-853a-7e61748c7444"
            }
          }
        ]
      },
      {
        "id": "962e6909-ac47-44e5-9912-abc6c470d8f5",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8ef2f277-7110-4031-864d-fd60a96e352f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c403b9ad-2f97-4b0b-bcdb-73fb5ed0e4b0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69ab3e4b-f477-40d4-96b6-0bcc919b2cbc",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67568d36-0b86-449d-80ea-38340d00ac3a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "05661655-10fb-48c0-8d3d-408b42020e93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2e980b-460b-4a27-acdb-bbafa980d6ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e669a5f0-e662-4de1-abb2-597080cf472f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52daf492-877a-46f0-8efc-ca0da1b8817c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1846440-6cd9-42f8-b7bc-6a75dced3e04"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5ba70e5-204a-4d45-bf7a-064da7d19aa6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40657645-acba-470d-a287-3f9159b154cd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8b6a7f64-3910-46b8-8386-04259d2ec44d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "4c5a2cb0-b936-4ea2-950d-c7266c78e811"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e585e3c-dea7-41ab-b6f8-0cb359ded4a3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95109f82-13b5-4c87-a3d5-b0ad3456db2b"
            }
          }
        ]
      },
      {
        "id": "b8bd7621-b959-4bd9-b294-17164382eaba",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ae0c5ee5-e902-46d0-b220-0474e80216aa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d79e1d2e-6084-4db8-a537-8e2ecf9d99a8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37e0dd81-b80b-48a7-adb2-6faeff138c0a",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e6a8c4-0626-42aa-ba27-6636c7b9db75",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "597293ae-95de-4284-abdb-87a437b86a38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6366dbfc-385d-42bd-88b5-03111e1d2f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27da8ef0-18ad-4839-b882-b2c95d91c7dd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b85c4e9d-ec6a-4336-8155-685b8977da2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ca55c5c-892a-4f1a-aef3-34ff945e171a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "917f992e-ad82-4265-a988-e28f789806de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2deff0f-6c69-451c-9adb-2beff4bf9947"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "000e56db-397b-447b-b0ad-a010d77e7f32",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "88598217-3387-4d36-82f4-e367546c301e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0f57b390-bcb3-49bc-866a-e0b5848e6044",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0ca047b8-35eb-4047-aaf0-fd02a6a3ce40"
            }
          }
        ]
      },
      {
        "id": "a28074d5-e37c-4d3d-9ccf-2665203898e1",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e62e76a0-f192-428e-b94c-b211b244858e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9174c09f-7ae8-44c8-84bf-990c3a7b4e86",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "21e05a3a-c38d-413e-8eab-35bc6797fc47",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e9fb112-a425-4269-8026-edcf2d670813",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2abe8463-087b-4700-b483-1aefd0d5fa2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e0b389-fc6c-42eb-a703-3db47b464112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1839b6c-1648-4e29-aa52-6bb7fc025c9c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6825f50a-7b3f-4dbb-a6dd-4068142f97c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a4a9d62-8d2d-4361-b41e-2a09c8f14c30"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45505f9e-f4af-426f-95c7-3b9445dcf872",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d496fc6-bb2e-439b-be0e-2bd001a25c48"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "33bbfa4b-ed99-41ab-9645-0d40b0546878",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b7c0265f-8930-4cbd-9161-192f1e794de2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a111ee3c-0913-413c-8e7c-c74f7e3c195d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d0bd2327-ab5c-4107-a69d-54dfad6bada5"
            }
          }
        ]
      },
      {
        "id": "9fc8f4c1-fdea-40ed-88f5-8b15ee69ea16",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db43d54b-169b-4629-a255-2953abf7b957",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c053a070-fd52-4d26-a2d1-146e2f42e8a1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "ac6a4b89-999f-419c-aa80-115c0581b471",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "436b516d-4dd8-441a-a2b5-b4bfda54de30",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f2ec71d-3f0c-4ad8-a373-52933cefe539",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 142.86666666666667,
      "responseMin": 9,
      "responseMax": 8236,
      "responseSd": 758.1618327760655,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1708216591320,
      "completed": 1708216640975
    },
    "executions": [
      {
        "id": "fbb8a61d-88d2-4d60-bf80-af12bd53fef6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "58c28288-749d-4819-ac8d-bd115555925a",
          "httpRequestId": "537863c0-363b-45a6-85cf-b5e6b49b57f6"
        },
        "item": {
          "id": "fbb8a61d-88d2-4d60-bf80-af12bd53fef6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3b13b2e1-d40e-4ae8-bcf4-f3239f1cd717",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "2e1c87f3-7859-4ea6-9d5b-b30f90de00f3",
        "cursor": {
          "ref": "c6094d32-d208-4b12-9da9-a0312c036f8e",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "75312471-7e54-41b1-ade0-45656245a973"
        },
        "item": {
          "id": "2e1c87f3-7859-4ea6-9d5b-b30f90de00f3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "74307114-cce8-4c2f-b7c9-5b942b0d7943",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "45abf198-398d-4906-8b25-28439c627b81",
        "cursor": {
          "ref": "739c2439-ae7e-4b57-98d7-83dab2d91e79",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "d1fef437-bdc9-4bb3-8505-467afbba2f9a"
        },
        "item": {
          "id": "45abf198-398d-4906-8b25-28439c627b81",
          "name": "did_json"
        },
        "response": {
          "id": "72669a6e-c02f-42df-8e1e-e5d36ec1874d",
          "status": "OK",
          "code": 200,
          "responseTime": 357,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dd46b8-6f87-4c45-b99c-0cbfc31e1766",
        "cursor": {
          "ref": "e2529003-0a02-4fbf-a8be-ccfaed0c6c56",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3bf8150d-abf6-4197-abae-937c1c28238e"
        },
        "item": {
          "id": "53dd46b8-6f87-4c45-b99c-0cbfc31e1766",
          "name": "did:invalid"
        },
        "response": {
          "id": "6a0522c7-e380-48c3-8820-74be8b4a8bcd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2619,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53dd46b8-6f87-4c45-b99c-0cbfc31e1766",
        "cursor": {
          "ref": "e2529003-0a02-4fbf-a8be-ccfaed0c6c56",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "3bf8150d-abf6-4197-abae-937c1c28238e"
        },
        "item": {
          "id": "53dd46b8-6f87-4c45-b99c-0cbfc31e1766",
          "name": "did:invalid"
        },
        "response": {
          "id": "6a0522c7-e380-48c3-8820-74be8b4a8bcd",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2619,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19ddc9a-9e56-47e0-9207-5bc1981fb6a3",
        "cursor": {
          "ref": "1eba5e37-5f4a-4d94-9996-f71128b60d28",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2c6b5c88-889a-481c-b627-7f8967e30158"
        },
        "item": {
          "id": "d19ddc9a-9e56-47e0-9207-5bc1981fb6a3",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "bf02909d-f830-4d79-836f-e09e363e32e6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 42,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "810e39f7-20a7-4740-bc5f-cd37b231a8da",
        "cursor": {
          "ref": "286adc3a-abab-4605-b813-5380dec5ea0c",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "1cd6851b-93ee-4af6-8ae0-f06978801b17"
        },
        "item": {
          "id": "810e39f7-20a7-4740-bc5f-cd37b231a8da",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "11ee1227-3bd6-4b45-9a38-f37cce5ce6a2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 43,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101d3718-dcb4-4d87-a632-2ed7a0af65e7",
        "cursor": {
          "ref": "97322686-3ab8-4ed3-a162-f35c1fd6089e",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "93cf1ef7-91a7-4550-8697-756ec719322a"
        },
        "item": {
          "id": "101d3718-dcb4-4d87-a632-2ed7a0af65e7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "7989c760-2a1a-4d1f-8ec8-2e1e5e19dd54",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc021fb3-0d7a-4eee-9979-668a91f8c138",
        "cursor": {
          "ref": "8c6f0a0a-b428-4b61-a222-26c04be6d198",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d31dd9e8-5786-482a-86ca-4a6b127dc6aa"
        },
        "item": {
          "id": "bc021fb3-0d7a-4eee-9979-668a91f8c138",
          "name": "identifiers"
        },
        "response": {
          "id": "93798f70-bf0b-4786-bdcb-fcc62a5db31a",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3eec19c-ba34-40f3-867c-62bed7cad5ce",
        "cursor": {
          "ref": "800c54f5-8b1f-4b48-a64b-7f4ec09e9d03",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b1277726-825a-4e9b-b9bb-21fbb68332a8"
        },
        "item": {
          "id": "e3eec19c-ba34-40f3-867c-62bed7cad5ce",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e3cc36aa-d15b-4569-91e3-88aa37cb253a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8977f99-e90f-4d6f-b3c4-41190b26e628",
        "cursor": {
          "ref": "ea0eaff1-e440-4806-b852-52bbe084615c",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "299eb089-0615-44d8-ac65-7e4fe74d2cd5"
        },
        "item": {
          "id": "a8977f99-e90f-4d6f-b3c4-41190b26e628",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "46ca5175-6672-4649-8ed5-feffb8e08656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cef67b-393c-487d-bb01-18756755e529",
        "cursor": {
          "ref": "bc42fc2e-e455-4b9c-a065-a256fdab24d4",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3a218ded-ac0f-4c19-ae5e-ec8b9ad0ce62"
        },
        "item": {
          "id": "90cef67b-393c-487d-bb01-18756755e529",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "59aac012-5f8b-4a8e-a417-2f699af24208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e083ab-270e-4e5b-82ac-873d09300f07",
        "cursor": {
          "ref": "1a3b0385-d44b-461f-ab88-0e12b1789f68",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ffbbfc62-05ae-4ffe-912e-00f4222e08c8"
        },
        "item": {
          "id": "31e083ab-270e-4e5b-82ac-873d09300f07",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "fc4b1e6d-ea12-4fac-baf9-abc90c920cfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "881217ff-7f71-4ff5-ac91-be66f67367fa",
        "cursor": {
          "ref": "9cb598d3-6d6d-4853-a53a-5797cc02d6b0",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "4c292b0e-8633-4c8b-9180-920994caef73"
        },
        "item": {
          "id": "881217ff-7f71-4ff5-ac91-be66f67367fa",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "83146873-8b6a-4e80-b79d-07bd218b9231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558a294b-fdc4-4bf6-ad50-e006cc267edc",
        "cursor": {
          "ref": "825fcc37-1e07-4e35-a780-9a6775a3e939",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4f03f553-9d36-4678-ae36-b7d0dab2bcfd"
        },
        "item": {
          "id": "558a294b-fdc4-4bf6-ad50-e006cc267edc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "84075da8-83b9-4bf8-953b-0d953d6e4a07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad6879b-b3e3-4ee7-a35c-118b616143ae",
        "cursor": {
          "ref": "a256804f-01a6-4d80-af3c-0eee65d2e1ec",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "573e4f6b-9f84-477a-bad0-4c62be5535a2"
        },
        "item": {
          "id": "2ad6879b-b3e3-4ee7-a35c-118b616143ae",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "94fb7e4a-905d-4d47-b44f-829b862d3c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "217896be-924c-45fa-9da0-7d0d1ec17821",
        "cursor": {
          "ref": "feebe395-a69c-4505-ab0a-064418eb54d0",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "94f63c88-adc0-49a7-a7c7-ff3d5b554e7f"
        },
        "item": {
          "id": "217896be-924c-45fa-9da0-7d0d1ec17821",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b2642a9b-042e-466f-bb51-5ac39fcd7447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be120f1d-431e-4191-85ca-f6ce85caa8a5",
        "cursor": {
          "ref": "09b15b52-2d2e-478f-b883-7e71548952ad",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0deea8cf-db72-41ee-a1af-893069819102"
        },
        "item": {
          "id": "be120f1d-431e-4191-85ca-f6ce85caa8a5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "302c3f47-8ce1-4d2e-a855-f2728466f334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4c3b1d2-0a91-4d38-a048-1f5cab904e9a",
        "cursor": {
          "ref": "93dc673b-183e-483f-bebd-000bbbb5e9fa",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b02f7124-1f2a-41d4-a97c-5b18e270f075"
        },
        "item": {
          "id": "d4c3b1d2-0a91-4d38-a048-1f5cab904e9a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5ebfa723-7271-4882-bec7-2abbbac8f7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1c2d66-30dd-46ae-8aa3-eb7f4a93bf3b",
        "cursor": {
          "ref": "48d0ec10-9a88-47a2-8e32-95b13bc9c2df",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c81d3527-24db-4f32-bb2f-4686927ef060"
        },
        "item": {
          "id": "ec1c2d66-30dd-46ae-8aa3-eb7f4a93bf3b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "57fa1651-2788-49fe-99a5-98e0fdc955ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08da264-5b96-4e3c-9a54-69b69feb59d7",
        "cursor": {
          "ref": "76df0e11-3ccb-438a-bb8b-6ee90b3b19c0",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d43d56c4-a0f4-4c27-b851-91875d1b5c4b"
        },
        "item": {
          "id": "a08da264-5b96-4e3c-9a54-69b69feb59d7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "aac9470c-30aa-48f7-8203-08db7ba7016e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78f3147-24fb-4405-bef5-b159daadef41",
        "cursor": {
          "ref": "b7c43a27-29fd-4579-a231-da2da332eb86",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "093eeed7-dcec-46f2-8ba0-85ccd2e1bce3"
        },
        "item": {
          "id": "b78f3147-24fb-4405-bef5-b159daadef41",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1faf919a-5465-4aa8-a0e7-81ec101d0dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a74d7a0e-8af5-4875-930e-cfcc0bc9b79f",
        "cursor": {
          "ref": "d3e84ae3-65b8-4552-947b-cfb95906d75e",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "fa19ef69-33c9-4df1-9132-2c2fab26d801"
        },
        "item": {
          "id": "a74d7a0e-8af5-4875-930e-cfcc0bc9b79f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1a370e4c-a528-42fc-b542-3dba30525575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace2ac0e-e726-46cb-9763-15c536cb140b",
        "cursor": {
          "ref": "280c1a14-8849-43d8-88a5-02645df10cb2",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0a7e1b08-8395-4507-a627-732d6668d80d"
        },
        "item": {
          "id": "ace2ac0e-e726-46cb-9763-15c536cb140b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bc80bbf2-35f0-4cb4-949f-eec65371bdd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d88e5fc-82ea-4e1f-ab0c-6ae0faee8a5c",
        "cursor": {
          "ref": "2268497b-1a1f-4c94-b713-303c0fba47e8",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bf54997f-8b15-493a-80a3-43cb7202bc3b"
        },
        "item": {
          "id": "3d88e5fc-82ea-4e1f-ab0c-6ae0faee8a5c",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "18180331-243e-4948-9d5f-8807473b8a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a6de2e-a19a-4911-b384-1d0a5be3542c",
        "cursor": {
          "ref": "50f29ac0-0b98-4521-a228-f54921a7b2eb",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "65193f29-d74f-47d9-80ca-d4e42215577e"
        },
        "item": {
          "id": "a5a6de2e-a19a-4911-b384-1d0a5be3542c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "34178636-0491-4ee8-9f5c-675b85088970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370319b8-b950-49ad-8169-d5d994abd55e",
        "cursor": {
          "ref": "ff05c791-c8e3-4121-acc9-81a08f8ebfb1",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2f37b17b-6219-4bc8-8df2-c00ad6cfa8d4"
        },
        "item": {
          "id": "370319b8-b950-49ad-8169-d5d994abd55e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "db3feb57-bf27-432b-81cd-6958d5735ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c1b114f-5679-4fcc-b716-414ae655d265",
        "cursor": {
          "ref": "465b2a20-92ed-4121-b6ca-a1a46ab5c2b4",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "92352810-7843-4871-b62f-d0827cadab3f"
        },
        "item": {
          "id": "8c1b114f-5679-4fcc-b716-414ae655d265",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "be139910-7075-4e88-af14-f978d02867c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494e6229-391f-44fb-a151-edc7456a8abd",
        "cursor": {
          "ref": "8971ba9d-a079-4b5a-ad95-cf125875b88e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "122ea840-7024-4d7f-b525-dfc52992d6ec"
        },
        "item": {
          "id": "494e6229-391f-44fb-a151-edc7456a8abd",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d427fbc9-d7a0-45ec-a074-5c4ec5ea2b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4edfe72-19eb-45c4-a4d1-e5ea52b15753",
        "cursor": {
          "ref": "55d1e5c1-8ee0-4ce1-bf03-bb03c104c366",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "c34229a4-6962-4eb9-8061-bfe173a5321e"
        },
        "item": {
          "id": "c4edfe72-19eb-45c4-a4d1-e5ea52b15753",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9c35753e-4440-4897-9455-f2d97b075f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7094db68-2e4e-418f-9b2b-4d78822db421",
        "cursor": {
          "ref": "4a2d2134-1bbe-4690-a81a-110fd91f7ab5",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c22d2d23-a957-4e1c-9303-c60da44edc91"
        },
        "item": {
          "id": "7094db68-2e4e-418f-9b2b-4d78822db421",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "447a13dd-11ff-47ea-b7fd-03a890bd3f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc99d89-f950-45fb-a125-c4736a01ed53",
        "cursor": {
          "ref": "252cbea2-9caf-438b-a497-ea7a6d58b4f4",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "64e7a159-1a88-466f-8a8c-59fe6d43eaa5"
        },
        "item": {
          "id": "8fc99d89-f950-45fb-a125-c4736a01ed53",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9c6bbb0b-67b0-4fdc-a318-e48444c7ea5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7900149a-f79b-4a7f-b280-fd1feab53fae",
        "cursor": {
          "ref": "01cb4355-91a0-41b4-8476-9c70b9614be8",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "cc37fccb-0a25-41e1-90d4-dea75214b3fb"
        },
        "item": {
          "id": "7900149a-f79b-4a7f-b280-fd1feab53fae",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "db5ca027-c49b-4081-bf1c-5266db5aff4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b550e4-8e39-45dd-90f2-d493e0885202",
        "cursor": {
          "ref": "06c7ec8a-d958-409e-8096-5379a3d36c6a",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "8ae71d98-0ae5-429a-80dc-b44dec0574c1"
        },
        "item": {
          "id": "58b550e4-8e39-45dd-90f2-d493e0885202",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "34e4f80e-5848-4f6b-b515-935b7e57fd62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef562aab-e423-4dce-8588-f7bdd52d2571",
        "cursor": {
          "ref": "69b1a029-0664-458e-8235-53ef6a1f151f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3aef5f54-b7d5-40ba-adcf-c7ac1132f93a"
        },
        "item": {
          "id": "ef562aab-e423-4dce-8588-f7bdd52d2571",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cfadc5b3-e1e1-4889-9161-563d9c4a0303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2069c0c4-1d8b-4274-9217-1e19f36977cf",
        "cursor": {
          "ref": "d06ad424-f518-4af7-9f0f-54cff237573c",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2ad072b1-82d0-4ee3-805e-659bd0d2c511"
        },
        "item": {
          "id": "2069c0c4-1d8b-4274-9217-1e19f36977cf",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "af61afcd-2906-473e-95a2-9dcff751f075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff93766-cab2-412d-a851-826527275ee5",
        "cursor": {
          "ref": "0d66d62b-ee18-440f-a135-89ddd8a4eb67",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "05a6d7e1-a2e7-40c5-b0f7-280c6ac948c5"
        },
        "item": {
          "id": "aff93766-cab2-412d-a851-826527275ee5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "34a6e86e-8c98-42b5-aa0a-3ed85e56c4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75cbf55-b1bb-4842-8e43-8645c0b99df6",
        "cursor": {
          "ref": "4e9aa11e-c3c8-4429-9df1-6cd8d6d763e5",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "bb0c2626-4d15-452f-ad34-531a2cc60996"
        },
        "item": {
          "id": "c75cbf55-b1bb-4842-8e43-8645c0b99df6",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9d0775bb-1372-43e8-a4df-fb336f7e6e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc6b23b-1d44-47d5-97b6-3cfeff3ac2f2",
        "cursor": {
          "ref": "79d3de83-3b91-4b6c-a1ba-ded33942d5f3",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "88376a0f-b58e-4e1f-9f99-6adc67b58ebe"
        },
        "item": {
          "id": "afc6b23b-1d44-47d5-97b6-3cfeff3ac2f2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c98b6b82-93b1-49c7-95a7-5c52e499d53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e7c0c7-0a9e-4180-8abb-4302c787e2a9",
        "cursor": {
          "ref": "8cbdb3b0-4904-48bb-88a0-d528dec78211",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "b4b54df3-e7b4-4539-9694-1a23584beef1"
        },
        "item": {
          "id": "b6e7c0c7-0a9e-4180-8abb-4302c787e2a9",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "03ac8dab-79b0-40a4-a074-052109c176a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1149d27a-f197-4495-8150-158612a678f2",
        "cursor": {
          "ref": "bfa3cbef-63dc-42f2-a03f-ec763dd5f3da",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "862acf90-91f6-44c2-a564-408dff1220be"
        },
        "item": {
          "id": "1149d27a-f197-4495-8150-158612a678f2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "52909f9c-11ae-4835-a760-07546e09eeae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "569b4bef-20d0-4da7-bc45-941790cdeabc",
        "cursor": {
          "ref": "a2f70848-7a20-4cb6-a891-d8e3ac749302",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b550f0a3-be93-411b-8711-a73773c46bea"
        },
        "item": {
          "id": "569b4bef-20d0-4da7-bc45-941790cdeabc",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "3c213d95-c1b3-47f4-84c0-68fda876a658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c33f4f0-0bc0-4328-aa4c-4c6c444a11bb",
        "cursor": {
          "ref": "f9901599-754d-4338-bfac-b5c4237e292d",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b7b31495-c2cc-409f-9d7a-1a32013ac809"
        },
        "item": {
          "id": "0c33f4f0-0bc0-4328-aa4c-4c6c444a11bb",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3d27b958-4508-4b2f-a04f-5ac2f95317dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90d9b53b-0177-4f6f-b75f-54f97535edc1",
        "cursor": {
          "ref": "42675589-cd41-463b-b3e2-909d0d5f6939",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "eba230b4-0df0-40da-abf4-cb563cc1cb03"
        },
        "item": {
          "id": "90d9b53b-0177-4f6f-b75f-54f97535edc1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "19a1fa8e-66d8-4b99-a865-a05b41aa0a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a13c68-4393-466a-9816-ecf7a158dac0",
        "cursor": {
          "ref": "0f8f3edb-caa2-4bbf-a5b4-7cc067cf783d",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6d12df29-30aa-4ec3-b3f4-24c7c1a66a57"
        },
        "item": {
          "id": "91a13c68-4393-466a-9816-ecf7a158dac0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "54f8d72b-c853-4b86-b585-0cd4b6f1db3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4da697e-eac0-4605-a9f3-9021ade785d5",
        "cursor": {
          "ref": "164e6365-f845-43cd-9c4f-4b827121f674",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "433557b7-efdf-4dfa-8b3e-d947b339f30a"
        },
        "item": {
          "id": "f4da697e-eac0-4605-a9f3-9021ade785d5",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "dd12aa9a-6eb2-4df2-aaba-55ece589e4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bac3448-4498-4dc3-be64-ce06d192bb8f",
        "cursor": {
          "ref": "8d30331a-ae4d-4b58-ae34-8c52976e1be5",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "fb54bb0b-5e1e-426a-9822-7407ad21e45b"
        },
        "item": {
          "id": "9bac3448-4498-4dc3-be64-ce06d192bb8f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c8e6a1bc-eeb2-4eaf-86d3-02efa3d42f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f02af2-89d4-43fd-970a-8234f4923252",
        "cursor": {
          "ref": "a164d52a-8563-420f-abfc-75c5c35626ae",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b3c982c9-c53d-486c-89a4-e23a34545489"
        },
        "item": {
          "id": "d8f02af2-89d4-43fd-970a-8234f4923252",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "45f6a3f1-3416-4ca3-bb8d-0548b7e5c29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4db6b9-6435-400e-a0c0-68c9eba19441",
        "cursor": {
          "ref": "d7e03718-23f4-4c39-9781-e21fb8444bb3",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "61e60819-a913-49ce-9f70-79e45ebfaeb0"
        },
        "item": {
          "id": "5f4db6b9-6435-400e-a0c0-68c9eba19441",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1a53ac09-977a-4fc0-8cda-4638a115a272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50f627a-dda2-47a7-8781-cef4a1bc28a1",
        "cursor": {
          "ref": "bc889ab1-606e-4eaa-a31b-605cb66958a4",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "47e0710b-af53-48b1-ab84-172fb6f30262"
        },
        "item": {
          "id": "a50f627a-dda2-47a7-8781-cef4a1bc28a1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "754fd915-f8cc-471b-b620-f205c3f9e3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4cbd74-5a62-4873-a345-478ec18c81b8",
        "cursor": {
          "ref": "d56a32d8-fc54-46d4-a14a-64738a8a1fb9",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8d8134af-a0b9-461b-bf7b-5da33a5603fc"
        },
        "item": {
          "id": "da4cbd74-5a62-4873-a345-478ec18c81b8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "da1c698f-010c-494d-96c4-cde2b607a6e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cab74b5-d817-43c0-b0b6-1c5c1c11413d",
        "cursor": {
          "ref": "c3ac8d01-7003-4fab-9e11-f401e8e3d56c",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "eebbe63e-0b8f-4fe4-a71c-27e99e41ff63"
        },
        "item": {
          "id": "4cab74b5-d817-43c0-b0b6-1c5c1c11413d",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b39a0edd-4b52-4d9a-94dc-6de41608504b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9daaf0d-8011-4ffe-a5da-5c73647120d1",
        "cursor": {
          "ref": "cb57f543-9cde-4395-b4bd-cb3665a096e3",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "a755b424-a7d8-406b-8633-ae85c77312fb"
        },
        "item": {
          "id": "f9daaf0d-8011-4ffe-a5da-5c73647120d1",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "4bc87f0e-3951-41e5-b280-e76811eb71c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53354136-ced1-4b13-9585-844ec6e475e9",
        "cursor": {
          "ref": "751b20b8-afa8-40c4-b24d-0a39e220df6b",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6bd7cb5f-fe76-4f85-a106-071bb7bb5ac0"
        },
        "item": {
          "id": "53354136-ced1-4b13-9585-844ec6e475e9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "97dd17aa-0ca7-4db8-8e46-f96926dba337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67cb3b81-863e-4e5d-85cb-ecda7a93c575",
        "cursor": {
          "ref": "84c01968-51ac-4c78-8825-ab0a897e89ca",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "51fa112c-d262-4dec-af27-7499f3c32930"
        },
        "item": {
          "id": "67cb3b81-863e-4e5d-85cb-ecda7a93c575",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "44556596-5dc8-4552-bd1a-fd3eda422e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c4642d6-82db-4e65-be92-bbd5a516ab4e",
        "cursor": {
          "ref": "fe605cd4-b738-43e3-b26f-3243c96425ca",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "c32a5fad-5c0c-44bc-9122-5d9e3d4c5478"
        },
        "item": {
          "id": "8c4642d6-82db-4e65-be92-bbd5a516ab4e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "54ae0980-4e4d-4570-821a-4d65df12fb5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424c5db4-e95d-4a84-876d-c08d181a956e",
        "cursor": {
          "ref": "04294fdd-3526-4fd0-9399-9a2a0650567f",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "339c693a-7761-4ae7-a3b0-771b5b06a858"
        },
        "item": {
          "id": "424c5db4-e95d-4a84-876d-c08d181a956e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0760ab42-62ee-46b3-b502-eb99a05b029f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938c6251-8341-4124-ad1b-99d51b059ed0",
        "cursor": {
          "ref": "2f8da000-776b-44f3-9c14-eb8b0147b4d6",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "f5bc3447-dcd0-4b83-9f8f-81d5b6133935"
        },
        "item": {
          "id": "938c6251-8341-4124-ad1b-99d51b059ed0",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5d4e751e-2b66-40ea-9cb1-60cddbeb254a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e2dbf5-79b8-4971-900f-2fbe1f533dea",
        "cursor": {
          "ref": "8db4075d-a700-4bc5-aaa3-5e1b4794f66e",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e18bbf93-976d-410a-b645-2e2c0770a323"
        },
        "item": {
          "id": "86e2dbf5-79b8-4971-900f-2fbe1f533dea",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "40e6b773-432d-4168-9a81-06767707e397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ee2dcc6-0002-44c0-9f03-564a573d345e",
        "cursor": {
          "ref": "49516a33-f915-4733-9979-42929e4dd430",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d0ad225c-26cb-408e-9f86-6fcf4f821694"
        },
        "item": {
          "id": "5ee2dcc6-0002-44c0-9f03-564a573d345e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6241ca0f-3778-4233-b35c-d40cbd67116d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69203c48-4dad-4b8f-b585-6778f622af40",
        "cursor": {
          "ref": "0806708c-b7ed-4cb7-ad0e-fa4d2230103b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "326f60dc-8ea2-468a-a45e-f86a279e75dc"
        },
        "item": {
          "id": "69203c48-4dad-4b8f-b585-6778f622af40",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "97d53037-f05d-40a4-a1ca-3af19ef6c3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06ad4ae8-9b12-42f8-915e-2b4d92a3c51a",
        "cursor": {
          "ref": "2875dea3-a8c9-485f-b945-547a87400ac6",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "94bbc938-2c33-43a4-ae97-381801af7810"
        },
        "item": {
          "id": "06ad4ae8-9b12-42f8-915e-2b4d92a3c51a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "24de0714-e6b6-4294-8d51-2024e336ba8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae308852-a542-4b2d-9d18-1677a50fe15f",
        "cursor": {
          "ref": "7a2471c2-7427-4e8b-acd7-d9bba3bbfe30",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "ae19a6a6-287a-4f3a-a3f9-90ef5dbc96a1"
        },
        "item": {
          "id": "ae308852-a542-4b2d-9d18-1677a50fe15f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "59ecfc7a-1114-4dc5-bf5b-d47d5b2f0e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff800bb-8c75-4ea6-a04a-9962c1864d36",
        "cursor": {
          "ref": "a3522ce9-ebde-4cf7-9818-b1b023df9a1b",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f05de455-8735-41c7-86c2-5f0f4ad6970f"
        },
        "item": {
          "id": "0ff800bb-8c75-4ea6-a04a-9962c1864d36",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "43c0879a-41f4-48ac-a6bc-aaa01d7b13e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf08731-0fa1-4151-a3b4-2878d3f11e3e",
        "cursor": {
          "ref": "32c54a1e-8197-4730-9d2e-1f79f3bfc8a9",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f7aed424-c654-45c6-a2ee-c3148ff76bf0"
        },
        "item": {
          "id": "eaf08731-0fa1-4151-a3b4-2878d3f11e3e",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e9162ae5-e4b9-477e-83b9-739dbade22c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0498fbb-5fde-4561-83fb-399f6cc07c2d",
        "cursor": {
          "ref": "2e94f5da-129e-49b4-a7fb-4ad15fa82a3b",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d976c31b-a8b1-4d67-812d-fd9b41e4df6a"
        },
        "item": {
          "id": "a0498fbb-5fde-4561-83fb-399f6cc07c2d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "13c486b2-bb7e-4d40-a2e5-4b7f8857aa92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7596cbd1-2af4-4776-8c54-85dcec21da25",
        "cursor": {
          "ref": "1b13dbee-927e-4a70-a4f4-6def32a100eb",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d256c920-66b9-440f-9120-a596cb27bded"
        },
        "item": {
          "id": "7596cbd1-2af4-4776-8c54-85dcec21da25",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "66cbc615-0c64-43cb-bb4f-6a118acf6b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172c3dc3-6349-45a4-bd7f-cc43135b7393",
        "cursor": {
          "ref": "767e080e-ccd1-407b-97bd-956678279342",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "0cf1367e-0647-4b67-b8d0-209c013e4bca"
        },
        "item": {
          "id": "172c3dc3-6349-45a4-bd7f-cc43135b7393",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "ad14ca1e-cbe0-4efa-97c9-128b47570f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e593b440-9df1-4a3f-b5ba-2e0027eff0fd",
        "cursor": {
          "ref": "f8b6c146-3ef4-49f7-a304-a61f3ce7a613",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ead7b294-a969-4c06-982c-dd948cfd86b4"
        },
        "item": {
          "id": "e593b440-9df1-4a3f-b5ba-2e0027eff0fd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "950de266-065e-4e28-8fdf-1864365dde99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5194c4a-9135-4ee6-a9a3-798d1ffbbfe9",
        "cursor": {
          "ref": "e6a2932e-b379-436f-abc0-51d5aed50e1c",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ed41855a-a303-4346-b680-4dec857706e5"
        },
        "item": {
          "id": "c5194c4a-9135-4ee6-a9a3-798d1ffbbfe9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "1cd8d43e-e337-439d-8240-4e62f2c74109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6526eda4-ba38-4b57-9bcc-9f704cc39f7f",
        "cursor": {
          "ref": "4f141488-ce4b-4777-ac64-bc55a1cc5f56",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c12d69b6-dabe-444a-a64d-a6f7758bb6e8"
        },
        "item": {
          "id": "6526eda4-ba38-4b57-9bcc-9f704cc39f7f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a097db21-31a0-47c9-a38f-015f645dfa2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294aac32-2f7b-48dc-b740-22ffc34cf50e",
        "cursor": {
          "ref": "a1114b16-523a-4b8f-963e-3e11ed61bae0",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f7dc87e8-ec38-4665-b313-ed54eea9437b"
        },
        "item": {
          "id": "294aac32-2f7b-48dc-b740-22ffc34cf50e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "21e7e761-f3de-4fd4-940f-ec22092c410c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8228694a-f11f-4110-a4a7-bc606be84ad2",
        "cursor": {
          "ref": "d2211fbb-0163-46e4-99a4-bb10af2fd985",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "941525f6-bed5-4ce4-b7a5-9f15152fe440"
        },
        "item": {
          "id": "8228694a-f11f-4110-a4a7-bc606be84ad2",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c13a36b5-87a5-46a4-9802-6f8084c48827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023ff6c4-9634-4279-af0e-1be2e758f629",
        "cursor": {
          "ref": "08ab9a66-503a-495c-bb2e-97512084711a",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "021fbd7e-05d0-45f7-a213-2948b65cbebe"
        },
        "item": {
          "id": "023ff6c4-9634-4279-af0e-1be2e758f629",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "5cd6e4b6-7f42-4098-9848-5ef3abb3c559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9cf22c-bd44-4bfe-b983-332eea34b878",
        "cursor": {
          "ref": "5cf6f930-b868-4d53-a9bb-fa1070c68997",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e2fe7430-38e5-4c1e-9f48-0434d5d3b96f"
        },
        "item": {
          "id": "fa9cf22c-bd44-4bfe-b983-332eea34b878",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0bc01c9a-4a55-4edf-ba8e-eca484383525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416fd4f4-992d-4c50-8b94-e1ed3829b022",
        "cursor": {
          "ref": "988f9d55-22cf-4884-9c19-a0888c131b0a",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d7d9a48f-e56a-4a3a-be9d-7733b2b3dd00"
        },
        "item": {
          "id": "416fd4f4-992d-4c50-8b94-e1ed3829b022",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4c925aa7-b1b0-4ae2-b898-b0de639d1090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8b344b-3670-47b8-8cf0-1c413617ffb1",
        "cursor": {
          "ref": "37bda688-6132-4fff-93ba-fff0d3ea91d1",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ed982da3-1b48-4cb6-b30a-4b792a128b8f"
        },
        "item": {
          "id": "7a8b344b-3670-47b8-8cf0-1c413617ffb1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1382203a-a180-479f-9b04-6003b5129d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ec63070-f152-4ad5-8287-c2f9f641940d",
        "cursor": {
          "ref": "a2f50d80-4baa-40f9-8612-c6f19fea208c",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "6aee69fb-b447-41f0-b74b-923447548831"
        },
        "item": {
          "id": "2ec63070-f152-4ad5-8287-c2f9f641940d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "35069ace-ae45-492b-8986-4b4ccc8b5a4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c87ade-41dd-4eff-8308-3d7745db0f51",
        "cursor": {
          "ref": "cd62eb18-4566-46a9-9375-fbe6c4384511",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b3ec1cd4-346c-4ce2-bd34-340a232206a3"
        },
        "item": {
          "id": "76c87ade-41dd-4eff-8308-3d7745db0f51",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "27594d3f-4cfa-442e-9dd8-d9ab7256d334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7426ec-ba89-4aaf-828e-82f5db71b867",
        "cursor": {
          "ref": "eb93f46f-7b19-40f7-a729-8a10dbc616aa",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3a3818ae-fec0-4013-bffc-b396642f4ae5"
        },
        "item": {
          "id": "ab7426ec-ba89-4aaf-828e-82f5db71b867",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9e9b60d1-f5ef-4163-a04a-e7c5f5e38cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a848df4f-a70b-42d6-8ebf-fe32e3eb8edd",
        "cursor": {
          "ref": "9c4e9330-cc80-456c-b55b-a8e181be22f2",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1eca7f44-29df-47d9-bc19-62b95aed2747"
        },
        "item": {
          "id": "a848df4f-a70b-42d6-8ebf-fe32e3eb8edd",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f7fae606-32aa-4841-b8b4-7a86bd75c89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3d2107-555e-4a44-baf0-c9fc73b6b9ad",
        "cursor": {
          "ref": "ae114858-b4ed-4538-baba-652b3a6414c0",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bd54e314-9f80-40b5-a234-dfdab0d53f0a"
        },
        "item": {
          "id": "ac3d2107-555e-4a44-baf0-c9fc73b6b9ad",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "01cf8f41-bbeb-4be3-a99d-eb3707f487ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e361e25-cb4c-4673-8f66-defe82d1cff7",
        "cursor": {
          "ref": "927e4e97-4b95-436a-8642-7a3cc4f8dc6f",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9c458543-fe7d-4605-b274-248b14ed1b71"
        },
        "item": {
          "id": "4e361e25-cb4c-4673-8f66-defe82d1cff7",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "cdaf1ed9-d2bb-425d-9f7e-c176cd179255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb98b45f-1ae5-4445-8c29-af887eb595bc",
        "cursor": {
          "ref": "beddb3c5-bfec-43c1-b7fe-241809af781d",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "ca00aa58-da55-492a-a2a2-0be7542c502e"
        },
        "item": {
          "id": "cb98b45f-1ae5-4445-8c29-af887eb595bc",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2ca4f237-3a9e-4b3d-a7fe-bf96bc0ecb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e452717-e677-45c6-bf6d-28be8c5a4b55",
        "cursor": {
          "ref": "313a9287-f0fc-4732-81c8-29b47c099a13",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ebb603dc-254c-40ea-a640-1b1204efd1f0"
        },
        "item": {
          "id": "6e452717-e677-45c6-bf6d-28be8c5a4b55",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a0a5cc87-cd83-4b80-8d00-ca4a97282e23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079b36ea-df66-4504-bdde-767f610ee65c",
        "cursor": {
          "ref": "587f6ec5-75ba-4891-8ad0-04abbbeaa724",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0c99af79-5c1a-44bc-a3d5-cae94506d477"
        },
        "item": {
          "id": "079b36ea-df66-4504-bdde-767f610ee65c",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0da67558-7daf-474f-aadf-8c05ee67f99a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e316b1-cdaa-486e-8a01-56860caa0628",
        "cursor": {
          "ref": "53207221-4d1a-4e7b-9a54-496bc734d98c",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "299ac860-6b5a-4d8f-83c1-8b18b8941be9"
        },
        "item": {
          "id": "79e316b1-cdaa-486e-8a01-56860caa0628",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "826bd764-a7bf-4faf-8dbc-3fecdf783c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2151e0c8-f08f-4524-96ab-79d2e0628aff",
        "cursor": {
          "ref": "4673681a-a084-4fa8-8fd2-26ecc9143bf3",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f8372de6-180c-4c9b-923b-43f46be0ed9b"
        },
        "item": {
          "id": "2151e0c8-f08f-4524-96ab-79d2e0628aff",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "2f0460e6-77bc-4726-90c7-cedf81c190e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c03235-a40e-4f74-8c37-e961b3cf2acd",
        "cursor": {
          "ref": "ad74302a-4a22-4ba4-a5b3-d710742d6def",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b005f667-ff3a-4bbc-ad00-83d510997347"
        },
        "item": {
          "id": "b2c03235-a40e-4f74-8c37-e961b3cf2acd",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0bb19a0b-b9d0-47b5-ad1a-e420937b3eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6603c2-ba31-4a01-9869-fe442984f60b",
        "cursor": {
          "ref": "ab544b48-247b-407b-a014-f96c1ca29a1e",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "3e7877d7-465f-4199-b5be-d402daf2a045"
        },
        "item": {
          "id": "6a6603c2-ba31-4a01-9869-fe442984f60b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6bd6153a-bc75-4a04-812e-c83ea4522682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e699831-5b01-451d-97bc-89220e5385c5",
        "cursor": {
          "ref": "8c3486f2-0dfa-4ffa-b8ad-3c9247f7eed3",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4c8ec76b-290f-4647-81e5-07233972176d"
        },
        "item": {
          "id": "2e699831-5b01-451d-97bc-89220e5385c5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bb3e98a2-c64c-401c-89a6-042b36e91aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e25dac-06c4-45f6-82c4-6e5c016c6748",
        "cursor": {
          "ref": "7651acd2-02e2-4b42-8676-edbc3b5a1d44",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "08f9eb01-cd40-4421-8768-5aabbc54a2b9"
        },
        "item": {
          "id": "92e25dac-06c4-45f6-82c4-6e5c016c6748",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "cc0a2d44-6ed8-415f-ac09-090187376e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b8a53e-ecd3-4c9b-80ab-aa57513f2028",
        "cursor": {
          "ref": "f123912d-df7d-4cba-8b70-3b55800f9f6e",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9e7f8c35-7e35-4a5c-ae98-ad27fd33d1bd"
        },
        "item": {
          "id": "76b8a53e-ecd3-4c9b-80ab-aa57513f2028",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "70f8db07-b0d2-471e-a6eb-303be818d13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c7d8b1e-c83f-430e-9e1c-1a4949404cfb",
        "cursor": {
          "ref": "4f332e27-93b1-4740-8f67-cbcd0f32449b",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "740210f5-89ce-46f3-af76-e36cb95677a5"
        },
        "item": {
          "id": "8c7d8b1e-c83f-430e-9e1c-1a4949404cfb",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "42166efc-89de-475e-87c2-039ec7e595cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab0ddf3-51be-4bb7-a0c3-de5fae6a74b9",
        "cursor": {
          "ref": "14f83a3d-0f8c-4b6b-8537-9e9f9eec16f9",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "eeffed17-7a24-4d10-b61c-d20ffd23a23d"
        },
        "item": {
          "id": "6ab0ddf3-51be-4bb7-a0c3-de5fae6a74b9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "b6210833-e093-4ea7-8033-3eaa530ecb80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b67d1e3-f705-4788-a866-18a672df1fb9",
        "cursor": {
          "ref": "9d6f515b-3fee-4415-8e1b-dac390576130",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "06d94a65-3507-444c-923c-8267431830b1"
        },
        "item": {
          "id": "2b67d1e3-f705-4788-a866-18a672df1fb9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0409c7ce-c3f7-4d79-bc3b-2395001032ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f289b98-2772-406b-bc5e-c8e1db19ab79",
        "cursor": {
          "ref": "553d76eb-bd82-4591-8355-a1b1975f51fa",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "4cc8e639-7926-4ea8-8c53-dab38f0fc6dd"
        },
        "item": {
          "id": "2f289b98-2772-406b-bc5e-c8e1db19ab79",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "48f036ce-8936-4dbc-930c-da89a1f816e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f132cf-b146-4c98-9c31-3fdb77e050e8",
        "cursor": {
          "ref": "e1a05ce2-92cd-43c0-a168-be3859470900",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9778bffd-49a8-40b6-a63e-f62a39ea790c"
        },
        "item": {
          "id": "b4f132cf-b146-4c98-9c31-3fdb77e050e8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d3e70d0e-a7c7-403a-a4d7-058fb9be7790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d949d43e-19f1-4258-9d4f-0fdd83501865",
        "cursor": {
          "ref": "86a721ed-fd83-4fe6-b50b-46817e963c2f",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "29ef1fef-496a-421b-8c06-e9d9fac65577"
        },
        "item": {
          "id": "d949d43e-19f1-4258-9d4f-0fdd83501865",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "57b1b7d7-cd38-4d14-b3fb-f95944c1753e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f750e56b-e349-4dca-89f7-1599e6c91bb9",
        "cursor": {
          "ref": "1a0b5e97-528a-466d-a10f-75dec5b65ec4",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8246a0e7-7273-4cfc-8858-104d9d079ac1"
        },
        "item": {
          "id": "f750e56b-e349-4dca-89f7-1599e6c91bb9",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6398e2ed-0cdd-44c8-8a10-500b771f8cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6894708b-1cdf-4ab7-a47b-0d7a59480daf",
        "cursor": {
          "ref": "810ece89-653e-40d5-9bf2-279d55e65189",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "34886f86-b740-49a8-8454-ea1d7ea1001e"
        },
        "item": {
          "id": "6894708b-1cdf-4ab7-a47b-0d7a59480daf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c7d73ed3-fbd9-49fa-91bd-be99870949b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af4e8b70-8374-4f48-85a5-14de7b578f18",
        "cursor": {
          "ref": "81baa6d4-9959-4695-b3d8-e732eaae4ba1",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "becbe979-f31a-443f-bf0c-3da88dd1b37a"
        },
        "item": {
          "id": "af4e8b70-8374-4f48-85a5-14de7b578f18",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a66f1a1b-3d77-4184-a97c-0a53380695ef",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daecb8b7-82c8-4dc9-9a67-425285d27e86",
        "cursor": {
          "ref": "e4085af3-a779-4be6-a4cc-eca6e023a842",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ac1a1e7f-4c64-4046-8c7a-9a207ca2d568"
        },
        "item": {
          "id": "daecb8b7-82c8-4dc9-9a67-425285d27e86",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "c3d525c4-645c-4ad9-a29a-1e5788124aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d03407da-f753-4c1e-ba7d-329e8ddf7954",
        "cursor": {
          "ref": "78b4bc63-01a2-412f-aa05-6852ad5521ad",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "b560d55c-bd72-4258-916a-96a03eab9204"
        },
        "item": {
          "id": "d03407da-f753-4c1e-ba7d-329e8ddf7954",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d0aa47c3-e68e-4d6a-a775-87bfbb68c46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "7502c7bd-60ad-43cb-8bd6-1289e8829855",
        "cursor": {
          "ref": "ff904e39-6ace-451e-8ac4-8a45a42a175c",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e5b08186-4687-454e-9722-45eee145f3ef"
        },
        "item": {
          "id": "7502c7bd-60ad-43cb-8bd6-1289e8829855",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "edf4c14e-3001-466f-be25-6f857979e9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "f56e974e-b088-4edc-bff5-99070df95255",
        "cursor": {
          "ref": "daec071f-cc3e-4c14-a3b0-f84e5d0be1f3",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4de0f499-836e-4a53-8998-ff3417622a79"
        },
        "item": {
          "id": "f56e974e-b088-4edc-bff5-99070df95255",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2e4cad1f-3223-4cff-8f9d-190780438b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "0a49b098-8058-4a55-8ad1-7f656b15e194",
        "cursor": {
          "ref": "2befc3a5-f476-44c0-bfcf-420031be62ad",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "0c7679c1-72b6-4df0-906b-2b9e6f077016"
        },
        "item": {
          "id": "0a49b098-8058-4a55-8ad1-7f656b15e194",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "74c6538c-9750-4326-836e-6e48cec61ae0",
          "status": "Created",
          "code": 201,
          "responseTime": 8236,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7160a8-6b8c-4c1e-a036-10e85213ac57",
        "cursor": {
          "ref": "78010074-e765-4eb1-9f0b-7792af1b0692",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "9b405338-5211-4de4-bf70-1a9bdf25eb7b"
        },
        "item": {
          "id": "5b7160a8-6b8c-4c1e-a036-10e85213ac57",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "20b885c5-5418-4a73-bf85-1f7ad40b5094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "d6691ff1-d94d-4d71-820a-847bd53e1eab",
        "cursor": {
          "ref": "7e451a90-09e6-46b5-be03-bddcf1ed91a3",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f15618b8-b429-4519-ae4d-d86cf27a5b42"
        },
        "item": {
          "id": "d6691ff1-d94d-4d71-820a-847bd53e1eab",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "a40f19bd-0d75-40cf-bc84-1a3570069ec2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "06da723e-993d-41d3-929f-cf580496644e",
        "cursor": {
          "ref": "4f26ffb1-f955-45c8-92cb-d04dae1de894",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c0324336-a6c9-44d9-aa50-b88da6a8aef9"
        },
        "item": {
          "id": "06da723e-993d-41d3-929f-cf580496644e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2797edf1-f93a-4c4f-ae64-c80f0bccce2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d3a93d-c5c5-4836-8e63-2df9d727296f",
        "cursor": {
          "ref": "59c58d4a-0154-43cd-90bc-cbe70116b9ce",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "d0f865a2-acb3-4ccd-bc4a-be2277045bfb"
        },
        "item": {
          "id": "47d3a93d-c5c5-4836-8e63-2df9d727296f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9028ce0e-cca4-4239-962c-1589350decdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2615ded-28a0-4e8c-b585-6acc853e4798",
        "cursor": {
          "ref": "a13467d2-7525-439a-83ce-712fdde63d20",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "96c55c09-8389-49d9-92a0-2eb315ba73d3"
        },
        "item": {
          "id": "b2615ded-28a0-4e8c-b585-6acc853e4798",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c305f003-b38e-47b2-a244-e8bd9c7456e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b2fdb9-e576-4bfb-9a26-bd75d9fd3387",
        "cursor": {
          "ref": "46d39c18-7dd1-4f46-bdb1-55bb1a5ddbb1",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4be0b44c-758c-4658-9511-40f147f3f82c"
        },
        "item": {
          "id": "65b2fdb9-e576-4bfb-9a26-bd75d9fd3387",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ef802e1b-2434-46d0-b1ad-a254d92fa8ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28aeb284-39de-4203-95a4-490714d8a508",
        "cursor": {
          "ref": "acc88197-d2fa-4c60-b39f-27a2a685ef19",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "05b931ce-4cd4-4f14-8523-302af01c08ef"
        },
        "item": {
          "id": "28aeb284-39de-4203-95a4-490714d8a508",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0f02377a-d032-41f3-8a5c-bfd1e4cb121f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a1688c-237b-41b4-a8e0-be3069ff24c6",
        "cursor": {
          "ref": "99a38e3e-4c43-4165-8da7-4e9062549bf9",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b50c2542-b4fa-4156-9926-f1874cefb3a9"
        },
        "item": {
          "id": "08a1688c-237b-41b4-a8e0-be3069ff24c6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fb0dee88-2bb9-4ddb-ad0a-8107b811f42a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea818b17-db9d-43b7-8888-10bf6af92c08",
        "cursor": {
          "ref": "437b237e-d4cd-4f7b-aa55-4df4a5fd5555",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8fc040ce-a3ee-4d07-9004-9d56c48ae7dd"
        },
        "item": {
          "id": "ea818b17-db9d-43b7-8888-10bf6af92c08",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "fec83776-756c-42a5-8856-3485a7f80387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64e351fe-54fd-4be7-a1a8-384c67859241",
        "cursor": {
          "ref": "2914288a-5f3e-48f5-a37a-31823beb1a76",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d4de8fa7-c522-47a3-857b-d8ac1bcb1f0f"
        },
        "item": {
          "id": "64e351fe-54fd-4be7-a1a8-384c67859241",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e6a40038-08fc-4045-83da-93fe129e4fe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba436e2e-f966-4ad8-a561-28c486d051ff",
        "cursor": {
          "ref": "f41b2f90-e3bf-4ad4-9460-fa46450c4d09",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "86ada8a4-0269-45c4-a61c-ba41bdc07578"
        },
        "item": {
          "id": "ba436e2e-f966-4ad8-a561-28c486d051ff",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "15b3d957-5e37-4fe8-83ba-ba14114014a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c047bd05-06fe-443f-964a-23a588c4283e",
        "cursor": {
          "ref": "1bc65729-63c7-4db7-b25c-cb1b101c96c7",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "758b7ca9-2020-466a-92b7-a3583cf79a32"
        },
        "item": {
          "id": "c047bd05-06fe-443f-964a-23a588c4283e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7140f624-3f89-4262-908e-0d692b2afe40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710b2b65-8f3b-4478-86ec-6918c2bc5c59",
        "cursor": {
          "ref": "e7a9db4b-5630-46c6-8474-b378fcff658e",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f232f218-a8d2-4735-a40b-b5e36f1e54b5"
        },
        "item": {
          "id": "710b2b65-8f3b-4478-86ec-6918c2bc5c59",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "37a5d412-070a-422f-a8e1-467753d8a12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4a0744-4be4-4006-afaa-eba8294a9927",
        "cursor": {
          "ref": "50c91907-4028-41b4-810a-5fbdc9148d14",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "5076215d-488f-4e59-acf0-ab42386aaab1"
        },
        "item": {
          "id": "7e4a0744-4be4-4006-afaa-eba8294a9927",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3c11c2e5-0430-42f0-82cc-0f7891251fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c248f86-3238-475a-b96f-bca0af01353d",
        "cursor": {
          "ref": "4dca7a12-b053-432b-8efd-cbf95d526c51",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bfc0b0ee-ad57-46d3-9fcd-9e7d6de2c63c"
        },
        "item": {
          "id": "5c248f86-3238-475a-b96f-bca0af01353d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1a29d318-9363-4fa0-8b3a-cc33aeb35f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f40159e4-de77-4102-b32d-c1421169342a",
        "cursor": {
          "ref": "e7438125-69a0-4ef5-82cb-191669d71a14",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "fdbf2a9f-4d9f-43e9-a39f-1b6bfc3f6a82"
        },
        "item": {
          "id": "f40159e4-de77-4102-b32d-c1421169342a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0f52d909-752e-456e-af66-8a5987103631",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5208e4c5-1fb0-4f7b-9c5a-42b4b753617b",
        "cursor": {
          "ref": "d28b51b2-f790-4609-acc9-46e14c56dee4",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fecee767-7d15-40dc-a79f-7db11fc92251"
        },
        "item": {
          "id": "5208e4c5-1fb0-4f7b-9c5a-42b4b753617b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "51a47884-da7c-44a8-8833-2380510d374f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ee5f0c-9dd9-4037-adb4-6155caa3da18",
        "cursor": {
          "ref": "7d95474b-caa0-4811-a99b-d2e2a7cc6b9e",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6f08e184-293f-4d35-8df1-6b4a4afdf609"
        },
        "item": {
          "id": "62ee5f0c-9dd9-4037-adb4-6155caa3da18",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cad4eca1-f71e-4f46-b06c-68f3b63be36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666491e2-b689-4ebf-bdaa-f4a9d45b5248",
        "cursor": {
          "ref": "f92a56e0-0efc-41a0-93ae-cb857ed4da96",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "546cb20d-4192-438c-8072-26653aa45f84"
        },
        "item": {
          "id": "666491e2-b689-4ebf-bdaa-f4a9d45b5248",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "08b522a6-804a-41e7-a2a7-7ce14909bea0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "813e8cb1-2e2e-4b2c-81d5-62d34dbe56af",
        "cursor": {
          "ref": "1d74ab8e-9ed7-4d88-81ab-652a2aa4ab41",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f52659f6-6323-4607-96ad-500321227aca"
        },
        "item": {
          "id": "813e8cb1-2e2e-4b2c-81d5-62d34dbe56af",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fb0ec7fc-465b-4128-baea-c6cbc41076b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75845c8c-72c1-4bd8-8683-51925785a10b",
        "cursor": {
          "ref": "6e0129bf-b77f-413d-9b2a-96864a699cad",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "9e64aa5d-17e9-4f8a-93da-b6e96d3377b0"
        },
        "item": {
          "id": "75845c8c-72c1-4bd8-8683-51925785a10b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "2f5c5c7d-336a-4da1-a560-b10ec31650b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6bd8f9-b5f9-44f1-8169-cf6a69947fad",
        "cursor": {
          "ref": "d4b483b3-c9c2-4433-80ff-0d2dce61001c",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1782b37f-47bc-45c2-b6d2-80af10336661"
        },
        "item": {
          "id": "da6bd8f9-b5f9-44f1-8169-cf6a69947fad",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a860857e-a086-4481-9c2e-9ec2e383baad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f787637b-e067-4655-99ab-b4e454b4fdba",
        "cursor": {
          "ref": "e1882826-b61a-4cac-9c16-bb3f7bb06ee1",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3eac83fd-f018-4813-9f20-1d8a90d1cdeb"
        },
        "item": {
          "id": "f787637b-e067-4655-99ab-b4e454b4fdba",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "71f2ef0e-fb22-424b-b344-f06995b12191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f24ec1-3b90-4fc0-86c1-bab5c44c8edc",
        "cursor": {
          "ref": "bb34e210-b254-489d-945a-a844c113e32c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "6bcb2c06-8113-4af0-80ec-74c325b9ea71"
        },
        "item": {
          "id": "35f24ec1-3b90-4fc0-86c1-bab5c44c8edc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b69bb9ac-6d24-484a-803d-888ef4cf7d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5116698b-048a-4bd1-b115-b4ee2b390217",
        "cursor": {
          "ref": "bf21e9c2-9db9-420c-928a-45c0d8e69331",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "c55e728d-31e3-49bd-a26f-e2937dad3205"
        },
        "item": {
          "id": "5116698b-048a-4bd1-b115-b4ee2b390217",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2b411ae7-e9ab-475a-95d7-773554458635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2c86a6-7b62-4351-9a20-26b2e4a64420",
        "cursor": {
          "ref": "bccabe59-1e9c-49f5-a7ef-f4352707b16b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ec40ddd9-b1e4-40ba-ac08-92b1aeb6aaba"
        },
        "item": {
          "id": "af2c86a6-7b62-4351-9a20-26b2e4a64420",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "8a397413-5cef-49c7-84f8-8815c4c2c21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce5225b6-382f-4d33-a837-6d2e15afa51b",
        "cursor": {
          "ref": "ca31b00c-8647-4924-ae77-d8289f742abe",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0422ad04-ad22-4046-b500-cc4c9631d20e"
        },
        "item": {
          "id": "ce5225b6-382f-4d33-a837-6d2e15afa51b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "34f62e34-a321-475d-84ac-36e14cc61fb7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 40,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "0a45ddd5-978a-42b1-8170-4d0a15f4e38f",
        "cursor": {
          "ref": "5c2b5d57-0213-4d4b-95c3-2994ec269103",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2ca8883d-972f-4389-9a50-51f4b3d2844d"
        },
        "item": {
          "id": "0a45ddd5-978a-42b1-8170-4d0a15f4e38f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "07ba55d4-6d17-45e5-8678-602f20cba36c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9ceeca-564c-418a-b5d6-c78278ed9b94",
        "cursor": {
          "ref": "6bec6e82-a84b-46f2-b3d3-aca56b9f6808",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "bcee6b86-2ce1-40be-a2c5-fb33602491fb"
        },
        "item": {
          "id": "ed9ceeca-564c-418a-b5d6-c78278ed9b94",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c542d09b-2ff8-4057-a811-e2f590a31f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e8b7d2-ffad-439b-be08-6d87cb9ef152",
        "cursor": {
          "ref": "5eab738d-b2db-4f55-bfe0-7420ef192af6",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "0aafe2ce-2de4-44e4-8f88-5d3a0f3e005f"
        },
        "item": {
          "id": "c1e8b7d2-ffad-439b-be08-6d87cb9ef152",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4ce345b7-8653-4ec0-b2b1-f9fb69f444f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50399996-5731-4852-bdbc-4129d72fb07f",
        "cursor": {
          "ref": "245ebd1a-f1e2-4f39-9e5c-8952a40fb910",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "98aa6788-c383-4f07-b88b-043b118b90de"
        },
        "item": {
          "id": "50399996-5731-4852-bdbc-4129d72fb07f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "36bf3f72-b8f7-431b-8353-51288667ee68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "122f80a5-e272-4f6f-883c-84c47d775e08",
        "cursor": {
          "ref": "ff213435-a1c3-4777-9984-f4dcad804fdf",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "448121cc-96d2-46d7-848c-815a01ddd76b"
        },
        "item": {
          "id": "122f80a5-e272-4f6f-883c-84c47d775e08",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cef1016d-f460-4332-a5dd-eb13f92bced8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73018a4d-dc58-461d-9750-d574e0b5b068",
        "cursor": {
          "ref": "298275f9-a507-4992-bb1a-e3ed3dc1c289",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "cc3e28a9-a34d-4ba0-a361-28a6b8dad23c"
        },
        "item": {
          "id": "73018a4d-dc58-461d-9750-d574e0b5b068",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3306e64c-0086-45ef-bf99-bdcca707456d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897a0efe-6bb1-400f-92fa-d95c345b3d32",
        "cursor": {
          "ref": "9443f4e6-ce40-4f8f-87d0-ea14dec4eedf",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "990616a9-ac1b-458f-b076-7614b4d3182c"
        },
        "item": {
          "id": "897a0efe-6bb1-400f-92fa-d95c345b3d32",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9708a613-93c8-4b33-884e-dba9f04f6507",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 81,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "5bf6a7f2-242f-482f-94fd-928f3626b1cc",
        "cursor": {
          "ref": "30160c9c-14e6-40d4-a0cd-fb8a94ce75c2",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "87508dfb-0dc2-4cf0-bc15-fb1b45097140"
        },
        "item": {
          "id": "5bf6a7f2-242f-482f-94fd-928f3626b1cc",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1ee5f628-be4b-4c64-814c-1131d0977c3b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caaa3b0a-9295-4ec1-9dee-33b9d8887574",
        "cursor": {
          "ref": "2385c827-5c08-4f7f-a40e-eb611e1c9456",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c96971c0-4b15-45aa-aab8-967fa18ff0c7"
        },
        "item": {
          "id": "caaa3b0a-9295-4ec1-9dee-33b9d8887574",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d475465f-f5ca-4f30-84a5-2301e6a0fc55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609036af-6a95-4fab-890e-b94050c9c01b",
        "cursor": {
          "ref": "45b38f16-0402-401c-966b-d267296770d0",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a75c68bc-66ed-475b-8c08-de9bef7ca06c"
        },
        "item": {
          "id": "609036af-6a95-4fab-890e-b94050c9c01b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7f5c9152-43ea-4b39-8a13-d6e5c1d175a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d1d1a3-4c94-4de5-8c9d-cb4bb78caa36",
        "cursor": {
          "ref": "9e1c9709-c9c1-40ff-b42e-43c26f67a55c",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "4c688eb0-b719-41dd-915a-2d0c7c8f0d99"
        },
        "item": {
          "id": "75d1d1a3-4c94-4de5-8c9d-cb4bb78caa36",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dc1c03ad-d07e-4dd0-89f8-f37a4f8e16bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf866d4-636d-4ec3-8ce2-b1ed4bf68fd3",
        "cursor": {
          "ref": "b84efa1b-13f7-4ef7-be87-020c227e254e",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "52253f5d-d966-4e88-a886-a74f82f6876c"
        },
        "item": {
          "id": "2cf866d4-636d-4ec3-8ce2-b1ed4bf68fd3",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "f3e98f26-2aad-41a5-b571-b9565fc9efa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dedb67f-5eda-4e4c-bca0-2b152aec54ef",
        "cursor": {
          "ref": "1da9a47c-ab57-479a-8eb8-7714db04ef12",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "39b9087c-3fa0-4b38-8086-54e78924de7e"
        },
        "item": {
          "id": "7dedb67f-5eda-4e4c-bca0-2b152aec54ef",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a8b9557f-f8f4-4851-bfbc-4ec24c22684b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f610bcfd-adf0-4b26-83d0-6ab77067ce2b",
        "cursor": {
          "ref": "13366825-06ea-453e-8f5e-456ef5669b8d",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "26e163c8-a4f8-4f16-82ad-a8425cb2d469"
        },
        "item": {
          "id": "f610bcfd-adf0-4b26-83d0-6ab77067ce2b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "43d9dd9c-9e21-44ee-82e4-ea17e5899f60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4252ce94-93ce-433b-8a06-1b6e6bbb7189",
        "cursor": {
          "ref": "89d6506e-1565-43b8-a4f4-4804933ea071",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "52e5f72d-541c-45a6-8577-8b7c9b7a5b3c"
        },
        "item": {
          "id": "4252ce94-93ce-433b-8a06-1b6e6bbb7189",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "40bcaa25-c037-469f-bd5c-ab9776a1ca6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9c158e-54eb-4f49-8bf8-3fe1f04e9653",
        "cursor": {
          "ref": "678c85c8-901f-4fdb-8fe0-225608b49b81",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "88aec8dc-97d8-4793-93c1-9d38759ffb2e"
        },
        "item": {
          "id": "1d9c158e-54eb-4f49-8bf8-3fe1f04e9653",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5c29d64f-142c-4fe1-8778-5aee2e19d773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276bf60a-9abf-42a7-9275-308d9e51e386",
        "cursor": {
          "ref": "5480783d-98f8-484f-8de5-9668a61ef18f",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "2c58f7c7-435e-4de8-828d-ffb79176cf81"
        },
        "item": {
          "id": "276bf60a-9abf-42a7-9275-308d9e51e386",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0e493472-2692-4394-b8a7-f13a59402736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac04714-c0b6-4c78-a228-8ea997178d4f",
        "cursor": {
          "ref": "f30613ef-5a02-4164-a2f0-1ba5f36ce2ea",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0678a5dd-e10f-43be-89b0-7c11d20b21bf"
        },
        "item": {
          "id": "aac04714-c0b6-4c78-a228-8ea997178d4f",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "68257138-ff88-4b9f-b5b2-3942375b7041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d11f915-7edb-4a72-a03f-c3a41d0d48bf",
        "cursor": {
          "ref": "798f1653-b4b1-400d-a8a8-173ce0f78f47",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "86a452ff-4edf-4699-9d3d-9a4d31dcf0bd"
        },
        "item": {
          "id": "4d11f915-7edb-4a72-a03f-c3a41d0d48bf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "da8543e0-615d-409c-bd29-9df83175714b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e0264c-8055-466c-abdb-3176c03c4ae9",
        "cursor": {
          "ref": "9abe63cb-bc27-4871-b4e4-e7c5ae9ae72c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "23066f2f-6016-4a82-b774-990441eec117"
        },
        "item": {
          "id": "81e0264c-8055-466c-abdb-3176c03c4ae9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c69348c2-1ac1-443f-ba9c-e98a35404970",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784905d0-d8d7-4a5c-96f1-7458e949cbd8",
        "cursor": {
          "ref": "1f5a4465-ebc6-4a0f-a187-2cc762831d44",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e1fda0f3-b6cf-4826-a263-3966d94d268f"
        },
        "item": {
          "id": "784905d0-d8d7-4a5c-96f1-7458e949cbd8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5631c297-f1fd-4d53-b841-6fc34e982639",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29eb695a-c315-44f4-b5b2-f3681981ca97",
        "cursor": {
          "ref": "17b99f9b-e1d8-44ba-b38d-2cfb772967e5",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1487ec53-7dcb-49ce-9bab-85aac5667c81"
        },
        "item": {
          "id": "29eb695a-c315-44f4-b5b2-f3681981ca97",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "37bfccb3-78b1-42c9-8fd3-6e3a5f5f458a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b642165b-8ecc-4e19-96c4-47b1cd75f21f",
        "cursor": {
          "ref": "60b5be03-afc2-40cd-b751-f1b38fb7ce7e",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1e188fd1-93a6-45ed-82ec-7ce7d865fe6c"
        },
        "item": {
          "id": "b642165b-8ecc-4e19-96c4-47b1cd75f21f",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e8aba844-0194-4d98-8cf0-7e373c4d1044",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7115d822-d12a-4216-974b-3c297cc38756",
        "cursor": {
          "ref": "ebc0e774-2589-4d0a-9a59-03bcaf7c4a39",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "bd32bbe3-0df3-4d25-9de0-7e0187b6324a"
        },
        "item": {
          "id": "7115d822-d12a-4216-974b-3c297cc38756",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "dab8b7ff-3ef0-4456-97aa-f1d58d3a1180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72c6a4fb-3d14-47df-ad50-654570e4a323",
        "cursor": {
          "ref": "011de15d-4ee0-4cc6-bc48-8cc7535df0d5",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "414293f3-2dfc-4442-85ce-cbdfd1ca8ba3"
        },
        "item": {
          "id": "72c6a4fb-3d14-47df-ad50-654570e4a323",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8707733c-2ae1-4c8e-b942-a16d1b10302c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "a43bba00-8815-4e4a-af03-66c345bb4041",
        "cursor": {
          "ref": "9ff6148f-b58e-4bdb-a362-03c5db4e9334",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "50590734-a212-459f-98e6-550503242710"
        },
        "item": {
          "id": "a43bba00-8815-4e4a-af03-66c345bb4041",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a94e389b-9d8a-41fa-b849-03881e3b24e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7564756d-dfd6-4b80-b468-e30d4d3b67b0",
        "cursor": {
          "ref": "9024626c-1563-44b0-bf83-2779fa171b5d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4783b1a5-0a71-405a-ac2a-fdf523904a0a"
        },
        "item": {
          "id": "7564756d-dfd6-4b80-b468-e30d4d3b67b0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4d40d838-8f3f-4704-8c41-0b96dd2043c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e493fe8-dbda-4c15-9961-acd03385a892",
        "cursor": {
          "ref": "94143e57-f4d6-4758-982b-d1528d42979a",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "3278f277-6463-4df2-b4fb-019c917ce5d6"
        },
        "item": {
          "id": "3e493fe8-dbda-4c15-9961-acd03385a892",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0920514d-3eeb-4d2d-82f9-a12a1b491ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fe4eed-eb1b-41b8-8646-80f10b90a16d",
        "cursor": {
          "ref": "28c141dd-4d12-4696-8bcb-3e1055bf69b7",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "3c0517d5-637c-42ac-8a19-088e5f733295"
        },
        "item": {
          "id": "78fe4eed-eb1b-41b8-8646-80f10b90a16d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fb0a04f1-ca88-4e1c-ad2e-cb7d32ea93b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 880,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31bd440a-334d-43f6-84ca-e15d019959dc",
        "cursor": {
          "ref": "728dd532-8739-40a2-abb6-4df0341a9ead",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1d52e4f1-b3e4-4374-8b01-1913a45e0baf"
        },
        "item": {
          "id": "31bd440a-334d-43f6-84ca-e15d019959dc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "5d2f1c47-e994-48b4-a127-b1fcaa47262c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "024ac3f4-421e-43c0-ab8d-272a49b166e4",
        "cursor": {
          "ref": "00b4da1e-c93f-4d70-8d5b-9642dfb97ff4",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ace6d481-0ed2-4359-b9f9-d512bc7fe0f3"
        },
        "item": {
          "id": "024ac3f4-421e-43c0-ab8d-272a49b166e4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6d2046f7-3d9b-4a3a-98b3-c6df41ff1bea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b66ce9c-f031-4026-ae61-303c8b400a96",
        "cursor": {
          "ref": "19f3e742-833b-4803-a3e8-d4f5bc2e0c26",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ce3a9345-4976-466d-aaca-ad01dddbc764"
        },
        "item": {
          "id": "4b66ce9c-f031-4026-ae61-303c8b400a96",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "83c61c7e-eaae-46ef-841b-9731dbe5e2e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 107,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec00639c-2a3e-48b0-8e63-18530785fa45",
        "cursor": {
          "ref": "a8860cec-fc05-476b-8567-6f8d06b4d779",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d9f75eb9-5bc3-4c75-91b1-eff40b65cd5e"
        },
        "item": {
          "id": "ec00639c-2a3e-48b0-8e63-18530785fa45",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fa92d17c-34a0-4e39-b278-c968a0b1f407",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 43,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "d44f7958-1655-429a-9e52-383642f8476b",
        "cursor": {
          "ref": "d18b6124-94a5-41c4-87c1-e2d84502af9e",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f79dbc36-dffa-42d7-8d2e-71c683836a37"
        },
        "item": {
          "id": "d44f7958-1655-429a-9e52-383642f8476b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "504d1560-7016-43bc-ac93-92fec8d4cdf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26cf9eaf-17e5-4bd5-9adc-9a4ca6a46cda",
        "cursor": {
          "ref": "a013d90a-3751-401c-b43b-b82533c84608",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3b13c4e2-b768-4583-ab23-0388170a6b76"
        },
        "item": {
          "id": "26cf9eaf-17e5-4bd5-9adc-9a4ca6a46cda",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3dc35266-2265-4200-b5d7-8ec87f574096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052ab8c9-87ea-4240-bf25-30159c919344",
        "cursor": {
          "ref": "27de5753-4e0a-4c86-932b-75efa8ab589d",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a6bad28b-b565-4d93-95a6-f62896008cf7"
        },
        "item": {
          "id": "052ab8c9-87ea-4240-bf25-30159c919344",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d1a76d30-0200-4bd6-b8fc-0cdbb1f9a448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf28c35-4fca-4bc2-be80-be8354734534",
        "cursor": {
          "ref": "4d4ce953-028e-48e9-92d5-1372410f86c3",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6e9e5e58-f6d4-4d43-ac15-0ce596839437"
        },
        "item": {
          "id": "cdf28c35-4fca-4bc2-be80-be8354734534",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "55f50d63-5667-412f-89e7-30e5d512acd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ff3136-38f5-433d-b657-6d0059da387d",
        "cursor": {
          "ref": "a7bb1cb5-8488-4ddf-8e9a-e2a83d939769",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "17d8d0c0-7ae5-4af8-afb3-94736d9d2ab9"
        },
        "item": {
          "id": "b1ff3136-38f5-433d-b657-6d0059da387d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "090bb6d7-59f9-4133-a388-d461917bcdff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9d187a-02d6-452c-b849-768f0453274a",
        "cursor": {
          "ref": "08a2b60f-816d-42a9-817f-66abdcb7a656",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f2177c37-210e-4a13-85d2-4fb4c5cadba8"
        },
        "item": {
          "id": "ee9d187a-02d6-452c-b849-768f0453274a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "bc555ea2-05b2-48d3-82dd-0fefed1725e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bcf40e8-4277-4b8b-84a5-c1ef3a868b9d",
        "cursor": {
          "ref": "51d3461e-13df-4882-bc0c-87aa0a569b74",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "10c461a9-a3f5-4250-b354-f409037a17f9"
        },
        "item": {
          "id": "6bcf40e8-4277-4b8b-84a5-c1ef3a868b9d",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "851d1d3c-f87a-4f57-bddc-ddfe1655b69c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "142a6e93-ff90-4c31-991e-87f1e8238b2f",
        "cursor": {
          "ref": "d6fac027-ac28-405a-a084-91978c4212a2",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3857b792-f839-4e3e-9e81-c41c8636aa6f"
        },
        "item": {
          "id": "142a6e93-ff90-4c31-991e-87f1e8238b2f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "32657a72-be17-4f14-bd5a-60cb5a48df9d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 42,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "09b14f17-d791-499e-9ff5-2be02be2360c",
        "cursor": {
          "ref": "b2659096-8265-400a-8017-32775ad6efd4",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "37654fb5-511f-4557-adfc-d58a8f6e72c5"
        },
        "item": {
          "id": "09b14f17-d791-499e-9ff5-2be02be2360c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "42ec53b2-5e12-4d0a-b674-79fe95d50418",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "7edf4b90-cb1d-49e3-9f3b-5b94c4c7fad5",
        "cursor": {
          "ref": "7bee0c6c-8882-4866-bbd5-81c4553aab82",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "5aa011c1-aa90-40f5-832f-c65b37b1aa86"
        },
        "item": {
          "id": "7edf4b90-cb1d-49e3-9f3b-5b94c4c7fad5",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0f83a35b-52e5-4706-9723-46a08903f1fe",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 30,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "d4e99a8d-3caf-418c-8aaa-76e0f665ef59",
        "cursor": {
          "ref": "d9aeed54-2647-46d9-be4c-a049d8082255",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "b1bf9bc7-4613-49ca-bad8-4e510d2b4dc1"
        },
        "item": {
          "id": "d4e99a8d-3caf-418c-8aaa-76e0f665ef59",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "df91186f-9b5f-4e33-804b-bba2eaad6fa2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 50,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "0d676887-c795-4526-8ca8-e3a71d509b52",
        "cursor": {
          "ref": "e339c571-f9d5-4b05-aed4-163a850b6514",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "f34e5af0-5b14-4a69-be09-7c54af69a101"
        },
        "item": {
          "id": "0d676887-c795-4526-8ca8-e3a71d509b52",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "f8ee58cb-bc96-4237-9fc7-b024c0c95849",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "96e99036-6874-4092-a4ec-caa76c87b103",
        "cursor": {
          "ref": "6f5f3970-89d5-4793-a4be-ac96f15ba035",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "af7001db-8f23-498b-b58b-a6f90d0defc9"
        },
        "item": {
          "id": "96e99036-6874-4092-a4ec-caa76c87b103",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cf82b3a1-57a7-49c8-beb0-21f0243989ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faa60c4a-7c3e-41fd-aae5-7c20eab166f1",
        "cursor": {
          "ref": "88d27e0c-d820-46bd-bb12-ed5f50967a0f",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "4a22e4d6-4b21-4bbf-88a3-68388628530c"
        },
        "item": {
          "id": "faa60c4a-7c3e-41fd-aae5-7c20eab166f1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "b78e8fcf-6a40-4fd1-9ee0-0257dc3715f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b8eef4-ba49-490c-abbe-014c53fa86c0",
        "cursor": {
          "ref": "5cb3ea65-26e1-48a1-a624-5c9b962d012a",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "8f3706fd-82b2-409c-b865-872d5c563026"
        },
        "item": {
          "id": "39b8eef4-ba49-490c-abbe-014c53fa86c0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8eaa8289-1c14-4b1a-9b3c-46597d36218c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9936435b-bfd4-4a06-ae0c-e0303788ae47",
        "cursor": {
          "ref": "6c05575a-ac8a-4835-8b31-02763c144270",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "bdc95789-343b-4a1a-82ad-8870559e6329"
        },
        "item": {
          "id": "9936435b-bfd4-4a06-ae0c-e0303788ae47",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "18c2f527-6290-40ae-89a3-a6241fc2a093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cddfcd88-9d33-4360-ac08-a60bb384538c",
        "cursor": {
          "ref": "1e9e4094-940b-45ca-9259-3b77c3d9dc69",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2b8a0994-0b78-4071-837e-7e08fc3300f8"
        },
        "item": {
          "id": "cddfcd88-9d33-4360-ac08-a60bb384538c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "0154c406-dcd9-4a31-8a64-617efff85e3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1122162d-cc34-4fe3-a191-9a848eae412e",
        "cursor": {
          "ref": "8250f9af-3db6-4ddc-ad37-57bade583772",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ef3f38b8-ee14-4ede-ad6d-401fca978fcc"
        },
        "item": {
          "id": "1122162d-cc34-4fe3-a191-9a848eae412e",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5064bb0f-401d-492a-8020-e32f138aafb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e07e1c6f-5981-459e-8747-d33cc0fb076a",
        "cursor": {
          "ref": "6bd79dfd-c201-427e-a580-710dad6472ee",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "64e66e27-2d41-48c9-9df6-3ea8fb96f03f"
        },
        "item": {
          "id": "e07e1c6f-5981-459e-8747-d33cc0fb076a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "8cec6917-c4fe-46db-912c-f879f4500d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871d8e48-05e6-427a-adf3-1594e9d2dce2",
        "cursor": {
          "ref": "0f8440f0-8b02-4f18-9a67-1333dcdf69e2",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "de6f9341-a1d5-4c4b-b29a-288ff6b0ffd2"
        },
        "item": {
          "id": "871d8e48-05e6-427a-adf3-1594e9d2dce2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1803aa9b-5bf0-4bd6-bf71-0f5e1091d80a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89479157-dac5-40a0-9ff8-14379c0ac281",
        "cursor": {
          "ref": "2c124da8-934e-45cb-b152-f75a0031109c",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "01eef049-6267-44d5-9528-101dfc42ecf9"
        },
        "item": {
          "id": "89479157-dac5-40a0-9ff8-14379c0ac281",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "75c6270e-7e53-4177-bd00-3b9535fa1719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15a8d315-5a51-4029-affa-f7f8faeb7ff5",
        "cursor": {
          "ref": "7251b81a-411f-45a8-97d0-4000f4c050e0",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6fc377c5-eac7-43df-8558-322b7e10d386"
        },
        "item": {
          "id": "15a8d315-5a51-4029-affa-f7f8faeb7ff5",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "9d64a538-876f-46ea-b96d-001a11816156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14c94cb-16e4-40cb-a779-3d3ee60cffd9",
        "cursor": {
          "ref": "e811b70d-3fb1-4272-9b55-985d67c166e4",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "bb5c134d-f105-49f7-93a5-3871873c630c"
        },
        "item": {
          "id": "e14c94cb-16e4-40cb-a779-3d3ee60cffd9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "f226d567-2607-4522-9f4e-098acd0c5faa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66191524-acc1-4a90-900d-7224d83d3987",
        "cursor": {
          "ref": "e3a23fb1-8548-4746-be48-e5c28c4b486e",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2223e32a-3ad3-4061-ad00-9693ea8586c9"
        },
        "item": {
          "id": "66191524-acc1-4a90-900d-7224d83d3987",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "70020fa2-de3a-4f57-b8de-6fbc8e40592f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ce2c34-71e4-4727-8e21-f45e74d5c3c8",
        "cursor": {
          "ref": "1b43a888-5e75-4478-80d3-49e3e647878d",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1cd4e15f-e81b-4cdd-97ff-cb5bb57cfdd6"
        },
        "item": {
          "id": "27ce2c34-71e4-4727-8e21-f45e74d5c3c8",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "96916d8f-4205-4482-bbea-49c56c2434b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f778817-2361-49a5-8cb0-a20869ae5f64",
        "cursor": {
          "ref": "d1d3311f-11e0-4b11-bb42-42ae82467e59",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "e01a2993-a313-49ff-bfa5-e6e88c677bbd"
        },
        "item": {
          "id": "8f778817-2361-49a5-8cb0-a20869ae5f64",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "c4ff7b3f-44a9-4577-a179-e00d379c3c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41c4038-2d54-44cd-84f1-69baf2eecb53",
        "cursor": {
          "ref": "181b058c-d663-47a0-b210-501fa8f2cc50",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d4c6c048-c694-469d-a25b-79ae3e4c6536"
        },
        "item": {
          "id": "c41c4038-2d54-44cd-84f1-69baf2eecb53",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1c65b3c4-bd63-4353-bf5e-9cb412acda11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cba001-02fd-4220-9dfb-0b83a40b59d8",
        "cursor": {
          "ref": "32d5d9ef-e59a-4139-9cd5-fc91a4f0e929",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "6900b1db-fc70-4d49-b130-64cee37e77b2"
        },
        "item": {
          "id": "51cba001-02fd-4220-9dfb-0b83a40b59d8",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "10521546-f752-4ff3-bff5-29d1fc1c3bdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0482c35-0d84-46c4-9101-918e06941db8",
        "cursor": {
          "ref": "38275bff-0bbb-4b4b-855b-12dc1b3fc1bf",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7ddc7d74-14e1-4212-a010-c4cfb86d6c66"
        },
        "item": {
          "id": "e0482c35-0d84-46c4-9101-918e06941db8",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "86b7d0af-008e-428e-940d-202f3978b2bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f5d146-da19-4a66-aa6b-b9cef7c19963",
        "cursor": {
          "ref": "459f765a-413a-4cd5-98fe-b65f97719ceb",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f766a500-294a-4425-a7ae-790357721ee6"
        },
        "item": {
          "id": "61f5d146-da19-4a66-aa6b-b9cef7c19963",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c4431e59-c5fc-4d84-ba68-0baa5cdd6451",
          "status": "OK",
          "code": 200,
          "responseTime": 120,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "69064db8-8551-41d4-89c3-07ef05e82c4e",
        "cursor": {
          "ref": "4eeff633-65f7-4651-ad0a-790efc86b656",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "16c5ca82-7a7a-4a5c-8576-892ed46820d0"
        },
        "item": {
          "id": "69064db8-8551-41d4-89c3-07ef05e82c4e",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "45cd8e6d-de8c-484e-902c-018eb47c5d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dc50859-f98a-4427-8303-ab24d12375c0",
        "cursor": {
          "ref": "e073e7db-9b8e-4d54-8021-cbf8a9e6f6ae",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "e3678904-d2bb-4359-8071-195ede49b8e5"
        },
        "item": {
          "id": "1dc50859-f98a-4427-8303-ab24d12375c0",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7e9177dc-7a11-4f97-b477-64f662c1a0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82e8ebc-1f42-452c-aa95-9909f2e96d9e",
        "cursor": {
          "ref": "3ba7d9e6-020b-43b5-be67-3196ac5eaa22",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a90a661d-aea5-4411-ba2b-354277d39bab"
        },
        "item": {
          "id": "b82e8ebc-1f42-452c-aa95-9909f2e96d9e",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7f14dfd7-e351-4e00-bd69-b3f80bd9d9d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9614910e-921a-4816-82c7-5f23162d047b",
        "cursor": {
          "ref": "9383d7f5-f583-4ed5-b10e-722968ad743f",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0df03eeb-e9b2-4d0e-94f2-dbc3aae11635"
        },
        "item": {
          "id": "9614910e-921a-4816-82c7-5f23162d047b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b077f055-f024-4612-aa34-1c89affc18ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259fbcc0-b53b-40bd-b4ae-c5751148edd9",
        "cursor": {
          "ref": "886bdfef-7d76-4d3c-95ea-9db90afb3e09",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "69a0052f-1fbc-4920-a382-ca3d41d0ae27"
        },
        "item": {
          "id": "259fbcc0-b53b-40bd-b4ae-c5751148edd9",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9d8c16be-cd87-4e61-a2dd-4994737a5f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72ae569-d728-4fe4-bb25-44d514f6d72d",
        "cursor": {
          "ref": "4e244053-4abc-4079-822a-0cd7e39a995e",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bb6015c9-b1a1-4bcf-a847-309310dacf92"
        },
        "item": {
          "id": "a72ae569-d728-4fe4-bb25-44d514f6d72d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cfc3f0d4-2f82-4bed-a11f-972bc518028a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce45fb0c-3337-499d-aa8d-87c5d958a7aa",
        "cursor": {
          "ref": "174b5126-bc39-4112-8eed-3aaf48a03fe4",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f0c40ba1-587e-4bee-9902-b0b6afb6a292"
        },
        "item": {
          "id": "ce45fb0c-3337-499d-aa8d-87c5d958a7aa",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a9769581-0700-47c7-bda7-671792a03263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93ad96c9-4bf1-48d4-8177-f4d9ef9d39b3",
        "cursor": {
          "ref": "96b43cad-6263-4a69-b8a9-e73f3dfd59c4",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b9bed693-aea6-4954-a458-8b3b566fbbc9"
        },
        "item": {
          "id": "93ad96c9-4bf1-48d4-8177-f4d9ef9d39b3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e885ce94-0621-453e-96ef-33dd56a8cfaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44b6b31a-9d38-4228-8d14-89207aaa4231",
        "cursor": {
          "ref": "2a2a3510-01f3-4574-899e-69cb1d6703c3",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "4aa281b1-d65d-4ba7-8bb2-2380bdb80467"
        },
        "item": {
          "id": "44b6b31a-9d38-4228-8d14-89207aaa4231",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ed2c9c6e-fbc4-4366-ae24-ccacd60a5f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b46c463-8ce4-4ac4-bc74-50c6f0bf5b2f",
        "cursor": {
          "ref": "2bd3a582-eec4-45f4-839f-f78496a15dc2",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c9cdad01-3b6d-4b47-b0b0-2374cf78311b"
        },
        "item": {
          "id": "7b46c463-8ce4-4ac4-bc74-50c6f0bf5b2f",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "852da9b6-d49f-4cc3-b45b-e25574284f0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a512d046-7eb4-4828-9db5-53d1d8ab7021",
        "cursor": {
          "ref": "c3782dbf-8245-4cc0-b41a-63304adc37d8",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "baefbb36-e2fb-4a40-b5ca-344bc1d17865"
        },
        "item": {
          "id": "a512d046-7eb4-4828-9db5-53d1d8ab7021",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e95da2ed-2173-48ba-8c39-de29031c2bcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8103f819-c716-48db-b582-4efe08db777a",
        "cursor": {
          "ref": "7636e973-f0be-4e9f-a685-b026ca382b17",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8f393c02-4114-4852-8c99-5bdbe2652790"
        },
        "item": {
          "id": "8103f819-c716-48db-b582-4efe08db777a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fc2bed15-3ee9-4b5b-aa8e-a136ab01ecfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d627fead-8dbf-4687-9194-7b365e2f15a6",
        "cursor": {
          "ref": "0d4e83ef-5bf3-42d9-be75-a8990c7a2469",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fa39c7d4-b9c1-42a9-a293-09a9997f7d26"
        },
        "item": {
          "id": "d627fead-8dbf-4687-9194-7b365e2f15a6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "eb174b37-169e-4cc6-93e1-9ea8ca4d97e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bd4ad2-9453-41da-94cf-82c880620d72",
        "cursor": {
          "ref": "f6100db7-e789-468a-bfb7-c5b2d7ea360b",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "147d94e3-ec0a-457e-9662-2b33010dc8e5"
        },
        "item": {
          "id": "34bd4ad2-9453-41da-94cf-82c880620d72",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4f95c8b7-6448-48f9-a746-1e38514a9f4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1928503-4c5d-4441-a1e5-a0d265debdf4",
        "cursor": {
          "ref": "6223c8fe-aa1a-4438-8ea8-15d42862ed04",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "f832f99b-3662-4220-a8e8-2a66020c9662"
        },
        "item": {
          "id": "d1928503-4c5d-4441-a1e5-a0d265debdf4",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "2c77ae5d-e7fe-48dc-b1f2-81998d72b95e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75fec0c-4bd9-44c0-8a68-6a4ffd4df56d",
        "cursor": {
          "ref": "a5393ba8-5b38-420c-9017-c95dfeb18cd4",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b452335c-85d1-4dce-9672-e4ceb25dc2b6"
        },
        "item": {
          "id": "b75fec0c-4bd9-44c0-8a68-6a4ffd4df56d",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "08e5e211-456c-461c-adf5-8ce54676b75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "704f0ba3-3980-4233-8b38-a28a18ff1ec2",
        "cursor": {
          "ref": "9e57dae7-417a-4328-a028-9f945dc7fe28",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c126afbc-2352-407b-a3e2-e33821827121"
        },
        "item": {
          "id": "704f0ba3-3980-4233-8b38-a28a18ff1ec2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6a7f77be-55ec-4500-94d3-9da42ecbfab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7de3d0-ef2b-407c-b9c6-1d493fa61a2d",
        "cursor": {
          "ref": "8925b96f-11ec-42dc-a114-5f3d2dc37bd3",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3f67f3e8-1553-41aa-af2e-aafa01d0af87"
        },
        "item": {
          "id": "ea7de3d0-ef2b-407c-b9c6-1d493fa61a2d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "26680d43-d5f0-409f-ba5c-e95d518e24e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0056337-76e1-4247-a832-16e7b0ab2698",
        "cursor": {
          "ref": "6a61a2e8-beb3-49b3-ab04-f373a415996f",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "96e4ef22-74b8-4f35-9506-2227664886bb"
        },
        "item": {
          "id": "a0056337-76e1-4247-a832-16e7b0ab2698",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f4ad88b5-2e98-41e2-90c8-8b215d2b870e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168fd442-a799-4f22-a0eb-12b89ef1d262",
        "cursor": {
          "ref": "97471a1a-b58b-4cf4-bdc6-a20588f82494",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "62b16ad6-7453-476d-a6d7-c680cda4783f"
        },
        "item": {
          "id": "168fd442-a799-4f22-a0eb-12b89ef1d262",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "cac07c94-50c9-4dcc-b803-d00e2778397c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d7a429-05ac-46ab-b1c4-5c03224b1c03",
        "cursor": {
          "ref": "fc7ccd3d-5571-4a1b-b827-54c13977a561",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b1a1fdf4-f6d8-47c4-b361-8bc4066b9e9b"
        },
        "item": {
          "id": "87d7a429-05ac-46ab-b1c4-5c03224b1c03",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "20ba8f3b-bb94-4dd5-946d-87b6748090f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34001ae9-9656-45ed-8a31-40a2319d32dc",
        "cursor": {
          "ref": "4b2d73a3-68c2-4cf7-8043-4ec0c5e5be0a",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e0489275-6191-46c1-9847-a85a59c937de"
        },
        "item": {
          "id": "34001ae9-9656-45ed-8a31-40a2319d32dc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0f95eb5f-d130-4a18-a7ea-08345dc4e185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5e72db0-b303-4625-987a-311eaaf4652c",
        "cursor": {
          "ref": "ea709731-7eed-4da9-a48d-6e1997c65a17",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7e295331-e813-44d0-b831-021566528dd8"
        },
        "item": {
          "id": "f5e72db0-b303-4625-987a-311eaaf4652c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fc56b47e-9562-4e1f-80ce-9bd98afa401b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe63a0d-1090-4aca-8a23-ecb3fb90a8ed",
        "cursor": {
          "ref": "7e6bbcf4-99cf-4ea4-b1ef-6b60be780e12",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "6ebebf52-7e5c-4e35-b5fb-ef1bbc8beced"
        },
        "item": {
          "id": "2fe63a0d-1090-4aca-8a23-ecb3fb90a8ed",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d39d7eb4-456a-4766-b777-874eeb0295f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b438d91-f618-4fa9-b1cd-97498d380e88",
        "cursor": {
          "ref": "f4cf33c2-6c55-4f38-afb6-4b9289178f83",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bd890fb5-dacd-43fc-b24f-8bc9839288c2"
        },
        "item": {
          "id": "2b438d91-f618-4fa9-b1cd-97498d380e88",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ef66935c-179f-4595-919f-2756b65e22b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491d331f-956c-4199-8822-4cd6d6c1f9d5",
        "cursor": {
          "ref": "5dd8357a-8c6a-4481-837a-4257bdf0f408",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e54f60c6-b4fd-4f7d-bd9a-4207c14ba6f0"
        },
        "item": {
          "id": "491d331f-956c-4199-8822-4cd6d6c1f9d5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "590cf530-55f4-4a14-8bdd-7a403abfcc00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a7b6f1-62eb-42dd-97fc-b8965ecc7a61",
        "cursor": {
          "ref": "ebd27a37-fbbf-4780-8123-6e948b622283",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9d0f48ca-890e-4394-94b4-6b2f71ee5075"
        },
        "item": {
          "id": "a2a7b6f1-62eb-42dd-97fc-b8965ecc7a61",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "c4d1faca-b0f5-4bdb-937d-b5592cf041c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1ae8b3-9c9b-4f75-80c0-925e7270b83b",
        "cursor": {
          "ref": "a788800e-2ada-4afb-8cd8-199eb562bdb6",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8c0215b0-d460-4268-8cc5-5a20d0f11bd5"
        },
        "item": {
          "id": "4c1ae8b3-9c9b-4f75-80c0-925e7270b83b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "bb2cda7b-732c-4efd-9381-0c3358749a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95b82b6-bf31-498f-b6ec-8cf72f7ca2a5",
        "cursor": {
          "ref": "86bf5532-17c3-4b11-9ed6-8cc3e327998a",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e7485751-fc19-4a77-8ebf-a94aa2bcdf9b"
        },
        "item": {
          "id": "f95b82b6-bf31-498f-b6ec-8cf72f7ca2a5",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "fdcab4a7-4e61-4fc8-b628-49be6c47fa83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3cff29-c974-48ed-873f-dc9209c57f64",
        "cursor": {
          "ref": "1bd4c57f-f559-457c-8317-7ab8730dc0d2",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b2b6c0d2-b707-4131-97d3-366d89462791"
        },
        "item": {
          "id": "0a3cff29-c974-48ed-873f-dc9209c57f64",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "cc69788b-674d-4b29-845b-632abe69b54f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec94fc67-c54b-49b2-b673-6125f19ef728",
        "cursor": {
          "ref": "daa0fa2c-3dfb-4f0a-b68e-c05c18000c81",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "602892bd-7bdb-4653-9cfc-0f5f7ca73835"
        },
        "item": {
          "id": "ec94fc67-c54b-49b2-b673-6125f19ef728",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "495fa280-12b8-4a07-a5f9-4d081091626c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1033,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fefb51f-bde7-4738-a8b4-46a896fd75e6",
        "cursor": {
          "ref": "b87af098-1d62-4ab4-8d1d-91e8df9388e3",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e3979d7e-2e67-4392-ad52-2514f1d853b5"
        },
        "item": {
          "id": "7fefb51f-bde7-4738-a8b4-46a896fd75e6",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cf0994b1-eb09-485c-a131-1a3d6099b97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "534f62f4-13a0-4963-92ab-7b3c0c0d419d",
        "cursor": {
          "ref": "578f3f6a-07bd-4929-9418-03eaa267504c",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b34223d8-a012-4c78-90dd-c74567fd28ab"
        },
        "item": {
          "id": "534f62f4-13a0-4963-92ab-7b3c0c0d419d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3888602c-a1ae-4ccc-ba05-61c608d01627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1bdc097-847b-4abe-8e8a-a50fe697b69c",
        "cursor": {
          "ref": "f7206727-8e09-427e-a9af-2c0418700207",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "914586ce-6e39-4e02-8454-4470399dd9e5"
        },
        "item": {
          "id": "c1bdc097-847b-4abe-8e8a-a50fe697b69c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "941428f6-b622-475d-bb50-713f86f4f0fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca3f620-bce0-4455-821c-11e54c5a8416",
        "cursor": {
          "ref": "c59cd599-6281-45e0-8e28-bcaeecc32ab1",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8cba726b-5905-4400-ad71-aedaca1b6548"
        },
        "item": {
          "id": "8ca3f620-bce0-4455-821c-11e54c5a8416",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "f46da758-0f82-4f16-bdec-15b46548d693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79638b2d-c230-45a9-8eea-9c25885ae644",
        "cursor": {
          "ref": "a949dee4-47f5-4063-aa15-af6b7534e6e9",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "57683cdf-2c0f-489e-990b-a576718f1e22"
        },
        "item": {
          "id": "79638b2d-c230-45a9-8eea-9c25885ae644",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e2f70395-a5b7-47a7-ac24-3333fa2b3f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327a1a33-cef4-43c4-9339-95ca95792b40",
        "cursor": {
          "ref": "0809e8e8-b381-44fa-89b8-69e6b460d8d6",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "901508cc-2aa7-4d1d-bc84-043a1c343857"
        },
        "item": {
          "id": "327a1a33-cef4-43c4-9339-95ca95792b40",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "fe80608f-a884-4c0f-a308-b507c5760f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db28b64-d9d4-492f-8376-15348a52c98c",
        "cursor": {
          "ref": "c95e6e92-34d1-4e36-b3cb-295b84b24ebe",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "2cd792fb-e6f8-445d-82bc-71cc00f15140"
        },
        "item": {
          "id": "6db28b64-d9d4-492f-8376-15348a52c98c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "81dfe261-86c4-4ae2-b3e3-91c642410e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7658806e-ece4-41bd-a68d-0816a656780f",
        "cursor": {
          "ref": "57063a30-85bd-4f6f-beb1-4627fed70b66",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "93d23774-b86b-4c12-bfef-515195370cb4"
        },
        "item": {
          "id": "7658806e-ece4-41bd-a68d-0816a656780f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ae4359e6-85e3-464c-8d5f-f6407094ead0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a319e73-a924-433d-80e5-fa5f21d64d87",
        "cursor": {
          "ref": "adc8b11b-8bd9-448d-9739-71f0995ef6ff",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e02ace8d-469f-4475-b3d1-6ddb8a3906c3"
        },
        "item": {
          "id": "2a319e73-a924-433d-80e5-fa5f21d64d87",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "94201ba1-4ff8-43ab-9cb0-8c554fa6a998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4387ea06-a77a-43e6-8388-36c7c15180d8",
        "cursor": {
          "ref": "3e0c86a0-459b-4c3a-91f2-84ef2695639b",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d354127f-8622-4df4-a115-76260574fbef"
        },
        "item": {
          "id": "4387ea06-a77a-43e6-8388-36c7c15180d8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "0d78fddf-eca6-4e2a-aa69-cc3fb3bf6e22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df93d8ac-2aa6-4aa5-aedd-53ae3b01228a",
        "cursor": {
          "ref": "6b5ce621-18cf-49a2-97ef-3865efd9cc6a",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5a7d29d8-174d-482e-96fe-0d765cae1e87"
        },
        "item": {
          "id": "df93d8ac-2aa6-4aa5-aedd-53ae3b01228a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d9d2b557-531c-431d-8fce-f2db9bcbaa39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e7309d-d9c2-4799-9d87-af06c401af58",
        "cursor": {
          "ref": "2a9636b8-61aa-4280-96d2-577e55c402b7",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c14b7923-9ae1-4611-b887-19e0320b0684"
        },
        "item": {
          "id": "00e7309d-d9c2-4799-9d87-af06c401af58",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8cc162ba-f04a-4539-b85c-99032bcee31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "901b7bc6-9482-41d6-94a3-a049f3919636",
        "cursor": {
          "ref": "68b0b153-3ff2-4f75-b72a-e6cc7e260ace",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "dccde2cf-d51d-4ece-b1c4-b61b20a8eaa8"
        },
        "item": {
          "id": "901b7bc6-9482-41d6-94a3-a049f3919636",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f35885d1-0a47-4e06-b9fe-f25f2cc6f1ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca5b0a9-2c37-4358-85f9-993d2acd88cb",
        "cursor": {
          "ref": "f083b198-0658-4167-8d9a-90da25342b2e",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "61b19c6c-bea5-4927-b88a-11a47945c93a"
        },
        "item": {
          "id": "7ca5b0a9-2c37-4358-85f9-993d2acd88cb",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "581f3a83-20b5-4cef-90bd-638bfe1fdc4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbd73db-6615-4406-9bce-103bfbd48e1a",
        "cursor": {
          "ref": "2f7278c7-d63e-48ce-8c00-6d2ed71245cf",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1f952009-72af-49ee-a4d0-b210b20e7c88"
        },
        "item": {
          "id": "3bbd73db-6615-4406-9bce-103bfbd48e1a",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8fb03a5a-4391-4cf7-85d1-9198c27e4257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf40d2e-2a03-4487-b63f-7e4de79a393d",
        "cursor": {
          "ref": "fba50b00-4409-4da3-9080-1cc439dd8655",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7be82b44-7ab8-4a91-8da7-9b97e4caccc6"
        },
        "item": {
          "id": "acf40d2e-2a03-4487-b63f-7e4de79a393d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "14f4d33b-45ab-4fb2-ac5e-46a48458ebe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb2c6b8-e0b8-4549-a0f1-31bf84847efc",
        "cursor": {
          "ref": "0d0d7b5c-1e0a-4aee-ac61-f7ffc9da4f53",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "f3cf1d0b-694a-40e6-a6df-f795aaf71cf3"
        },
        "item": {
          "id": "bfb2c6b8-e0b8-4549-a0f1-31bf84847efc",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "01c18aea-70c9-428d-bb3d-d86f2f0b4b9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6127254-5e11-4469-8353-08aaefefa136",
        "cursor": {
          "ref": "50ad6f99-5309-4b5d-b42c-bf6b791ac4aa",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d7b4a3b0-2a25-4c69-b232-663fd857a574"
        },
        "item": {
          "id": "c6127254-5e11-4469-8353-08aaefefa136",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "913a8e6a-f9e3-4cb1-b18d-12f6440a1117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e609cbf-6b04-4a58-9b77-332caa514212",
        "cursor": {
          "ref": "f55a3b74-1245-4b9a-841a-483840988ba3",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b9c29c29-70af-4b28-acc8-58cbd6d2fa0b"
        },
        "item": {
          "id": "5e609cbf-6b04-4a58-9b77-332caa514212",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "571de889-aacf-4174-884b-5cc578417b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28e289c-e7e2-4f3c-93fc-7456ac80dc7e",
        "cursor": {
          "ref": "fcbd81fa-ff41-42e6-a1bc-735f44d837c2",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7e611534-c67e-4c33-b872-86c3135163a2"
        },
        "item": {
          "id": "a28e289c-e7e2-4f3c-93fc-7456ac80dc7e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "06fd0181-16f6-4cc4-afa4-786791fc4278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa26eecf-04aa-4ff3-aab8-0be14ad49283",
        "cursor": {
          "ref": "dc6a7bb1-056f-4842-be25-fee149eb3360",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "65317c98-af02-4518-8f60-d2ccfe8ea5b9"
        },
        "item": {
          "id": "fa26eecf-04aa-4ff3-aab8-0be14ad49283",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "bee3a502-b89e-4bfd-bee1-fdedf566c717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325eef13-7d79-4ead-94fc-a01f1066b64c",
        "cursor": {
          "ref": "2806ee1a-0d26-4ac0-bfc5-f3a04ffd4093",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c3bdc5cd-634f-4973-a288-694eadfcd222"
        },
        "item": {
          "id": "325eef13-7d79-4ead-94fc-a01f1066b64c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "bdac979f-2d25-410b-8260-7d6910e7b028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959a451e-81bc-41ec-842b-2eb471ec4d4a",
        "cursor": {
          "ref": "6a0a8c10-17ca-4aed-8a81-58202fec31bb",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "43a85bd1-c61b-4682-b70e-e71065a26df6"
        },
        "item": {
          "id": "959a451e-81bc-41ec-842b-2eb471ec4d4a",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "986380fc-05ac-4ec3-947d-19801207f01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca917d7-671b-4478-b00f-adaf124d39d4",
        "cursor": {
          "ref": "eeae4dbc-0c80-4f94-8bca-4e31c4e3b304",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "fe8b278a-52c0-4695-8da5-fce642126a7a"
        },
        "item": {
          "id": "bca917d7-671b-4478-b00f-adaf124d39d4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c86d8b8d-ef2f-482f-8a41-eb7462e449a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06b625f-7873-4501-bf24-01580b1b041e",
        "cursor": {
          "ref": "27d4f876-4011-4261-a580-5fe275332e33",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "1f731d34-402d-4eed-8c4e-a66053469fa5"
        },
        "item": {
          "id": "f06b625f-7873-4501-bf24-01580b1b041e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0224f4ac-67b1-45e0-85cb-b15dcbc68679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675b286e-174b-47bb-8fed-ddef0d01b138",
        "cursor": {
          "ref": "0a5ce166-e4d4-41d7-8f55-6621e7d580f4",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "52c81c22-ccf6-4a56-b8c8-38232e1a5970"
        },
        "item": {
          "id": "675b286e-174b-47bb-8fed-ddef0d01b138",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7b325ccf-2cc9-470d-a516-a9e0abdb0060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "006ba245-e07f-4c0f-a77e-63ba8d48d93f",
        "cursor": {
          "ref": "8d405853-9bb5-4ae7-8c9f-ea61d38e1764",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7fdc6e2d-bb2e-42ad-b25f-7dc5e3884bda"
        },
        "item": {
          "id": "006ba245-e07f-4c0f-a77e-63ba8d48d93f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "93774fd0-5e1d-43d8-aa91-01e65c6a9678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b587490-ad44-40e8-ad71-a7495b03da50",
        "cursor": {
          "ref": "f1e1cc6b-6c98-4250-9383-24dec27dcd63",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "cce05bce-dfa1-4ee6-84b4-339fad2006d8"
        },
        "item": {
          "id": "7b587490-ad44-40e8-ad71-a7495b03da50",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "1e005908-9c2f-44ca-a732-a37482ab7137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cddbed2-025e-47a5-8be1-485514607f2c",
        "cursor": {
          "ref": "1aafcf3f-088d-4612-9400-e08f7095798c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "a6d36843-fc8b-4ac6-b499-19d238ae3489"
        },
        "item": {
          "id": "7cddbed2-025e-47a5-8be1-485514607f2c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b26d149d-1f25-4510-9692-6c6d25c08432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203d0535-61b8-498c-b0b4-7826a8cdd4e1",
        "cursor": {
          "ref": "e941a8e6-2d00-488d-9d95-f749f3c744c0",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0c7c9458-3ca1-4955-9106-4e637feeed3a"
        },
        "item": {
          "id": "203d0535-61b8-498c-b0b4-7826a8cdd4e1",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "58ee8110-9e96-474b-9e9e-5f340b153f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dac56b-a3c1-493f-ac17-20e12fde92c1",
        "cursor": {
          "ref": "3fc00264-c881-479e-a699-6f17b3d5fc48",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "84ab969c-7ec6-4bf4-bfc4-a6fb8b073d87"
        },
        "item": {
          "id": "59dac56b-a3c1-493f-ac17-20e12fde92c1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0b16172b-a88b-4b8c-8e67-d1b82f2358f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9eb5f1-12f4-408e-ba4e-491d2e2e618f",
        "cursor": {
          "ref": "dda3f759-dbe2-4bbe-a7af-6c4b943e6ff6",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "81916d35-b930-4235-8a8a-6c7c2d6563f5"
        },
        "item": {
          "id": "5a9eb5f1-12f4-408e-ba4e-491d2e2e618f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7ceb71ef-11e4-4a2c-b313-18df94407dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ff074f-157c-49f1-8e07-7eec9b42fb19",
        "cursor": {
          "ref": "ef523bc7-80ee-4e8d-a44e-042dfe9ad980",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "9f707877-a68e-456f-8793-6235ca7c1f52"
        },
        "item": {
          "id": "63ff074f-157c-49f1-8e07-7eec9b42fb19",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4cb21f68-3056-4b55-9751-3ed9f6eea489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f057d4-8f45-4c62-810d-25fc1c896849",
        "cursor": {
          "ref": "4be4be1e-13df-4bc2-894d-98f3510ed340",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "b63c0a5f-aa88-4ac8-ae8c-e63421a3cf23"
        },
        "item": {
          "id": "71f057d4-8f45-4c62-810d-25fc1c896849",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2cffed5d-ffa6-4199-8de1-f661f9bb31ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdaa4a39-227e-4eaa-ae24-9fbdf78564bb",
        "cursor": {
          "ref": "bd29bab1-f59d-41b9-b6d5-ee789373f24e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9282978a-19db-49a5-86ac-8b1b370f8f57"
        },
        "item": {
          "id": "cdaa4a39-227e-4eaa-ae24-9fbdf78564bb",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e679f0c1-6cb7-434e-bcb2-1db28e9299bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5149df3a-8b15-4084-acb1-5fff4f4fb668",
        "cursor": {
          "ref": "c59082a4-b8b1-424b-b2b0-45bfe521df3d",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "fb142727-4448-4fe5-b2b6-15b5647bbfae"
        },
        "item": {
          "id": "5149df3a-8b15-4084-acb1-5fff4f4fb668",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "c0f367a8-2c0f-4b33-b461-6b10cb5e637c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b18bae5-004b-4392-bc58-720d771944f6",
        "cursor": {
          "ref": "a684e877-a6cf-43f4-bb1e-17f27dd77ef6",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c150d605-1ab6-4121-8daf-e274265d8383"
        },
        "item": {
          "id": "1b18bae5-004b-4392-bc58-720d771944f6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c39afe85-1d37-4bf4-9348-74daf3363b2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be1161d-0a5e-452d-96a6-9089ea680f12",
        "cursor": {
          "ref": "78b33da4-b0e8-43d5-a8a3-eddff57a9972",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "c829b350-1832-48c2-b3e5-1323337cc659"
        },
        "item": {
          "id": "3be1161d-0a5e-452d-96a6-9089ea680f12",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e5efb789-cac6-48f4-bab9-671055739292",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e60eac-7324-4005-bf7d-6c2e7f498c2d",
        "cursor": {
          "ref": "768beebd-5eef-41ea-9ac6-8e4f583d483e",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c17ad762-cd77-4ce4-864a-b0a6f4a1d626"
        },
        "item": {
          "id": "c1e60eac-7324-4005-bf7d-6c2e7f498c2d",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bb11b2a3-e69d-4c45-91da-b5ad3ad8014f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "143bdb5c-144f-4f7f-888d-de57bc2246f6",
        "cursor": {
          "ref": "39109d3f-d17f-4771-9740-912cae3f0ecb",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c86b9f9e-be6c-4bcb-92e0-f6ea8cc73436"
        },
        "item": {
          "id": "143bdb5c-144f-4f7f-888d-de57bc2246f6",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d1b9d5c9-b346-4a02-bf5e-603dedb15fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049465d8-53da-40f6-96f5-2bb96f5cde52",
        "cursor": {
          "ref": "399527e0-a198-4aca-81e5-327470a2b46c",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "f6b94989-fb55-4fe3-8f00-f9d5966ffc2a"
        },
        "item": {
          "id": "049465d8-53da-40f6-96f5-2bb96f5cde52",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d4408b78-5ccf-48da-ad01-558f256d9014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8c1b01-e6a5-42e9-9f91-71ad0d9a563c",
        "cursor": {
          "ref": "8a51beef-232e-495e-bbe7-ce4bd1474895",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "484b4d7f-9dc4-463e-b8f7-3403d1b0392a"
        },
        "item": {
          "id": "3e8c1b01-e6a5-42e9-9f91-71ad0d9a563c",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e37f8d99-b35d-46a4-9cad-6c571b7f9fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c642e15-5868-49b3-ab09-8e2e3e3c874c",
        "cursor": {
          "ref": "b1a700a2-6f40-4ec4-97bc-718008df4518",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "5e61fe19-fa83-405b-b7ec-78921e8ee71a"
        },
        "item": {
          "id": "2c642e15-5868-49b3-ab09-8e2e3e3c874c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "23d458fd-eebd-4bb0-8781-10bdb8749c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ceab3b5-2760-4294-ae1a-5f5e3a10ddc5",
        "cursor": {
          "ref": "3e169329-8739-4521-a609-863575c07ee1",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "95576ffe-4e78-4e1b-950c-5f19f2870e0d"
        },
        "item": {
          "id": "3ceab3b5-2760-4294-ae1a-5f5e3a10ddc5",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "08bf796f-fd97-4aee-bed1-2d4354fd5e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e440e1-7f44-4e5c-98fa-ba7ea5c42b27",
        "cursor": {
          "ref": "ed07eaf8-7ce5-40dc-9199-6064aa3636c8",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "232b0cda-5a53-4e03-b397-b11f01583bbd"
        },
        "item": {
          "id": "67e440e1-7f44-4e5c-98fa-ba7ea5c42b27",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f7c2f079-3ebf-4c73-af2e-7a7b23a0c742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a5e73a-8248-4644-beb7-424f4449cbb6",
        "cursor": {
          "ref": "ddcd09e9-7d96-461f-8867-6f6c1391d362",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7d5eecc5-7721-4531-b1e8-b6b767f3bc44"
        },
        "item": {
          "id": "b5a5e73a-8248-4644-beb7-424f4449cbb6",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8ebb6a3f-df1a-4a25-b6fe-fd90c80c6f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7af7372-8ad5-4ed5-a159-dab338907035",
        "cursor": {
          "ref": "8b5d0703-5f31-46c6-a0b3-1cd3ae9a5c4a",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "752a50df-70b2-4c80-8f4d-298bd0f80a05"
        },
        "item": {
          "id": "d7af7372-8ad5-4ed5-a159-dab338907035",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "32f28f4e-3606-470e-8091-a212b2bed662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cdecd8-6f5f-4a46-837d-3f40b527e346",
        "cursor": {
          "ref": "9153542f-a63c-4252-a014-fd24061ada83",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "ef99bda5-9300-46d8-b2a0-7a6fa9ed9581"
        },
        "item": {
          "id": "d7cdecd8-6f5f-4a46-837d-3f40b527e346",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "f1a40dba-f684-4e48-a2fb-77026059e923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850ec271-8dcd-42af-b858-8261f89a4c6c",
        "cursor": {
          "ref": "8aa2bd7a-3d2a-491e-a58d-4363c28a818b",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "2b63f9e2-0c18-4b06-a64a-f26b8c65b4d0"
        },
        "item": {
          "id": "850ec271-8dcd-42af-b858-8261f89a4c6c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "980d1cc1-fefe-405a-9f4a-75db8ccf57d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcebebf1-ce70-4067-834d-5b8426277c3d",
        "cursor": {
          "ref": "a0495250-26af-4d55-8069-84246cb70fe5",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "cd5ba197-a558-4e12-90f0-343183d8319e"
        },
        "item": {
          "id": "fcebebf1-ce70-4067-834d-5b8426277c3d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ece07a41-c948-47e3-9898-0f78428d4c64",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c0a0851-133b-4ec5-b159-b62e1a41afcc",
        "cursor": {
          "ref": "b2fa8b37-8fb9-41c9-a230-cec89b8a184d",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "03d46baf-a7e9-4358-b3d2-027c4b2df18f"
        },
        "item": {
          "id": "7c0a0851-133b-4ec5-b159-b62e1a41afcc",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4f15dbb8-7e2b-4513-8328-7e355530f467",
          "status": "OK",
          "code": 200,
          "responseTime": 43,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8ebb24-f1b5-47a9-81cb-cda0c6737e56",
        "cursor": {
          "ref": "dab25ceb-15f6-42f5-80a5-6cb4f24d162b",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9fccc911-10c0-4588-9315-d5ed58a6e16b"
        },
        "item": {
          "id": "8b8ebb24-f1b5-47a9-81cb-cda0c6737e56",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3ce137b0-99a9-4671-a189-3bf5a00e2ad4",
          "status": "OK",
          "code": 200,
          "responseTime": 4522,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b7eb4dc-d828-4e39-914d-e2f57d8f7be4",
        "cursor": {
          "ref": "d5656dad-5c1c-4c2e-a50f-ebd565989ff8",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "f3dd2cf4-37b5-434a-8ad7-efaeb45442ec"
        },
        "item": {
          "id": "4b7eb4dc-d828-4e39-914d-e2f57d8f7be4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "284e1491-c163-4f94-b2e9-27d7553abc36",
          "status": "OK",
          "code": 200,
          "responseTime": 7019,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ab3e4b-f477-40d4-96b6-0bcc919b2cbc",
        "cursor": {
          "ref": "f44f0a3f-a6ff-40e4-9789-951d40bb56c4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "627ceefc-38e2-4334-928d-aa948ebbc097"
        },
        "item": {
          "id": "69ab3e4b-f477-40d4-96b6-0bcc919b2cbc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9aeb0298-357d-4a1b-9782-10d9a88e663e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ab3e4b-f477-40d4-96b6-0bcc919b2cbc",
        "cursor": {
          "ref": "f44f0a3f-a6ff-40e4-9789-951d40bb56c4",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "627ceefc-38e2-4334-928d-aa948ebbc097"
        },
        "item": {
          "id": "69ab3e4b-f477-40d4-96b6-0bcc919b2cbc",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "9aeb0298-357d-4a1b-9782-10d9a88e663e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e0dd81-b80b-48a7-adb2-6faeff138c0a",
        "cursor": {
          "ref": "b829e68b-c876-4c2b-9e64-2ab4bdf40710",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "a532d469-e940-48df-baaf-ebafce970ecd"
        },
        "item": {
          "id": "37e0dd81-b80b-48a7-adb2-6faeff138c0a",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6d2ee43a-b8db-4e6c-b5d5-1cb535acc11b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e05a3a-c38d-413e-8eab-35bc6797fc47",
        "cursor": {
          "ref": "5e68b9fe-7fb1-436b-ac0f-e9442c170631",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "a603d43e-18bc-4024-93cf-400a496b3bbf"
        },
        "item": {
          "id": "21e05a3a-c38d-413e-8eab-35bc6797fc47",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cf076303-92d7-4093-88d7-8e23334ba98b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}