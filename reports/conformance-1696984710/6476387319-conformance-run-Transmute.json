{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9a37073a-8b8d-4055-9704-84b061ddc024",
        "name": "Clear Cache",
        "item": [
          {
            "id": "adbd5f81-4aae-4e2f-9726-662050d1c318",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0e556dba-c45c-4a9a-9166-44b7285e3fd3",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c1bec664-207f-4e30-b915-19b7e9877954"
                }
              }
            ]
          },
          {
            "id": "8c5eee79-1e6f-463f-a7ec-6c030d1b24f9",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "745f275b-460c-4764-81d9-1724cb513274",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "091bbc38-b206-4678-95a3-ae8ce1e50a51"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "eb08b819-19ba-4d6e-a81e-b25aa94ee9e8",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "61aff73b-0fea-4a60-be2d-3f0972090706",
            "name": "Positive Testing",
            "item": [
              {
                "id": "245a2bef-9921-4fd7-b1d1-7adb40dc881b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "483f0a6a-4244-442a-94a2-6f8073e052a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b471a363-e33f-4579-b19c-476966e2a67b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b5705da7-2760-4f2e-a050-16fecb71eebd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "02b155a3-696f-4e5b-bc88-f5d6d3577cd7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bbb82e3f-3762-4ab7-b6fb-0b41b944b442",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "921ac4b3-adef-40f1-8ee7-75902cfa5a24"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ea454a4c-f54b-42fa-a67e-f6ac9ae16235",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3debd51d-eaef-409a-878b-8345dbd534ec"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ead01744-2128-4bdd-93be-b9c295c9c765",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ec87054-04d6-4e55-b2d9-b3886bacc79d"
            }
          }
        ]
      },
      {
        "id": "70ead503-8b89-4d4f-923e-47ca6ef38ffb",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "3b85f4f3-6e4b-4d72-b7c9-c7b51dadfbeb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "abb7a1bb-cadc-47a1-b50b-6fe7a2e509d3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8fc45c1c-d31b-4209-959e-971c916ef2c3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4686b23-03c0-4f17-86e8-e4b4a5523fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e80bf1d-dd5b-4407-a773-784c76fa36c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e402d1e-a69f-4a82-999a-ab158eb5239a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c219a3c2-a164-4b55-b477-6c3666894bce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6f7183c-d927-4d9f-b2fc-b40ca51d75cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05c142a1-ced2-4d88-9f7f-edb49d466387",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177d91a2-4cbc-415e-be84-62f136075406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69ce8c9e-735d-4497-a85f-ce17bde7e3c7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4659876e-9264-465c-b7fc-3c9764aa823e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0234e699-542b-41d1-9e01-93d440d37abf",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d443a887-3c45-4d5a-859b-aeddc03fcbae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b4e3e4c-7a76-4b33-a811-daefc6658209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b94e320-f033-4724-9cf6-f651f6e34a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98935817-2507-41da-bef7-22919ae8cade"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6d7c745d-edd9-4483-b3f6-7dc2cb5f9f3d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c0b8c579-abc6-4fbc-a605-bbb08d76abd2",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "012e444c-4015-4bfc-8f26-5cd0fd17a407",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "f7de3721-7d02-4a02-9238-22ab9371da25"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "211bf525-b09b-4112-9ccb-e65972cdb94d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f7a1d468-a8a4-43c6-8167-a03e2f0c9b2c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "04d5e499-2ee3-41d6-9cff-b4c0b8e8fd7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f67c409-b59e-4799-8555-01f93f313982"
            }
          }
        ]
      },
      {
        "id": "7c94770d-3662-4e17-a018-4b374b57f705",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "03297dea-3b59-4788-a54a-847d7b9ca250",
            "name": "Negative Testing",
            "item": [
              {
                "id": "98fa284f-e7c0-4ed3-a96d-53d8703f8fd8",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a66c71bb-a275-4f13-87f5-796655ccc556",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bbcd8c-e962-4a60-805e-64229c996527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6793baed-1bb4-4ef7-b4a9-47ced28885d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45fa838a-b891-4433-8192-46d5bf5c8a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d2b5596-f57a-441e-9441-ba67d667c9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ebaccb1-b4b7-40ba-8cdb-24dc8ed8b23e",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c01a236-39a7-43f2-884c-2922fcf52e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8edec16e-27f2-4e50-8360-2fcb0bddfa57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063daf38-b093-42fe-aa26-6de3483458be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b328c1be-c13a-44a4-ba92-cda23139eda0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73eb663a-081c-4d31-ad0a-3af42cc18828",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965bf507-b2d1-4584-a864-09331a876a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1875f7d9-7e4e-4ec0-a1e8-fdb9ef0ff388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b9c3e5-698d-4d11-a9b9-73cdb69f6388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f835d827-798e-4aa0-bd12-7094ebfc1cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95f0a7f1-92df-434a-ad37-77f774e91e3f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d0e170-8191-4341-90fc-63a4887cf84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8a7645-a45f-4bf4-91a4-0830950a8f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f01688-8841-49db-ad78-47eae4621057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f70d6f07-7bd5-4579-a28a-07ef24ebece8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1445c59-70da-4da1-9ff4-4f000cae95a8",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb88af76-f1e6-4851-9f7b-3f39af8aa216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "568faaf9-c005-487a-95a0-b7ffbd17f8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d374be9-39ac-4e0e-9216-409532f66671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f422f937-5136-4bcb-acdf-d738d420572c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a85471-6ed1-4275-b754-b81f2950e36a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6ea9c2-ed26-4bfc-ad9b-2fe3a88a0774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa695d52-c89e-4042-ab9e-ea0af804665c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f320f1b3-dc0d-43b0-85bf-796b41e7fe03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a27c7f16-ed6d-4b09-a020-b1185369b3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c096a53-c37d-44db-800e-b844ba04fde0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b897035d-085d-4329-b151-0e6779ab4a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab301d7-28e2-4c9f-afc8-fc160443970e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b85b7efe-f1b2-4fb6-8eec-539d5ca64c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ca43074-2abd-4623-b7fa-3752d2f44bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4befe90-9efb-432c-9e0a-246569f599ab",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cdc0c2-7df4-4d37-92c6-763b0bdec33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12102da-2bc5-4e28-a423-716a884e99e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0f14d97-cf11-4452-bbf5-ceb576d499f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6639ef69-748d-4674-9a99-6a9f09ce38f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c899b8c-655f-4d8b-aa97-15f1881f9bd7",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213b1dc8-bb1c-4371-91bc-57e02390d573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "239e6eb0-e8cb-4f35-82a2-99648988b434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d52ef0d2-992e-4684-8593-92361376600b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2cf56929-3287-45a7-ab5b-178e116f768d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4641570e-49e2-4adf-b63a-22155bd47695",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f688d07-6d9b-472b-b188-2d7a1156bdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03aee678-c4c8-4284-b23d-a77375eb421a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e4867f-ea4d-4cfd-8908-326fddc154f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27eb7057-4690-40ce-aa71-aa9cef18c82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2670b9-1408-46d9-961a-49128c223cbd",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b0ed91c-a89a-4c1d-97f6-43fde59ffa0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94e1ed8-76b5-4be2-a2e7-9b800d700004"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a07a16-c2b6-4d01-8330-b963fb8a8ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a7f5924-e8cd-47e4-ba7d-f1ebf3405f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf6f448-d16e-4e55-a791-44da195986b0",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6df5d4d-1304-4441-83af-7b7a47fd1d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38a63200-004f-459e-8b33-7e19c3ffaf2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f22b823e-f99a-481a-b3d8-8b98e6347724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "44f9e4d5-59cf-4ff3-aa56-e6f7f058969b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff64604-ac49-4eb4-b5f3-c5a7802850be",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8556be18-a4c0-43e3-aa15-fae6fde3b40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73d749cf-8982-4093-9a99-524af06ba4d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b932e6-4e1a-4da0-9619-f732753e7495",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80bf5a90-3c4d-447b-899c-ad186191f9b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d7a1a2-9a59-48d9-af0a-2c7934a6639c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a07f97-0883-4475-87d4-78210ea46cf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ebb229-a6c4-4398-9f13-4e0ef84c4479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11a3f525-8640-4a1e-af63-38b8b5f09216",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8cdc104a-3b8e-4527-ba38-9d315b400edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3b9be0-ec81-4a1d-b04e-9e9b0b72bdbb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ad6fe6-87d2-4dc6-83e0-9f51b293221a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98626ed8-d2ab-40fa-977e-c8606879fb5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2750a9e8-5a29-41b9-864c-89910f254cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "30c3f45c-f7d8-42c0-ac59-798d8ffa7b46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cba9598-4598-4c91-a3d8-fbc9cabc46d4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e31860c6-cfb8-4423-a5d3-febf7a6b31ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b80d248-a9d3-4136-ac6f-0542f85c1dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "451a6650-c6d7-425d-b9ed-727a9d3263ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b80d3ac-a363-4af3-b143-fd71c3442ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "392093a0-f56a-4751-bf49-31488eb0bc87",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c35db0a-d022-4db6-b794-4e82a88346b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caea0b64-b3de-4290-a1c3-cc543f29d9bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea38c418-b98f-401a-a018-c8a444263c8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d132d864-b987-46f7-ba4a-19a94a8e9aaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ac74e2a-34b9-4720-83a6-a4d39e7452ce",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc7aeb27-c7db-44b5-bbe8-2fab7b74dd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21832f93-b007-4424-9386-3a66be3a88a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58929445-d38e-4e9e-a407-acf4a59938ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d73fda-3829-42de-bcae-1d199a94d976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deecc8eb-5a7d-432d-9bd6-b6e6ecf30ff0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcef377-b275-4bdc-b59a-057e7cc7cbee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0605c6f-362a-49a1-a605-f79ea78a49ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "007d444c-df9d-4989-b0cb-a982ae307191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68f7d2aa-7c7a-4794-9b0f-ae9522bb7a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85eb0672-df2a-403c-ac8f-928be0260f55",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1f86e2-719b-4d1a-a7d6-610ff1a81622",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5049a566-1061-43e8-b16c-333b89b764ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a51b9e4-5a80-4b79-ac59-e52d00d58b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a203797f-9b55-4085-be0a-04a2d0c2bd68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353db306-14ab-4afd-8820-7759089b9314",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a285048-3a92-440e-98da-31161dd93e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d4fa7d5-19db-4f6a-b13c-1ae8cae2121e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806c8a04-fb49-49e2-84d1-01ba4d781508",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcdcb2db-26af-4f4d-8fb3-70134351cc60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264e364a-8756-41d3-a818-71787d0f6641",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce35479-1321-4867-abd6-441c3c4ceedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7b1e5b-c182-434c-a3a4-30fb7c3b236d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd642db0-b22e-41bc-a507-30c1546ce700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "413e3a41-cfae-4b19-84d5-74fbe433f42e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9a1fade-66d2-43ad-9e71-75d4256ebab7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95e7555-c89e-4ea0-a2c0-fe21a511c2ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08294b60-a20b-44b9-b584-599be88bb217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378d8681-fd8b-45de-9c65-6a2b49111da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03516089-5650-4481-962c-fc05fcab58c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce09846d-8546-460f-98c0-1923f6179d10",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cededf91-2db7-4410-ab70-3fa8aaff546b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23dfac6f-3b32-4688-a7a4-80a5d56f32e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a59bb7-b75b-46d5-9a79-81f30986c8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c57407-ce39-4524-9406-cf7382f70295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d50cbc0-6e5c-418b-ad2f-4383d500648e",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc77034-fce6-4cf9-8b2c-1957e6bb1c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f17b1403-e083-429e-873f-8eebf00c8631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca56a39-944b-4972-858e-57637a713831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbc57494-4cce-4b98-9904-d75948206c15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2955eb5-513e-45a1-9391-4ddfb36813c2",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a4c5da-2542-4ab6-8476-e8888246846c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "114998c7-148e-4e4c-89ba-6d87dbbed488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35902163-9d0e-44d8-af51-7fe1d0cbe992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "748c574c-a3f5-4e2f-8f7a-d9ac7f4d999f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776b3628-4c20-4422-ae20-8d61b53e8335",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dffb315-400f-4c75-98f4-a0d56c518ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e58c702-0e06-4e1b-b901-f54c2a4cb326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9770c28b-3253-40e4-b0ad-60b4d125d474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2797955a-06bb-4b17-ab9e-b4319b454605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e6e8be3-72f9-4be2-8418-39442fecbd76",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d313c6e7-11a4-425f-a7d3-600eae5db0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87057f92-5eb2-4019-b5fa-41743a15a99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bce0097-353c-474e-8f60-08beef0436ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e50477ab-62be-44be-b346-c9b5e5e9a731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9df09edf-38ba-4cbe-9ff6-b7faa3e55453",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b67bc0-49cb-4d49-b900-90a74ed1f87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dcd85af-a8c0-4929-a189-02ab741ce35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "016c9ce1-db38-40e0-bd14-b1b5eade9d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c178fe5c-5fdd-4718-ba88-8cdb1725ad83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63533f31-0095-47d0-a1c1-554e3aee9627",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b39343-4b30-44d8-ba57-3c826da738d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fc03039-6807-4bc0-80ed-68e3d68ea685"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ca4d47-1acf-4e61-9ae1-0c95f3592a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "43affe35-3536-4d06-98ec-396c54aea40e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec0d5ccc-3877-4a5b-8a2f-5eb3b13bde6a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a3b97a-58a1-4ab6-b668-9f71fb93fd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f982d6c-3601-4d98-98f0-38bbeaf18ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "291aa657-96a9-49a9-a522-911534c72560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "470c2b97-14be-4fe4-aa33-d1aecf93777c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62a85895-3029-416b-92a7-b86f9c216f0d",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a40998-3891-4742-a162-05b094ecd934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e796cb-bcd8-43e4-982b-934a486f468c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efacd0a7-651a-426b-a924-ff109f118ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd2f9fb8-5597-4f86-a85a-28a57f6a0fa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3a31a5d-6a3b-4b1b-92c4-aa6a453ced4a",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09214952-0b6a-499c-aace-2c7cc1a50031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8f2e239-bcc8-4c1f-865a-c7acd10f5ec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65825072-d4fe-45d4-a609-47b7974fd533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a997e0e-ef04-4d37-b6e2-5b497f744360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d491cc2c-04b8-44f6-962e-fd3530733110",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0075c73-57a6-4950-8a80-a4b00fc385ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c124084-c20a-4d3a-a3c5-2fb4af40cc02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a976b98-ddc8-4a07-a6b6-8e5bcac09a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "547d5935-9c5e-4888-b7a2-9637ca70dcdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5817bc6-84ce-428e-a5be-89a27ef94788",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f3d409-390c-4970-bc46-46a024646250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec424d8-a865-49bb-af62-78d821ae84dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cce1f7c-398d-47fc-b755-8404f41e49ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "7514faad-14ff-459a-843e-2cac4bc46f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4494d58-af89-46d3-9fec-3bec8bfc8616",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b66a74a-f554-42aa-8f82-fea7f3feff5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76c48a80-33df-467e-bd47-4142455f2b48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d919c42-d545-4db6-bb8b-1577b91c0b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ceec51e3-f7f9-4e17-b37f-372dcc663c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26205223-4583-45b2-8d48-6d51429cc1ca",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d71f75-c82e-4cdb-93fe-96febaea7e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a646289-ef4a-48f5-81a5-d9234c249f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f389d992-8e72-4a44-9af1-cbabace5dd31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c0cde05f-e1ae-42ea-a605-41aca240baab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca637c4b-8e4f-41eb-b669-73958ffcc979",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf0c326-8a6c-4ec5-99f1-17fa80c51086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c48240f8-6c59-4a50-8609-66b16f3408ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1a0416-0bfb-4765-9700-7ca9dd07828e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfcae9a5-d8bc-4e94-b71d-6d79bdffa5ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96ff3919-6c8e-46fc-a450-f657d51d149f",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2e68a11-cfb1-4547-ab88-b3c18f10dcc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ef107b-d841-455d-8133-fbf4b2fd0ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7002ef3-24d9-4a7d-a63d-3f1f944c3a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2dc3ee5-5c67-432f-b7b6-78b0d71e7773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6769ad1b-8927-44f5-b619-4f9ea219ff12",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3beceabe-fca5-4e1e-9aef-a76ddeaf4ab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ed67b2-81ea-4a03-b627-360e439c93b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21903839-e622-4622-8173-c7edf6c77547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "954f1952-f4e7-4ed5-a06d-38ac2c7df798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42cb120-5484-43ad-96fc-f1828bb9065c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf97555a-94bc-4e69-867b-206b03214f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28bc0591-0c46-4b05-917b-6460f8812857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e93677-4e8c-4b36-8899-1edaf58e067d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "a1ecf2ef-7f17-4bc5-8e71-9bd6ca9c2c57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600a97e4-a89e-45f6-b054-190d09092748",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70204d2a-172c-4844-a7c3-4f763e59693b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b92bd35-6150-4c5f-a137-2a5c7e0f32a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422813d9-3770-4cca-9d84-d0938f1a438c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "0dad11b9-e691-45a4-8756-08ccb5a8dd6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0261679e-2101-40c3-a255-926c96e71beb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d70005b-31dd-4308-be51-4d58ffc7a56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69905970-b1ed-4b0f-bbed-c1ed13b588c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "402b9c61-607e-473e-b468-928fd7c2f6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "92252bea-377a-4a02-b4ee-3b5710b1b04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbd2dd17-7eab-40ee-b402-f113a9bb6902",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dc94ec8-b724-4b4d-9bf9-7e0a016f6018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b0545b5-12cb-4be9-8032-379eb34189fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029e3fc0-a3b7-4fa1-b438-57bf97045915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "937b22eb-7a98-45d3-98f1-f1d2137e450e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b981192-6ebc-4d45-a769-971b4f28973c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33e6fe5e-dd75-45da-8ee6-c11c80b08ebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6779a8-95b4-40f2-a657-9603ae115976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c4f1488-fa49-4604-92aa-03da1c17a796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "80f6217f-e8a8-4220-944d-925837c7b591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd324de-839a-4aa0-95b2-50ba778921d1",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b78b6e-15a8-4ec9-bc57-fe6d930eb001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3015857-1d4b-4abb-9bef-20a31be3cfb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ce3f5d3-e98e-4b6e-a2df-6447ed5c038b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f891fcf-3030-4224-a98f-92250721bd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f01cc8d-ed17-4ad8-8cb9-65cea07dccc4",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a847a16-157e-4bee-a8b3-8133e49d93b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c4ab178-e6fb-4a6c-9d8c-7160cd863db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8ac765-23d1-4a87-858a-3714e54161d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c30af91-e077-49ca-b679-b5c70da5bbfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55e38e84-d533-4b5b-8131-aa6d1a5b9af8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a205863-0467-4afc-8447-ecc8e8665877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a20f30-d6e9-4c58-b600-063467684e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c18c894-cd30-45e0-933e-2187f8b236c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d9977ae-403d-466f-8b4c-9b89e36ef405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb169706-8882-4899-ab0e-c90862ef8ef1",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc80252-78cd-4524-aacc-8fb0d23e725b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a59ccb5d-f5eb-498c-b4e5-99fb0eceb2d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ef180fe-bde4-4f59-a9ce-50a2edcb4bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1babb4d6-0d8b-4783-823f-be7502e7347a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "097ed624-e8cf-43c0-b504-599193c1db38",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10a95cb-dee8-4904-9c63-fc8c4b4c900f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c532e38-b011-4911-88fc-05a3672563c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06eb000-0113-4895-9991-01cde8de05fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "081ce5e3-f673-442a-8572-79b2b7571377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8b5e47-1f4b-476c-a441-6dfb5bb65d6e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2101938-f289-4215-9ffa-bd97cf61e132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e81d180-11e3-4d6f-94e9-e14325965885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca58eea-2775-4355-ade2-77bdfe9c3049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "34655150-0907-4af6-b01d-9d5831298270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66855244-28f6-4453-beb3-5e7ce4acbddc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0660845-17af-4aa8-a223-e9907c90ad66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ab42dd-2c33-4501-8d5f-4418a08d70f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af276f9-a0c2-4e41-aa40-965c3e86c130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f35860a9-f648-4754-a063-49ee15f08af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64a0369-7eed-4297-978a-f0378b8f7029",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41850452-4f8a-4889-af63-7b1dc92a0074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0b5ca90-bef0-4c26-aef1-f04e65aa0090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83dd15a2-12a2-47f1-9c62-171793e67e67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb8b0510-a6d8-4b32-a577-3edc0e3f2517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c19b96-4a02-4d07-853b-df11c28b1678",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "759418b2-f0d6-465e-9d80-67214d654d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b4f64e5-60f9-4c92-80a9-f18068e1cf13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44cb60f-4921-45eb-b3f4-97b33c42c314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "789a2f00-5aa2-4b0c-ba27-fe728b8ff1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39ab9de7-e4f3-48be-a2ee-553b608b1c9b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2862e0-b0bd-44a2-ab54-c6d9de44e721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69946cd9-9066-4e30-8760-a1556e6c7367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbf3bc0-3196-4a53-9e17-ad20f38267c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "82696780-64fb-4682-a220-c2d9e5aaad09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97e92837-818f-4b60-8924-be3a6035733a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0f28eb-c2c0-4962-986d-946664a4185a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed37ee43-7b64-4864-a835-1c9139179e58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2d226d3-01f1-450a-bd55-17758249e19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "bedec22d-80c2-472b-ab21-7735cf15f7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c18bae8-6925-4f53-b0d4-4bd5083a56d3",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5620c658-4675-4346-a351-b0b526530292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f23f24-1fe1-4ff9-9e83-a3edeb6c0f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d166f369-1d3e-41f8-80e3-e456817e6655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e920af69-015b-403d-9996-5fe770baad4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67770118-814c-4220-93e3-45a9a8c58707",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad04153-882f-41dc-8136-1dcd5283339a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "727e9f88-8eb6-4dd6-bacc-044dfe9b1a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1af2cae-375c-47b2-bc1b-54e7d30e7090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c97e5432-9194-4ca7-9b75-40a89d7e205a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4bb2e9d-6316-4f6c-b6f6-673436c94214",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abde8ce-033c-499d-9eed-78b987139442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c97f8086-9bb4-46dc-9bbc-8b29f348a104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74717794-d2e4-4534-8e3b-03b579333a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b01d364d-880b-47f7-9387-5aeb2e0f252d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b65b7ca3-20ba-48dc-a883-7cee7d943aee",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6beda4c0-d2a7-4225-be2c-5108817e1c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534bfd2f-bd73-47ab-b575-b58555a99499"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f692a031-9313-4e03-900f-d4010050634f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf03a48d-f243-4f31-9b06-684d816fcff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9d721c-cbe5-443c-8b62-abddafe030bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a54dd3a-2735-4882-a246-32949e9b5fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9606843c-dca7-44c6-bc1e-c6d626a0f47e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0dffcc-c455-47f9-b5fb-b09cc06ca224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b108226-eda6-432e-8281-a01989735143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91214201-e263-47c5-aa9b-771d2e6487eb",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37e49dd-8506-4585-8e34-47436f414790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e92c977f-1fa8-4ccd-9a13-3462537cb3e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09558c4e-5d96-4227-85eb-97bc4f43869c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed34a9c2-9844-45e5-a653-9f65d896ce14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda0e841-7388-421e-8d7c-624c27765627",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c00e5c3-3f54-4475-a9f8-4e97c24c2e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53016e3a-afb7-447f-bc22-e97efa678a17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "233b77a0-418e-48eb-8f2b-cb41ad7056aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a5c466-8d75-46f4-b0ca-1ec167594934"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d85f44-2c8a-4a54-9dbe-aa2ad93d1dde",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e35618-952f-4dda-b830-65c733ec83a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4489660e-a05a-4984-994c-c42f6d993c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ecadb9f-b28d-4ad9-9ab7-de2f7c004e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "767d2309-a4ab-410a-bb23-a389e1a31ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7314a41f-656e-46bc-a68f-87dde6f5ee5c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff64fb4-a6ac-4cf9-9b00-6755ecffc47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664ab2f7-c538-4aa2-b17f-6eaac98b2216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7809e7a-ac1d-4c8d-bc01-a38ec7eb79c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "49ab1a80-c371-4aa6-8c3a-2820b7bca00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07be4f78-0abd-4f7c-9b71-d04fbcfc9b4a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1cc0e98-e657-447a-9ced-22b3ab64341b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ed87e61-51d3-4389-b2b8-ae37d4bc9bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6b438f-27ed-4878-8d0e-ec5426403401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bfe7d56-db1a-4251-b383-41abd6e16425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce27f83f-6ed8-4db3-a4d5-68d97f7877ad",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f376d264-19eb-4f61-836d-b5d4781ad037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35d5d2b9-e80a-46bd-a2c1-30414e28f5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb11a52-7a68-43c0-9f3f-19d2eb049042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c78aaaf2-b2e2-4210-8239-73d0156ae15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c8651e-cbc6-42eb-bd40-4b843249aaac",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a67af43-81d7-4901-b76d-73bbddcbfca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "427d0d3e-c9e9-4697-8369-9ac4b385bc85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf540948-b4b6-4b7e-bbb4-a4a6e992bb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c1e1ef9-6650-43bc-82fd-56cb3df1484b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af32d50c-969f-46a0-93e8-fc04be4a83ab",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60126ae-47bf-4196-ad24-99e9bad660be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "857eaeef-e4ce-4d98-a26b-09b481c93518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7713ab8c-ef52-4d29-89df-970255878e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbd08e0c-a24b-434d-bd05-b67031c936f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ada40a20-18e3-4184-8257-34af9faf57bd",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db76149-a669-492b-a4e2-a832432a5fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7377f226-b184-4864-9181-7eea216aa42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2db2153-b236-4af2-9c44-961edf9e5a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7202e180-b6f1-4405-96ae-6c63e37adbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d306da-1589-44f9-853f-c271330ef83f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c1af14-0727-4457-adfb-933e333d79e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "777d8d39-7b9b-47d6-8ff7-143a5dd5394a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984701aa-e4a7-48b3-b4e0-45a0311c0f86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa3cd9d3-726a-4cc7-a0fd-fbee9bdc7f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e975581-1a38-4493-98dd-a895599ac5ed",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6498d7-4d31-46eb-ad3e-49631de5769e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810a9298-7f07-4f3b-b92b-5c5ea3d8f458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e50f3abe-f7b4-4bf1-8c9e-cc4fdc6cfabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bedecf9-0f8c-429e-a19c-3dfa8476b31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a93e22-af92-40ee-8e2a-62a39fc00616",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "035d44b3-cc84-476c-976b-5ff9d7f288dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132397a8-dbe1-494a-a563-670969b8f5d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6557c330-d2bf-4eca-8a7b-6a6b55a77583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ede8f922-710f-40e4-85cf-ab3b2bc1d941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c277615-1c74-447a-873b-a435d029a53b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82560e62-e3c7-4bef-a806-e28af4117c51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11b08c0-236d-4093-b521-6dd62de2af4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31015e81-96f2-48fe-859a-a5f7bea24d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8bb0c503-86b9-4316-974f-c9cf68622c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86cd193-3c7c-4940-87d5-38fb28b23150",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "177d1c2c-7f7e-41ef-82c4-052d4420c050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c53b1cce-6761-4787-bd31-65efce81f520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267eaa26-5921-4981-95c1-d2a6fb68ac1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "45b3d749-db72-48cc-b77d-aa818f0474c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e118cf-7968-42aa-b8b6-1fb94b10d841",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcbab73a-0a86-4c8c-92ec-317c74d99649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612ddf0f-60de-4c42-9a91-e00347e72b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6228f89b-5d68-4588-9ee5-5c7705b61d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2304d88-434e-46aa-8165-03d6a89931a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76ce7310-7a31-42dc-9fc8-e6389d9fdb0f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a91bbf9-f6cd-4bd3-a65c-9438cb79249e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cdb1de1-aa47-4411-a767-c464315220df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e01d61d-ee54-4654-b1c1-3ee7d8fe73a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7969365e-79d6-42a7-8f76-b4046cc4d0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8184d5d2-6a6f-47ee-8fd8-46cf009d9a84",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "286e86bf-6191-4354-a2ed-0652d7108d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49ea54ef-dc69-4bac-9a95-127e4b75398d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ee33fa-c76c-488f-99a8-9977357c9446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "589c9fa6-a6e1-45e6-adb7-2ef50298f20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f852424-a6b8-4dc6-be3c-f315e13577af",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99599087-9746-455f-a34b-4730b58238b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97315e82-dbd5-4320-aa31-85955aa550f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3ac5f9-bf21-4219-a0df-0b6557cdaa0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2dfbc548-a2c5-4dcf-b335-e93245582382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4fb649c-c3e7-4300-aff5-d85478b1e193",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24cdbc54-8e95-4c3a-96fc-c17303ba2797",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1dfbb1e-7f87-454d-8594-9c1d385c1dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fa87141-7d11-404f-8432-c72743df335d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc669f23-8dee-49ad-a0b3-7c062542f86c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4d0d7d-dbe4-441e-a2d3-5a7891575957",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a393b895-b574-49a9-80d8-171fa2f3aaae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a18d8961-f22f-4f06-8649-d7dcf9377556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10686940-ecd3-4e25-be58-d8cf00e0aeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c01c8421-4cd4-4460-922b-fe5ba694f773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c806b9a8-76da-4d30-9eed-f1caa85ed1be",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2763accf-f1d5-4965-8807-a8875b63a18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af9dd1ea-b2ca-490f-9bda-c214792189ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc62c5e7-dd45-422e-8ee1-66b07c351b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "565ac97c-4e8a-462f-ba1a-b8dcba6db3d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d67bdc1-2540-465d-b2cb-973e60490d02",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "801e5983-e5a8-47a9-a06b-5648138657ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c6c326-3257-4ee8-bb0a-5cbfed32a583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d61ec37-8c62-44d4-b728-e11ee562b88d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13a79a25-cca3-46fe-a3f1-92c0671f62be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecab400a-7416-4741-86d4-6bb8ccb7f5dc",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbcf689-90c8-471a-819e-a402e2f57a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70c40e20-f6cc-4284-a730-df35feac537e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fb0679-512b-4fd9-91b6-f81906f5bc83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60eaf941-ff2e-477c-b9b1-2301d69663ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ec26f3f-eae1-4bfe-a96a-e4780189529c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b34d147-7219-49e9-b9a0-2b26cfa8ea17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c208032e-c364-4e7a-a621-3b9a3dc848bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d702bdf-62a5-46d7-9cdc-7d4b1b905ff6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01a9fd88-52f3-452e-9739-096ce863c839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8402ab98-2955-4160-b50e-a3e902b6470c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbcd6cf0-8ed4-4fab-a1bc-a6964cb03fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "435972de-ee5d-461c-9d8e-7b626a47944e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf8be78-1ac1-4594-9f8e-dc8b787f9fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b1ae3b7-9d75-4cca-b129-f5f7b0a10612"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e902467-34b5-423c-b8db-bae7489d7ec1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78a34e5-8b5f-4a10-8092-f3fe5ac60b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42865266-8777-43ef-a532-2498be408d2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6acbc8e6-14ea-480e-80ee-0123570803c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b66ba4ff-b9c3-4999-9573-8c9a2c968a9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a34ffeb-9625-4395-8b72-7c784b1e344f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0f86d24-ce4a-480d-8055-9dbf2bf1fb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599ec517-65f4-41ed-a58e-364ce1956ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4835d2d5-f63b-4414-ad2d-35c3831c6560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bc8e269-f9a0-4ee9-9790-6c0bff1fcd88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46e3895-3f27-4f5e-864a-4d4c309ad8d4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d645ce2a-561b-436e-82cd-a4632f5124c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8989c51-3da4-4f2c-901d-ee3ad68a7edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19abbac-ba8a-4cce-b8ef-c0fe400dd501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb6953fb-5f6a-49e5-9fa9-30c650ce297d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee68072-6eb4-4158-a111-38bdb84a4916",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b189e7-5a4d-4b0f-8b6f-1188acc3f06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cabce228-65e0-47ef-b09a-c073e899cc80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf0c276d-c9fa-4ec9-9de8-4730298ac3db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "089accb5-9a70-4d6b-bf04-1d54fde91ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d7abe4-8d37-491b-b34f-637b68e92dad",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "587b913b-58f1-4a3d-9e52-cd8a3348eceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "491e64be-8112-4b8f-83fb-caa741d0b6eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd9a9387-79bc-44d2-af50-2866521479d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bae3392e-174e-4cb0-9b34-02ad1320a879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcb6f4d-fb64-49ca-9632-e6d030a1046b",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b4c0d7-6b01-4302-a9a2-a7fc5aa6046f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6867a279-d1e7-41c1-8de0-4fc68770eafd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dabb658-c9cd-4361-825b-d91257445764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f6117a85-c1d2-4e4c-8364-4a80e0e0bfef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "851f34e1-30c8-4f31-9594-ad6f9c213d97",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "41c44915-61eb-4645-a011-25cc385cd681",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a3e99f-7642-416e-9e75-af4621050f68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe594bf8-be95-48b0-b5b4-c2006a5b06b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6743e6f-fa9b-4319-ac2f-dfb0dded5049",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a932c3c7-8739-41b7-9fd1-51c44379a881"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9d56a4e-bbb6-45c3-a385-bd6c704c3cf5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4aa78de0-07c1-4881-94d6-48dfa5aeae40"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0aad970d-8c6f-4581-ba46-3848c7ec2041",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c538c079-3fae-4f2b-bcb4-c5e87f6fe987"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "60035405-2a3b-4e15-af9c-266e3b436ed1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "783ff5e8-b8e5-4f9f-a511-0a0b224d72ce"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "54b61a12-ef63-46e0-b07a-4452433bcf93",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4a6dc368-f0b8-45d3-a189-35e8ecc2341e"
                }
              }
            ]
          },
          {
            "id": "9ba7f9d6-4dd7-45b3-913f-3dd96b2417a8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b0067218-d759-41a4-ac5a-7223d401dbaa",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db6b84b1-c9c4-467f-ae5c-f72e372c94aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "550c6ca7-3f08-4473-91b1-a044990858d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "60a63fd5-e828-4077-9d06-101b32a26fe7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c4e85638-4184-42d1-acbb-44f74b33777b"
                    }
                  }
                ]
              },
              {
                "id": "2419cfb5-902a-48b5-8c0d-b2b642ad6731",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5975ef15-6e46-44dc-b521-76e5b6a916e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "320ca3da-94cf-4f3a-a446-9aea8e6fc30b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00379efa-a6ee-49e5-a226-520bfae18652",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e267ec49-badd-4729-b5a9-1df5bd04df20"
                    }
                  }
                ]
              },
              {
                "id": "cbc6f474-6d1f-46e6-9501-0a33dbf59e1c",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ce85ab1-2b5e-48b9-a69c-35e26c47bceb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbae2283-bfeb-45b1-b123-711619788e6d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "527320dc-b3a4-4417-893e-5ca516cbe8fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a5fb135a-848f-42f3-acab-c69061712782"
                    }
                  }
                ]
              },
              {
                "id": "683a2ab8-81aa-4d5b-9b50-3559d7e5b8e9",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d436268-6802-4acb-96b4-681500aab61d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b111a51c-b6b7-41b6-9951-a19d43839d02"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9ceb75c-c083-400e-b4a8-423a897a8784",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "09df21fd-ef7a-4c4b-b151-d60306ef2f2a"
                    }
                  }
                ]
              },
              {
                "id": "6c0fdcff-a6e7-4fa5-956a-a3ab20c055b7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3345f385-14dd-41b0-b313-0844a47a4bed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "03f3f9e6-7c43-47ea-aca8-0e54c31e6c23"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1076efd-8c7e-44f3-8c94-831de2ffd1a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c77df970-a3a8-4523-b6a7-3b6df171f932"
                    }
                  }
                ]
              },
              {
                "id": "431fed70-284e-4c32-9781-5461b38f2ff2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e31243f-bf07-4047-828d-fbdcd1e0cf70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b20d3f4-d376-47ad-b5c2-08f2c7e68851"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b703cfdc-3351-440b-9fae-f550cb2f9879",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8762af62-d913-4314-9277-b35c4ef5663f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3d4d56a8-040e-4dba-913b-104104104236",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "45bec588-bab3-497f-8fe7-caba162b3c2c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "731d37f1-98fb-48fd-bda1-1e02ad8aed8d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6178cf3d-0387-4ad4-b684-ccc5d770f486"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fab75a4b-551e-42dd-a9c3-4825dccc59e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a5c3f8d8-d8ed-4d0f-b629-b3bc471d5237"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "56ae5026-0532-4e76-a126-179b7a142141",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abb8f569-67ae-45af-bb3a-2c57c60a7402"
            }
          }
        ]
      },
      {
        "id": "9125cf11-9a9b-4b32-92a1-afda93c8b03e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d1b1f465-c0b7-49ed-bc33-1e686b0da5c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6d9fb813-a069-48ca-a922-3fe60bb5b01b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "86c4efdf-9736-4e25-a003-19208a9e5336",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09164b88-921a-4b43-b88f-198e34f619d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44a43ac-30e5-46f2-8e8d-f1fdb684acec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d99c27-b6f5-4d55-8232-64130bd9d792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ad2297-a34d-44d3-9b58-fcf8ff2a8d91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a47759-3e6e-4c1d-931b-d509d95d4837",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6532d6a-e024-446b-9a77-6a3fcfcb41b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "313d4447-eb3c-43cd-9419-36fb5ec58ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7509d1df-a17f-48fa-9fde-ce00e9446ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e367523-d53f-471e-a54d-d4877a1acd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e115f831-cc73-4893-83c7-680aaf6cf4aa",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec340c4-d0ec-4bff-adbe-572c0cd0964f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "245b0c9c-283c-4ac9-8634-2f94a7063d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867f4003-23ed-46e0-a53d-59744bd82aca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "878988ff-9fce-4db0-912e-15c656dd2eed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58f3de5-9784-4c97-819b-67b2d5782594",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978ed4b2-38b6-4ebc-96d0-4ba27c42ab03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a815cdf-62d2-4be1-9b3b-c262b10b2b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9a4473-e83c-493d-9d6d-8977b0fc5445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "36774ad1-1d99-4edd-ab3b-1aa49ac1c4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a598f9aa-02cb-4c25-9e1d-02486206fe02",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b21784-0d8b-4731-9104-a16ef0f0d2cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f95b514b-3050-4bcc-807a-0ab747d101d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6e5912-35e0-4a61-adfe-5a531a95e69d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "582cd358-bc3f-44ad-8dd7-55e83c5cc75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e69f7f3-a96a-4c56-82ad-fd7308697397",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c8eabb-9854-4214-bb6f-fa71e2b97735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcf2529c-a454-4ec1-8cf2-a53dd27218b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5e59312-a86c-43d4-9e66-a58b94620e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "383dd61c-251d-460f-84c8-fa424480dcfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf16571-83e6-4d47-ac29-cc7dcda03021",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2532ea5-4344-4573-b82a-34cf2aa03641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e8f1450-3821-4013-b295-524cdda88dfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7ed200-5643-45ba-aeab-09275cf62963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8db2a6e9-1b70-457e-bad5-67da861bebee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d18426b-fa2c-4c81-bf03-14a62a8287d6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0481d6af-f9ec-4fc1-bfa6-37f1b5fb5a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d0d1a7-0fe7-4ec4-8156-1428fcf25142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f905cb-c815-4d0f-8f25-f6aa3b32b8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1135de9-5fc7-4974-9ee0-4a61ce920ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde4da50-7ef9-401d-80c5-a5eced48a19e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b5469b-a06b-416c-b366-ce29b3dba68c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95432372-8c29-49f0-bfd7-7a0e3ce7ee98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f1dec1-1f07-4f14-8d4b-ce683b7f0fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13d15cba-3398-4cbc-9d89-b6081c0398ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6bcfc63-09a3-42cb-bc27-c93bcba4a456",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78340e00-3290-4849-b4ff-caa657bc0509",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "430934f8-fb43-45d6-abf3-df5aeb09e026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b13c0556-5e04-4f62-92bc-cdf7a5341e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b4968b-d6f6-4531-95c4-fda09480481f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da7a6ae-5e82-401d-9918-e3637fa4bc44",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5775210-7fbd-43b6-8b49-19a55c1a5254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23b7804-ad2c-47c9-9da6-bb965108a698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd749723-bdc2-4ddf-87ee-67b08f8d724a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6a69e1c9-1867-4940-ae84-b360e210fedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcc16a0-e8a0-45a6-a1f3-ce2b30adaf47",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bff007b-351f-4595-ad5f-85be3e301826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870f1511-d145-4c9b-844d-2d074026b330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c33636-de30-4b8c-bf52-03fef4915139",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec23f7c-2a77-4716-9912-45fa53976d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea239f57-768f-41c2-9428-806f33910358",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c19c4b97-038a-4853-967e-46a1668fb1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "129b7032-c504-4055-b613-f0989370e566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06d2f66-b639-432e-a8aa-1098a6cca1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc58df1-e0a6-4124-8333-875543d91fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bf110a-6cd1-440c-82f6-210a2cd8926c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20b87f1-0c1e-440b-a760-6ac4bf5bca32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bac7a58-9015-4a16-960c-9c76233f22ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a732a9ce-a52d-4267-a15e-05441634dcdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb89773c-cf8f-4d71-b80a-47f49b68a214"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5416140a-d0f3-46d0-91c9-89fbd0bf4309",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35193a40-e0ed-44bf-a8ca-0f8420ce0ab5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf30f3b-d6bd-4fa0-9ba4-18dfa5f4417d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e684911-045d-45e6-be5f-570864d38ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9d46343-bb7e-45b3-a61c-343e33e9f0a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4639ab6a-69a6-419f-b37d-7d7f72f22570",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0978d7ad-aa28-4e02-a9be-d35a8649393f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40b84adf-598c-4d2a-84c7-574c307d02ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41bfae6f-4d2d-4c5c-beb7-a94d62124f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c007a483-4667-4ca3-9a75-309a52840318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab27396a-af92-445a-9741-57312e7b27c9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16fefd9-a52e-4058-b4bc-332257351c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "817923e9-6ce5-40cd-8560-7283b9320080"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc8227f-17df-45eb-9367-a9b905ac902a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6fa0d17-42c2-43cd-abf3-0bea7baa52db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e556b944-51af-476f-bf93-3f7d9803f1d0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f890d1-018d-4081-973d-57c142680372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664c2b16-d119-44e7-bdbd-09677ddb67e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4940455-36d7-4939-92c8-86cc0d66a360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "447631ac-5e7b-49e5-9658-c1f162eb8b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca97ef7-3d60-46fb-a2a5-c6ba77ce3094",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34172e8e-100c-49c8-804a-783c92f55d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d14b0ac7-835b-4f6d-bbab-fdf9efc740fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "185c1f3d-d5a8-4419-9111-f44a06bf46a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1010f8cb-9aff-40b0-8445-4c35ea8c5147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e10b5a1-9323-403d-896f-a61c46434a77",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1be00992-71bb-4268-97be-e9e1684102d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e53c32-485c-4cd1-b776-75da70090a75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca2278d-319d-4e6e-b1c4-2a82768fe4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd89a79e-7a19-4b51-a035-b5b6f23e6439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfa7972-592d-40bb-8612-27851d1e31cb",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6066d59-d16c-462c-8da2-5773df605027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ab0a657-7919-4890-ac1a-c0aeeb3ef166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43be39f5-0061-4725-ba41-ba2c8ac9b9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70ddac38-25dd-44ee-8b61-ef2ef2365ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c148e831-1a70-4713-8e5c-ac7bbde77ddc",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "586824e8-1089-4336-9c87-6a6b261efebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a9577a-ca64-462c-a563-8d144592c927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55716417-a93d-4ce9-9320-5dd77035583c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "279df8d9-fb9f-467e-9f94-0f460c7aafce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2672fa34-a1bb-4623-b22f-eee1ab16b1f8",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82a0f7e-a8d7-4659-8287-f316eab37a1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "719c2d1f-6fb1-4931-ba0d-7c852c5a7379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dc5084d-eee5-473f-a73a-81237fc31747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "99c1e2e5-b5e5-491a-9512-230e4943d534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c7582b-8501-4873-a6d3-5a4c7344c585",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfc6db9-c35a-4440-a5ed-ae25e36de5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f82241b7-3b9d-47ed-97ae-59e6c2438d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1416a6-62b0-49be-99a5-b182a8b40b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "617cc7c9-d0f2-42de-aa6d-c418cfbd62d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085ec21f-156f-4338-9f95-61f64e3f6115",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cdb1638-d0b8-4bb2-b93b-dab90b50fd7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "399affef-8c35-4a2a-abc3-cf11325a8f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be63cdf8-35c7-4929-bb1c-2df14e85b159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5fe9551-8353-4a45-bdc3-842aa80641ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7dd411-9e7e-4cf1-9976-b9fd2b813a6e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9238b4-2f91-4360-894d-9432fdeb4989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfb812b2-dba2-4b2c-9305-8bf86ed65d1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a02323c-b018-49e2-ba25-946316a4f9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "278be7aa-24ba-40ef-9f77-6fa9dbeea107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4989ca6f-9277-4f87-ad59-b4fc55bb79ac",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0fed06-a487-4b14-8238-97609d3e99ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef67add8-c761-4509-a8ae-7c1330a03bc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27099de-4181-4f8b-adc8-16576061eaca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6273653c-06cd-426d-b3fd-86b0816aebda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a29f3a4-97c5-4fc6-a816-d57c23f99fe5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd08b1e4-d4e3-4860-9af9-1f7c329ab0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb8dfe0-dc22-4736-bc0f-666a968b55f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198d6d8b-34f1-487f-826c-bb8a9c63c38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b8f3d5d-5775-41eb-9b22-c8a19f0aeb39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df0b018-62bd-4118-a76f-6642cb81e8ce",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9b815ce-064c-4192-97bd-228ca4a4e4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58d15b01-4d39-451e-8316-c72abdb6a779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a1c2f7-20e1-4fcd-a2a3-33fbf65161ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f19dee6f-74f0-4095-a257-a0bd4fbd4586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539e86e4-6d70-49cc-99cc-801c2ac75c5d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bf6528b-3d15-46a6-b1ea-346d57de5596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0b2e2d4-2665-45f3-a170-eb2d94cffe57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee28ee5-333c-474d-8ad9-92231a2803dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32e15280-105b-4634-b7c5-334edde95cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa24e65a-6dd0-42d1-8d22-face6f66b392",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c20ad88-3bd5-47b9-b106-b8280041a82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f599eccc-90c5-4f77-81f4-e31462627922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c55bff72-39f0-40e6-9380-a2ca4aa01aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa94244-1574-4db7-9ae5-56c3ca9a9c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bdc9ec-2b9a-4843-a95d-18f997d504d3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3729e280-8858-40be-a959-5f22b3d4cf01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db6801a-7b26-4eec-b3fa-3328dd6e3913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df9f933-29cf-4de3-b9cf-0cc7a72a8b74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e099fdf-c8f2-474c-873f-461e529bb478"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a258cb16-afe3-4b01-8106-8321183550de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2ac15b9-b366-4847-9681-3d2003bfe9f8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31043b40-fb51-47b6-ad35-24aaabebd27d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fc943027-8c4d-4ff9-8197-3b40fcfe1010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70ba781-9a22-46db-8f4b-5d05375f0fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5b9de54f-9718-4a09-939d-79c05b62a7ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18ce7217-6ca6-4c83-968d-64abdf6412b7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "081a12e0-de89-4dc6-afc2-82083e058357"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ee4fb18c-9af6-4eb4-9db7-4bc8a8e3aee7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1071cb1f-8f93-499b-a2b8-c5d18a578d78"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c2cab539-b0d9-40d7-aa6d-1b86a5e3dcae",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ee48104f-7211-44b5-8b19-b03b88351abf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bf609577-ddf2-441b-8b18-c2d6841c733f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "953b8995-7dc2-4c60-a950-a8d972994215"
            }
          }
        ]
      },
      {
        "id": "6a392efb-c571-4458-a645-99e088bd7b4a",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "1d558ab7-d1f2-4e7b-b584-4416e95ec82a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b008465-ce0e-4e9f-9edf-0ce06e4939f3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "04b6b3ba-4111-4fed-9dad-f0b3e9daab30",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a16ddd-a696-476c-ac01-fd69857ff14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54574edf-9856-416c-9282-a319f21fe6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c689445-ea5c-44fb-907e-c2b597c3b863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "f25b3be4-8590-442c-8f91-3c8a3a719c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f2d54fe-1fb5-47a5-b608-2c3605a41167",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f9d231-30f8-45e2-8cc8-1c4d0a35bebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3c7135-5986-4331-8060-2a985c480e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0f735b-9e65-4805-bce7-9f0f5d0566cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e9808a47-971c-4cd6-b5af-8fe8090d4d72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b11825c-f7ab-4049-805c-806a669d58a9",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09717478-24e4-49f4-9473-570f844b6fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f532e768-c132-4910-80ad-9fb38dd0eff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613ff019-02b2-488c-bf85-a7c29209c417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14120711-0829-423e-8974-d97a99d69d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2037b5b3-ef3d-44d6-870c-5c4772ab3f89",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e121477-0966-4cfd-9922-e8d079433075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0725ca13-fca5-490a-8868-3fe77a55dba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326ba063-989e-4ce8-b519-66110ee19ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "12e9680d-75b0-4e4d-91b0-3d95f8ac88d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e5373e-e73f-4b59-b6b3-6704e3a8165a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39159876-5286-479a-a903-ffbfada4d72c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa56874e-3832-4254-88ef-088443e5e753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b500f5e-0685-439e-8833-82abedb62a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "45b18711-3ef7-4ddf-8418-d1ba5d9a945e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf2aa78-31c4-4f7e-bd25-213d4941e0b9",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4acb3d70-29e3-4668-875e-849852645e77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51aa0ff4-a3db-45c0-b9a2-7371380f0ccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8b0517-a490-4c72-9be3-1899ba3d5ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd4fd04-7bc0-42cd-b8ff-121ce0e6a330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf787f6-a68b-4a43-bf50-bbcd1457c4c3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21a0225-9b61-4c0f-bdd2-4d40e6dae38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b12df0-6982-4645-9bd1-5f650a45d442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9798bd3b-817d-450a-a95a-a392e3015c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4285b45-fe8b-4ab0-8d87-9403766971ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70582cf9-d882-4482-9daf-483051979681",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63956a5-a54c-401b-a434-e1b942f59bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a76fe8b-d37b-4469-87fa-a841dc556769"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4037bb3-588c-4899-8775-f142de72e10f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50222f73-da1d-4e53-acf3-194b470d9011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6170067-4e28-4d40-9484-0b670ea41f1d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564a43ac-29d3-4941-ae4b-5bb18949717c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d31e045e-8a9a-4f5d-a990-b59b5b5580e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7048cfeb-e928-4805-81fa-9013f59747cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af9f0cce-d7d1-402e-b579-e6eabc1dd50e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23208dd-3f22-4e9d-9f46-6dd17d003f8b",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b790884b-d8e2-494e-9a2e-12a78f854ee2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ea913b-0d4c-4b1f-abe9-dfaab77daaf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028c91f2-d543-44c2-aebe-ef59dc63580d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c89ff52e-9e7a-44dc-9819-8e30989d3324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca13372-ee89-48f7-a31c-5c532e60dd7f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b8c4d7-cdb0-4ff2-b73e-56da07584eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d8f74d0-428e-4dfa-a4e3-8b8e95f61341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5728f22a-aa0d-4473-bad2-9e57bb0f1d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "26811cb7-2979-4f92-a86b-9f8df188844e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20c32e2-ea66-4052-999d-d9c03e2481af",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebd79ec-80db-430b-bb1b-5f00466c5b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa6f1d0b-75f2-4f11-9757-feaa746c8131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "532134b5-40b8-4bab-b980-aa8e91a7cd5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "862f51e0-83b1-4f9b-978b-ac16bb593e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb057f7-42f8-48b8-a5d0-fbe484e132be",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90187d8b-1585-4708-ba2f-d74dfb9dc8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b855b5d7-440e-4b03-aafe-9f2d0fa86a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63f824b9-12ae-4a02-b997-87665c42c01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "51577081-2bef-46c0-ab5e-acaad8220dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca5ad210-b2ab-4f35-b166-a2b30a95c082",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e1715e-e113-43f8-8940-696367f9d5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7ca8dd-5229-4bd1-9352-0d60b0b72985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1913cb9a-dd8a-4247-a151-92c024ee3111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e03b1804-9243-42a4-b259-ae007a02a519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318533c1-abd6-4d8c-bec8-927899e343bf",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df6020c-3013-4fbb-bd37-a150cf333ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "868b2c1d-4aa4-492e-95f2-2915403becb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8c89c6-f4d9-465f-9938-465a219dc789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "53488d60-74a0-484f-92e2-73b03dc55c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b601e6-a4d1-4e47-bef7-e47c93d72a08",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a11a087-dcdf-4e1c-bdf1-82bfb5ba1e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e211088-e6b6-468e-95a9-eb38c1cab9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30667dad-0d93-4ff7-adf9-3750bd0dadd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "51357a68-5cfd-4991-b9cc-389b838f33d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddbc246-de38-4ba6-bb23-e5cda7b94dd4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ead0107-bc04-4d94-8580-cccd86046a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd7075b-f107-4062-8332-4e53debbee4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a775aff8-b811-44d0-9d3e-827a6376870a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe1f217-bbd5-40b2-8a59-a676139ae5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97218720-b306-463f-bc60-e9c1ca6e6d8c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f5ddff-9044-4e8c-a4b3-5055e446a968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3563e87-280e-4e89-b373-04dd8d9d54e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617fcbb1-98cf-4360-8c08-468ee58bfd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec11ceeb-a470-43b4-96bc-95f69aa25410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84db64f-84bf-41a9-87fe-03b78ecd1b88",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0647e604-6f50-4f44-8c36-f08ea5c8239d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e27d02ee-1839-4dbd-ae94-0af551bf3495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac67d64-b69a-453e-bc88-b5dc74c04f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f74dbc2c-676d-4d87-89e4-eab4939c91e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d13c91d5-d600-43ea-b462-09a4d05ebb1e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2044e36-d661-4f17-99fe-4dc8776033d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b142308-6134-4125-81e8-3dcea2a0e049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7b14ef-6b21-41d9-ae99-e9675104df46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efd9d1d9-6a5a-49fa-baef-d566712a729f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51052df-ab30-413b-8dc2-d85dc2c7d7d6",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e449f689-2b67-45c8-8150-43d4649e187a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6371cc3-6d1b-4139-ac40-813ca4acab02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c75081e-3c43-4fcf-a298-5343006d1e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec9b01a9-94f4-4e50-8d4a-b2129ae2ed38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43911eba-728d-4da1-979c-ba00e6da9911",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "870d830d-86c1-47c3-84db-51221012fd26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23de95ae-1d5f-4691-810c-41e287682c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16fc34ff-79df-41be-8c79-881f91598dd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc50e6dd-e775-4c09-a0c2-d4eb472dfcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2664731-ec83-460e-a1b5-76db0fa9747e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20edff80-d414-491d-9e63-d195cf6a0095",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1cffa22-ac38-4c7a-8fc5-81ec65856062"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dc62a07-8847-47a8-be87-d818b87b77a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f00147aa-1344-43d2-aee5-3c455e8cd17e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd0daac-d1c5-4f9f-8ed0-f407aa8710a1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f303bbb7-1567-47c7-b7a3-3cbffeea8634",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c0bb78-feb0-4e16-8a19-07837f1e868a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d59390df-b962-4e6c-baef-141aac4e16dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e9e4cc0-e8ee-44a4-920f-33e5aad4d480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deeb1bb5-8f44-422f-a386-5ceb3eefbb4b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a0c0cf-27ef-4476-8e11-b4bcf4ab0b1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057c524c-7276-4c6f-b765-86497ff3d0cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f27918c-3436-430b-a424-47d795620ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49e60e40-26f3-4da4-8c1e-b900de2c4650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d9ec35-d824-4bdc-9939-28c6b9a4addd",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b84a8c-f1ae-468e-94e5-02a2e77a8b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af3dd652-f2bf-402c-b25f-f1ff12e45781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2304c918-d99a-407d-9d19-f10b770fd544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d758c33-c750-475b-a5bb-05bc48c21d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3437973d-c3e7-497d-ad3f-7f1460e51248",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "642d0818-6842-472f-a085-47d754c8d04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caea27bf-8c35-417e-adad-d5aefcbf94fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1dc95d5-f6bd-4e1f-a01b-38b25fb0f48d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc35514-31cd-4c48-889f-b86594d5c1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127e63c7-3286-4cf5-b523-9cd8edecb3f4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23270d70-2c99-47fb-be6a-40b959678d8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42fdf9e1-057c-4956-a037-9e749ee35fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5702b251-d836-4d45-bfc8-01e85cd2475c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d14415-a7f4-4269-b37b-b82b5a50c778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99de1458-eafe-402e-aa45-2072e159d879",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d0025b-0c2a-43a6-a80a-33f3dd61b2a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77477367-7850-44da-915d-965e51e9ee3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "761a5e12-29a1-45c1-99c2-ecde5667fe21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb55e50-a242-4630-b8d5-c20c3396224d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f84f68-cb55-4bce-8ed3-2283c26aec68",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd04d6c-49c4-4e84-941d-ce60b710252b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3420431b-083e-4c89-b704-f3dfee41f0f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b0a0a9-7290-4599-8c66-9013499ec09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "510a5fb0-5cc3-46f4-921c-26a1c14e902e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ddca10-5ad8-4eec-b92c-eecf5294ef71",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe69a78a-376b-475f-a341-b7cace92d95d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fda0a898-0181-4e18-8728-5d7f341b4485"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c1a5c9b-b4ee-48aa-bbac-f7de4e4c690b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4054ad-f40e-4e2d-a861-3e0a100f633a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c080d390-d829-4f3a-b73e-278393c5f038",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b05a55-41c2-4488-bb75-d266cc7a8f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d02e1d-c2d5-46e7-b842-4e24b014f043"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f73199d-00da-47d4-bb0e-b66347cd9b8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "929cbee9-c9b7-45c2-b050-0086f1ba130d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd73bfa-7eee-4d9b-9e64-af04572d4544",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca181b9f-a09e-436e-a761-a33ee85a0870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13e825e1-3dc1-470c-966c-344bccc0ca13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36946e2a-e7ac-486e-a9d9-cf283d752451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d74339c5-7537-4726-bdef-15489cf1f96f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063b1c3e-ba5d-457c-9296-60b1c1b704a3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21860a9b-694a-444f-a2b2-fd119abf64b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c52b32-264d-4b4e-9336-e9f12a095be7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244bcf86-03b8-4828-9616-a310cfa33c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c571b948-d11f-4986-adf1-a0dcae9b81db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188215d3-6135-486e-827b-ec2c268af733",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54455ac4-7d39-421a-8e3a-bb2e99bd0627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e965d80b-d90d-4e23-a423-5687d2c23123"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4259d6c-dfa3-418a-897b-a6e713747fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da3ea87e-a98e-4781-b46a-ca19df08368f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743793f4-9a6e-41d5-9af2-168746a7710f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1cae65-c62d-4e12-a671-094e6f12a883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed81002-f3e8-43d9-8e8b-29248bdc187e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d55781d7-4788-4ddd-9e46-6b30b9bcab66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d5966f2-25e8-4069-b9e0-9d5720dd9152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e7fff1-20a0-48b9-912f-4ce81088cede",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e21e912-bc86-40e9-b42d-c84b889f19b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "017be3ce-83ed-413b-95ab-9dbe0bbe9c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab8c6c1-fc31-4923-b5b3-15f457c1fa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1dfa8e-80ef-4cd7-a719-1533def32235"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e2c16a02-b397-424c-9fe6-55b8fd63de22",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "95c47357-f744-43f9-a485-2deb3d5c07f9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6c64fe-714c-4003-9b55-929243d2eebe",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ffb1e9b9-c138-456f-891a-04e07c2bc61b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fd3264c-05a9-4cb8-a1e8-b781ca3b544f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0670e81a-1f74-45a4-ba12-bdefa746e3b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c27397d7-3063-49ae-b1e4-854ee048d4cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "34e6bf1b-6682-4b6a-bf03-52c5d9d5395c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c48285a1-9653-4679-88d5-93aac9dac539",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fab317c2-185c-4bc1-9474-023336c56f36"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bcfb4a71-06d1-4eb8-98d2-b06a76810e34",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "134a6a07-0398-4cc6-bdb4-445a32ab1c23"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f11efc26-8fe9-478a-b35c-1d3e62866239",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e12b5a49-949e-453c-bfd6-7d67d9543508"
            }
          }
        ]
      },
      {
        "id": "73f79345-8f84-45de-a42a-c5bc34b40790",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "77336e57-9be4-4fc7-b401-fe7a86ce8d3f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b280fa4b-d9d5-4e00-9080-6ba46e5ce4f1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "890e0677-5273-405d-9cf2-cc28d55afc52",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e994c2a-310b-464c-894b-e684d2446dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c417dcf0-f614-473c-84ad-e6eb80d5d209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4261d009-343a-42a2-9c0b-1d119a0b6dee",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "620435ba-2390-4e59-862d-cb751f1eece2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f455a85-66ff-4a3a-b58c-ef72a0ee2997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2f15d4-143a-41ae-8e1f-e1a0547112e4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7746724f-4ba6-4f49-9dec-5f256dcb256f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf32f5f7-babc-41fd-88c7-e21172d1f8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351afb16-3756-4127-a99f-129670991b62",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa811880-2de4-42e2-9a8f-8dc7502b6329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa8ff77-767e-4dfd-8b6b-c9d595742975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8a32e18-f7c5-4bb3-8bcf-01e10ecfc52d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00186456-29f4-4ef5-8dbe-f4079342bd83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1adbe0ca-1fc0-4dd4-8a86-72ab9d56612b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa67933b-ea8a-410f-9577-f49850741d06",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8165138b-8990-4ede-b6d5-90792a5f795a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "125f8acc-244d-412a-bdd7-2ee813f27ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9388481-826c-43b8-8869-ba9ad6458017",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb9e187-9f56-4cc9-b7fa-38ceec7e9f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7e1abcc-b3da-48aa-b851-bad1b920538c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d429fc-0e3f-4d01-adac-a4b4f2975fa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "118f8615-af1a-4aff-9b2f-618382ce4893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7409454d-1caf-4c43-854e-93eb1d243dce",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d5308d-7c20-4042-93a0-4fe0ad7e0c7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b03d727c-b82f-4f38-8c63-5457bbb385f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9885d5f0-d678-4863-9998-85c4c1293d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f373721-2986-48a1-875f-fbd20131e439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e802b5f6-308c-4109-9b77-a09600e8da92",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86cdd574-a1fa-41e8-91bc-3b558e8dd4c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbfa0b06-364b-4a6d-bcd6-72f697ea1700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b3d7ef7-5f5e-4fcf-bc39-9b7570a10268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae11376-e602-4e93-a28f-b62d55384692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97b7bb3-ec49-4dc4-bcdd-02f3f1f105dc",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59b12b2-d451-4e28-9d6b-ed4b29e6b903",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d3cbc27-42ae-4766-a94d-2c903b547158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4984eac2-e93b-4bbf-9a6e-526cbf67c627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "628379ed-7011-44ab-a9b8-878f0e3a28d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b07c6304-937c-4603-8004-b9a0dbf4a345",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5621da4-9c22-44bd-87b0-29f859625272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3298811f-beb2-4f9a-9a3f-e37c84c7bcaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45e1eca-7b5d-4c45-ae0b-3bddb6418872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33899f2f-74fe-4c4c-82bf-bbd5613d4b94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c31ddc-63df-4718-a512-3a566c773d2d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03681bbf-243f-4fcd-a195-c8564eb5a600",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c37eb2-5065-4c3c-a740-145a76e1eb75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f0fcc75-bf8e-4e93-941b-bb209edec180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c64929-beaa-4429-99b5-00401e21a404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9872f753-f4f0-4fa6-8f6f-8f2842622747",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c678d5-0be4-4f5f-8035-83734a6dd42c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "978f67e0-2b72-4c21-aa6b-fac8a8de860f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "937c0d17-5975-4aee-8dda-d74a8d8dfa58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4aba7bc-394a-47e0-9632-487abf9d9b9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ed850d-842f-4197-8539-449bc608e523",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3cbb10d-82ae-41e2-a922-64628914a1c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "049e40ba-11e5-4798-968d-9d28e3025af6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad8f9065-d46d-45f3-b0f7-01e6d4b2b681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fbcc178-eed4-430c-b28d-50b399f6cf10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3114da93-5f27-48c3-a90c-df6acf6959be",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f07a13-e4b0-436a-98ea-5eb181a5ba04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e39e8e3-00d4-4afd-b241-48e0e8f0cc83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a609146-23f8-451a-b3c3-765ab347427d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544f5799-fbf3-4e66-ac10-373dd85383cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee1426a3-8915-4c88-8717-803162ea4161",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85928288-2ec2-4aac-9a2c-841f9935973b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f16353c5-30c5-495d-9da4-8eb697c7788e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "912a678a-aef2-445f-944e-04d86a112b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776cb4f2-a5b3-4440-a2e6-0934d4bccd03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a700ce0d-439c-40e2-b269-ff2bf7f4c748",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed34f143-7e64-486c-a91a-f481144adc93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478ad81a-2df4-48cc-8cd6-d403fad671bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e666bb2c-51e4-45e1-80da-681db0857615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212f4a4d-4998-4a53-a8b4-367209b0e18a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81df83d-4998-47c5-bcd7-8dafee638fe0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a4cfba-71cf-4446-938e-d380aea46eb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea49ce14-cb20-4c0b-b837-8eae4cb09085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "323c9823-04cc-4fcf-8e85-09632333a8f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab278836-9495-4d9c-9c78-97ee33dcfa68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b8948e-2bf4-4770-aa5e-f1247061ba20",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89bf637c-cc64-4599-aec1-113eab0fd432",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd1df875-8719-4871-ac42-186744a34df1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a611ee57-7473-4241-bed2-498851e2e1db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13926b4f-d250-455e-b9c5-88fde976a699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d75aa1a7-5a33-4370-bede-6ec9f00243d5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b648d04-226a-4c6e-843c-e729105f1f71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa2783ae-f944-4a39-aede-f84a161e37e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f9147a-15f3-4a20-92fb-1c1e663dbf10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a79bb5d1-f9d4-4677-a99e-c7020c0fc118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f59881-c346-4ef3-bed9-78e3e3b308a1",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab512934-9cb1-4f56-9350-512e925b0bd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9633625-74ab-4a52-97ed-d5e5537885b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac2c348-4810-4d36-9282-8c8511627b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dd6a238-45c8-4b66-b92e-7242cb11d77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6044c1b7-f770-4382-9593-fe105fe04977",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebbba610-3e04-4a66-9abf-efe56b04c789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85a34d80-dc76-4232-a24f-bd39a6623aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7e1725-caf3-46ec-ad55-330f4d6a7241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c12c3fc6-cfe7-461f-9852-1ef21ca65ed1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "139df3a3-e083-4454-9f66-1aafff665b0d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4929ec-2f87-4346-a4c8-0439e5a9a187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b45ffc5a-bde2-4d3a-b9d2-14f2d5491dae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9991a96d-bc8e-4b93-8ce1-94ec1511aba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33874a62-1a36-4266-87f2-2a9a3a25c43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f692970-f255-4da8-ad16-09c7d58d9236",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d584ac2e-44e8-439d-a03b-17748a1af712",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca349ad9-4264-40f1-a034-d333df976ad8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "980be43f-40a9-4814-9da7-31159a643475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf58272-bbcf-461e-976d-064ff7cc4763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "749ddb46-21f9-4b87-9c32-8e08cf7349f6",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f0c9837-987d-45c5-bff9-722bbbb838f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b083264d-7fb9-4d8b-8f52-c6dc88fff517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5264bcbc-219c-428d-a0f6-1c87779c62e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dd5c55f-39a5-4582-8516-ffcf66fa0022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8744d4d-a5cb-4561-9ae7-2baa7fd145d7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a292dba-c13a-49d4-8442-33b5f7e70e3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f621616-8247-49dd-95cc-0a05473b193b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbee3665-e6b7-49dd-9b5d-bf47e11af8d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a2db52-34e3-43c4-b4f4-f7594f481319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be61508f-b0c6-4f58-b270-e2cca63869b2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7077ce77-b632-42c7-86b4-63d8cd012021",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cbcde69-647e-4a19-acf2-1d51974eac9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb0147c-a685-40b9-81ba-8fd0456c4629",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "802f8347-e418-40db-a4ad-01e1f012ac88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38af05e3-bbf8-43df-9c7b-ab7f8bf48850",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35c499b6-abf8-44ec-bb40-0a4ba2fc9357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e351076-10a2-4545-a926-f98244509767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114ce039-7584-40ab-95c1-eb1e7a5c0957",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ca678f-e1d1-4f00-8757-34e83a8dac4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c54c32e-f8ac-4f8a-9b1f-948f4af8af46",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa25161-d3b7-4aa7-94ff-e48ef905d730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a8a696d-a519-4cbb-9361-f2b608b6b985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf0d330-62ba-4daf-8aa6-dee599d1ab80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf782b4-04dd-4d74-a9a3-48efed9e209f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89dfca92-7150-49a9-adc6-28171138d54f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4041add-64f3-4209-a5c1-c89b0a38629b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e84af65c-7f7c-4919-b34b-7e20b0ce5007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d5ea229-8b8f-4150-8225-7ce6470db243",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "998a8ad5-5332-402b-8999-2cc9b638d623"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ac13da-9f58-4b67-a0da-18624c04867a",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdcff5cf-6dbb-4dbb-ad30-535567aea2c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73c76213-c501-4a89-b20e-a46f7d6b5ce9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7302f1fe-78ed-4970-9446-2ffab437b268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "864dd455-817c-4a60-a74b-0dfe63b60e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2015d92d-045a-4fce-bafa-f1b7d59f2e09",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeffeccd-486d-4eaa-b5db-69455e78b9c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40ab8c5c-7fc4-454c-ac71-39fdcea5ac89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9478ecc0-a6c1-4a0a-b93e-016a37ba10ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fccb959b-3cea-4954-ae80-ffa55dbfd0b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b67be4dd-411a-4580-87e8-66b37cc10a12",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a981a016-e22a-4818-b96d-b70741381ea7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40bf6214-aa6d-44f7-a06d-d4dc41cdad2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cdad215-9384-456f-9a26-6601e1fd9bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64c91107-cf9a-4fea-b936-a507237ea896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24d949c-b319-43f6-b202-7e319e04de40",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0880526a-02c5-46cb-b7df-1dfb852c3ade",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab66e62b-8da1-4c76-9235-b8fbc5ab70f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "477fc9b0-3f70-49b7-8ef3-d9b2b96e854c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3c2853-4aa1-48a9-bc54-9fec5c8d127b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbf3762-64a0-4cf7-8a65-dd4f7c2e1622",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48de319e-312c-4402-a230-4c11d614a05b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5a60e60-7dc6-4387-9730-b1cf3ebaa99e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e754061b-3df5-49f7-ba95-7cc253bd7ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d794d8-f2ae-4c7f-90d3-d8c2be7448e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821d638e-11b9-4a37-a33a-f01d646779f4",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec6c2b66-8caa-4037-870b-a47b18feb18e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e77825e-50e1-4c54-ae7c-ab77e385b1e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfc4e64-e1cd-4311-95b0-cafed752fe8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ee685b8-12ab-460e-9caf-fa994ae2c2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa4281c-ae37-4754-ab59-fc32a2958493",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20c5126-53eb-4915-9b0b-022e8e5680e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4448b65a-971a-48b8-9b83-a13c3d712c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f3e5f8-cfbb-45b8-8a17-998147d233e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb0887ed-87ea-4ae5-bb79-fb97e4bb80a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c48a14-12a3-4be8-840a-e023b865095a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c990378b-5cd3-4ac0-949e-441aa4f1820a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c380ae0-8b57-4818-b4b2-601145222d09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6f4a56-5693-4cb6-9ecd-27535d372623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "738c9338-a364-44ae-ac85-a03020a99b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e36976e3-07dc-4bb0-8999-d19d781ab561",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0f117d-9a93-408a-932b-154b0270f306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a48ed07-bd4b-470e-80c0-868b4b36b5d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b2c00d0-b484-461b-9be7-b7f28d70c0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ace32130-84a4-4b3a-8dff-b726a0470df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bb1ced-94d1-4275-a83c-a9da4104b76a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9af80f1-5e84-4bfc-b56b-cee104db0e5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7cc2067-f33e-4822-8e16-c3c25862b1d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0007af6e-52d6-4310-a66d-a705a87ebb27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9920e8a-6bd2-45fe-95dc-4b48a5a9b448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e52f8c-2a60-436d-929b-538fa933a884",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c2f74e-fe06-4f4a-a1fd-895114bb0b5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d0d9e9-dee3-4fbf-844f-1dd8b0ea98e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f9aaaa-0f55-432b-a4ce-4eea2ef5cbb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce35f69b-6c32-4940-a1b9-d718f0d9a203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081ea90d-0e63-4291-b0a5-f4b007dfd887",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ab48d2-2b66-42e2-86f5-c48c6310f264",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65bb5ef8-331c-4a74-ae64-394eae47f84c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ee8380-6aae-433c-8eca-f54e996ab563",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0288d7cf-5d71-4802-aff2-06766e1ebd0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fea6772-c6f5-4872-baa3-cca86f99a4e3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef07afc-86e4-4517-985a-c83419b8d129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8a4dbe0-3190-4f2b-b99c-ce2383ada7fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32980097-e506-4865-9d78-fe9c4fa36609",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221b2da3-ae53-409a-9324-fbe14521729e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf68a07-31b0-4058-b8cb-36fa208a86ab",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f42c7a-a7e8-48c9-8b29-fac3f1e84029",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34fa2c6e-7ff7-4240-a3e9-8a249608c1ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab88c7ad-8bcd-443f-bb01-c5de3b4927c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11601c8b-a753-489a-b66a-729406b8380d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c76d800d-3fc4-470d-b6d0-5f29859b8101",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a19a512-caa3-4b95-a3de-77682b5fe8fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9faacb-b3eb-43f0-bd44-d988506b7327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "770ef80d-0eb7-489f-a12c-2187d8a775b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b49716-73bc-41a2-b0a0-98341bc0e146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5010f26c-9713-4c8e-8ec7-716519aa5a16",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b78310-3cbc-4741-b29e-71f801688921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2858f34-f7e9-4bd3-8586-e137d25cfdcf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f8dad3-60f4-4799-a230-a8fc2e89dc18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdcdb827-07f1-4bbe-8286-4f1fbe1cc29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f8fe41d-9392-4c24-bc93-81f1261af3e0",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbe8f6e-f672-45d2-8cdc-ec906d6dfdbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eba8704-c623-4fa8-815c-c90c7cf29fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1031dedd-8702-418b-bb97-9064f3db28dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb8c818-3bca-47b7-b62e-bc919ac06eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82d3dc6-806e-4df6-af99-8527d3c0eeb1",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561a9406-1381-49c1-8f20-0cb8688a94a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa84c7d-ab28-41b6-85a4-996cf5f8a371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4328b93-75e1-44fb-b734-23e6eacefff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed71324-0c2c-4363-bdec-395613f3378e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e4b963-ef46-4758-bbcf-cccc6c7cab39",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583abd35-4ea1-4c09-bb24-98993b298692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dc9dc42-3bb7-4226-83ab-54eb62b7e4f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db346d48-45b6-4d15-b479-c1b6d6224ae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b58c7edc-1dee-4b9a-b5de-9debdcbb1aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59528f78-835f-4358-af98-b7df3780447d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3303a886-c421-43fe-8b2a-bcb25bc9ae48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccb5a742-a8ca-437e-b966-fd6ce194e474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f87273d-be05-4198-a2bb-1fcc3f0abdba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df58dd52-fdae-4a86-a06b-c7a6adf225e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36717043-db24-4037-8877-af97fa6aeb43",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8a016f0-535c-4d73-a0e5-26a1723dd4b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ac51a83-2455-458f-8096-a690cff5e880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9eae26f-b996-4e46-827d-d7ffdf4e7923",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2131da7d-876a-453c-bc33-a93c5d7dba90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faaadbbd-9312-48c0-81df-65da6e80c5b6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e2a461-42af-4680-9960-e61045ca2805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89b3422-7a45-4a19-b373-3920c91bb265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e8be9ed-9811-4047-bf1c-9197ab95a0d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6b7045-b04b-45b3-914e-fb32e118a764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d377db0b-c3a3-4a35-8981-914567ce282b",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441cb631-550a-4f3b-9237-ee4e0f1f1ab6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "420eb5a0-80c6-497d-87c2-a601f0287c06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eb5b5c5-8405-4b7a-ac65-dc6a35542c05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc1e3ae-a93c-4c90-b2fb-91635d522ebe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025454d5-3805-449d-b3d2-a7ba13184f73",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3415ddf1-5832-4c26-9576-fb0a6795f02b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a35d6f-60eb-481d-a45b-19fc01c069de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc07ad39-5f54-45b1-81f4-cd7512941d2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36fd0859-3027-47ec-a0d0-7c709fc0b3d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1674fcdc-5521-47b4-bedd-f86793695100",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5de8a40-251b-407c-9033-5623bab324b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc004655-4174-44cd-b170-063d8f107fee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d4157e-5e2c-4474-ac3b-c73ad30d6f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beacdb01-0037-4a21-91ca-42e2a2147e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c113a15-f817-43a5-b4d7-93c7d40fef9a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d0f54f-c284-4406-80aa-4521ec16dbf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc073c2a-c0d1-4439-8e41-39b94ed1029e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4b4811-8a07-4bd4-8233-a63cb9522ffa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bec0b61-08ab-44ab-ae83-53aa6bc3941f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde4e2ef-18d1-4e0f-ac0d-05b7c7c82981",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41c809d-da64-436c-8142-ca6f4949d0f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44aa0f9f-4a19-4fc1-b0de-cd91d2281081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bcefbd5-1e2a-429f-8721-b4215bba7256",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95e0e1fe-aaa2-435d-8481-40dadf19565c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710a90fb-0bc9-4ebe-80f7-bd5152f7350b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90675bbf-7b0c-45c8-8d83-9d2f75074378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b747e72-c907-4406-b717-9de40ff7678b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af62398-e14d-418f-a4b6-a2590d36e45e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "009eab1a-e0a3-40a0-8378-36ecbd2118ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f362d4f3-e82e-41a6-b9d0-f056ff81edfa",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02634998-a98e-4057-bb22-15aae882e5fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba9c8a1e-2dba-4e9e-b671-c532ac1dbd34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "284a6a29-8adc-49b2-82bb-7b86333f2e31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68b69386-de69-4dd5-acfe-9defec98cf36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5dc3c96-9730-4bc0-b44a-4f8e5bc28733",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5abab0-49bc-4385-88ef-90183df058e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60e88bb7-d17a-4a70-b137-0d4c0a74842d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f1f4f1-5e6e-4446-af51-cddd00ecff69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59431808-df22-4897-974c-0668c1418f64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eda4ad47-7217-404b-924f-9bf03c9822e0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1639aced-3e74-4900-ac48-700ef861bdc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b68e281-f243-40b2-b2da-3e5ad729c240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "969d0796-35fe-4ac5-b2eb-724f5b420faf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e8f3076-90d6-4e4a-a735-686cbb7bc90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "627e11c8-76a1-4784-935c-5d32dfc23204",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee16d7c1-5cd4-405f-8275-29b149f53b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ad40e7-3866-47d4-a550-7a6c4eee6109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee5ee29-12e4-43d7-a768-9d5c96fd1837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f640e47-1350-48fc-b44c-f6c8a1ab4ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfdac2e-56f9-456e-8aa4-c79312ea3171",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f64216f6-f5c4-4519-8ecb-23024e28a761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee370200-5cbf-48b4-a208-1ba38d99783d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d48b0c97-8366-43f4-bf95-7740b020651a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c949534a-340a-434c-ad94-00f0d09f46c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af7c333-d455-49a2-986d-ad7031be3de0",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382ecfed-fc32-4a33-9898-335c497007ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0129d58-0247-4666-a791-8704cfd7bcfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd0d678-85e5-4666-a3ca-1ac5a7a94bff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb99294d-acf0-4b25-be60-c0fd14cdd74e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f155dcd1-b207-44de-9aa2-8469c6e57e3f",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164fed03-6201-44a3-bc32-e003baf1ad07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d02ea19-33b9-4884-8ebf-568ca40012a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4a55478-de7a-49f7-84ba-503e6fec76fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e772ab0-16fa-4fa2-b0bc-8d9527d95243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a94150-810e-4e1d-b962-cb87429a2779",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3966f1d7-36c4-4ce2-83b9-fb25d73fdfe6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08c8f8a6-6306-49c4-b274-e6575d5bf496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f434b2d-01de-4864-b991-2b67541ab4e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "860dd6af-6ef3-45cf-85d5-8b16fe3b6b6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a5603d-3fd5-4ad8-99e9-41ef9a5c5063",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dbb4fe1-f774-40e0-b4e4-98aba4904b9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b954b9b5-09e6-42c8-9833-74c7aff27286"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f9ab8c-6881-4123-9e46-54f7127316b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf2c592-afd4-4b92-812c-05cd40d40a76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8621f768-d9c7-4519-8929-5eccf19611df",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21962dbf-f41a-4b66-b9c0-3a5b8989c553",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51756029-6453-46e0-8fa5-6a5bee5ef5a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f7290c-dd94-46b6-bb65-3a0df150b13a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dc8dcd5-38c1-48be-8bea-8a86c5b7fffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe84d8a7-573b-43e5-ada7-e675a4dad4df",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030ccbf3-ecbe-484d-81e1-c8947b360bd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c4c2db9-ac0a-41c2-ac06-43b0924aaa04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9cd5a4-28af-45c5-999d-25b4ac6381a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6255a40f-076f-4888-b634-97b8cde3c781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3369e43c-355b-4257-a826-a2562edfc076",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd6e1f07-1fdb-4067-bd9a-76b63a2df88c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce9f12ad-924c-4821-8c71-3b4b987717f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "474dead5-b815-4219-929b-4718a5a99842",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "545f8e5a-68bb-4119-8bce-b61fc2833373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b824cc64-5124-4498-9289-e3ec62f0c19f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02189cbb-bbdb-4e42-9d83-888a5e84e19c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9736cebe-050f-4bf1-88e6-8b54f8d4d572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e17de5-eff6-4111-a59d-eefa174ecbd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5dd1a51-1f16-4f6b-babb-14c6f61c6019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a2d66d-0f24-4a76-b2d4-02498e3773cd",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701aa9d8-409b-4977-81c1-db7505f16078",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02096cd7-f5bd-4881-bf99-dcafd2f71d77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df85ea8-4696-44f9-b169-048bcd24d9ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa3062fc-cf64-415d-be65-dee24e8fa8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c1643d-ac56-4f3a-a954-11b12f4af424",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdfcb135-69e1-4da2-b6b1-29726e8583e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ad7b80b-ba40-4315-8dd8-f8a1cc89ff6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfffe887-f56a-47af-8436-e9937840d7eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53b5ed90-b3c9-48f6-82ed-9b4c3f2634cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f117b717-81eb-4c6f-b083-1ebdaf0d5007",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8efd28d-bd16-4f00-8380-e4b1f44e8bf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87d04432-a9da-41dc-8752-6440c8861076"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c151c983-2a7c-40b6-b68a-5974d6095072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "268c52d1-8784-4834-a71c-8c386ef1e6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d88a1b99-9900-489c-8dac-bf7364ea5703",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98639e2d-9ec2-4d41-844a-03077295bcfd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "102cd3bc-0b21-44e9-964d-de84e82e8072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a0a5e11-cf3a-4d3b-84c3-aaee045011f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6862a306-9486-4586-a1a2-aaed8a82be55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f6b901e-6c11-431f-b162-505e4c5df41d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36175f48-d1c2-4f01-ace3-be3cd9d91e1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36599572-6475-4936-887d-08e2c80c7e87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f827d8d9-eb05-4a6e-b765-53ccac1b01e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42ff9d26-373c-48f4-9351-8752f0096c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99fa55d3-ff1e-494c-b899-fca9ca944843",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29243f36-5397-4a14-856d-58f4fe1c4ec4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2df8d43b-a6a0-4753-8aaa-50ea0e9dc65b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c44b0a4-b4c7-4c63-a62a-9cad01588a86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72373904-14cc-43ee-9ccd-93124a363aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa7f144-0216-4482-acc5-31feb9fbc375",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a659bb90-e181-42d1-b5f1-3c77a1f82490",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8641e770-fcf1-4140-8ab5-c7e75ed01924"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b99697-e79a-4f4d-97fb-2ada1649098b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc8f5182-599d-4442-9a29-385d5173fa81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daae4669-f3ab-4c4f-b9a8-8c326a267c92",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f3c93df-6f58-442c-a0be-f408c25ebe89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d54172a-39d6-4ca7-8260-e5711b6e98d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef17d443-9f7b-437e-bc82-af30dad4d4b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ea5b22-c0a3-42c2-85cb-3355dd667154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b1c1030-60a8-4536-b07d-08f80f5ba78c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e73247-291c-418b-8da0-8996941761ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6e5f3b9-4603-4379-b5ec-764d3a9e42e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56aeeeb2-4961-411b-8aed-1839d65491a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6641901-2339-461a-9ddf-0c1fece98592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aac31d0e-b71c-492b-bb45-1e151305719c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86f258b7-fc06-4d20-a9bc-bcfc21c3b86f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e937db5b-7d7d-4862-bc67-8e8aeedadd88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e971575-a3c1-4d9d-bbd6-31058c6464e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13d2d590-e2a8-49bb-abee-6b0ee87c8f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c521fd-3ed5-4191-b148-8500e68e74fd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03397f95-3520-4033-b6f2-9533a9ea3313",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "58616441-15be-4589-bb62-8a369c0261de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0996afc6-dd44-4688-ab06-850783a059ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213211b5-6194-406e-83be-04dd349c27a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92aca1e-82dc-4e16-86ca-b4ba8253e9aa",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac122c3d-d3d4-40f2-bb94-90b70d060fe7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c30b0226-c5d2-4994-a5cd-7d28078779c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a595c1-ad67-40d9-a1a4-83bc8ef671eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86935b79-fe7e-414e-a837-86fde9be9ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8729f0fa-9a4f-44b2-8567-daa604240488",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "781b364c-8b0e-4a0c-b4a7-aa1b26329a09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "636e3fcd-011e-4f38-bc65-499bc43c054c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d734668-8e48-4bfd-b002-7bbc5e6bb574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b8db96-1b45-4026-ab5c-5390097bb182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc46497-b4f9-4003-8e8a-43b279c057d2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47b55e64-98d3-44a6-8e79-d1665e64a157",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec39a25a-4c40-4505-a158-3d6616380a61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "840a80ed-14d8-4ccd-9574-fb5256f2666d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29c208f-6b65-47a0-931d-2c517879ff0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d68a47-b691-4beb-a53b-4fba0e4d2eff",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedd9b65-12e1-479e-99ed-e0f2eef5a218",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e166e7dd-d77c-4aac-804a-de18b3f1dd58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acc7d588-97a4-4fd1-8a7b-2075bbfc9d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab5c21d-0b48-491a-9439-ccbf4d72c731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31585448-f826-46d1-a5cb-87a35e7a1879",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8a4d91-9236-4503-b7e0-3a534b9c5d4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab852206-8015-4342-adfa-0e4c7a487ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e83e6e9-eac0-46dd-8594-ed8b15f7a30b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ffa817d-63ba-4562-b7c8-702dee74c3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8919af98-74cf-4dbd-a28f-6b1eff283104",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1650ea9e-f782-454b-9db0-45e4eb36e7d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11bf3f07-4aed-44c7-ae31-bb94cece01b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "629e35f3-082c-47e1-af1b-afc0cf048a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af7da44d-9e7a-482f-94e9-9f58538b1074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94baeb8-fb67-4503-a29e-36e63aeb4374",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12df0712-7d37-42e3-85df-b46e43426e3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df697e42-09a1-4420-b91d-4aaf2061b10e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a99bd097-f20a-4d0f-afbb-b90784f1e1ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6ad852-2846-4728-9256-55a05bf982ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8242838-a4be-4724-934e-f5623de1bf74",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da6d3818-6e63-4dab-991c-c9b42231a037",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b881f984-3cf2-4c41-b1b5-77513a1d96be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c9a0b0-2907-4e96-991d-9ae5d7d8d7fb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f96fbb15-f392-4e79-bf07-1a50c65fc4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71539fba-23f9-4f81-9754-18ed9bb14ec8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deabcf1a-bcd1-461e-9601-6cd940c612b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "befb6468-ba98-442c-9667-ad44d2148670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0faf75f6-960b-4953-b6b7-191de757ee3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98cda918-ace1-40fe-8322-8b406c831a90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee16af3-db9a-4e63-806a-ec012450dbf8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1710cb1e-7592-4d8e-af3a-13359d9ecdc4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb36dcd3-f474-43e5-b3b1-f570d153b0f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9573a453-e24e-4cba-af9f-4b79731c2d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "334b63c5-22d6-4376-af0f-17fc89958ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68350d1b-da5d-431a-a246-7fe91c0feaf3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fd3b6b-d4b0-46ce-a175-6bdcb45816e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f77bbf93-eb53-4989-93d1-e713d7121837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0987fca-b637-4804-8356-56b2403370e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "843546ec-b675-46f0-81bb-c05a398a9afb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f5b748-1913-42f4-99db-85aa285a3d4e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4f95ff-6ca0-47c2-bdb4-220866e70626",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0bd7e67-eaa8-4da0-b7ce-bb9f0a655ad0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15120afe-9045-45a5-b732-7f928f3757f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add82230-daca-4611-95aa-e01ea8483a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf100d56-b7c2-4141-a134-1ea18f4bb375",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0065b1d-c77b-4ca5-9d54-157f48aa8734",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5635a3ec-a2d4-4df9-a723-7eba1e694f3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3146fc-5270-4e17-9f25-36fc5c1a4a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "753a2316-1a87-451b-9c39-e933e21b84ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74f0ff0e-b07c-4a46-9580-2982935d5a9c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bedea5f7-fd78-4974-b360-e0a19e35151e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed1f8c0b-f100-4cf2-bf47-970bd6fc3ed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e47ae4e5-a2c0-401c-85b4-bfdf687f21de",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0916a048-9ca1-4f0b-bdf7-fffbf3bd8e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e26b28-477e-4434-ac05-06d4e6818357",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60769a14-19fd-493f-927e-d39018177513",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "842d1928-10b7-4cbe-b558-3c6ffc192d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1b0737-9996-4d5a-8d51-ebb6ca33a78b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d33add-df03-491c-9ff8-9626fdda03d7"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4045c6f3-7589-4809-a7dd-64b9b0f58362",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db5e8744-5e1b-4d7f-a212-e6726d1aaf96"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8d30e49-7413-44b8-a13e-61bf9c47238f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe6299db-85db-43f1-b2c2-a38b8c6b55b6"
                    }
                  }
                ]
              },
              {
                "id": "0ae49b65-497a-435a-b912-896e2ee6c34d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "89c41a29-8de3-4738-9995-9e93d7d249d5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a9cf98-bbce-4755-98cf-60414d745094",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e37b0fb5-001c-47d5-bd87-d6a8ba1613c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1931ac7-d49c-40ee-aa6d-723a16a819e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7ab65f7f-21c9-458a-834b-7445a03a2170"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4459e6cb-097e-46ee-bfbe-9a29224d91d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d031d57e-884b-4871-84c1-2c297d896d68"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "78ba0b4c-8d52-49ce-91d5-bb7901238337",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "78431275-9c1c-4bb9-aff7-1f17760ad321"
                    }
                  }
                ]
              },
              {
                "id": "74b1f73c-4d62-433b-8df0-530b81ca1e29",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "63892fc4-6c3e-4e5e-9d85-bc78a09426e5",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d43786c-df18-40da-9dfe-5ae400dc4e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f579fef4-6ec0-4949-bea1-e77648f7f6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a656d9ee-58d0-4639-94ff-cb7f3f81f930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0d40dca-d857-425d-88f0-31b833b4a2f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "52e4d800-f38d-4640-989e-80b7106502b9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5f612bad-da5d-4580-9a70-5df74117a1d5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20bd5f23-19d4-48ab-9ab8-315c03fbc241",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d24218a1-8843-4297-af59-0b752630dd6b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f319fd66-b85b-46e2-a0a9-70790965a3df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67e5547f-dbee-4952-aaba-9fba070e5579"
                    }
                  }
                ]
              },
              {
                "id": "d7e07554-4294-4e9b-9458-63eb997437f4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "97add80a-3f1b-436d-8050-6a3fb787dcbd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4fd541d4-131d-4a8b-bf07-7c510877f7ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "071f35a2-8334-404d-ba11-0e21b7fa1320",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "25ae5a2a-006e-4aa9-9d29-c8e001eb4d66"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e626c0bf-e649-4a02-bfe8-f02f5e3932e6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1732fe56-3306-4a5a-a634-0df34c0f3217"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b02352a-ede8-43c7-a0cc-f3e781605be9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da360d18-4b42-499f-8e41-06b8058d22e8"
            }
          }
        ]
      },
      {
        "id": "61dcb8f1-c134-45ad-8f76-64e0fd29942e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4026e506-7680-4180-9db7-d2751729ad3c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6c7ac02f-9e85-4f2e-a416-cedc916c1c58",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d6b2f539-3615-4094-bf47-084696e20668",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f961a19-c733-45bb-94f0-edb93f5cfe27",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "01c840ee-6010-4001-ad94-f472229948f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1ad336-d333-4c9c-9b63-504da507f486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3a00896b-97ee-4fc3-ac2f-a38836b21bb6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3a77790-171b-4842-b436-0fb24c6a7163",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38bc070b-4fa1-4bb9-8530-3a2f36c72193"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71cd218c-217e-4fb2-b557-1489b69f3291",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "86819e62-73fe-48dd-b283-5b3a34f41385"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5b2b522-719a-407c-8d26-323f0748d204",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "63dc1096-8a74-4a72-8aca-2041e3a6bd59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "000d350d-a146-4859-be51-871458b34432",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d0459ad-98ae-4cfc-8589-36af4f1b7fe5"
            }
          }
        ]
      },
      {
        "id": "71deb993-120b-4c9a-8c07-223050f798b1",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "afc30f1d-5572-4ddc-b9aa-3ca010f2e559",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0757cedd-e6d5-4967-957e-327362f2cc26",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb703196-542e-482d-a4ef-2ffaa068e105",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd2318fa-0bc9-4253-89ae-1634b7e8d7c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75c3e150-5849-401e-a98a-20cfb566c357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3480d85a-ad6d-4279-89ae-2ecaebb8a14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04e6fa07-197c-4c5d-973c-4b2f1b7de5f7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "15b4367a-8cbb-4de2-91b0-1d9a37760026",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "491855e5-df25-4f93-87bd-667bf893d806"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9c970ad-292a-4f82-9519-94936c9c2256",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf3ce283-0c3e-4ca7-8b90-44095d7d9c92"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01bdf32a-01d3-4b04-804b-476ec355ce0a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "24778a14-9ac9-4476-8328-9af73284eed7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "412199a3-40a7-43ac-b3fe-3f0ebcf6f928",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8221f6ed-af2a-4b02-9d4b-744ac89f0e75"
            }
          }
        ]
      },
      {
        "id": "a2682ef7-3173-4e83-a1eb-29b7ac68e638",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "078ba7ed-8068-447d-9d31-da73485eefbf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e9034fe1-1493-45aa-b551-4f99723c665b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d6438817-a017-404e-8e4e-b502218d6b2f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3897cdc-19bc-47ea-8c19-2936a8cecaca",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7da19197-8758-4b40-833f-35e3fac396f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ce1bef-2e66-473d-a51d-fcfa7a09ae8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "332c4d93-26a6-4794-9646-cf2af93c4f18"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2340f80a-84de-458c-839b-f7fcf2039528",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8afd13ee-81b4-41c3-a855-fd230b29fab0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f3f2a65-5c93-4fcc-a674-a88b4d665959",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "032af9d3-7aad-4ce7-b01e-2b51dae5bf8d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e626c94e-7d3e-49e6-882d-a5e687fd1f6d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "525cf089-94c1-49f7-b888-ca320a8380cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d34cb0fc-5fa9-4958-8252-d8a6bc2fffc7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1fcfa2e-e0eb-4115-b610-327c56487f32"
            }
          }
        ]
      },
      {
        "id": "8fd33688-f805-4c72-80db-54ba7b3ff2e6",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca0a5f90-a8e0-4ad9-8920-7d164e409edb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f979e59-3987-407a-9d2f-380a3d87fdbb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f52e6a5d-4898-4a45-ba3f-a37caaac693e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "31dfc9ac-a931-4e40-bd76-c71f9aee01ad",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "11b706e2-9068-4a09-a188-f5059bbb3bc6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 6
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 360.524647887324,
      "responseMin": 7,
      "responseMax": 9717,
      "responseSd": 1128.565546636283,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1696984408307,
      "completed": 1696984526395
    },
    "executions": [
      {
        "id": "adbd5f81-4aae-4e2f-9726-662050d1c318",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "7f16608f-0528-440f-be03-994ae0abc884",
          "httpRequestId": "fb89371f-c507-474f-9411-48332bd480d3"
        },
        "item": {
          "id": "adbd5f81-4aae-4e2f-9726-662050d1c318",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "223b2e29-3fd2-49eb-9160-184d959f3cd1",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 0
        }
      },
      {
        "id": "8c5eee79-1e6f-463f-a7ec-6c030d1b24f9",
        "cursor": {
          "ref": "835b4022-b3a6-40d5-8ced-d70994864f61",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "e3cad114-04e2-47d8-b840-c7d2cba8264c"
        },
        "item": {
          "id": "8c5eee79-1e6f-463f-a7ec-6c030d1b24f9",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "15392ae5-eb77-4fd3-8a04-65121d98a91b",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "245a2bef-9921-4fd7-b1d1-7adb40dc881b",
        "cursor": {
          "ref": "f7f11edc-7328-4331-b5ca-da7c7d02163a",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0654e3ff-7c35-4dac-a689-ac366afb9ef5"
        },
        "item": {
          "id": "245a2bef-9921-4fd7-b1d1-7adb40dc881b",
          "name": "did_json"
        },
        "response": {
          "id": "da2701fd-6ee0-4b9c-8837-da4359b514e7",
          "status": "OK",
          "code": 200,
          "responseTime": 1508,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc45c1c-d31b-4209-959e-971c916ef2c3",
        "cursor": {
          "ref": "f96785c9-1e94-4c05-b3fa-9d7164d3c20c",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "aa32f3e1-8be0-4137-8fbd-8e3f4db13e0f"
        },
        "item": {
          "id": "8fc45c1c-d31b-4209-959e-971c916ef2c3",
          "name": "did:invalid"
        },
        "response": {
          "id": "60d26a76-1beb-4a4b-b112-ba550b9fce2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc45c1c-d31b-4209-959e-971c916ef2c3",
        "cursor": {
          "ref": "f96785c9-1e94-4c05-b3fa-9d7164d3c20c",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "aa32f3e1-8be0-4137-8fbd-8e3f4db13e0f"
        },
        "item": {
          "id": "8fc45c1c-d31b-4209-959e-971c916ef2c3",
          "name": "did:invalid"
        },
        "response": {
          "id": "60d26a76-1beb-4a4b-b112-ba550b9fce2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e402d1e-a69f-4a82-999a-ab158eb5239a",
        "cursor": {
          "ref": "c4780564-3db3-4b17-bbf1-ecf994959dd2",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8f95df04-c58e-48d4-a06a-3b1689dbde1c"
        },
        "item": {
          "id": "8e402d1e-a69f-4a82-999a-ab158eb5239a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1af1e78d-ea8f-4eb7-a9ca-c9a82178ce2c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 430,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05c142a1-ced2-4d88-9f7f-edb49d466387",
        "cursor": {
          "ref": "bb9698c7-073a-485c-8ccf-3fecb7b82eea",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d09a33ab-c0b7-462e-8e48-b607557343fe"
        },
        "item": {
          "id": "05c142a1-ced2-4d88-9f7f-edb49d466387",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f70bdef6-7258-42c5-b24e-e10d8893a045",
          "status": "Not Found",
          "code": 404,
          "responseTime": 248,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0234e699-542b-41d1-9e01-93d440d37abf",
        "cursor": {
          "ref": "d6ac1d41-a17a-4536-a71d-71f1718f71eb",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e1092b5e-549f-449c-a6ed-cacce0c460d1"
        },
        "item": {
          "id": "0234e699-542b-41d1-9e01-93d440d37abf",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "342de650-879a-4f4c-badf-3112ae66e991",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b8c579-abc6-4fbc-a605-bbb08d76abd2",
        "cursor": {
          "ref": "b8a3e8ae-1f04-44b4-8020-7826cfcadb91",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "33d0fcfe-aaa3-47f1-aa8d-7aed99eb5634"
        },
        "item": {
          "id": "c0b8c579-abc6-4fbc-a605-bbb08d76abd2",
          "name": "identifiers"
        },
        "response": {
          "id": "659a0793-1b11-4930-9035-c63ee5585f45",
          "status": "OK",
          "code": 200,
          "responseTime": 1524,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66c71bb-a275-4f13-87f5-796655ccc556",
        "cursor": {
          "ref": "50da127d-03d3-41d8-a696-dd6520f4cc0c",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "280d98a7-cfc9-4857-9034-68e01bae8a26"
        },
        "item": {
          "id": "a66c71bb-a275-4f13-87f5-796655ccc556",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "0f1f0871-28f5-4402-b18f-54d6e27d50d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ebaccb1-b4b7-40ba-8cdb-24dc8ed8b23e",
        "cursor": {
          "ref": "55110352-932d-43e6-a589-1a0bd2ea569f",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dca0cc9e-9f7b-42d4-8c83-b95f8edc36b3"
        },
        "item": {
          "id": "9ebaccb1-b4b7-40ba-8cdb-24dc8ed8b23e",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "49241b57-eac6-447d-b8cc-32db1e1a6f21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73eb663a-081c-4d31-ad0a-3af42cc18828",
        "cursor": {
          "ref": "a93de192-fcb2-47ae-9fbf-093f786e82c2",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a5f717fa-9bf0-429d-85c2-c5757e59bdc8"
        },
        "item": {
          "id": "73eb663a-081c-4d31-ad0a-3af42cc18828",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "93a9db6a-ec62-4b95-a8c3-740c0150362d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95f0a7f1-92df-434a-ad37-77f774e91e3f",
        "cursor": {
          "ref": "759a639a-5a36-4611-9d68-ddde5d66c953",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "c799f418-fc86-46cf-9a52-63e958cd35ed"
        },
        "item": {
          "id": "95f0a7f1-92df-434a-ad37-77f774e91e3f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "54d39337-8af0-4b0c-be78-2939fdfb9395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1445c59-70da-4da1-9ff4-4f000cae95a8",
        "cursor": {
          "ref": "10b9598b-225c-428e-ae81-c87c2ade3fd1",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a8a80198-0f32-4b5f-a9ab-809a9905236d"
        },
        "item": {
          "id": "d1445c59-70da-4da1-9ff4-4f000cae95a8",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7f23b4bb-6cb0-4d9f-87d2-e1c878a52ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a85471-6ed1-4275-b754-b81f2950e36a",
        "cursor": {
          "ref": "ab4e7b18-7d4b-49f9-a0d5-0348c0271357",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "2f25a312-f52c-4e43-9b30-311563d88f3f"
        },
        "item": {
          "id": "b4a85471-6ed1-4275-b754-b81f2950e36a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9cb39f7d-db76-4023-a45f-d60efcccfde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c096a53-c37d-44db-800e-b844ba04fde0",
        "cursor": {
          "ref": "bb877c01-c549-412f-9a95-b73880fbb5cb",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "71b5bde5-e51b-4f58-8b36-b0383dd51e6f"
        },
        "item": {
          "id": "9c096a53-c37d-44db-800e-b844ba04fde0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "25a796a6-1d9a-4d67-9863-9c88e7d96dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4befe90-9efb-432c-9e0a-246569f599ab",
        "cursor": {
          "ref": "d1d98e3e-fe36-46ee-9ac0-afbb4a7bfc96",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2a8b032c-0252-49c1-a14a-e071296ac5ee"
        },
        "item": {
          "id": "e4befe90-9efb-432c-9e0a-246569f599ab",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d2f79efd-3d2d-45ea-901e-85dfde07e7b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c899b8c-655f-4d8b-aa97-15f1881f9bd7",
        "cursor": {
          "ref": "9173ffe8-3dc5-4110-bc48-514be190677b",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ff38f735-ae9f-49e9-bad1-dc9c08261187"
        },
        "item": {
          "id": "1c899b8c-655f-4d8b-aa97-15f1881f9bd7",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5b1038c6-a5d1-44ac-a9c4-d71caeeb26df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4641570e-49e2-4adf-b63a-22155bd47695",
        "cursor": {
          "ref": "a4b59fb5-4fc9-474f-a330-307677dc023a",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e405861e-5b47-43c0-ad3e-5980981ccdca"
        },
        "item": {
          "id": "4641570e-49e2-4adf-b63a-22155bd47695",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "1020e19b-5692-46b3-90e7-10b106851c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2670b9-1408-46d9-961a-49128c223cbd",
        "cursor": {
          "ref": "c2ec3f6d-e6d0-451b-b7ba-ec108109f633",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "615d51bc-fc16-42bb-9e7b-3a0f642c0d72"
        },
        "item": {
          "id": "5d2670b9-1408-46d9-961a-49128c223cbd",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "95b44bd3-1a3c-4dc5-9a71-fb83a028257a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf6f448-d16e-4e55-a791-44da195986b0",
        "cursor": {
          "ref": "4dbf3ef7-e373-4917-958c-2d0dcefd0730",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "593d002b-8f11-494f-a97c-c2ebee2c4b0d"
        },
        "item": {
          "id": "baf6f448-d16e-4e55-a791-44da195986b0",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5e7545e0-a662-4678-aeb0-380f43607ec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff64604-ac49-4eb4-b5f3-c5a7802850be",
        "cursor": {
          "ref": "de7d9515-b445-4430-a3c4-20bfc1d917bc",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8af97ec3-4722-4788-b95d-372994199f73"
        },
        "item": {
          "id": "6ff64604-ac49-4eb4-b5f3-c5a7802850be",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "d048a347-792f-41fc-ad71-4410576fbd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d7a1a2-9a59-48d9-af0a-2c7934a6639c",
        "cursor": {
          "ref": "f4394a5e-6daa-49b6-a47f-0f33f21e1e0e",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "26a9f0db-e12c-48be-aea7-af6d880dea9c"
        },
        "item": {
          "id": "36d7a1a2-9a59-48d9-af0a-2c7934a6639c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "18475fb5-8960-4497-a72f-666dc3822938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3b9be0-ec81-4a1d-b04e-9e9b0b72bdbb",
        "cursor": {
          "ref": "a407f831-8d4e-49ec-aa0d-e18791c10e30",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0096e7ce-cba9-4763-97c8-a080f885d316"
        },
        "item": {
          "id": "be3b9be0-ec81-4a1d-b04e-9e9b0b72bdbb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "1aa8db92-0119-4d0c-9de9-834d1ecfb027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cba9598-4598-4c91-a3d8-fbc9cabc46d4",
        "cursor": {
          "ref": "d2f01b7f-bd40-4d58-81db-0e05968b899b",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0a472be9-d92e-42f8-9e7b-ddf9056e121a"
        },
        "item": {
          "id": "9cba9598-4598-4c91-a3d8-fbc9cabc46d4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "90cf4e3d-0b4e-46d7-935f-10ccf2a35db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "392093a0-f56a-4751-bf49-31488eb0bc87",
        "cursor": {
          "ref": "e90bc8a9-4c11-46fe-a61a-72b6ef1b67c8",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "59c52d6a-53b4-41a4-a35d-3317c96925de"
        },
        "item": {
          "id": "392093a0-f56a-4751-bf49-31488eb0bc87",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "539178f6-832c-4db0-a093-24054fa9c43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ac74e2a-34b9-4720-83a6-a4d39e7452ce",
        "cursor": {
          "ref": "6b7171bc-61e0-44cc-a6e1-1595fc72b458",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "da42d895-bdc0-4046-9d75-442e7f2d6cf6"
        },
        "item": {
          "id": "5ac74e2a-34b9-4720-83a6-a4d39e7452ce",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "aeb6838d-bd27-4f00-a353-00c526e431cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deecc8eb-5a7d-432d-9bd6-b6e6ecf30ff0",
        "cursor": {
          "ref": "42b8efc1-0ce2-4484-968e-0ad120c91010",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f72227e8-07c4-404a-96b5-0df5376387cf"
        },
        "item": {
          "id": "deecc8eb-5a7d-432d-9bd6-b6e6ecf30ff0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d30a7337-e6e7-46ed-b174-e0fd1fa5c64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 296,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85eb0672-df2a-403c-ac8f-928be0260f55",
        "cursor": {
          "ref": "daaca2df-d693-4329-af46-e8fdd950d65d",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e563c766-d0d8-43aa-8dd8-cbaeeb0850c9"
        },
        "item": {
          "id": "85eb0672-df2a-403c-ac8f-928be0260f55",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8cff5808-9f0e-4e77-86db-0ec1818c19fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353db306-14ab-4afd-8820-7759089b9314",
        "cursor": {
          "ref": "9279555b-b636-4fcd-b0f1-ea975853026b",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "d43fd0c8-eb7e-4eb7-9a14-c1fb46142e6e"
        },
        "item": {
          "id": "353db306-14ab-4afd-8820-7759089b9314",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0f224f02-a7b2-4211-92c4-ec357c4ec107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264e364a-8756-41d3-a818-71787d0f6641",
        "cursor": {
          "ref": "a3437808-931b-4861-ab33-f9b0e622dff0",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "52f5f80c-f1d6-4aa3-8304-811fa0aac720"
        },
        "item": {
          "id": "264e364a-8756-41d3-a818-71787d0f6641",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d2219250-9263-4739-8d22-3b3dc19d2e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9a1fade-66d2-43ad-9e71-75d4256ebab7",
        "cursor": {
          "ref": "1e1623d5-db4e-4409-b0e4-b29a8072be36",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "17caf85a-180a-44a8-a21a-9395c1f46c02"
        },
        "item": {
          "id": "d9a1fade-66d2-43ad-9e71-75d4256ebab7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b1256e4d-7f84-43bc-9c71-5dc37bfcbfe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce09846d-8546-460f-98c0-1923f6179d10",
        "cursor": {
          "ref": "d8aa9204-44d6-4b04-8802-9fc0838c8c2e",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5f97308b-cb66-446b-b63c-7a24fb314fc3"
        },
        "item": {
          "id": "ce09846d-8546-460f-98c0-1923f6179d10",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6f7fbb74-8ab7-486d-857b-102d73ff370e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d50cbc0-6e5c-418b-ad2f-4383d500648e",
        "cursor": {
          "ref": "04104c97-c4e9-4caf-9529-0168d05f7afe",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "38bfec7f-55d2-4c27-9cf6-bd501f9f298f"
        },
        "item": {
          "id": "3d50cbc0-6e5c-418b-ad2f-4383d500648e",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4f2e726b-bf3e-4d6c-b265-7f170230fd40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2955eb5-513e-45a1-9391-4ddfb36813c2",
        "cursor": {
          "ref": "7d83f80a-f315-4cc5-8d86-278d6d62ef25",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "853bb911-d73e-4e33-aa16-7dffd0084f99"
        },
        "item": {
          "id": "a2955eb5-513e-45a1-9391-4ddfb36813c2",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "1d338f0e-3042-487a-b71f-f8071a0ee96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776b3628-4c20-4422-ae20-8d61b53e8335",
        "cursor": {
          "ref": "398fd1da-7466-48f3-9938-1ba1ceb0d8ca",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "384ef35f-a8a7-465c-949e-ad74c7efcd08"
        },
        "item": {
          "id": "776b3628-4c20-4422-ae20-8d61b53e8335",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ee339f88-5a08-4937-88f4-5ed68248d99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e6e8be3-72f9-4be2-8418-39442fecbd76",
        "cursor": {
          "ref": "2f0eb9d0-241a-449f-86a5-86c33737fc62",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c27086aa-9de1-4109-9dee-29d4fa020bc5"
        },
        "item": {
          "id": "4e6e8be3-72f9-4be2-8418-39442fecbd76",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1dbf2f94-591a-4c2f-b80c-5bedc27de768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9df09edf-38ba-4cbe-9ff6-b7faa3e55453",
        "cursor": {
          "ref": "1417c705-d842-4f04-bab8-8fad7e180d9d",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "0e416a2a-36a2-4a02-b690-007d70c26cd9"
        },
        "item": {
          "id": "9df09edf-38ba-4cbe-9ff6-b7faa3e55453",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5507df98-0a0e-4359-abbb-23da95451ba9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63533f31-0095-47d0-a1c1-554e3aee9627",
        "cursor": {
          "ref": "bc98dace-5ac0-47df-a927-231716119c20",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "32399b6e-38a7-44c1-8c8e-083e7adbc0ee"
        },
        "item": {
          "id": "63533f31-0095-47d0-a1c1-554e3aee9627",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "cf6c705d-b165-4208-9680-d2279c002d61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec0d5ccc-3877-4a5b-8a2f-5eb3b13bde6a",
        "cursor": {
          "ref": "b39ec3a6-4dde-4d97-b974-cf3e8fc374ec",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e5af3462-bec7-4485-888f-64236b24ae15"
        },
        "item": {
          "id": "ec0d5ccc-3877-4a5b-8a2f-5eb3b13bde6a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "4b6c2949-b19b-4dad-957b-c2e5b824e886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62a85895-3029-416b-92a7-b86f9c216f0d",
        "cursor": {
          "ref": "36495ddc-19e4-42d6-a0e3-69250791c8e0",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "db578059-80ad-40f6-8603-0688ef13d879"
        },
        "item": {
          "id": "62a85895-3029-416b-92a7-b86f9c216f0d",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7ac81a4e-440d-40bd-9b27-d2aece207dab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3a31a5d-6a3b-4b1b-92c4-aa6a453ced4a",
        "cursor": {
          "ref": "9856bcdf-6f47-4d2c-9d6e-a973cfd5d003",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "05e6fdee-81dd-4cae-9ef2-167e74d2bb2e"
        },
        "item": {
          "id": "c3a31a5d-6a3b-4b1b-92c4-aa6a453ced4a",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "19edf514-6055-4015-aa9e-221122686dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d491cc2c-04b8-44f6-962e-fd3530733110",
        "cursor": {
          "ref": "3c70fcf5-d157-4294-854b-03fe8de2543d",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "499970c3-2805-4bf5-a67b-eb02c8138adb"
        },
        "item": {
          "id": "d491cc2c-04b8-44f6-962e-fd3530733110",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7708048e-a347-4c90-9e06-3a57c77e95d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5817bc6-84ce-428e-a5be-89a27ef94788",
        "cursor": {
          "ref": "e6ba7fdb-b3cf-46f9-b736-59c8a62fef27",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e06a0985-942f-4b5f-b024-bb04a96d50fb"
        },
        "item": {
          "id": "b5817bc6-84ce-428e-a5be-89a27ef94788",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5266aa96-7335-4656-ba65-d17b9f138d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4494d58-af89-46d3-9fec-3bec8bfc8616",
        "cursor": {
          "ref": "9186b107-a1f1-4843-a997-538cae926426",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "c95746a5-cc0d-4a1f-a9b6-b6afc2e388c4"
        },
        "item": {
          "id": "f4494d58-af89-46d3-9fec-3bec8bfc8616",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ab7ef52c-4046-4409-96dc-f3fa69df87fb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 637,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26205223-4583-45b2-8d48-6d51429cc1ca",
        "cursor": {
          "ref": "c688e02e-efe0-418a-aea3-6e8812a13483",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "deb3537c-f69f-487a-932a-40453b39ed78"
        },
        "item": {
          "id": "26205223-4583-45b2-8d48-6d51429cc1ca",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "a32eb892-6172-44a2-b216-892917cb3d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca637c4b-8e4f-41eb-b669-73958ffcc979",
        "cursor": {
          "ref": "7dcb80d9-7585-4a89-b9be-3d7cbfe6318f",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "eb4105e0-1587-42b6-bd50-6befe411e6af"
        },
        "item": {
          "id": "ca637c4b-8e4f-41eb-b669-73958ffcc979",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "0ae7343f-d455-4022-a7e2-0ca6638856dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96ff3919-6c8e-46fc-a450-f657d51d149f",
        "cursor": {
          "ref": "99173010-3884-4415-b9cc-8936c225c001",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "2736f3cc-0872-4fc3-baf9-eb6c024a8e34"
        },
        "item": {
          "id": "96ff3919-6c8e-46fc-a450-f657d51d149f",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "917fc301-a848-4b9a-9b3e-0b3a5cd5ce2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6769ad1b-8927-44f5-b619-4f9ea219ff12",
        "cursor": {
          "ref": "f40fbfd7-96f2-4384-bb01-6af3c35084de",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "eb3fa932-4000-4441-8dca-c8c55c122a16"
        },
        "item": {
          "id": "6769ad1b-8927-44f5-b619-4f9ea219ff12",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b80b0436-f3c4-4d2e-9b0f-b7153c10296d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42cb120-5484-43ad-96fc-f1828bb9065c",
        "cursor": {
          "ref": "3125478e-97b5-48b6-ab78-cec621ea0a32",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4d0d0cfe-37fb-4d09-a81c-4405aeccf6b9"
        },
        "item": {
          "id": "b42cb120-5484-43ad-96fc-f1828bb9065c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "6344d0de-ae68-4c47-8c2c-42bf8d1117f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600a97e4-a89e-45f6-b054-190d09092748",
        "cursor": {
          "ref": "7302ce8e-837d-4bf7-a4ef-c427bbb7b484",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "688ade6f-2939-4e7a-8363-3f4bbcc82063"
        },
        "item": {
          "id": "600a97e4-a89e-45f6-b054-190d09092748",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "60c18cf7-774a-4e25-a034-6aa945bdb1d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0261679e-2101-40c3-a255-926c96e71beb",
        "cursor": {
          "ref": "7ad10c58-875d-47ed-be4b-e977a467ecf8",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c8d01001-0a1b-4d5b-bd2c-af0949621056"
        },
        "item": {
          "id": "0261679e-2101-40c3-a255-926c96e71beb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "473a3de9-f340-43fe-98c0-aaa05ae7eec2",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 622,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbd2dd17-7eab-40ee-b402-f113a9bb6902",
        "cursor": {
          "ref": "46233dfa-9a91-4781-9914-1c394d295ebb",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ca3bcb96-7b99-4417-bb5d-31ab8c8be85d"
        },
        "item": {
          "id": "dbd2dd17-7eab-40ee-b402-f113a9bb6902",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b52e4823-4b46-453e-b8dd-8bbb0792e951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b981192-6ebc-4d45-a769-971b4f28973c",
        "cursor": {
          "ref": "da28b619-5741-4674-95a1-dd99e2fcb345",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a80a8e55-033c-43c8-816e-b1dc09409c46"
        },
        "item": {
          "id": "4b981192-6ebc-4d45-a769-971b4f28973c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "05116c8b-4789-4bf5-8bae-0d2ed2820399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd324de-839a-4aa0-95b2-50ba778921d1",
        "cursor": {
          "ref": "ed0cf361-0cc5-4f5f-b6fe-e6c1543d5fd0",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "3ca704df-a414-43ac-ae23-928210747264"
        },
        "item": {
          "id": "2cd324de-839a-4aa0-95b2-50ba778921d1",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "fb1a98ac-7101-4434-a373-65cb12ea559e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 575
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f01cc8d-ed17-4ad8-8cb9-65cea07dccc4",
        "cursor": {
          "ref": "892a2b5b-6785-4926-afcb-d709a88862ec",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5c39a999-33f5-4173-879c-854841d027d2"
        },
        "item": {
          "id": "8f01cc8d-ed17-4ad8-8cb9-65cea07dccc4",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2a3353f1-3cae-417c-90b6-b3077d057942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55e38e84-d533-4b5b-8131-aa6d1a5b9af8",
        "cursor": {
          "ref": "1b76a956-78ad-47a8-b18e-73d63697406d",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d0ba7864-04ee-48ca-a8ef-8ba31df800e2"
        },
        "item": {
          "id": "55e38e84-d533-4b5b-8131-aa6d1a5b9af8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "05aa63e8-d61d-45a3-b755-1275a2064edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb169706-8882-4899-ab0e-c90862ef8ef1",
        "cursor": {
          "ref": "e701da36-c1d6-4517-b693-b5558b5687e6",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "120bf487-e936-48c2-a2ad-e8b68c1cf6a0"
        },
        "item": {
          "id": "cb169706-8882-4899-ab0e-c90862ef8ef1",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "493fca3d-ae5b-496b-8eb5-b58dbf4add03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "097ed624-e8cf-43c0-b504-599193c1db38",
        "cursor": {
          "ref": "2008ccbf-58e2-45e8-a5ae-d95c8602420f",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b1c3bcc0-82c6-41fb-97e8-64de4dffba07"
        },
        "item": {
          "id": "097ed624-e8cf-43c0-b504-599193c1db38",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "8450ef73-6e14-462e-aaf7-4de794f04bd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 625
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8b5e47-1f4b-476c-a441-6dfb5bb65d6e",
        "cursor": {
          "ref": "37f88b4e-ec7a-4792-bce0-d59b282869dc",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "76c01724-1ea3-45ea-bce0-ab3d437aa5bf"
        },
        "item": {
          "id": "7a8b5e47-1f4b-476c-a441-6dfb5bb65d6e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b4940fea-eeec-4341-a14b-cf2757fa223e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66855244-28f6-4453-beb3-5e7ce4acbddc",
        "cursor": {
          "ref": "47cc588c-43c2-46bb-a689-6b357346e9ce",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d860ba4f-a6ee-4530-93cc-f6e14a10f5d3"
        },
        "item": {
          "id": "66855244-28f6-4453-beb3-5e7ce4acbddc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e0e70dfb-a14f-4de8-814b-ef0daa13757b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64a0369-7eed-4297-978a-f0378b8f7029",
        "cursor": {
          "ref": "f9fea5a5-3a4e-44ff-8b5b-9fa6a07a5657",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "81396988-0e2a-47e0-a452-51d600708593"
        },
        "item": {
          "id": "c64a0369-7eed-4297-978a-f0378b8f7029",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7ac3029e-c8c1-4de1-b16c-50554b1e6934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c19b96-4a02-4d07-853b-df11c28b1678",
        "cursor": {
          "ref": "6ded630e-c51f-40a5-8351-be207591126c",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f28ea1d8-72ea-4940-b83c-94887acff712"
        },
        "item": {
          "id": "33c19b96-4a02-4d07-853b-df11c28b1678",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "95614d6b-557b-44a3-a4b0-67c49434e0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39ab9de7-e4f3-48be-a2ee-553b608b1c9b",
        "cursor": {
          "ref": "44939759-7572-43d7-8945-599626f7c663",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a071fe53-ca84-40c4-9939-d964851c0a50"
        },
        "item": {
          "id": "39ab9de7-e4f3-48be-a2ee-553b608b1c9b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a44bef57-438c-4720-bb14-cbe545e7312d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97e92837-818f-4b60-8924-be3a6035733a",
        "cursor": {
          "ref": "9b7c32dc-76e0-47bc-a06f-87bbfa95ab23",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "635dbbd9-d803-479f-801c-f1a497ba45b5"
        },
        "item": {
          "id": "97e92837-818f-4b60-8924-be3a6035733a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "76f60f80-d437-44b5-a7e3-4d9702fe1bab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c18bae8-6925-4f53-b0d4-4bd5083a56d3",
        "cursor": {
          "ref": "2b76ab4b-60f4-4c8e-8991-a9aa07a5eedd",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d2e5186a-e368-47ce-8b26-33a889b1ce2a"
        },
        "item": {
          "id": "3c18bae8-6925-4f53-b0d4-4bd5083a56d3",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "96b3f3c9-c45d-47df-b088-07f65838c9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67770118-814c-4220-93e3-45a9a8c58707",
        "cursor": {
          "ref": "215da748-16a2-47bf-991a-35820ba61b2c",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "7f4ee131-51a7-47b3-a7ec-490f0d80e228"
        },
        "item": {
          "id": "67770118-814c-4220-93e3-45a9a8c58707",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "bb5706d1-2f2e-4df4-a454-fe09c98b31f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4bb2e9d-6316-4f6c-b6f6-673436c94214",
        "cursor": {
          "ref": "e565cd5c-8013-4e1f-8d1c-cfd1449074ca",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "23edbafc-d630-4110-8149-28487ca3e728"
        },
        "item": {
          "id": "b4bb2e9d-6316-4f6c-b6f6-673436c94214",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "9f487aac-4c7b-4b0c-97b1-37817b058a72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b65b7ca3-20ba-48dc-a883-7cee7d943aee",
        "cursor": {
          "ref": "3292a376-a518-4a75-9d0d-0fafd8d27ae7",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a94c0d39-8703-41fb-a7d7-eac941915033"
        },
        "item": {
          "id": "b65b7ca3-20ba-48dc-a883-7cee7d943aee",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "573cd7c6-0a43-4cfa-bc82-871520920251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9d721c-cbe5-443c-8b62-abddafe030bb",
        "cursor": {
          "ref": "094621bf-8d7a-4f84-89b0-75aa90ce3e71",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2832aaa0-784e-45d3-a8fc-1170a232a557"
        },
        "item": {
          "id": "1e9d721c-cbe5-443c-8b62-abddafe030bb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "31bd455b-09d2-4c81-8af0-7ed926b9caca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91214201-e263-47c5-aa9b-771d2e6487eb",
        "cursor": {
          "ref": "23c6c4bb-8df6-4783-be5a-7f98be78d013",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "c79b3361-03b3-41f6-8d44-9fe4dde2543b"
        },
        "item": {
          "id": "91214201-e263-47c5-aa9b-771d2e6487eb",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d5e75b17-a0fb-42b9-8d59-19dea1d8f1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda0e841-7388-421e-8d7c-624c27765627",
        "cursor": {
          "ref": "03b06b70-67fd-445b-9307-0fb921ffe3cc",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3cd26582-c9c6-4880-aec7-067cba981745"
        },
        "item": {
          "id": "eda0e841-7388-421e-8d7c-624c27765627",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d1c8e867-042d-4927-b0e7-ccbf4779e44d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d85f44-2c8a-4a54-9dbe-aa2ad93d1dde",
        "cursor": {
          "ref": "66520633-6d72-4baa-a43d-26dc207b3aaa",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a97083a1-9f3e-401e-9c5d-da4f7e4f1370"
        },
        "item": {
          "id": "04d85f44-2c8a-4a54-9dbe-aa2ad93d1dde",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1cdd4912-881c-4969-a4cf-f4b9e60f2461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7314a41f-656e-46bc-a68f-87dde6f5ee5c",
        "cursor": {
          "ref": "b2e3f135-35bf-4aeb-998a-dc8ac7d49047",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1af38125-005e-4a9d-868f-34fb9b92c4ce"
        },
        "item": {
          "id": "7314a41f-656e-46bc-a68f-87dde6f5ee5c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "1adcf6ed-4fc3-44b6-843c-a08de93382f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 316,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07be4f78-0abd-4f7c-9b71-d04fbcfc9b4a",
        "cursor": {
          "ref": "5ad60a04-a8c1-4d74-816a-decf2b6f576b",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d94b5385-7eaa-4e02-8b7e-2a8cfcb77c88"
        },
        "item": {
          "id": "07be4f78-0abd-4f7c-9b71-d04fbcfc9b4a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "783d9551-766a-4048-b0e5-e8f7a88c87ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce27f83f-6ed8-4db3-a4d5-68d97f7877ad",
        "cursor": {
          "ref": "d8156357-3cc2-48d9-addf-25fd6512cfb3",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "bdf87313-c392-4af7-8472-7bce5bf4c04c"
        },
        "item": {
          "id": "ce27f83f-6ed8-4db3-a4d5-68d97f7877ad",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "74f7a569-ba92-4706-87d0-6472612a8f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c8651e-cbc6-42eb-bd40-4b843249aaac",
        "cursor": {
          "ref": "2f3c5db8-c925-4f3e-8689-4bd710250fd1",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "eb9d7823-32fe-4b6b-aea8-01ed0a463bfa"
        },
        "item": {
          "id": "35c8651e-cbc6-42eb-bd40-4b843249aaac",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d9e23b36-50a1-4137-a654-548004509e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af32d50c-969f-46a0-93e8-fc04be4a83ab",
        "cursor": {
          "ref": "024cab3c-0f13-4fb9-896e-da0807a27160",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9ebb7f24-3fc5-4357-8324-88c08ac95635"
        },
        "item": {
          "id": "af32d50c-969f-46a0-93e8-fc04be4a83ab",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0f9e6b28-6c65-422a-971c-54ea038693fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ada40a20-18e3-4184-8257-34af9faf57bd",
        "cursor": {
          "ref": "3560e6c2-5e07-4fd3-83e3-b3e903c904e6",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fe21a51e-bbed-48d5-aad9-16889a2036c7"
        },
        "item": {
          "id": "ada40a20-18e3-4184-8257-34af9faf57bd",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "56cb7d18-8ffe-4988-bb42-9fc83c631671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d306da-1589-44f9-853f-c271330ef83f",
        "cursor": {
          "ref": "fefc07ca-9715-4faf-aa91-44d67c3b499a",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b4719ab8-4eb2-4237-bbf8-c35b7ec4c629"
        },
        "item": {
          "id": "d5d306da-1589-44f9-853f-c271330ef83f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fa66885b-b427-4bd0-93c3-618ee4dbe3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e975581-1a38-4493-98dd-a895599ac5ed",
        "cursor": {
          "ref": "5052dfaf-4905-42a3-8c39-ea407a493ad7",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "ccac66b5-a06c-45b4-afbf-439edfd33ad7"
        },
        "item": {
          "id": "4e975581-1a38-4493-98dd-a895599ac5ed",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "085f71da-3ea2-4dae-b07a-06e574b5a209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a93e22-af92-40ee-8e2a-62a39fc00616",
        "cursor": {
          "ref": "e2e97933-c71b-4eb7-9bba-bab94bdb5432",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "48306acb-351e-48ad-9eda-8154987982b8"
        },
        "item": {
          "id": "69a93e22-af92-40ee-8e2a-62a39fc00616",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7d76c2ed-da27-4d8d-a245-febf2d6cfe9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c277615-1c74-447a-873b-a435d029a53b",
        "cursor": {
          "ref": "4331d51d-ff70-49e1-8057-42174afbe838",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "d859ee0a-bab9-4883-82e8-dc7f78fa41fd"
        },
        "item": {
          "id": "1c277615-1c74-447a-873b-a435d029a53b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "44ea37a9-5865-48b9-8960-a2075a56a4d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86cd193-3c7c-4940-87d5-38fb28b23150",
        "cursor": {
          "ref": "b43830c2-eada-424c-958d-ebf3cb3d2c3b",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "4d1eeda5-efe5-4bdd-ad4a-fd1b2524cb3d"
        },
        "item": {
          "id": "c86cd193-3c7c-4940-87d5-38fb28b23150",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "adbcc0e5-3c14-4a3d-9302-226cef3b2a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e118cf-7968-42aa-b8b6-1fb94b10d841",
        "cursor": {
          "ref": "b551936b-068f-45fe-96ef-eb17e513ca56",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ff24cea2-468c-4b85-aa23-a731610e0585"
        },
        "item": {
          "id": "31e118cf-7968-42aa-b8b6-1fb94b10d841",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a0a177eb-3c39-4cb7-807c-1b8cd5f620c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 297,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76ce7310-7a31-42dc-9fc8-e6389d9fdb0f",
        "cursor": {
          "ref": "a593c294-6a11-4d8d-8eec-3d883f83a49f",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "94ae3f5e-9cb6-434a-8d85-5570e2b05e46"
        },
        "item": {
          "id": "76ce7310-7a31-42dc-9fc8-e6389d9fdb0f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0de691de-790a-42bf-89f0-de2cc25de1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 279,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8184d5d2-6a6f-47ee-8fd8-46cf009d9a84",
        "cursor": {
          "ref": "bb745105-5eb4-4666-9b72-e8e4eb173e8d",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "9f2d1c89-33f2-43b3-931f-7aef77ff5677"
        },
        "item": {
          "id": "8184d5d2-6a6f-47ee-8fd8-46cf009d9a84",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "21f0a837-8d05-4f4d-81c3-26ee62aa211d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f852424-a6b8-4dc6-be3c-f315e13577af",
        "cursor": {
          "ref": "67600641-5d87-48ae-907f-578c122ac3ae",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "47a09c5b-0901-43b0-bbc3-a22029236c09"
        },
        "item": {
          "id": "6f852424-a6b8-4dc6-be3c-f315e13577af",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "92f83946-2a7b-4f26-b75f-78e0c7ed5293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4fb649c-c3e7-4300-aff5-d85478b1e193",
        "cursor": {
          "ref": "e6fcad2b-a373-4d3c-92d5-2fbaae65254b",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "55acf73c-7fae-4d8a-b3ba-7220dfccd2b8"
        },
        "item": {
          "id": "b4fb649c-c3e7-4300-aff5-d85478b1e193",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "bb4694fc-6a0b-4c10-ae14-7f29990e2f8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 650
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4d0d7d-dbe4-441e-a2d3-5a7891575957",
        "cursor": {
          "ref": "10d55d8c-8351-4d52-ac10-8938f7a08af8",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "92b8f2c8-1806-45b4-b373-808c09fff853"
        },
        "item": {
          "id": "ef4d0d7d-dbe4-441e-a2d3-5a7891575957",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "be99a86d-7b15-45cb-a350-e8c531db7030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c806b9a8-76da-4d30-9eed-f1caa85ed1be",
        "cursor": {
          "ref": "37bc8fbc-8834-4fe0-900a-b9f6ee191e83",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cc5b39ef-06fb-4a35-a1dd-add8cac148e4"
        },
        "item": {
          "id": "c806b9a8-76da-4d30-9eed-f1caa85ed1be",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "45751742-3b5d-4cbf-a6ae-dc13204363f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d67bdc1-2540-465d-b2cb-973e60490d02",
        "cursor": {
          "ref": "baf1d4ae-3ba7-4d2e-ae2e-b9b8c91d301c",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "cdf20716-390e-4b4e-b4e6-da0a174937f8"
        },
        "item": {
          "id": "3d67bdc1-2540-465d-b2cb-973e60490d02",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d8083ac0-59b8-4f63-bc24-c62459b5acda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecab400a-7416-4741-86d4-6bb8ccb7f5dc",
        "cursor": {
          "ref": "3539f054-11c8-47d1-8eec-9d2a79b33f58",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "be19808b-d70f-490c-a47d-f1d933784093"
        },
        "item": {
          "id": "ecab400a-7416-4741-86d4-6bb8ccb7f5dc",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "fbd28264-47b1-4e6a-8316-1372fcba0d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ec26f3f-eae1-4bfe-a96a-e4780189529c",
        "cursor": {
          "ref": "5645ba5d-d13f-486f-8aeb-15b46438c8e9",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "3d3880e6-48d9-4128-8b68-a62515d31389"
        },
        "item": {
          "id": "9ec26f3f-eae1-4bfe-a96a-e4780189529c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7162e2a2-e3ff-46d1-ada0-8ebe0b45b876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8402ab98-2955-4160-b50e-a3e902b6470c",
        "cursor": {
          "ref": "747fcdeb-6591-4c4e-9c4d-273e28aceaa9",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a7e4333c-2e23-4be4-8a36-a194ac114270"
        },
        "item": {
          "id": "8402ab98-2955-4160-b50e-a3e902b6470c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "88a7d614-261c-435a-b4c9-338b9b90ab37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e902467-34b5-423c-b8db-bae7489d7ec1",
        "cursor": {
          "ref": "ce715ed5-8214-4f73-9021-40be2c0dfcb1",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "082f5e05-b81a-4f5d-b2ed-0109c1283530"
        },
        "item": {
          "id": "9e902467-34b5-423c-b8db-bae7489d7ec1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0fb153f5-8c51-454a-a961-e4f117b87b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a34ffeb-9625-4395-8b72-7c784b1e344f",
        "cursor": {
          "ref": "7c0c97a9-10b7-4465-9f90-0ec29bd4874d",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a6599920-5e15-4d2d-9943-306a5f19afcd"
        },
        "item": {
          "id": "0a34ffeb-9625-4395-8b72-7c784b1e344f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7db8ee4a-b787-4ed0-8a2d-d5a5eeeb8e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46e3895-3f27-4f5e-864a-4d4c309ad8d4",
        "cursor": {
          "ref": "5ac9be5e-8e53-4c66-927a-5a2933b0f553",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b314f337-af3b-4268-ba87-17488fdef768"
        },
        "item": {
          "id": "f46e3895-3f27-4f5e-864a-4d4c309ad8d4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "759593d1-b7eb-4455-a99b-30fe3860c98a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee68072-6eb4-4158-a111-38bdb84a4916",
        "cursor": {
          "ref": "25d189df-3bc8-46f0-93b1-57c0d001c2bf",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "abbf8d54-37ce-41e0-9abe-b7914016358f"
        },
        "item": {
          "id": "3ee68072-6eb4-4158-a111-38bdb84a4916",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "dbe4deb7-9a2b-42f9-b2a3-5c1e3a04010b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d7abe4-8d37-491b-b34f-637b68e92dad",
        "cursor": {
          "ref": "e54ec2d0-2c2f-4fd2-9c3f-0c57ab6fb6fd",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "0078e432-6cf2-441e-a29b-760198bfd276"
        },
        "item": {
          "id": "e7d7abe4-8d37-491b-b34f-637b68e92dad",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "922fa97c-3edf-46a1-a84b-4eb1a7646353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcb6f4d-fb64-49ca-9632-e6d030a1046b",
        "cursor": {
          "ref": "f948996b-5031-47de-8d13-fa79c16965cf",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b8c2e04a-8c88-42a9-b114-66b8eba5707d"
        },
        "item": {
          "id": "2bcb6f4d-fb64-49ca-9632-e6d030a1046b",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "d51c7fdf-daab-440f-9e13-dd164fe3e1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41c44915-61eb-4645-a011-25cc385cd681",
        "cursor": {
          "ref": "fdbf71c9-3252-4b75-b8ca-f0a5dbb7fe9d",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b54798ee-f08d-439d-8028-829b52120c78"
        },
        "item": {
          "id": "41c44915-61eb-4645-a011-25cc385cd681",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a7414bba-d0f6-4322-bd4e-81adbf0c5f1f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0067218-d759-41a4-ac5a-7223d401dbaa",
        "cursor": {
          "ref": "ba2ff0d0-6c68-405b-ab84-cb4c84ff808d",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ea22ba77-2ce1-444d-b045-19b6e96f79d6"
        },
        "item": {
          "id": "b0067218-d759-41a4-ac5a-7223d401dbaa",
          "name": "credentials_issue"
        },
        "response": {
          "id": "0fc14b5c-9d9b-408f-b96b-b0c4e41228c5",
          "status": "Created",
          "code": 201,
          "responseTime": 9717,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "2419cfb5-902a-48b5-8c0d-b2b642ad6731",
        "cursor": {
          "ref": "64172679-e768-476a-b538-22e3ecf5a0a3",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "6f3af6dd-7250-4b42-862d-90e0967b2aef"
        },
        "item": {
          "id": "2419cfb5-902a-48b5-8c0d-b2b642ad6731",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ed50cbbc-d437-4583-a616-38790592a181",
          "status": "Created",
          "code": 201,
          "responseTime": 8529,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc6f474-6d1f-46e6-9501-0a33dbf59e1c",
        "cursor": {
          "ref": "bc71bc33-987e-4d2c-9ba0-4fd0d334f509",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b1ce9411-a996-4fed-844a-22247182df15"
        },
        "item": {
          "id": "cbc6f474-6d1f-46e6-9501-0a33dbf59e1c",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "885378c3-41ba-488f-bfd2-f772d5047051",
          "status": "Created",
          "code": 201,
          "responseTime": 8587,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "683a2ab8-81aa-4d5b-9b50-3559d7e5b8e9",
        "cursor": {
          "ref": "3abd2438-889d-4348-9f72-b2871ee03572",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "78ed5ccf-8660-4356-ba36-49bbe329b656"
        },
        "item": {
          "id": "683a2ab8-81aa-4d5b-9b50-3559d7e5b8e9",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b38fcd70-2b3f-4685-9fc0-c3624c4b2eed",
          "status": "Created",
          "code": 201,
          "responseTime": 8734,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0fdcff-a6e7-4fa5-956a-a3ab20c055b7",
        "cursor": {
          "ref": "f47e6ba9-39b1-40df-b1ee-1c3517cd824c",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "cbcc8a4d-9a7f-42ef-9278-2a2bb3a9f0a4"
        },
        "item": {
          "id": "6c0fdcff-a6e7-4fa5-956a-a3ab20c055b7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fe0cd08d-05ca-46cd-bd10-8d40a93bb589",
          "status": "Created",
          "code": 201,
          "responseTime": 7517,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "431fed70-284e-4c32-9781-5461b38f2ff2",
        "cursor": {
          "ref": "3506aeac-0293-4349-af50-f354e3f2919e",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "c783adc1-2367-4390-8cf4-1841c8212dae"
        },
        "item": {
          "id": "431fed70-284e-4c32-9781-5461b38f2ff2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "735d9aac-262a-460e-9de6-a0df571b9598",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "86c4efdf-9736-4e25-a003-19208a9e5336",
        "cursor": {
          "ref": "1768476d-9f90-4fb2-929c-8db0d73b0379",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "24f09194-b077-43dd-a7ed-f0f9d8c93143"
        },
        "item": {
          "id": "86c4efdf-9736-4e25-a003-19208a9e5336",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "97e8b096-1829-4b6b-b299-6aa6df17e6f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a47759-3e6e-4c1d-931b-d509d95d4837",
        "cursor": {
          "ref": "be60707a-59ea-4ac8-a4e6-a57bf29a850c",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e563afa1-15e1-4623-a240-4ec6b575164a"
        },
        "item": {
          "id": "84a47759-3e6e-4c1d-931b-d509d95d4837",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "cc53bdfd-549d-4af0-8a3c-6a327120c5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e115f831-cc73-4893-83c7-680aaf6cf4aa",
        "cursor": {
          "ref": "c5fafe22-a764-4f4f-b51f-d80c102c144b",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "493ba161-122b-4599-a00c-5d9d6a3963c7"
        },
        "item": {
          "id": "e115f831-cc73-4893-83c7-680aaf6cf4aa",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "11c062f6-2275-4a27-904b-ff5739ba65d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58f3de5-9784-4c97-819b-67b2d5782594",
        "cursor": {
          "ref": "a5adad3a-e2ef-4e34-a3e6-4726afe6a96c",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5ba648aa-3e7f-467d-9f9f-4fcc12cf6739"
        },
        "item": {
          "id": "f58f3de5-9784-4c97-819b-67b2d5782594",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "59bde340-ee0e-4b5d-85b0-28bf27ac24cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 289,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a598f9aa-02cb-4c25-9e1d-02486206fe02",
        "cursor": {
          "ref": "38082781-dd8a-424a-ae6a-c5b525e8335f",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "55ad455f-21a1-4eb1-9e7c-bae5c37046d4"
        },
        "item": {
          "id": "a598f9aa-02cb-4c25-9e1d-02486206fe02",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a1f1bcd0-5c60-4b6c-a804-9958d4e3fe18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e69f7f3-a96a-4c56-82ad-fd7308697397",
        "cursor": {
          "ref": "2d291045-ae94-4a39-bb68-4c8b1be3b8a7",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "079ed6c3-64d9-412f-b5ef-ebbddc44aa0f"
        },
        "item": {
          "id": "6e69f7f3-a96a-4c56-82ad-fd7308697397",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "accb6e16-3084-4b48-aecd-6908f9b9ee2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf16571-83e6-4d47-ac29-cc7dcda03021",
        "cursor": {
          "ref": "802ca204-1a51-4723-81cf-8ef4b7270750",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "e8217c35-c155-493c-8269-a9c78e74ecef"
        },
        "item": {
          "id": "edf16571-83e6-4d47-ac29-cc7dcda03021",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "990ac121-c98a-4bed-b042-7a3724e99529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d18426b-fa2c-4c81-bf03-14a62a8287d6",
        "cursor": {
          "ref": "3b186317-217f-4b71-a27a-078404884248",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "dfd058d1-c237-4574-bb59-1f824b481a02"
        },
        "item": {
          "id": "8d18426b-fa2c-4c81-bf03-14a62a8287d6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fbfccb8d-76c2-4f03-8d63-32063cf2354f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde4da50-7ef9-401d-80c5-a5eced48a19e",
        "cursor": {
          "ref": "4840a536-21e9-46e1-ad6c-22af094b29f7",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c147148f-e7c1-4e45-bf78-77702f64fb25"
        },
        "item": {
          "id": "fde4da50-7ef9-401d-80c5-a5eced48a19e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "ce72e2c6-b7c6-4756-bc3c-e049103c8e4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6bcfc63-09a3-42cb-bc27-c93bcba4a456",
        "cursor": {
          "ref": "523a5694-1aa2-4df2-82d9-11326aaf8b1e",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "83ebe361-5887-4eda-a22f-fbaa7c29c828"
        },
        "item": {
          "id": "a6bcfc63-09a3-42cb-bc27-c93bcba4a456",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2f66bcbd-31f3-40fb-be84-c6b85e4b5a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da7a6ae-5e82-401d-9918-e3637fa4bc44",
        "cursor": {
          "ref": "f1589cd1-405c-4f80-a188-25e93161c131",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "f3f5371e-8928-4972-8df0-6e0c492af251"
        },
        "item": {
          "id": "9da7a6ae-5e82-401d-9918-e3637fa4bc44",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ce6f9575-30f0-4165-a684-81f538c4b172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcc16a0-e8a0-45a6-a1f3-ce2b30adaf47",
        "cursor": {
          "ref": "6ddc78a5-0f90-4dca-b192-1646c29b688b",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a1d43ff4-760d-48c1-91c5-8b0b4daacafa"
        },
        "item": {
          "id": "fdcc16a0-e8a0-45a6-a1f3-ce2b30adaf47",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "311a131e-f28a-4378-aa31-4ff9740f316f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 274,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea239f57-768f-41c2-9428-806f33910358",
        "cursor": {
          "ref": "c3a87579-c16a-4015-afaa-20797663a93d",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "986d29d4-fc95-4a92-8d36-7c99986bd1b2"
        },
        "item": {
          "id": "ea239f57-768f-41c2-9428-806f33910358",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "aa110aef-bd60-4e3f-83d0-70aafc48ea9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bf110a-6cd1-440c-82f6-210a2cd8926c",
        "cursor": {
          "ref": "2f974786-6ca9-4b17-8614-93d8f4d00b45",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "59970fc4-f7bc-44db-897c-0fd8551b23ab"
        },
        "item": {
          "id": "c5bf110a-6cd1-440c-82f6-210a2cd8926c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8c34b14d-8fd0-4906-b0c7-25823670a454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5416140a-d0f3-46d0-91c9-89fbd0bf4309",
        "cursor": {
          "ref": "3e29db93-fc73-49cf-bfe2-47e8d7a46d91",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "320d13f6-02a1-49f0-bd0c-62c10494fd38"
        },
        "item": {
          "id": "5416140a-d0f3-46d0-91c9-89fbd0bf4309",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a225944c-7edc-4ccd-b6b4-d4c0657118bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4639ab6a-69a6-419f-b37d-7d7f72f22570",
        "cursor": {
          "ref": "239bd178-761e-48d4-a7d1-3a73ee6e5e86",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f00ce653-a5f6-496e-8416-352467dd38e6"
        },
        "item": {
          "id": "4639ab6a-69a6-419f-b37d-7d7f72f22570",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "d43743a9-8228-4ac7-ad99-066978f1ad09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab27396a-af92-445a-9741-57312e7b27c9",
        "cursor": {
          "ref": "d11db4ce-0cd9-4106-9f6e-82302b746459",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8e004151-0159-46dc-b9bf-d9a9bade04d9"
        },
        "item": {
          "id": "ab27396a-af92-445a-9741-57312e7b27c9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d6ec6dd1-3dea-47e8-ad9e-33a9a7384803",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e556b944-51af-476f-bf93-3f7d9803f1d0",
        "cursor": {
          "ref": "426f21cb-a504-46ca-a273-84e115071c46",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "74bee198-303b-4a72-8969-88ce27aa3375"
        },
        "item": {
          "id": "e556b944-51af-476f-bf93-3f7d9803f1d0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "23359c15-9f93-4942-a798-82561a8cc9d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca97ef7-3d60-46fb-a2a5-c6ba77ce3094",
        "cursor": {
          "ref": "d883585b-419e-4cef-a287-485445a81917",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "fa1c6486-646d-459d-a371-ff9182f7dab3"
        },
        "item": {
          "id": "dca97ef7-3d60-46fb-a2a5-c6ba77ce3094",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b8abbb4e-33d8-4d77-8b21-6d39ac8d9195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e10b5a1-9323-403d-896f-a61c46434a77",
        "cursor": {
          "ref": "ce9a432b-45a0-4da2-9add-11363b81ef4d",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f6c0b699-830a-4e43-8d7f-7773ac0d4b6e"
        },
        "item": {
          "id": "0e10b5a1-9323-403d-896f-a61c46434a77",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "068853d2-0584-4cc9-b40e-b10ee0b7d97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfa7972-592d-40bb-8612-27851d1e31cb",
        "cursor": {
          "ref": "80ac5090-cbc9-4fc8-a2eb-3eb068872f65",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "318e05fd-5686-4c9c-b0e1-90e338f982d1"
        },
        "item": {
          "id": "7dfa7972-592d-40bb-8612-27851d1e31cb",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "29374dad-61b8-4278-a66f-a7adffe88a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c148e831-1a70-4713-8e5c-ac7bbde77ddc",
        "cursor": {
          "ref": "3b55b5ae-08ce-495b-a063-dcdf144c6e69",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "86656d78-0f2e-46bb-a6af-fbc1b0b530c2"
        },
        "item": {
          "id": "c148e831-1a70-4713-8e5c-ac7bbde77ddc",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "117de191-59da-4167-acec-1149ca3cd26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2672fa34-a1bb-4623-b22f-eee1ab16b1f8",
        "cursor": {
          "ref": "d37862d1-518c-4a64-b6c9-e1de1242f847",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7b407b50-8069-4229-93ca-acfbf6a23fa6"
        },
        "item": {
          "id": "2672fa34-a1bb-4623-b22f-eee1ab16b1f8",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4ac7cd5d-782b-41e5-b521-4e6db057ca6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 277,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c7582b-8501-4873-a6d3-5a4c7344c585",
        "cursor": {
          "ref": "b17e8ac7-b4f9-4555-9d60-f196de9dbba1",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "777a20f0-148b-4ae7-94a6-924eb3e2a993"
        },
        "item": {
          "id": "67c7582b-8501-4873-a6d3-5a4c7344c585",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "124cffe0-ea9b-4d33-8d20-1f91d8acf204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 288,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085ec21f-156f-4338-9f95-61f64e3f6115",
        "cursor": {
          "ref": "33209771-65db-47ed-a2cf-8abac8d26259",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "326315b9-bf80-482e-aa8f-352d7c0b481d"
        },
        "item": {
          "id": "085ec21f-156f-4338-9f95-61f64e3f6115",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d056015f-af68-47a8-a7a8-6585b23cf1ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7dd411-9e7e-4cf1-9976-b9fd2b813a6e",
        "cursor": {
          "ref": "f6f8d453-e3b0-484f-883f-371526c7ae91",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "d8d3abe2-67c2-4380-9faf-666cb58314ce"
        },
        "item": {
          "id": "5a7dd411-9e7e-4cf1-9976-b9fd2b813a6e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "22f80409-0453-4e1f-88d5-ebb0848d9b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4989ca6f-9277-4f87-ad59-b4fc55bb79ac",
        "cursor": {
          "ref": "0eae663c-42b8-49c8-897e-6418096c44fa",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f2bd2529-f9d9-412a-8577-b12f2a718e59"
        },
        "item": {
          "id": "4989ca6f-9277-4f87-ad59-b4fc55bb79ac",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3e76f497-bd43-447f-9562-f0e04293ccf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a29f3a4-97c5-4fc6-a816-d57c23f99fe5",
        "cursor": {
          "ref": "255a9963-33dc-4d0e-981f-572d4c4d5ed7",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "4d28402f-5adf-4989-a07f-95f0ac2f67a8"
        },
        "item": {
          "id": "5a29f3a4-97c5-4fc6-a816-d57c23f99fe5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4fac2d33-9b61-438d-94b8-cdcdabb03f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df0b018-62bd-4118-a76f-6642cb81e8ce",
        "cursor": {
          "ref": "349c2691-bdf2-4eef-9707-2cc9dd40064a",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d4270050-9c1a-4887-97d6-7e0d14a94223"
        },
        "item": {
          "id": "6df0b018-62bd-4118-a76f-6642cb81e8ce",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "18d0268d-074b-46f9-9b20-04c55984c92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539e86e4-6d70-49cc-99cc-801c2ac75c5d",
        "cursor": {
          "ref": "1b6ad5bf-7863-4800-a98d-33d778775a79",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4ebe1687-1d66-4c01-8914-74e5d3d42357"
        },
        "item": {
          "id": "539e86e4-6d70-49cc-99cc-801c2ac75c5d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9869b7b8-0239-4d0e-b4bc-9e45897951b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 294,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa24e65a-6dd0-42d1-8d22-face6f66b392",
        "cursor": {
          "ref": "e8ae5d5d-e6c0-4e2d-b9fd-a7a16100d8fd",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b7722240-d702-41ab-a360-af9f386b7a0c"
        },
        "item": {
          "id": "fa24e65a-6dd0-42d1-8d22-face6f66b392",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e79d56ad-d0d5-412f-8060-57d65d395107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 282,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bdc9ec-2b9a-4843-a95d-18f997d504d3",
        "cursor": {
          "ref": "07382a6d-65bc-40e7-98b0-d02279468ada",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0361dea1-bb54-4fad-9909-21076bf35fd7"
        },
        "item": {
          "id": "96bdc9ec-2b9a-4843-a95d-18f997d504d3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "35cfd42f-5f80-4e38-ad68-5bda08a8427e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ac15b9-b366-4847-9681-3d2003bfe9f8",
        "cursor": {
          "ref": "bde4d963-a14c-4a50-8f77-6dc57307bf55",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "277365ca-15d5-4b40-bfa7-45d96eb56213"
        },
        "item": {
          "id": "b2ac15b9-b366-4847-9681-3d2003bfe9f8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0f088200-db5a-46c9-a951-6eeb8d639392",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b6b3ba-4111-4fed-9dad-f0b3e9daab30",
        "cursor": {
          "ref": "6ba96a1a-28c0-4c92-9238-75c13d53823d",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c9babfcb-ae7b-4b86-b7c4-196d41141136"
        },
        "item": {
          "id": "04b6b3ba-4111-4fed-9dad-f0b3e9daab30",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "27d1177c-707c-4087-a09a-4456904abb8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2d54fe-1fb5-47a5-b608-2c3605a41167",
        "cursor": {
          "ref": "19ad913d-7ee1-4f07-beaa-f3639a0ff848",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "504e6fef-24d1-4a0a-b0d3-0bd3db166e67"
        },
        "item": {
          "id": "3f2d54fe-1fb5-47a5-b608-2c3605a41167",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "374ca9b3-2af1-4050-87b9-3e9b8c4c2553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b11825c-f7ab-4049-805c-806a669d58a9",
        "cursor": {
          "ref": "aa878016-7233-437a-a27c-7c9777a380d5",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1edfbb54-073c-459f-8de9-8b924ce5a734"
        },
        "item": {
          "id": "0b11825c-f7ab-4049-805c-806a669d58a9",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2136984d-3eeb-42c8-b2e8-1c853c7b1cbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2037b5b3-ef3d-44d6-870c-5c4772ab3f89",
        "cursor": {
          "ref": "95d68ae3-23f3-4d7d-bba9-1612299e709a",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a30e8d23-da3d-4a5f-94cd-b068d74c5e22"
        },
        "item": {
          "id": "2037b5b3-ef3d-44d6-870c-5c4772ab3f89",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1a042b55-49c3-4a34-93eb-370ed2b2969c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e5373e-e73f-4b59-b6b3-6704e3a8165a",
        "cursor": {
          "ref": "5efb36c2-72c4-4aae-98bc-82f89eea8e63",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "34e1d077-67dc-42d8-a7a6-f88848737d3a"
        },
        "item": {
          "id": "c1e5373e-e73f-4b59-b6b3-6704e3a8165a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a3dc3539-61d7-4f3d-87e2-a07a677c8391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 295,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf2aa78-31c4-4f7e-bd25-213d4941e0b9",
        "cursor": {
          "ref": "68e7d866-d982-4a09-930e-0cb7424427f3",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "61295695-3303-404c-a022-e1560135529b"
        },
        "item": {
          "id": "7bf2aa78-31c4-4f7e-bd25-213d4941e0b9",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1ef03bb5-98ff-4107-a381-5a7909fb9ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf787f6-a68b-4a43-bf50-bbcd1457c4c3",
        "cursor": {
          "ref": "2c46d482-97b5-4c61-84d9-5144d83398ba",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3b145370-3a0a-4233-8810-59033a767cd4"
        },
        "item": {
          "id": "ecf787f6-a68b-4a43-bf50-bbcd1457c4c3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6417c0be-1811-4751-b96e-0ae3b1107ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70582cf9-d882-4482-9daf-483051979681",
        "cursor": {
          "ref": "87efedf7-e3f9-4bf6-a8ba-a084e303ca38",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "64aa78a1-9cfd-493a-830b-25939a0f9011"
        },
        "item": {
          "id": "70582cf9-d882-4482-9daf-483051979681",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f26665fc-69ce-4867-a6de-bc4a0e26e05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6170067-4e28-4d40-9484-0b670ea41f1d",
        "cursor": {
          "ref": "82f62b02-26ea-460d-b1ff-9e46e522aa73",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "65ad1673-d294-4ecd-8f09-2813fae69c61"
        },
        "item": {
          "id": "d6170067-4e28-4d40-9484-0b670ea41f1d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7dc68317-ffc0-416b-a70e-b4b1776cbada",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23208dd-3f22-4e9d-9f46-6dd17d003f8b",
        "cursor": {
          "ref": "4ee843db-5c21-4757-8741-0d0ee8b34b52",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "07670fd6-1119-45c0-a946-224a0338f5bc"
        },
        "item": {
          "id": "c23208dd-3f22-4e9d-9f46-6dd17d003f8b",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "606c2936-986c-49da-bea3-2fdfa3bd8c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca13372-ee89-48f7-a31c-5c532e60dd7f",
        "cursor": {
          "ref": "24e91d86-5613-4f29-a88b-1cc692db33d4",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cc53e61e-b81f-48e5-8045-f7338e09f23a"
        },
        "item": {
          "id": "0ca13372-ee89-48f7-a31c-5c532e60dd7f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ee84983c-5c45-4857-9175-bc536a80c27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 307,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20c32e2-ea66-4052-999d-d9c03e2481af",
        "cursor": {
          "ref": "37e1f2dc-91e6-4a71-8444-d301d5c5ebc7",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "af91ea63-710e-4f6f-b3e5-5bcaae996bf7"
        },
        "item": {
          "id": "d20c32e2-ea66-4052-999d-d9c03e2481af",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3fb5759a-62c5-45b6-9c67-7d4c7a302e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb057f7-42f8-48b8-a5d0-fbe484e132be",
        "cursor": {
          "ref": "1b27cef7-6545-4ebc-88e5-5cd257a3ebaf",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "825cb271-aa3a-482f-b6d9-18835b903369"
        },
        "item": {
          "id": "0fb057f7-42f8-48b8-a5d0-fbe484e132be",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "75160f34-4686-4724-a829-31da0ae3ec68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca5ad210-b2ab-4f35-b166-a2b30a95c082",
        "cursor": {
          "ref": "7a85cfca-6054-4b74-89a0-d11b9d021740",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "93c76fda-4e8a-4dd8-a229-82060fe77af3"
        },
        "item": {
          "id": "ca5ad210-b2ab-4f35-b166-a2b30a95c082",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "b2a3957a-5117-474c-b03a-c0438fa2e340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318533c1-abd6-4d8c-bec8-927899e343bf",
        "cursor": {
          "ref": "ea09efac-b29a-424c-ace5-6ee9f3763a18",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1b783103-4ebf-483e-8bfc-3788dce1ce44"
        },
        "item": {
          "id": "318533c1-abd6-4d8c-bec8-927899e343bf",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "15f0f198-2a10-44c6-a423-3a96b0d87189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b601e6-a4d1-4e47-bef7-e47c93d72a08",
        "cursor": {
          "ref": "e93c62fc-4625-4e9e-ae78-12c813afd98d",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "940d6e61-5917-447d-9041-e7920d9e4240"
        },
        "item": {
          "id": "99b601e6-a4d1-4e47-bef7-e47c93d72a08",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b0efa8ae-a652-4dbd-9eb5-b08d163b8b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 278,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddbc246-de38-4ba6-bb23-e5cda7b94dd4",
        "cursor": {
          "ref": "54f04338-fdf1-43b1-bc00-6abad4fde015",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b10e338f-15be-495a-bfed-df03d08c3a5d"
        },
        "item": {
          "id": "7ddbc246-de38-4ba6-bb23-e5cda7b94dd4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "72f108d0-356a-4076-9419-eefa70c88a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97218720-b306-463f-bc60-e9c1ca6e6d8c",
        "cursor": {
          "ref": "df385ccf-1349-4400-b45a-9395139bf189",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "d04743f3-5536-430f-8fb7-96c21291f5a2"
        },
        "item": {
          "id": "97218720-b306-463f-bc60-e9c1ca6e6d8c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "937a5c0c-0527-47d3-a24d-58e069d0601d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84db64f-84bf-41a9-87fe-03b78ecd1b88",
        "cursor": {
          "ref": "394e4e6b-e733-49a1-9d1b-aa23cc0bb797",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2186bde0-8df6-4b9e-9319-a721b2b14ea7"
        },
        "item": {
          "id": "c84db64f-84bf-41a9-87fe-03b78ecd1b88",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7db6b4f9-3c26-4d5f-bdd0-b3018c30daaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d13c91d5-d600-43ea-b462-09a4d05ebb1e",
        "cursor": {
          "ref": "44c0448a-576e-45f5-aa12-c9c32a59b477",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "cf66f571-660a-4044-9a6d-d9047691c317"
        },
        "item": {
          "id": "d13c91d5-d600-43ea-b462-09a4d05ebb1e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4e70059f-0cf9-4eb8-8b34-6531dcc66b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51052df-ab30-413b-8dc2-d85dc2c7d7d6",
        "cursor": {
          "ref": "79bca3a5-1a5f-448d-b019-d4dc54aeff52",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "17c29718-7411-417d-a8bf-1bffbebe578b"
        },
        "item": {
          "id": "b51052df-ab30-413b-8dc2-d85dc2c7d7d6",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fc2e69b8-583c-45d7-a9bc-242ac388cc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 286,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43911eba-728d-4da1-979c-ba00e6da9911",
        "cursor": {
          "ref": "5756dc4a-3f60-4a32-a926-8c89b375bb00",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ed19f3ce-f185-47e4-945b-be2276b7341f"
        },
        "item": {
          "id": "43911eba-728d-4da1-979c-ba00e6da9911",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "35f9b0aa-83fe-4c14-a98e-17ccff36c517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2664731-ec83-460e-a1b5-76db0fa9747e",
        "cursor": {
          "ref": "1e0065a7-afd1-4121-898e-23f4e857d368",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4fb065e0-20f4-4e21-9be6-ee2fc1fbdfeb"
        },
        "item": {
          "id": "e2664731-ec83-460e-a1b5-76db0fa9747e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3adcc05b-c1eb-4c44-b898-73cb96ab07d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd0daac-d1c5-4f9f-8ed0-f407aa8710a1",
        "cursor": {
          "ref": "9a6dfabc-cb9c-42c2-a6fe-966cec9e11b6",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8f28bb16-8516-4366-aa65-f147e3996655"
        },
        "item": {
          "id": "4cd0daac-d1c5-4f9f-8ed0-f407aa8710a1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9c999566-02a8-4b00-aa12-317ceda826bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deeb1bb5-8f44-422f-a386-5ceb3eefbb4b",
        "cursor": {
          "ref": "5f6d9fe9-8eb8-47f1-89fc-635ee465b9a6",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "f450dd7c-f193-4f83-9385-5a3c5677a635"
        },
        "item": {
          "id": "deeb1bb5-8f44-422f-a386-5ceb3eefbb4b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "02458b9e-e977-42ff-a2bf-cb355ba9614e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d9ec35-d824-4bdc-9939-28c6b9a4addd",
        "cursor": {
          "ref": "71fe23dd-69c0-414d-827d-b2e774566d81",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "37895068-5f25-47ba-952e-dc4721b070df"
        },
        "item": {
          "id": "00d9ec35-d824-4bdc-9939-28c6b9a4addd",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8458d301-37e4-428c-8790-206874e007e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3437973d-c3e7-497d-ad3f-7f1460e51248",
        "cursor": {
          "ref": "a3cc0701-67c3-4318-aa10-91217e0b978c",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "340439f2-5ffe-4e6a-849a-7bbff978623c"
        },
        "item": {
          "id": "3437973d-c3e7-497d-ad3f-7f1460e51248",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a7e69d81-d290-41ac-8d8d-91652d1acd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 283,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127e63c7-3286-4cf5-b523-9cd8edecb3f4",
        "cursor": {
          "ref": "809b6c63-72cf-4ac9-a744-357a56acf15c",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "4402c453-95ba-4ecb-bf7f-034e53e439eb"
        },
        "item": {
          "id": "127e63c7-3286-4cf5-b523-9cd8edecb3f4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e2adc882-1f6c-45d5-9c56-a0c503c1ffe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99de1458-eafe-402e-aa45-2072e159d879",
        "cursor": {
          "ref": "dada1d87-e08b-4179-b56d-1cde22b1349f",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "048732a6-9626-45ce-8bb3-6c3af8200588"
        },
        "item": {
          "id": "99de1458-eafe-402e-aa45-2072e159d879",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7e797678-6067-4e97-a3c8-47dcfced7510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 271,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f84f68-cb55-4bce-8ed3-2283c26aec68",
        "cursor": {
          "ref": "80ff2f6c-48b3-4499-a809-369c3b418419",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8455e01f-6bd3-4be8-8103-5043318a98b6"
        },
        "item": {
          "id": "e9f84f68-cb55-4bce-8ed3-2283c26aec68",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0328ea8e-794b-434a-bd66-8bdcb106df69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 299,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ddca10-5ad8-4eec-b92c-eecf5294ef71",
        "cursor": {
          "ref": "98075545-3136-4f55-96d7-9941cbcac25a",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3a4ffa22-11ab-46db-8e26-a41961736b59"
        },
        "item": {
          "id": "46ddca10-5ad8-4eec-b92c-eecf5294ef71",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7882415c-e3d6-41a8-b8c9-091d9dd6d95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c080d390-d829-4f3a-b73e-278393c5f038",
        "cursor": {
          "ref": "3ef597fe-fb00-42ef-b61c-c07d0b0b3761",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e7a6d613-aff6-430d-9515-42c3586867ba"
        },
        "item": {
          "id": "c080d390-d829-4f3a-b73e-278393c5f038",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "109fba4e-5611-4094-af28-26020567cd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd73bfa-7eee-4d9b-9e64-af04572d4544",
        "cursor": {
          "ref": "432a7af6-c9a4-49d9-a7b1-cecc59cb75b8",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "59abe702-55e7-4fb3-9449-9b25a131cc35"
        },
        "item": {
          "id": "9cd73bfa-7eee-4d9b-9e64-af04572d4544",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "49a237d5-e499-41d8-9edd-cd5fc4ad9c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063b1c3e-ba5d-457c-9296-60b1c1b704a3",
        "cursor": {
          "ref": "e2e75bf1-6608-48ac-8a90-953b9b5e93b3",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5531edd4-1155-4b18-85e5-742d88684a80"
        },
        "item": {
          "id": "063b1c3e-ba5d-457c-9296-60b1c1b704a3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "aefe6155-584d-4f44-a8b3-fbcf5b71511c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 290,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188215d3-6135-486e-827b-ec2c268af733",
        "cursor": {
          "ref": "c445f271-05d9-414c-8aaa-175683c6b5f6",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "c261ad0f-0242-4ee4-9f42-ebcda7d6d262"
        },
        "item": {
          "id": "188215d3-6135-486e-827b-ec2c268af733",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ada569e7-bec6-4b6d-8036-82cf700a5bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743793f4-9a6e-41d5-9af2-168746a7710f",
        "cursor": {
          "ref": "fb0feca0-80e9-4388-b021-0e37616c56ce",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "83bcbf4a-3e2c-4cd4-a2ca-9fd284cc22ee"
        },
        "item": {
          "id": "743793f4-9a6e-41d5-9af2-168746a7710f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "c44eada2-6c9a-45b0-87d6-859f493c3652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e7fff1-20a0-48b9-912f-4ce81088cede",
        "cursor": {
          "ref": "b75fa621-c406-4b4e-bc8b-3f2195c5f120",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "814f5a5b-aad1-499f-9347-cad059427cc9"
        },
        "item": {
          "id": "b3e7fff1-20a0-48b9-912f-4ce81088cede",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a8f3767e-6587-47e2-8e64-56c6fe4f298d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 284,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95c47357-f744-43f9-a485-2deb3d5c07f9",
        "cursor": {
          "ref": "d8ac8036-859a-458a-806e-db32203386a0",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "b6f15fb4-ce97-48e1-aac8-86cbaa8e2c70"
        },
        "item": {
          "id": "95c47357-f744-43f9-a485-2deb3d5c07f9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f0dbb959-49a7-408d-9232-6304557fa794",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890e0677-5273-405d-9cf2-cc28d55afc52",
        "cursor": {
          "ref": "a8b7f24d-fc51-4efc-b916-beea68e22f42",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8d8c4bbd-a876-429f-ae2f-da7de16374ab"
        },
        "item": {
          "id": "890e0677-5273-405d-9cf2-cc28d55afc52",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a4599e3d-f3c7-4726-8350-e5015758aec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4261d009-343a-42a2-9c0b-1d119a0b6dee",
        "cursor": {
          "ref": "66a437c3-b5e4-4782-ae9c-96a6b19e020f",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "bbaa75bc-e860-442d-af0e-e04847fb57e0"
        },
        "item": {
          "id": "4261d009-343a-42a2-9c0b-1d119a0b6dee",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "12f3dc51-6912-4ae1-b0bc-e5cca31820bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2f15d4-143a-41ae-8e1f-e1a0547112e4",
        "cursor": {
          "ref": "297e0c42-f05a-4465-97d8-6a940174e5c4",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "97b7e4d9-6835-43c4-912f-8c5d5efd8901"
        },
        "item": {
          "id": "4f2f15d4-143a-41ae-8e1f-e1a0547112e4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "03ba3e8d-8a21-444f-8fad-4f30ed7946e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351afb16-3756-4127-a99f-129670991b62",
        "cursor": {
          "ref": "e8ce1647-cc9f-4719-804b-4255233a8e44",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0e405f82-f290-4bd3-b19b-490b211543a1"
        },
        "item": {
          "id": "351afb16-3756-4127-a99f-129670991b62",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "bb00076e-238b-42d6-9678-b3154b08e7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a32e18-f7c5-4bb3-8bcf-01e10ecfc52d",
        "cursor": {
          "ref": "78c9df6e-9f08-44ab-9389-877d695bca24",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c38019bc-94d4-4a22-a475-ea5ae4a52050"
        },
        "item": {
          "id": "d8a32e18-f7c5-4bb3-8bcf-01e10ecfc52d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "06d8baba-dfb2-48b7-8b2b-1b7c8962071d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa67933b-ea8a-410f-9577-f49850741d06",
        "cursor": {
          "ref": "e4c38821-6f9d-4b09-bd0d-68691267e862",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e5535ed9-edfc-485f-b89d-ae52d4606f83"
        },
        "item": {
          "id": "aa67933b-ea8a-410f-9577-f49850741d06",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e69f7bfa-56be-400e-a600-db0e257b060b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9388481-826c-43b8-8869-ba9ad6458017",
        "cursor": {
          "ref": "39d38814-c037-49f8-a758-9618c6549bd8",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cc722be9-1381-4124-bf00-66202986bc73"
        },
        "item": {
          "id": "a9388481-826c-43b8-8869-ba9ad6458017",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "35dd0414-19fc-4548-9af5-0bef6a276707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7409454d-1caf-4c43-854e-93eb1d243dce",
        "cursor": {
          "ref": "e6db2f26-64ec-4032-adc1-07ded616d4b8",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5e0ca5df-52dc-4e51-a587-02c1c1861974"
        },
        "item": {
          "id": "7409454d-1caf-4c43-854e-93eb1d243dce",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "796431d2-154d-40e9-a7d3-cbd5591f6510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e802b5f6-308c-4109-9b77-a09600e8da92",
        "cursor": {
          "ref": "a1ffa54b-2003-4950-a650-e3681ee4819e",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "820138be-238b-44f1-8634-334acaa38527"
        },
        "item": {
          "id": "e802b5f6-308c-4109-9b77-a09600e8da92",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "30480fc7-fff3-4c93-8014-32c2aab39750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97b7bb3-ec49-4dc4-bcdd-02f3f1f105dc",
        "cursor": {
          "ref": "0cf87fb7-25ba-4b32-b7d9-88188eebd507",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e72d5e8c-df7d-4004-b062-4ba219439a4b"
        },
        "item": {
          "id": "d97b7bb3-ec49-4dc4-bcdd-02f3f1f105dc",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "456a0a91-4b64-4ba4-ad66-c69156c60c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b07c6304-937c-4603-8004-b9a0dbf4a345",
        "cursor": {
          "ref": "5cb4efc7-b5b7-46b9-8a69-1b8a630c329f",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "532983c3-1701-42f6-903e-e6b3476b763c"
        },
        "item": {
          "id": "b07c6304-937c-4603-8004-b9a0dbf4a345",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "342007ca-0bb4-477c-a8e7-279492270d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c31ddc-63df-4718-a512-3a566c773d2d",
        "cursor": {
          "ref": "4f781eaa-91bc-4118-8b26-4950f63e53f0",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1609a071-b605-4ee6-90b6-cad2d0ab31e4"
        },
        "item": {
          "id": "51c31ddc-63df-4718-a512-3a566c773d2d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "ff49287d-71e6-4bda-a6ea-36866a4a8e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9872f753-f4f0-4fa6-8f6f-8f2842622747",
        "cursor": {
          "ref": "9ac46b0a-0cfb-4347-b72e-4c45cc043201",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ca9ca321-9132-4bf8-bc55-bff597caa0b0"
        },
        "item": {
          "id": "9872f753-f4f0-4fa6-8f6f-8f2842622747",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4188897e-01f5-4af9-a116-40f4b9d93894",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ed850d-842f-4197-8539-449bc608e523",
        "cursor": {
          "ref": "5735fc4d-471d-4a01-bdb9-4dc42a3eaa96",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "627eec28-0c2e-4ecb-8dee-43930e94d6a3"
        },
        "item": {
          "id": "c4ed850d-842f-4197-8539-449bc608e523",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "9c4d30ff-3039-44a6-9683-d4b4a091aeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3114da93-5f27-48c3-a90c-df6acf6959be",
        "cursor": {
          "ref": "a8f3c12a-8cad-48da-b89a-ca503e41362c",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "7464f0a3-fa68-4c57-8670-9d42cabf5b6b"
        },
        "item": {
          "id": "3114da93-5f27-48c3-a90c-df6acf6959be",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "edd549ea-5990-465a-b954-74b5e34c58f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee1426a3-8915-4c88-8717-803162ea4161",
        "cursor": {
          "ref": "08f4fa48-5862-469e-8cbd-266309ce0b0e",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4f783fa4-8600-4b60-92d0-992ee67118c3"
        },
        "item": {
          "id": "ee1426a3-8915-4c88-8717-803162ea4161",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2cf7f049-1a57-4745-b0a7-9578ab3f3f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a700ce0d-439c-40e2-b269-ff2bf7f4c748",
        "cursor": {
          "ref": "ebfc8297-313f-4822-aa99-8a1670e1f8fd",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "dfb61548-5100-4560-a960-84d83db03084"
        },
        "item": {
          "id": "a700ce0d-439c-40e2-b269-ff2bf7f4c748",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "95adf074-f6d9-43a4-9b2e-d3e92a5628b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81df83d-4998-47c5-bcd7-8dafee638fe0",
        "cursor": {
          "ref": "5b5dc315-99b0-4025-81d3-541f9cd10126",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "0c11a373-bfaf-4859-bb15-ba2261430308"
        },
        "item": {
          "id": "a81df83d-4998-47c5-bcd7-8dafee638fe0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e3fe965a-57ff-498c-a345-0e99f716208d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b8948e-2bf4-4770-aa5e-f1247061ba20",
        "cursor": {
          "ref": "36cd7ba8-2a1b-42e5-949a-55026c713fdd",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "14c7a46b-8ff4-493c-acbb-de0d5ab40695"
        },
        "item": {
          "id": "91b8948e-2bf4-4770-aa5e-f1247061ba20",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e4c972db-f394-462e-aa2c-47050f315304",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d75aa1a7-5a33-4370-bede-6ec9f00243d5",
        "cursor": {
          "ref": "d7399ac1-fc47-4b4e-a47f-4c9293e093ef",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f832b837-c11c-41bb-ab92-360127dab135"
        },
        "item": {
          "id": "d75aa1a7-5a33-4370-bede-6ec9f00243d5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bb704a1c-716f-4103-9a32-2682e02dd3f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f59881-c346-4ef3-bed9-78e3e3b308a1",
        "cursor": {
          "ref": "7dd7443d-e3cc-4df6-9019-451ba84139dd",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7a9b9593-be35-463a-bef2-2566074ec82b"
        },
        "item": {
          "id": "e9f59881-c346-4ef3-bed9-78e3e3b308a1",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "f4254044-c5b6-4178-ba72-8116863e98a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6044c1b7-f770-4382-9593-fe105fe04977",
        "cursor": {
          "ref": "49019cac-7441-4341-86be-7c63c33559ba",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "572a8250-91f8-4c41-8306-1e781508b109"
        },
        "item": {
          "id": "6044c1b7-f770-4382-9593-fe105fe04977",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "25a46a82-0a0b-43df-8a7a-980547699e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "139df3a3-e083-4454-9f66-1aafff665b0d",
        "cursor": {
          "ref": "557ee0eb-a865-4627-a476-e265020bbb08",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d398538e-a849-4a91-a22d-51be08370400"
        },
        "item": {
          "id": "139df3a3-e083-4454-9f66-1aafff665b0d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "2d5175bf-ec9d-420c-b1cd-d7ec7f5d1546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f692970-f255-4da8-ad16-09c7d58d9236",
        "cursor": {
          "ref": "f1731aad-0284-4611-a7e9-197af63d002e",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d7aaacac-e7dd-4e75-bda0-46037e070217"
        },
        "item": {
          "id": "8f692970-f255-4da8-ad16-09c7d58d9236",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "eb159281-3e86-4be9-a4cb-9c560bde7cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "749ddb46-21f9-4b87-9c32-8e08cf7349f6",
        "cursor": {
          "ref": "0af04b95-b95c-470f-adc1-7ba04397c53b",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "6d7fb76c-2da9-4436-ba3c-0f30d4a0d882"
        },
        "item": {
          "id": "749ddb46-21f9-4b87-9c32-8e08cf7349f6",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f6ac4e00-8b38-42f7-b479-aa3bd20d0e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8744d4d-a5cb-4561-9ae7-2baa7fd145d7",
        "cursor": {
          "ref": "a20a21b7-05c4-42ec-86f6-3330c3a629b1",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7bba03e8-6ed8-4996-8ab5-41eb3790288b"
        },
        "item": {
          "id": "a8744d4d-a5cb-4561-9ae7-2baa7fd145d7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2f2794d3-adb2-4f91-a550-257704e1a91a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be61508f-b0c6-4f58-b270-e2cca63869b2",
        "cursor": {
          "ref": "2dc96dd6-87b9-456c-b3fa-15fa4f1e43bf",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "494a2e9e-37f5-4612-b086-c2001d2d6425"
        },
        "item": {
          "id": "be61508f-b0c6-4f58-b270-e2cca63869b2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3aa92677-8e74-4757-bcde-34a5ae2e948f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38af05e3-bbf8-43df-9c7b-ab7f8bf48850",
        "cursor": {
          "ref": "24f8dd7b-da0c-459b-9c17-102151780a09",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2f639e29-24d8-4fc5-b4a0-4dd6881b7206"
        },
        "item": {
          "id": "38af05e3-bbf8-43df-9c7b-ab7f8bf48850",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a2309d14-ce92-4fbf-9493-9ece264a05c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c54c32e-f8ac-4f8a-9b1f-948f4af8af46",
        "cursor": {
          "ref": "7977f433-bf8f-46d2-aa4d-c9fc839293c5",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c1acfe4e-4675-44bf-ae77-d7fab7085495"
        },
        "item": {
          "id": "4c54c32e-f8ac-4f8a-9b1f-948f4af8af46",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a5b15873-6449-4ede-86fe-d42630bf0d17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89dfca92-7150-49a9-adc6-28171138d54f",
        "cursor": {
          "ref": "ec60f155-8563-487a-94bf-38558578f338",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c72a20c6-ee3f-4395-8850-7cde3bebdd2f"
        },
        "item": {
          "id": "89dfca92-7150-49a9-adc6-28171138d54f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a554b462-1886-4fa5-a5cf-a9024d794217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ac13da-9f58-4b67-a0da-18624c04867a",
        "cursor": {
          "ref": "2127590f-3d49-42bc-a4aa-34779bd1e9cd",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d6103edf-12f3-4fd5-ad0c-cf80a9f4e9da"
        },
        "item": {
          "id": "68ac13da-9f58-4b67-a0da-18624c04867a",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ae048a86-1721-4731-88e8-a87ecf47a033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2015d92d-045a-4fce-bafa-f1b7d59f2e09",
        "cursor": {
          "ref": "5a7a96c4-587d-45f1-9402-ed8f3c1a0ae5",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9df8f999-54a4-4daa-8ce0-3b5d23faa424"
        },
        "item": {
          "id": "2015d92d-045a-4fce-bafa-f1b7d59f2e09",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7c62729a-d0a3-453d-bfad-e7abbd0727fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67be4dd-411a-4580-87e8-66b37cc10a12",
        "cursor": {
          "ref": "635d21d9-1621-4c0f-a1ad-73f295fe07d5",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "547cda7f-6c64-4d08-8a2f-b323b442d62c"
        },
        "item": {
          "id": "b67be4dd-411a-4580-87e8-66b37cc10a12",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "33e9bc61-01ee-4d28-be7c-7940fb9eb867",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24d949c-b319-43f6-b202-7e319e04de40",
        "cursor": {
          "ref": "a5c8435f-f4b0-4282-9a52-d7e1fe447f5f",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3945e53f-5858-42c7-b486-fbc1e9cd1c6c"
        },
        "item": {
          "id": "e24d949c-b319-43f6-b202-7e319e04de40",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "65ed752e-980b-4a85-aedc-103837cf6754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbf3762-64a0-4cf7-8a65-dd4f7c2e1622",
        "cursor": {
          "ref": "6bbd303c-89b7-4f12-ab95-9df34723fe61",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "97deec25-eedb-4b97-8d52-9409e559c752"
        },
        "item": {
          "id": "1bbf3762-64a0-4cf7-8a65-dd4f7c2e1622",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "78b736cc-f947-461f-b732-3bab0820e421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821d638e-11b9-4a37-a33a-f01d646779f4",
        "cursor": {
          "ref": "d0123094-f09d-48ea-b310-c4e6577aa643",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c06b3a6e-0737-4721-94a7-83d99081fd77"
        },
        "item": {
          "id": "821d638e-11b9-4a37-a33a-f01d646779f4",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "0614df03-bbcf-48a7-87e4-3a8cf7099f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa4281c-ae37-4754-ab59-fc32a2958493",
        "cursor": {
          "ref": "780b0d6e-6054-43df-a6e9-98dce9349b6c",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "99bd56b0-eb59-4791-8134-c004de012dec"
        },
        "item": {
          "id": "7aa4281c-ae37-4754-ab59-fc32a2958493",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f65aade9-fdfa-4a3e-970e-0e65435fe4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c48a14-12a3-4be8-840a-e023b865095a",
        "cursor": {
          "ref": "b0a69171-d733-4fff-b087-6a638ae8cbd2",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "39b0822e-2b9e-4620-baa3-c806c1379a47"
        },
        "item": {
          "id": "37c48a14-12a3-4be8-840a-e023b865095a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bcb8ae23-10df-47d2-87b2-f672029494f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e36976e3-07dc-4bb0-8999-d19d781ab561",
        "cursor": {
          "ref": "2cad6c19-a07d-47f4-839c-ce8efc403445",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "337cf715-8d47-484d-940a-a4334629eb9a"
        },
        "item": {
          "id": "e36976e3-07dc-4bb0-8999-d19d781ab561",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f3304811-9962-468e-9e89-04b356ec1735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bb1ced-94d1-4275-a83c-a9da4104b76a",
        "cursor": {
          "ref": "6a8f167e-193d-4da3-8a10-a8c173442e5f",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d2d9528f-90c8-4b07-8f60-324161376d08"
        },
        "item": {
          "id": "41bb1ced-94d1-4275-a83c-a9da4104b76a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2d8b9f25-3e2f-4c6b-8930-f33a86ddda55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e52f8c-2a60-436d-929b-538fa933a884",
        "cursor": {
          "ref": "f43dfc5d-b5d6-449e-8ae3-fd2a2d2cce20",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "ce421bc0-348e-4c3b-8bfc-88d5d781fe55"
        },
        "item": {
          "id": "e3e52f8c-2a60-436d-929b-538fa933a884",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "1ec117da-bf54-47c5-93c7-0b5b176f4ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081ea90d-0e63-4291-b0a5-f4b007dfd887",
        "cursor": {
          "ref": "1deb6933-fca0-4082-956b-e4bf8a43fcc1",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f91bc214-5777-4db9-a4fd-4234afe24a38"
        },
        "item": {
          "id": "081ea90d-0e63-4291-b0a5-f4b007dfd887",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4098401e-6c0e-4c56-9217-b6b13aa9c3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fea6772-c6f5-4872-baa3-cca86f99a4e3",
        "cursor": {
          "ref": "79e82e1e-b695-4f80-b6b2-87247fdb41e7",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b492aa9a-1326-4ba8-8256-daaa66d7e751"
        },
        "item": {
          "id": "8fea6772-c6f5-4872-baa3-cca86f99a4e3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "073f3486-92c2-45b1-9222-c2989bd6c238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf68a07-31b0-4058-b8cb-36fa208a86ab",
        "cursor": {
          "ref": "989d3fad-00f4-4341-95aa-b70faa2a5f8a",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4ed7573f-e1f6-43a2-b00e-55e0102847a1"
        },
        "item": {
          "id": "6cf68a07-31b0-4058-b8cb-36fa208a86ab",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "64b62922-0c5b-4d3c-8292-c958cf7fa70d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c76d800d-3fc4-470d-b6d0-5f29859b8101",
        "cursor": {
          "ref": "64bb0a15-a9d1-481e-8073-086e6104bf78",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "650b1cea-3165-4cce-8822-6c513eb38ced"
        },
        "item": {
          "id": "c76d800d-3fc4-470d-b6d0-5f29859b8101",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "24c03704-9d69-44f7-b7c9-9cc42a6f5455",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5010f26c-9713-4c8e-8ec7-716519aa5a16",
        "cursor": {
          "ref": "37021cb2-b6ac-4b69-baa6-76060f2b4f2f",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3947bc57-2469-4818-ad07-9da8ca011c2e"
        },
        "item": {
          "id": "5010f26c-9713-4c8e-8ec7-716519aa5a16",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5f557ba5-087f-43e9-9d95-8e56d9204072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f8fe41d-9392-4c24-bc93-81f1261af3e0",
        "cursor": {
          "ref": "96b247a8-06a3-49d2-8e5a-08d1d138f752",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1cb04fbe-b599-496e-b2a8-9b4ac9c4257d"
        },
        "item": {
          "id": "7f8fe41d-9392-4c24-bc93-81f1261af3e0",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4240bad3-51ea-4d69-aa06-546879d540a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82d3dc6-806e-4df6-af99-8527d3c0eeb1",
        "cursor": {
          "ref": "74fe6467-00dc-4000-b9b1-b66e49e2828c",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ad5eece3-baa8-4f49-9d68-9ec96c011142"
        },
        "item": {
          "id": "b82d3dc6-806e-4df6-af99-8527d3c0eeb1",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "55274096-3772-4055-9235-5c4503d3555a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e4b963-ef46-4758-bbcf-cccc6c7cab39",
        "cursor": {
          "ref": "c8434594-c52c-41cc-b62c-b8e14c9410cc",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "6bea30b1-bab5-4e1d-bce7-a250843c115b"
        },
        "item": {
          "id": "a7e4b963-ef46-4758-bbcf-cccc6c7cab39",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fe68a0ea-5e4d-4586-b7a2-14a7ca7b6ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59528f78-835f-4358-af98-b7df3780447d",
        "cursor": {
          "ref": "2ba265c7-7592-4347-9db0-2c22f5062b2c",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4729b042-1347-4f1d-b125-2697f9d11cc9"
        },
        "item": {
          "id": "59528f78-835f-4358-af98-b7df3780447d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8a7e756f-ca55-4c98-94d7-3b96f4de7ebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36717043-db24-4037-8877-af97fa6aeb43",
        "cursor": {
          "ref": "5fe60092-f0ff-4fa6-9ca9-650233cb9216",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5c85e242-c2c6-4056-8af5-742292533dbf"
        },
        "item": {
          "id": "36717043-db24-4037-8877-af97fa6aeb43",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "992ed2df-38b0-4e3c-a095-13ea42ca26fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faaadbbd-9312-48c0-81df-65da6e80c5b6",
        "cursor": {
          "ref": "a6705c4d-c897-41f0-9bbb-670832afc13b",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f3863843-e63c-4592-9cb8-5fc541cf3124"
        },
        "item": {
          "id": "faaadbbd-9312-48c0-81df-65da6e80c5b6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a7b4be35-37e9-4503-899a-d803eac5ce57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d377db0b-c3a3-4a35-8981-914567ce282b",
        "cursor": {
          "ref": "12655f66-4ac5-4956-8361-99c1b8cacd98",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e4c0236d-8945-4f59-adf3-8427a134c347"
        },
        "item": {
          "id": "d377db0b-c3a3-4a35-8981-914567ce282b",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "293aa1c7-2987-45a1-8768-a25945881589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025454d5-3805-449d-b3d2-a7ba13184f73",
        "cursor": {
          "ref": "b5620fa1-e3f0-43b5-8113-74bbd1008eab",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4a2c3730-2dd9-418e-82e3-33ea7cf12029"
        },
        "item": {
          "id": "025454d5-3805-449d-b3d2-a7ba13184f73",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9746b0fe-f463-4cbf-a33a-2831a8a43aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1674fcdc-5521-47b4-bedd-f86793695100",
        "cursor": {
          "ref": "f565a6ab-86a3-48c0-b5a2-74d3433210b7",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6f797deb-5c65-4eaa-9e5f-ee2a536a7263"
        },
        "item": {
          "id": "1674fcdc-5521-47b4-bedd-f86793695100",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "9b6c2c2e-9a94-4b25-81e3-d636ea81ce8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c113a15-f817-43a5-b4d7-93c7d40fef9a",
        "cursor": {
          "ref": "c7708c07-575b-4706-a80a-752274054d53",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5bf42ccd-7adf-412a-b97b-761d7cc0db9c"
        },
        "item": {
          "id": "7c113a15-f817-43a5-b4d7-93c7d40fef9a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2f33f35a-e601-43f8-b9d1-46b1a66d16f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde4e2ef-18d1-4e0f-ac0d-05b7c7c82981",
        "cursor": {
          "ref": "b03ab5de-38f3-4586-bcb8-b454d167edd1",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "52b76a99-5a1f-4d62-a43f-9ec6becedafd"
        },
        "item": {
          "id": "cde4e2ef-18d1-4e0f-ac0d-05b7c7c82981",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8a80efa5-399f-4600-bac6-70ef76fafc61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710a90fb-0bc9-4ebe-80f7-bd5152f7350b",
        "cursor": {
          "ref": "ffbe500f-7e2c-41b1-ac5d-9c9a14ec6b8d",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "983b452d-4ed7-4c27-8425-13936b7975ab"
        },
        "item": {
          "id": "710a90fb-0bc9-4ebe-80f7-bd5152f7350b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "48bec5ea-6874-4682-ad63-775dd1aee926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f362d4f3-e82e-41a6-b9d0-f056ff81edfa",
        "cursor": {
          "ref": "1a6893fc-b68a-4043-9cfb-c283d6a5c528",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6405ccab-ddb8-43d1-8669-7a2efcc50bbc"
        },
        "item": {
          "id": "f362d4f3-e82e-41a6-b9d0-f056ff81edfa",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "38b85fb0-bedc-4d9f-9b6f-d24ca20da7ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5dc3c96-9730-4bc0-b44a-4f8e5bc28733",
        "cursor": {
          "ref": "1867eb03-fdbf-401e-b393-ac3b107a77a5",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "33b420af-9c83-49c8-afea-3ca1f9a5db11"
        },
        "item": {
          "id": "c5dc3c96-9730-4bc0-b44a-4f8e5bc28733",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "2800d1af-028f-4ada-8542-2880113e2245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eda4ad47-7217-404b-924f-9bf03c9822e0",
        "cursor": {
          "ref": "1d242e8a-b0b6-4894-83ee-7a606b08aa0f",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2eb06337-f93b-49ba-934b-6579dc790d56"
        },
        "item": {
          "id": "eda4ad47-7217-404b-924f-9bf03c9822e0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c6fdfd8f-7b5e-41f0-8f42-c31a33174204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "627e11c8-76a1-4784-935c-5d32dfc23204",
        "cursor": {
          "ref": "4a6c7f19-bfd3-42de-b029-802f33053a02",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6b598be5-3ddc-429a-81f5-af522bb8d96d"
        },
        "item": {
          "id": "627e11c8-76a1-4784-935c-5d32dfc23204",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9f92f3dd-8806-4208-9494-b7a524fe93f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfdac2e-56f9-456e-8aa4-c79312ea3171",
        "cursor": {
          "ref": "9b8dc6a0-7bf0-4c5e-ad03-fb0c08d5d992",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "92860a6e-06bb-4bc7-9000-005b67ab68c2"
        },
        "item": {
          "id": "fdfdac2e-56f9-456e-8aa4-c79312ea3171",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8ec08af8-3fdd-4315-90ee-bb0b4f39e14c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af7c333-d455-49a2-986d-ad7031be3de0",
        "cursor": {
          "ref": "9b13b92a-78c1-475f-89d0-6dc8c582533a",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c0ed1636-b511-4c43-b7dc-905082acc401"
        },
        "item": {
          "id": "2af7c333-d455-49a2-986d-ad7031be3de0",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d3c007d2-fbd8-444a-8d64-47e007ab0b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f155dcd1-b207-44de-9aa2-8469c6e57e3f",
        "cursor": {
          "ref": "0cf17b56-2356-4662-a9d7-e80715ef891e",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2a638dc4-2365-4262-b66d-60b3dc5627d8"
        },
        "item": {
          "id": "f155dcd1-b207-44de-9aa2-8469c6e57e3f",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "238dbad9-2f80-4cd2-a180-9b8a617b558b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a94150-810e-4e1d-b962-cb87429a2779",
        "cursor": {
          "ref": "a4ac7c14-d9ab-4b30-aaa9-4d2b9f414479",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0b4db1c3-6dd2-4062-b4e4-aba60891d4d0"
        },
        "item": {
          "id": "23a94150-810e-4e1d-b962-cb87429a2779",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "c91a4e66-9589-4704-b31f-ed3c225a28f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a5603d-3fd5-4ad8-99e9-41ef9a5c5063",
        "cursor": {
          "ref": "49f06584-0a02-4936-84dc-e0bcea1c91a4",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1414fcf0-52ce-4492-b908-01e03565e742"
        },
        "item": {
          "id": "a7a5603d-3fd5-4ad8-99e9-41ef9a5c5063",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2d066f2e-e628-42c5-b3b5-490b33be492d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8621f768-d9c7-4519-8929-5eccf19611df",
        "cursor": {
          "ref": "20eb4917-53db-47b4-af6b-21662a46c968",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "921e3a5f-6438-4330-98ce-11c0e8209ec6"
        },
        "item": {
          "id": "8621f768-d9c7-4519-8929-5eccf19611df",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ba198dc0-ebab-46c1-adbe-909d8c1af8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe84d8a7-573b-43e5-ada7-e675a4dad4df",
        "cursor": {
          "ref": "224c96af-5731-4f1a-a197-ee789f36540b",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9911aac6-5956-42aa-b55a-428c7806c352"
        },
        "item": {
          "id": "fe84d8a7-573b-43e5-ada7-e675a4dad4df",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "ef8001ea-631f-47aa-895f-6906fdf72009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3369e43c-355b-4257-a826-a2562edfc076",
        "cursor": {
          "ref": "45e65beb-ecd8-41b9-8cf3-70b220faed34",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "776fb2c2-c8f5-4e10-948d-1cc8f3276c42"
        },
        "item": {
          "id": "3369e43c-355b-4257-a826-a2562edfc076",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7bc5688b-b061-454d-af9f-48d2b8b413b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b824cc64-5124-4498-9289-e3ec62f0c19f",
        "cursor": {
          "ref": "00736140-9c60-4710-8211-d256a9f18a16",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a8832cda-2569-433b-b565-45478277ec02"
        },
        "item": {
          "id": "b824cc64-5124-4498-9289-e3ec62f0c19f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4654bcaf-14c4-4e72-bd3a-6ef56753e8af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a2d66d-0f24-4a76-b2d4-02498e3773cd",
        "cursor": {
          "ref": "3a7a6168-2e00-4643-9bd9-10c4bf53e5f4",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "34007628-eb31-4675-81bf-25a15bed1885"
        },
        "item": {
          "id": "99a2d66d-0f24-4a76-b2d4-02498e3773cd",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "cdb1580f-831b-4502-8853-0fcbeb1f2b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c1643d-ac56-4f3a-a954-11b12f4af424",
        "cursor": {
          "ref": "9338e68d-8ca9-400d-b1c1-0bc895ed37cd",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "87e53ba1-9c28-49ad-b214-ac2579f73582"
        },
        "item": {
          "id": "63c1643d-ac56-4f3a-a954-11b12f4af424",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f11f78e4-7ca8-4752-917e-eb1411e1806d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f117b717-81eb-4c6f-b083-1ebdaf0d5007",
        "cursor": {
          "ref": "05796399-174d-4732-93d5-71bd4c0ee3ae",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "f1581ace-9dc7-44c2-8e62-06d248be9bef"
        },
        "item": {
          "id": "f117b717-81eb-4c6f-b083-1ebdaf0d5007",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "699389fb-f21d-43b4-8140-13c8f6c95fed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d88a1b99-9900-489c-8dac-bf7364ea5703",
        "cursor": {
          "ref": "8c730bf5-61fe-4222-a0cd-8c6522bfa249",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7b0dfc08-0a8f-4f43-b499-5c0015d26f34"
        },
        "item": {
          "id": "d88a1b99-9900-489c-8dac-bf7364ea5703",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2ffc4fea-338d-43f0-a701-939897d858e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f6b901e-6c11-431f-b162-505e4c5df41d",
        "cursor": {
          "ref": "9aeb471e-bf70-4842-ae40-0204a46b14b7",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7390e79c-2157-4760-9563-5f4ad7672433"
        },
        "item": {
          "id": "3f6b901e-6c11-431f-b162-505e4c5df41d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "a0a89d06-f012-431c-88fb-90a9d4b16abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fa55d3-ff1e-494c-b899-fca9ca944843",
        "cursor": {
          "ref": "333a877b-6e16-4b3e-97c0-15bcd5fc11fb",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b0ebaee3-540e-494b-9a13-f4574f0edd03"
        },
        "item": {
          "id": "99fa55d3-ff1e-494c-b899-fca9ca944843",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "e785d3d5-86b0-4f7b-8cdf-a00f17e5db62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa7f144-0216-4482-acc5-31feb9fbc375",
        "cursor": {
          "ref": "ce7a8300-74e1-4f6a-b386-34db2575465b",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f31d1009-e78a-4b5e-98c8-bfffabdfe7c3"
        },
        "item": {
          "id": "daa7f144-0216-4482-acc5-31feb9fbc375",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "647a87e6-f8db-4bfe-9b48-574d7cb0d678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daae4669-f3ab-4c4f-b9a8-8c326a267c92",
        "cursor": {
          "ref": "ccbd2aac-38d4-41ac-a166-542b40c94377",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c9b6e004-8375-476a-915d-e88802d203c7"
        },
        "item": {
          "id": "daae4669-f3ab-4c4f-b9a8-8c326a267c92",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c32bd6ed-ca72-40c0-8296-03e3c9d645a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b1c1030-60a8-4536-b07d-08f80f5ba78c",
        "cursor": {
          "ref": "da10cd0a-ae97-4bfe-aa77-58f98ac3b230",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "849f07d2-5881-4179-9dd8-c2457f28ec44"
        },
        "item": {
          "id": "8b1c1030-60a8-4536-b07d-08f80f5ba78c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c4132028-0e97-4e4c-9694-311aef55efc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aac31d0e-b71c-492b-bb45-1e151305719c",
        "cursor": {
          "ref": "6422ab1e-d551-489c-a7b0-168a6c382386",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "f34b07cc-ccb2-4b16-baa7-f90af23506c7"
        },
        "item": {
          "id": "aac31d0e-b71c-492b-bb45-1e151305719c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4d318e70-b6c0-4903-9e11-8ec2462cd1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c521fd-3ed5-4191-b148-8500e68e74fd",
        "cursor": {
          "ref": "7159ad80-0b54-4974-b154-4a2845d55c5e",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "04eb1674-fa12-43e9-ac66-6b6ea2945fdf"
        },
        "item": {
          "id": "e1c521fd-3ed5-4191-b148-8500e68e74fd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "93f73769-28ae-43ae-8a3e-339d76d6af4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92aca1e-82dc-4e16-86ca-b4ba8253e9aa",
        "cursor": {
          "ref": "5153c856-6254-433c-9d43-220eea2be4ed",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "f0ec999d-9335-4fd6-8a18-c7e7e4506678"
        },
        "item": {
          "id": "d92aca1e-82dc-4e16-86ca-b4ba8253e9aa",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "162d208e-ca5e-4385-a95b-9b0e3baa9bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8729f0fa-9a4f-44b2-8567-daa604240488",
        "cursor": {
          "ref": "ca6ebd06-4795-405e-a371-daa9ceac6aed",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e5a8172b-f8e4-4869-adcd-de52ed9e97f6"
        },
        "item": {
          "id": "8729f0fa-9a4f-44b2-8567-daa604240488",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "41852169-5b16-4af5-ae41-94bb1fd354a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc46497-b4f9-4003-8e8a-43b279c057d2",
        "cursor": {
          "ref": "4dbe9e9c-c3cb-4e06-a767-c4258b247c8f",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "47fa39a8-9341-4d01-a069-7fdd04e8e40d"
        },
        "item": {
          "id": "7fc46497-b4f9-4003-8e8a-43b279c057d2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "52f728f8-88b4-4375-b3e1-5984ad5504d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d68a47-b691-4beb-a53b-4fba0e4d2eff",
        "cursor": {
          "ref": "a30ff6e9-9aa4-4e9c-932e-64a3d0614b76",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "dc33e626-d055-43e5-971c-f3d937d18cce"
        },
        "item": {
          "id": "81d68a47-b691-4beb-a53b-4fba0e4d2eff",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "33588bf4-ae86-448d-884b-570f227f08bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31585448-f826-46d1-a5cb-87a35e7a1879",
        "cursor": {
          "ref": "2bdea680-089e-46ab-9c2b-2f9065ce78d9",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a5e6a0b8-96a5-4a1e-a7ae-ec85d778afc9"
        },
        "item": {
          "id": "31585448-f826-46d1-a5cb-87a35e7a1879",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cd95cb41-52d8-40bd-92ca-d1b158c52002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8919af98-74cf-4dbd-a28f-6b1eff283104",
        "cursor": {
          "ref": "4ccc57f1-8065-45cd-9bc5-b4e972ba3c92",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "3db0fbfa-b9c3-41d7-8e97-3eedfdc2e99d"
        },
        "item": {
          "id": "8919af98-74cf-4dbd-a28f-6b1eff283104",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "0cf8971b-80b0-453b-83b4-ff9ba68df0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94baeb8-fb67-4503-a29e-36e63aeb4374",
        "cursor": {
          "ref": "e93e7598-ef3a-4ec9-811e-b4bf09c1f90f",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "650a2256-aa69-42ff-890c-21de3c0dd366"
        },
        "item": {
          "id": "f94baeb8-fb67-4503-a29e-36e63aeb4374",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "e5196331-fdce-4c9f-bd1d-c7a547f509d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8242838-a4be-4724-934e-f5623de1bf74",
        "cursor": {
          "ref": "a8d407df-2b8c-4acf-b681-dc354ddbf6d8",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "fd30ef3e-a378-4fb3-b30b-ee022c441d1a"
        },
        "item": {
          "id": "a8242838-a4be-4724-934e-f5623de1bf74",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "396c2644-4409-4eec-92ea-ec75714e27c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71539fba-23f9-4f81-9754-18ed9bb14ec8",
        "cursor": {
          "ref": "ea8ba260-94d8-4165-9ee5-7f5c404a2531",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "ab92add5-d9f5-4998-b151-96b1cb761b56"
        },
        "item": {
          "id": "71539fba-23f9-4f81-9754-18ed9bb14ec8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9da66606-ef58-4f6c-9c3d-b6e85f66fbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee16af3-db9a-4e63-806a-ec012450dbf8",
        "cursor": {
          "ref": "878c013e-e7a4-4b61-a629-603b1fb7fa4c",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "4dff8872-c1b8-47ef-a151-345db0d5d6b9"
        },
        "item": {
          "id": "4ee16af3-db9a-4e63-806a-ec012450dbf8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "85cdc1b9-7a7e-451f-87b4-1e4fa12273fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68350d1b-da5d-431a-a246-7fe91c0feaf3",
        "cursor": {
          "ref": "2d246863-03c2-4200-937c-65a7b7e9fd0a",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "dcccfcb3-daaf-4761-9901-65d428841692"
        },
        "item": {
          "id": "68350d1b-da5d-431a-a246-7fe91c0feaf3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "9c5fa0d1-be43-41d3-b3da-79182239946b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f5b748-1913-42f4-99db-85aa285a3d4e",
        "cursor": {
          "ref": "75ee45e7-86ca-42eb-a255-ddbd2cd438a6",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "422719b2-1216-4dec-b275-f7253c824775"
        },
        "item": {
          "id": "31f5b748-1913-42f4-99db-85aa285a3d4e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "25f1f46a-d64c-476d-a626-49b7199f2624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf100d56-b7c2-4141-a134-1ea18f4bb375",
        "cursor": {
          "ref": "60359625-a976-49d0-831f-0adc1894b247",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "345e3171-f3a3-405b-b623-679aca8c0d81"
        },
        "item": {
          "id": "bf100d56-b7c2-4141-a134-1ea18f4bb375",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "d553ea46-39b8-4449-8ffa-e96b948f5860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74f0ff0e-b07c-4a46-9580-2982935d5a9c",
        "cursor": {
          "ref": "d0d2dc66-c4b5-468c-a47e-9c5247deff6c",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "4f35f9c6-0280-493f-a827-e428672dd090"
        },
        "item": {
          "id": "74f0ff0e-b07c-4a46-9580-2982935d5a9c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7254545a-5e3a-4600-8a6a-20ee9b3a8a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e26b28-477e-4434-ac05-06d4e6818357",
        "cursor": {
          "ref": "f7c45720-4d47-4925-9fff-9fa41ad7938c",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "b98c8293-bce3-4ac6-a54f-0fe4fa31e4cd"
        },
        "item": {
          "id": "54e26b28-477e-4434-ac05-06d4e6818357",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "e4c71569-e56f-44a4-b0ac-01f99d822f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c41a29-8de3-4738-9995-9e93d7d249d5",
        "cursor": {
          "ref": "ca110cc7-15c8-4439-bf1e-f2afb3f17d5c",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "2e209f96-58de-4472-a80a-11bf71c7e998"
        },
        "item": {
          "id": "89c41a29-8de3-4738-9995-9e93d7d249d5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8bcb603e-8e42-4742-a99a-b7c2e1e3c9dd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63892fc4-6c3e-4e5e-9d85-bc78a09426e5",
        "cursor": {
          "ref": "4076110b-5dc0-4104-b33d-33a7e350a4b1",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "abb82e08-1792-414b-968f-843268adc6f7"
        },
        "item": {
          "id": "63892fc4-6c3e-4e5e-9d85-bc78a09426e5",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f4ae9ea7-3bb3-41b8-830c-a864f6791b44",
          "status": "OK",
          "code": 200,
          "responseTime": 103,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f612bad-da5d-4580-9a70-5df74117a1d5",
        "cursor": {
          "ref": "b40a1ad6-5107-4f9c-848c-0d24cbfb1aff",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "7f2448de-a298-4cec-ba53-f51641367233"
        },
        "item": {
          "id": "5f612bad-da5d-4580-9a70-5df74117a1d5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ef08acc6-7345-41a5-996e-e53dd59e0cac",
          "status": "OK",
          "code": 200,
          "responseTime": 1657,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7e07554-4294-4e9b-9458-63eb997437f4",
        "cursor": {
          "ref": "d79dc063-88f9-47a6-9f99-5e6e1d308012",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "aa761354-ed6d-46d8-b6d6-1d511a41404a"
        },
        "item": {
          "id": "d7e07554-4294-4e9b-9458-63eb997437f4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "981e146c-b6d6-4fe4-aa9e-2bbdcbc14209",
          "status": "OK",
          "code": 200,
          "responseTime": 1496,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b2f539-3615-4094-bf47-084696e20668",
        "cursor": {
          "ref": "e72bb470-f09c-475c-941f-0e0694f3f782",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "57518311-f251-4564-ad6c-ddae764e2503"
        },
        "item": {
          "id": "d6b2f539-3615-4094-bf47-084696e20668",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d9cff495-30e5-4b90-8c88-40481474fddb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b2f539-3615-4094-bf47-084696e20668",
        "cursor": {
          "ref": "e72bb470-f09c-475c-941f-0e0694f3f782",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "57518311-f251-4564-ad6c-ddae764e2503"
        },
        "item": {
          "id": "d6b2f539-3615-4094-bf47-084696e20668",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "d9cff495-30e5-4b90-8c88-40481474fddb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb703196-542e-482d-a4ef-2ffaa068e105",
        "cursor": {
          "ref": "25bff532-7d3f-424d-8d6a-d35cec764da1",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cdd01868-0a48-47c8-8a80-89acb860afd3"
        },
        "item": {
          "id": "bb703196-542e-482d-a4ef-2ffaa068e105",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f3aa7280-f22e-4e2b-b4df-76fa1920e43c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6438817-a017-404e-8e4e-b502218d6b2f",
        "cursor": {
          "ref": "e1e2bec9-341d-4e43-a1e6-36a8092ac9ee",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "318b9aec-9b82-4935-ab9c-7692a7b5ea34"
        },
        "item": {
          "id": "d6438817-a017-404e-8e4e-b502218d6b2f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "550de155-72e2-4265-8037-d4f0e4e5362a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}