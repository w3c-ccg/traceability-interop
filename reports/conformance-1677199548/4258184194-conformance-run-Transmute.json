{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fb9f7707-1cec-4f28-9bd9-00e1d0716c56",
        "name": "Clear Cache",
        "item": [
          {
            "id": "73aa0e53-2db7-4c70-9a17-e7e8cac7921b",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "20387f0a-bef1-44af-85a8-e53cacad91a1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "57a44de7-9d0c-4599-a3b2-424cd7a3b377"
                }
              }
            ]
          },
          {
            "id": "90d2999e-4864-4164-a344-b4873dcea03a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "80c587d6-b5ba-4659-b263-ad2eaf34918e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b56a2e5d-599e-4a59-ab38-537c527077db"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "57354891-43dc-4638-ba04-33b4998e715b",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "cd47b94d-f132-4358-b10d-9de38259b4a2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "51f84000-e4fd-4d16-a7fd-d358591b379a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "279324f7-416c-4ab8-8b1b-f2368ec41a85",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0ca4116-22a9-4e96-a950-67887c64e256"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "73ddf120-dc45-41b5-b11a-ec0989c7290c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e58c3a1-f166-400b-9a4c-3e3f6f8966c3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a55ee76c-e880-458d-8d52-02901e04e531",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2788f141-0259-459e-a06f-4104b99f4e37"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d93fe20c-8ab2-4e7a-a035-78e91f131508",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "dc491d4b-28c4-4a3c-a251-281bc594661a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c32ac018-ba18-4680-86e5-9b88a65547a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5a02c71-df7c-4c06-8b5b-59c56975c084"
            }
          }
        ]
      },
      {
        "id": "19db6610-6557-4f92-9753-ce0ec31fc7b6",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a889b9be-60e3-4fbd-a6b0-2dc8350db6e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "da9137b0-ab2f-4d9a-a99d-fd8ff5d34cf4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e86f8307-09e0-4d07-a3db-802c006c9fb9",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d458ab-2006-48db-8b5c-d06a75f87319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9c9f51c1-3461-4324-8078-c2b38ebb3a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2003a79d-b2d0-4aa4-849c-d349ad3ab231",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c03bdee-7e6c-4ff4-9d92-4487182b5de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "61bd8002-9a49-4078-8c24-6a23f2dadb32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4882d8f-bbcf-4ba1-953f-97e1557cc5de",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82b2445-e251-4a8c-83bb-5d55c3417a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0712a5af-979c-48e1-a86b-8848f0fd2045"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "aee63ac8-7778-4b03-90fc-62b07f10f808",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef28421a-be98-4867-a917-986a1ff0dc41",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ba39ff-a30e-4f38-ae29-7e0a801722f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a3279eb-c2d1-4bc4-aeaf-d219727e2df2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42900ace-c5be-46e8-93b6-01189fbc940e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95ffb37-c41b-4e30-a871-09a8dfbdc1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f22b547f-d388-4594-b3a5-4fa7a5d3c358",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d26b2d-ee06-43e3-a3d4-1efd076d7afb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e842616-1b60-41d6-b78f-7c3bb551fe52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a718ffe3-8e51-482e-8461-0d80c4c594a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "83cde1c6-fa6f-4974-8d14-86a7073bcc4e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a4ad7b67-011b-4f6c-9ee8-307851e58449",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0973c621-70d3-4477-a5e7-5ac0de7b29d7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c2bc108-8f5f-4bc5-9145-18cbeff13337",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e8af4fd8-b352-4dbd-95f6-06152ca2c18e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef773795-d867-49dc-a9b9-e738e86e996d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "db0ba49d-a91f-4123-a16f-8c9bf045a8bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cfd6fbcf-f90f-4325-b504-72cc730d9cf1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7fbb9f19-bf2c-4049-a9a5-304d80ba4004"
            }
          }
        ]
      },
      {
        "id": "8a7ff456-26cd-4e11-a984-a9972909be5b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1888c283-f4ef-4566-94c6-23e01d281061",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d7971f8-5d46-43a9-827c-1139babc7ba0",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "c7ad4e1c-aecd-44d0-b246-4dd0eb6f125b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61041cf0-4d76-499f-8562-1d85c3923459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf4d7ac5-99df-4433-804d-2401646bff4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df330366-74d3-4a41-8c66-763ee3735276",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78c16241-311c-4ba7-b87c-ce955b85638f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361f9908-94a2-430e-af90-e756a27611fa",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc9260e-f650-4f16-bcd0-24edcfdf0b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e5cf75-59ac-4c1f-9631-a1f857e5aa92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e42f290-3f80-4909-a345-7bf073039a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63cf64b2-67e8-4b8e-ad39-f98d56302b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e274bcb7-ea9e-418e-8211-f002a4f025fb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be26151-9ec6-4cd1-a5f9-d2a12fbe1c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14e257b3-0517-4a47-b7cb-1de92d7cd974"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1943f304-4337-4588-b6d7-ee9f06ca418e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4c0c216-2c72-426f-a67e-bb3105cd92b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf30c42-6bac-4a31-b5ee-8481eed71f84",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee463eb2-90c2-4e49-8add-88dd311b3af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce0c4c69-81ff-4a71-85de-97ea50fd6095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0cd1e6-1c45-4736-84fd-679553006a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8245dbb5-2c37-4238-8dfc-ddeb8fc3f86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d80eff-da42-4726-977c-5ff50f455192",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b176fe2-35d7-45bd-896c-99cca2d6d317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7133368-c560-4707-b00d-177d39203eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2b9061-ec86-46b9-b84c-43cc74564b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba358d7a-f90b-43b2-a58c-98d9bf531d60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0cae2f1-c53a-4477-837f-3649b8ad015c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfc57f29-f507-4dce-9724-2ad86214ed20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87737291-3ad1-4832-a4e4-727f56116f18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0a101e1-63b3-46f9-a9b0-f3e05960f6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1b29979c-6321-4904-9a2f-e9e1ae06a26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97751ca3-dea5-44c2-b625-cf61cd2f8aa0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "187860b1-bac1-4916-89d6-457d26c49bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4860d0e-b5b0-4c9a-9ba4-8493948f24d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc62ad3a-1e59-47b7-bf6e-092a5c30972f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8352f109-1007-4d20-b006-902348bbfb5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda9c30a-d22c-4573-86d9-c348ff72e8c6",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d6a54f7-e3c6-47be-98e8-57546e36748f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d8fc20-ef7d-40be-99b3-f31202b16eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ae2130-981e-41e3-8dd0-5ead51c464cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6c722d2-1ed3-4925-9d85-45a590339006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60451f1-2c8f-4ea8-a392-4c838b3b3fd5",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c0b945-02b9-4a1a-83ed-bc58ad40533b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6df3d41-fe87-48c1-bb3a-eea2f73945fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b1ef7d2-0316-4794-86b6-f244a09872b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a1fc5692-30fc-4b59-9422-7467df83037f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c02c923-cba4-4dd7-aefb-96c7e38c1b15",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d784bc09-c175-47ff-80a7-05dc8ebf927d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a24ac3-6777-4b36-8b24-7c8435cd02f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f6ce9f-6f94-4479-a5da-848efb14b873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d216334c-9fcc-460d-b534-a48901d394ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73dfd6b2-6fc2-4498-b285-5e89eb21cf3a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7649177-dbba-4fa6-adba-674c303ac877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "211ddf23-eae8-4d6f-8ceb-2946a5bf84dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84156f9b-ca86-4437-b5c0-b7390c365c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94e56091-bc62-420c-8ef1-1398a67105a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e8289d-3398-465b-af90-f3d9e49db880",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9109d366-8d29-4cf3-ae34-5c0fe581d129",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e26ac3b-fa3d-420b-bffb-ccc0d59318db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d70ed4e-ce8c-4f40-8cbc-02ad8c4bdd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf56f361-774f-43c3-b4f9-63f9052b64e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa744619-3d29-4c66-a6d5-b2c107babf42",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00225b7a-c6e3-4d3c-afe3-5637aaf724f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8a1202-a30e-4e59-8c96-fb716b8fcd50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2f979f-ef2f-466c-a3ee-27db16258c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db845192-7bb9-435c-9e54-2cc3df23a41a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3f04f7-2a0c-46b6-995f-1c68c1073bb2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbb13b5-b6d4-480d-9b90-551e5e9866c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccee9c44-cf9c-4f75-9ee2-fec6a90d5105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92b7af2-4237-4923-8524-6d0b06e9cde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3b50c7f-fabb-4521-9651-94139356a2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a951f50e-f7c9-408c-9e86-f3929388d0b5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecec2de6-a7cb-4f62-a989-0993a80693ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e98858b-152d-49cd-97bf-7b383dd2ce73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a39f8134-bbee-494d-9a0b-e2485103b740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d8a792b-fb93-4c3d-bf45-eace3f951210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db1e950-a680-43ca-bf87-5f339d4d995f",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4361a8f8-9b62-4a83-9487-d95a96610bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7143cae2-845e-4861-957e-f444801f6dbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ba9273-6ae7-49b5-8e89-4991e3cf2dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "053ea7ae-4943-4ccf-a12b-e02a599a503d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b693ffa-d045-4b32-ba74-a4dfbbef106c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aac036a7-eda1-48fb-b3fa-f3e3cf5865e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a8d817-02b8-4538-8cff-54e68092536e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d746705d-53b3-4788-b8b6-762dd7e2e6d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "00c934b1-784b-4386-b434-49938d40aa2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c16eb79-bc89-4877-afdf-cdc0a848d8d5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ddb4068-7ad5-455e-bcc3-6fb710a81cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e90c3ad7-605a-45f7-becc-7f7a9f93aba0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1386bb-2af4-4751-a168-43b47a6d995b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1453e508-b8dc-4e98-a8e4-5954e16cb31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39436bb1-a558-4655-b889-560d353fa225",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c279dc4f-1ff4-421b-ad0d-432eb67a8111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5f9df1-55b7-42e9-a3b1-82c4f7c4a62e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df6485c-512e-4fcd-bc0f-82ee29f152f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd3a8574-eb49-4abb-bbfc-42ab4cb95e27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103fb817-76dc-44b4-bcb6-06a4fe3bec2a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b431e133-ad49-4f0d-907d-5d93df631524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0f173e5-be71-4c4a-9af2-30a59df5677a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243fec3f-5ee6-4d13-b049-51596a450bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "952f0892-a508-40d6-abf7-9148b2ccac09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65f9094-2073-4aa7-bb25-02b0043162c6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c6b17c7-9527-4c22-9153-9d0cf94567e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9326858b-3031-4b24-97d6-77edfaf5d9a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04533dd4-d607-4418-be9e-ad9a7b7082e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f926dd8-ed93-45b9-8458-c48ce7228d31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86b2adf-4aa1-47e8-9539-675618a10ada",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79942e17-2c08-483f-8395-d995cafaafe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb96a74-8fcd-4caf-b1a7-30712eadedc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65792ab1-256a-476d-b3c3-140c3d000b36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c189c6e8-4408-4ed4-8839-48c0624bf9cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619cd0df-bb02-4a96-a882-e9ef25e8fe0f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02435b12-d875-403d-9ba7-84914c84f63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3011d8f7-33e9-4b10-aace-c8d5d3691c5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f184f38-c30f-4d4e-9365-80a5a9023297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "449828a1-491f-4b54-a21c-1170cb966a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ea51ca7-1f5a-43b5-836c-764392f2e214",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8464bdb-9832-486a-b472-2d5a00f2d5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b345feb1-ef99-4e05-94cf-6a6ed495bf06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85fba09-3cbc-4700-8423-8c154f4f6e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "58b9228c-7b0f-4fa1-afcc-c664e3ad4737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a1a05a-ac97-4b69-96bf-d16332fab60c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eb175e6-cece-4ce8-8ca0-a6d3083b0c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b24634-6698-4fe5-979a-f1d74f44c4ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2414e86-23e0-4e25-9197-40cec6b9df7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "782644c1-4057-4ef5-b14a-2dbbe19b7483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69ba6e6-702b-415f-a92f-fb7eccc95f29",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6b1afd-32cf-45c5-93ab-dbf10f2fd62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "daeb99a3-3520-47df-a196-8de5abd59cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "786e28e1-b8f4-4bb5-b754-31d4041dea80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "59aff44a-0b6e-44bf-8eca-c70a2507172a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2847a926-8260-4996-8223-4b95b6036515",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932587d0-ef7e-45d3-9266-282cb3569845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26561d78-8f26-4012-91bd-151bb97d50c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a10226e-a063-4d02-bcef-478b15ab42b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d1a9291-4657-4517-8c0c-4f88509bfdbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338b48a4-8073-49f5-8a21-825c5ff6f0a1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d25f40b9-a4ef-4619-8ef8-b427533b0520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738c6f6f-c6ba-465f-83fe-aa43261550db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651f4f1e-4134-4531-8851-854a8f541721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bfe640e-7d21-4409-bf78-0016f899ca69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13dccfd7-1043-46cd-bae4-39126c3b1105",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4770384-3a1e-44fd-8d90-d91478328176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83eab150-f6f6-4c74-8dd7-d32c3223b84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a1d66b9-eb18-47c6-8767-fc4b04a85e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7423e47d-0fe4-4a9c-93e0-fb1ea02de08b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a90d2fa-248f-451c-aaf1-b4290ffab131",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6db10cf4-cfaa-4067-a83c-a1537f2c5789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45fcd982-dcf5-4fc7-805e-5ab50b895ad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73d9fb79-bb27-485a-9a22-4802a10b82dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b90f795-6797-40d3-92d9-ea34a075776d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd4e951-2c16-4301-aa77-f965c047ddc0",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de7e91ef-1280-47c0-9a31-65e5c5e9edb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc1360c4-9b04-41d1-9194-0c073146c96d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "306a594c-58d8-4a88-8ca5-ab4aad07a5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "22b77489-87ba-4ee3-9291-4811087cb55e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba0ea9c8-7207-41ba-bec0-f936d10a2c5a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b331586-5885-4f89-9d71-a64647593e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80bf7f25-111e-4471-ae88-2e68ebd9cf2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f777c406-c80b-453e-9e61-17103357c65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64318f4c-1b6a-4f0e-9bd7-8257b869eac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "466aacd3-0f08-4d2d-b526-20dee0e42929",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f680a01-d652-400f-81df-222a963322ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509c162a-287e-4c87-847b-83c8a96a1398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc175a0-8dff-4364-8324-592e217a38cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f893860d-1cab-4ae5-aebf-df2e6d47164e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6288503-ec35-41f6-88e0-01e567d57e1c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b67128-7d6b-46ea-a10f-e1623fb05b62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37a25210-a0c3-4a76-b489-7f6d507c4bf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c14c103-9861-4e49-a1e7-819f2419de20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eea57e1c-dfb7-4665-b28d-3e1db3b50646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cac5cac-020b-49ac-81d4-fe8a00b5f858",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57e131cd-817a-4fef-a1a7-7b79b4beac21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "445cc05b-71d5-4999-b1f4-6dc3811adf25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d31e6a6c-89e0-4d5f-9b0f-362549a0db05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7b04f7-57ac-4558-91b5-fb137eb4335c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac21c41a-de98-4f0f-a25e-97307be6f516",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05610d9f-3166-4aa5-b690-506ab5dbeaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9d67d74-40c0-433c-b2d9-5a58dfb25a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74376408-7d53-48fe-a246-c22da6b8a0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2799e06c-cff7-442e-8629-a43de0c2d5fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23139fdb-045c-4911-9205-495c02f39a25",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145bba41-9b8f-4b7a-a3cb-c8711a9e0c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "678dc657-622b-43c8-9037-855d5539efb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24300f2d-613a-461f-9510-b71d158c44d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "21b4c105-ed49-4660-9a2f-c9a61ee788fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af829474-dc14-4996-b5d4-1f227966a5c1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137437b9-ab24-46ab-93a7-89fc66cc7fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ad465a6-1e15-464c-af6e-de90de2b5af8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d9d397-2627-4346-ae7e-4fe775543d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "63431168-0ea3-4954-b0eb-40a83387ff33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b16e4ec1-2bd4-4edf-81d5-47d58e16f6ec",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c20f0c-3cf5-4918-9659-4a8301c0c845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9cb12cf-d466-43f4-b308-67e35d1036c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd60269-e1a0-47d7-ac21-125e67b3209a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d587bcde-6f07-4ffb-b4c0-18d0aeda6112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8c8782-81a8-48b7-8d1a-778c03432dee",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088739e8-4642-4453-b981-3fac09f714fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "803d917c-e212-4ad1-8e07-4e290083588a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f9823b-a2ad-495f-9d26-77e467902c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f169fb9b-c56f-4639-bdb1-48b8a6f090df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c8ad7d-81f6-49e5-9d20-68c7f474f4ba",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecc9cb8-06c9-45fa-86e5-9902921b81c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a32a88b-8289-4a1c-9b82-3ce7b11bf0c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e8b5f88-7616-4885-86e6-31865b9136a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e829c827-3fb7-4de7-87e0-b1a8dde2e4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460be878-5cbf-4727-a39f-3b91ab9c3798",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5cbf8f-27fb-4d5a-89cb-d391a0f2ca5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b2bc02-9d41-4552-89b2-3e8d3cebe794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f418a22-b2da-4b94-bf4f-19aec3dcf25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "733aa1bb-184a-41f0-9cfd-2ee02201bbb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7188af91-7d3e-475a-b33e-0f51a72cd6bb",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd8c9b1-de9f-49c6-922c-895d5f7d8518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "934c7430-878f-4f8f-a655-6cbbb4717a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f8b999f-80e5-44fb-9e80-2fea9b7f44f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f495ad-16d1-4681-8608-5069776bfd1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc729f91-998a-433e-9b75-8762267edef7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87abf56a-7a54-4907-a5b0-60767169c67b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaca9ddf-e0a4-4ffb-8289-a32f4263d20f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a4e050-edb6-444f-881b-6b66b10f07c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0311a8cc-2c29-493f-9531-377bbe7408c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e187736-6849-45a8-a6de-eaaf27343009",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17c016e-685f-49c4-b970-6abb53c08c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8700fdd2-9eae-46c0-a0dd-ce1e4635f63c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba4cb60-d9fe-4585-a16d-8f7b6bbf9dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "43484d02-f54a-4ed5-bf4a-833fabede349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0d6c4d3-cf83-4fb5-8076-6a6841a569db",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd41c85-e3f4-463b-81e7-ed75c8389ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d262a88a-c687-46e6-8876-7441111ca6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0de509-3ea6-4613-8beb-51683945fea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0719cbf8-67bc-4bf8-bbb2-35ad6fd2301d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bd9eb5-a185-46a1-b155-4299db53d553",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887a2027-84ee-4424-879a-0eb11f21aa10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e28401-3607-42b7-865e-29c4da70d5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40261284-1d83-4c07-8cbd-226a22cd0ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6c7a24-e3ca-4398-abca-d2f3334c2d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38ff88e-6a65-441f-b031-096eed062ef3",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdf466c6-d364-4b4d-97e3-d0f5c6f98519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4822f9a-0c30-48cc-b096-3e28d85015e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5463bf9-75cc-4013-b618-6e5bd66ee4dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e9e1583-0d0b-45b6-af8e-e719321f603c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98fe8713-3f70-467d-bc5d-aa2c78ebb170",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31af82a2-1c19-4072-b06e-cd1211716eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a2cc078-da30-4b9b-8fcf-29a5f0b79367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5d5ac4-fb3a-4135-bda6-98cf145bedc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b3363b1a-aa88-4815-9469-ea8763b2e341"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e10ee0b0-495f-47a1-bbf0-bea0698549fa",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ef0636-6c31-4601-aa75-af52d136536f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e9bb8d0-e80f-4993-8b59-a3d18afa1996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae087b2-2c7d-42bc-931d-d9dd257599f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3d98aa60-fa25-45d1-abd6-88428548d280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8733de14-03ac-4c45-9fac-f7fc371d2643",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf0cc38-8614-454d-aed8-a98a21bbbbc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c9dfe4-caf5-4b49-ba4c-fa729eba8db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "998c041d-f9ce-4ca6-ad0d-12409d4dec2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "77f8f1c5-1012-4785-aaa1-38a6a3caff6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95ae0fec-7a54-49f0-b414-e17d8a475f0b",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f474427-2143-45da-82dd-8fcf891c4f96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9d6fa7-fd8c-4e89-9703-be3f5c475e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5f2d1bd-8aac-41f0-acea-1d1b57c9c31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b952bd6-c69a-477d-80b2-e7c6760e348f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf4ef160-6b5d-4880-981b-b3aa59b106b8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f566c231-2542-4ceb-a6a8-54f46015cfb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4afb5abe-bda1-4cc6-b0b2-550bb8b9b6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6f1377-2ed5-4953-8896-93bca707173b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5344e83d-418a-4b2e-a7b9-9ee3c84200a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cca5a9b-6200-4b7c-9ed6-f5f400a25bf8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4178fc2b-b568-446c-abda-6acb5c979e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a36576c5-0956-4f36-be99-330faf6db6a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac8b90d-7dff-49e8-96eb-0488065f9ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57ff82d9-ac6d-455e-a9d8-f2af7b382605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431dd8f4-d1f6-4c55-b3a6-60d09fea0d85",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797a82b8-f33b-4c2a-ba4d-6bef592e4613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2edeca-c394-42d5-9af9-32115d517df3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf207c67-f850-441f-85ac-5a546c251c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fd01e39-a916-44c5-9711-a4874e08dd86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52114aa6-5720-4791-adbe-9bd30b11f1be",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e735bfce-ede2-41df-8017-d949823e3191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b339114c-cdfa-475a-ada8-ec9359b9c2e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bb342b-9d48-4780-843d-0db611395642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "115596c4-ce7f-4f30-bc1e-00583cecb1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2cdc4c-59ba-4223-83db-bd3212edecf1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2661160-fbd4-4412-87f4-115201ddb324",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d52b5b3-578c-4fa8-95a7-d43d454bf094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb6f92f-7063-4896-a713-b48dfb0133b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3fe584a-9804-46c7-b55d-5760f527dafe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5b81f5-a078-4674-a7cb-031a802def4c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b12629-ea7e-48bf-9ba8-b546631a53da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0873fac3-7e39-4e83-9eb8-a0b87cd5cff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5530b1-1477-4a9f-adf8-fb67a4e14ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c129f9b-03f0-429d-802d-fa920b97c045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96715296-1790-4e33-b287-da5ac5c8a7d2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9a9d6fb-7888-4688-b711-528bd926cb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9eb3360-ebaf-455b-af3a-0849d84be146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7030bf8f-f680-4c1c-8d5e-bce29b5b1f23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4cce569-2f6f-4549-80d7-c36094cfa638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370f0729-3fe4-4c21-89c2-de7f216b23ad",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4dfc1f5-0cb7-4ab1-8f23-1e63e3ffbabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4ca6a3a-1271-480f-bc9d-1a368b2b29e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9435dd-5da6-48a1-a0e3-8d45a66ffd7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "76f5aac9-f66f-4963-9f63-6a54085dc82c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f73c71e-f1aa-4a84-96a8-b3e09b3beaef",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e3cb55-af1e-4f6f-ae56-4c873cb19767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf9c0e4-595c-4574-bc53-b6159d670cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1450ea15-caea-4813-9fa5-bbae8c14c266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c3d0a00-7eae-4ad7-a597-9c1527110383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b5b6c4-34c6-4f7d-a528-1cefafd5eaa3",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db47afc-fd6b-4e26-a363-de0bd1151c1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a48927-dd6f-4f57-86c6-1e699311cc12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e521350-4018-4ec2-aafc-3988cd16de00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4970f3fa-3c0f-4737-b4df-51e313c4e7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e2eee2-e3f5-4a55-8a80-7f686add7278",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7406c1d-aab3-43c9-8bd9-6a7026cb72df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f80d4417-6c6b-483d-8331-190cce8dda71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4ee0342-7c66-467a-a033-fbca0a7b2549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a06464a1-a511-4869-aa5c-5af11e4ee210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a05b5f6e-5206-47fb-9641-11c3a9893dc7",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61256d3-1b72-4771-9305-2883798c662b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49f10acf-9b45-47f8-838b-763fce26fa2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f12bf4b6-e9db-4899-8f11-edac878c40fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3ad9313-0f88-4e3c-b389-3960f3f69e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87aaecce-15b1-492a-807a-c40530aa74c1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3ffa00-b892-4f4f-95bd-0e0f76cdf376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ceb345d-1e64-49bb-9c4f-93e3fa24d51d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799bbd4b-d772-4377-8c30-8cc301721861",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "085b15a6-055a-4006-abae-e9e2a2a38d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5007dff-385e-4090-a637-11b7cb6f6b36",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e33a877-eb62-4ce9-ae7a-8edc2e446e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ce43fa3-6f92-4055-bc14-761f922b92d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6d6f36e-e987-453e-8f7d-ea26b3c527fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc53f09-05ed-4e86-a1dd-7116114d8683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4cd49c-3264-423b-b09b-d24f74acbb20",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6b19c0-87f9-4f72-8557-c6cec6c840e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c597c65-dbbf-47e8-a4c8-f624d06c3222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4acadc3-529d-4cf0-b7bb-105f8e85341e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6ffa1452-a513-4c14-8f32-954cf7c06c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995f5659-b266-40d8-a404-5b3af22c66bf",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c490d78-ac3d-4266-a1e2-2202601f448b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b75ed1-da98-4796-a0d7-fbb1f67a66a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69534948-bae6-458f-bfbb-1b37c8aceaf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa934d79-f7b4-4af1-9c01-a01408eced64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cfe7d42-ca23-4213-a545-f871fabab316",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5bc2c2e-e899-43df-86d2-0d45d0a02a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50b1c8a8-7978-4eb8-9edb-f2c53c5266ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8e97e5-b092-4d7b-bc13-fb96b6b2bf51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "433e84d3-38eb-4058-ae96-e848752fd996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a60fc6db-039b-472c-8810-1ea5c6437848",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f85965-afeb-4e97-8802-fdc179b098b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc355433-0a43-407c-9000-603474fe6b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c858099a-b305-4587-91b0-31baf4b21675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb166486-7be7-4b2b-9704-892792a70baa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e340d6-2216-4ac8-bf26-719c57f6d536",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b762b871-8570-4dae-bd94-c836a9dc7c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c87816-79fa-45d7-ac05-e8cac14a72d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35da4333-13da-462c-b061-85ea33ddaf44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7aba9da0-e876-4ad4-b3cb-ef9589c55fca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "967fd7b0-d62b-47af-98a1-95121720d27b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b667a98e-9a03-4420-92a3-3271be13fdbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60cdf0bc-4203-4723-bbe2-3d03aa956a11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2d2a2a-1e0e-4671-8205-72b87a56e7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6709d992-5961-49a1-8aea-6a2d2a67e95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eedd7aeb-4478-479e-931c-f00c6788af93",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17230ede-a180-4f12-8034-176520b817f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6661d82-fa2d-4622-8c07-46ed60c42b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6599f962-0163-44d1-a1b5-ac1a8cbeed61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4adf142-0ae5-45b2-b097-1db9d4d74483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83babab6-29e1-4664-8d50-3bed079bcd60",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a934f20d-3de3-44d8-b5a2-47eed28ec118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b19af708-d889-497f-a9f3-712d8d2d81b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b2a60c-7bc9-4d31-a27e-d7c374659f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dd70d8bc-67d9-41b3-b5fc-b251095e2f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "355de56c-7b65-44b2-aea5-ceed518b28a1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ff5fd5-c332-4fb5-9b5c-8b4ff7c84dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16784882-b67c-4499-8d23-31fef7836871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbc5446-068d-4299-977b-aa3b4fbf551c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd42371-a05d-45f4-9a8a-824f0a36c5e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02d2626-a002-40ca-b130-ff79bf0d0cff",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7165fcbb-16e0-4d03-8e87-c642858286cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3486b474-1f4f-448d-b964-760105ca6368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6ba1d4d-58a9-42c5-be4b-d3fc1fab2ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "63a18174-9a16-42e1-9116-177a470adfcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc4f6bb-ffc8-47de-ae74-c96565ae8925",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "931154d7-6af7-4930-8923-ed7b1bfee658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f43a6401-8c4e-4d52-b73e-083be41dc631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ff54ccd-bf82-4f7d-99bf-26e644151aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bcde0c9d-beda-4463-a709-075cf044989e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50bf646-8034-47d0-8f06-713dd2f639d9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af710d4-749a-4cd7-8d60-d43ad9dcd90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1130e39e-3982-4a7a-a618-6cfd2c488a6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b6aa141-030a-47f6-a7ff-b36a22f796ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c45a06-b100-4b1f-bf59-a82557b7c742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2263b1b3-4ff1-4456-a75b-cba54e039a59",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeabcbbe-ed95-45e4-9770-ca7b399e9fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e498cea-e0a5-408a-b235-d297bf5067ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef1be4b-676c-4f8d-8f46-364cea5d5305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d41422e7-449c-48f9-a727-a92ad043971c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09a84399-094d-4ca7-9ee6-fe01942f3e42",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b47aee-89f9-4780-a294-4e8258e6dd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "368863dd-5332-4fa5-ac09-6ce274842356"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eac05cd-9607-44d4-911a-51bea8606bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5b327cf2-0521-4de0-b7ac-40074c6bc5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b905dcca-f703-4db1-86e9-cade63c7f34c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6540f03-f778-4a7d-8080-d38066d479f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2eb5725-f97d-4549-b161-32368bf2eb12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950280df-349a-49f3-8fba-127ccb5d4194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "76f16da6-77ed-4a9b-80d8-19f6b85217e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4288c059-12b9-4676-942b-aa955f706fdb",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9c86bf-61f6-4e3f-a633-83ea8f4053cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6e56c1-df47-481e-a659-83b2157e871a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9d69e3-d9e3-4070-94d4-1dfbd3af92f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f085e6b-d635-4b90-829e-1cbab9f48935"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cec3817d-3a1e-4618-b3d1-7a95f03cc523",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85646b24-9acd-4b57-9d0e-aa30d7bb55ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b077a44-200e-4c92-9966-a3c5ee96c3c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed5bb6b2-b545-47b0-a498-6af9599f1660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2502d95-64bb-4bfe-adff-64e0c4df18ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f70dd49-651d-4c29-b932-f863ad037083",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0aec5a4-ae9c-4025-96f0-2f63e2480aa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ff8b282-a468-4323-bcd7-b2e01bfc9d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ebd04d-f38f-4efe-8e60-ff2398ba9429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e50fed-45f7-4f55-8efd-9f003c83c189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da7999d-ee80-4c6d-be29-eb3fffcdb510",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef80582-5442-4791-b362-ea5bc4d9e8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e42553e-58fc-488a-b75f-3c1e1b4eacee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e4bdecf-3882-4fcd-a04f-6794acd705c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d4a1d05-0ba9-4ae4-aa96-4a89a4bc8854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c2f422-c1af-4914-bb99-e3cf4e0e63df",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4db83e-bd49-416a-aaa6-dacbbddabece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2ae3d92-a196-478b-a9c4-258161a8ed44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b79e9f-5711-4dc2-80c4-49c2535ea8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb435c3-e614-4f3c-993c-5834f59ced54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507cdaea-af75-4098-9e7e-038cddb9d047",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6c464ba-2d97-4a22-9ada-308fbfea804e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e8926f1-618f-4d16-96f8-e4729bc776c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0123d2b0-fd15-4933-bfb4-20ee5a95b50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a74d912b-1db6-4a23-966f-1c95536e4adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ed0a5d-0c94-451d-b82c-f50e9b228596",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f912a05-41e2-457c-a89f-2d91b79328f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feffc172-052b-4afa-abd9-7ca8e6990c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9da1c7-d620-4341-be7c-2923aa08ef7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dfc9fe5-935e-4bdb-bf74-b511b1c1886f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27619035-5d22-4e4e-8cd4-498c35a093ac",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b2664b-64ac-4204-a991-5311df842161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2882ce-88ae-4289-9bc0-a38eb9ed20dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6efb1896-915c-4e6b-8edd-cf3d9621b037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fca2e55b-234c-43af-9c46-24fcbc5c5e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be6c192-3c97-4d40-8e5b-e58708971783",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8853cb-38ee-40c4-9f08-b1cf76ee7159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56661ac5-4491-4610-b7fe-881ba6a75238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46127087-db1e-4024-9649-c9bd5f634f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb271a4a-0962-4325-82d7-10bce65582fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf0e943-e4b6-447a-906e-daa16a7e133f",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec822bd6-b5d9-45af-9340-d4beb59cdc50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f20d704-ea3c-41cd-9132-fbfa00d80eb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0496c55a-4b64-4793-b98a-f91d1ebfe45f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f9375b-2534-4e03-99d8-90f333ce30d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed3f766-5084-4462-a09d-b2ffbb260592",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757a0eac-973e-4bef-99a8-6f4b61d864a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2a0766ac-ff41-41fb-b26d-2697b2566734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9550b64-90c4-4b98-80dc-3e0ad30bd542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9eed5944-2239-48dc-be7e-fe1a974faee2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "10263094-bab8-4194-a8df-b43f6c07bc9a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3744b58f-34a9-4ef3-a696-2d8de7bfa35d",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dff75de-8856-4225-8124-a2916324ed97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6c601c3-deac-48b9-ae52-d5ccbc6a9383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9098345-b97b-4890-9165-4e3ea715c6ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "01ca11ea-2793-48fd-891c-92f26a29c5ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fda210d-a20b-4502-8dba-0b378cec044b",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854e37b7-9af1-49c3-be09-23aec8daee32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "30156e76-5043-457e-bfe3-83f7f79cf677"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817fa6d3-f7ec-4623-bd9f-87f07a241cff",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "976a21ee-79f3-46ff-9357-cd6da5ebf708"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02626cd1-277d-4d2d-981f-e7efebceeebf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1421d43-5f7c-40ac-8eae-f8b9748cf3e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fce9c033-6432-40b8-97b6-b897dfea87e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0b95c8e0-811b-47eb-942f-8eab1fbbe246"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "56884645-9d57-45cb-bfe8-67047c170e83",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b4f5cfe7-88c5-4bbb-9656-c1664fcd11fb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2b5af75a-fc1d-4217-a881-bc6ae1c8d4f7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f40e018f-7a02-481a-9741-750c7359f358"
                }
              }
            ]
          },
          {
            "id": "f30e50c1-3690-4d23-8be3-55e25073d9ef",
            "name": "Positive Testing",
            "item": [
              {
                "id": "259149b1-dce0-46f4-ba0e-20c9a2c831b0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "efe44c32-9a77-446c-b85b-7b9d157fd89d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6a148028-e791-4fd6-af31-0c9b6af67483"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abfc72d4-1824-4af1-8961-7ef3ca9a0fde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "10978003-e593-4724-a0b3-f8ba9682c1da"
                    }
                  }
                ]
              },
              {
                "id": "25c57c90-5a1a-4b43-8b15-4f8cdf38afba",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55fa2847-5725-46a8-bd5d-319a4b8b5e64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "860db94f-9d37-43e2-988a-28dbdcaa26e5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "353defdb-3d4f-499f-ba2e-e6ad57340360",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fabe72e9-808b-4e19-aaf0-3d9db352ae38"
                    }
                  }
                ]
              },
              {
                "id": "cc56a39a-d850-47ac-b337-db11637ddd26",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c573cd50-8948-47fe-becf-c4e6cdd58c92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e726e026-c29f-4f1b-8fb1-fa3640b4b837"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d3196e7-331d-4274-b6ee-5c09a15c2bb3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7a649729-0913-4e96-ab90-103aac3be7a6"
                    }
                  }
                ]
              },
              {
                "id": "f46bfbe6-f559-4c61-ae9e-c37d2cf22adf",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0dbc1cec-da09-41c4-9bca-cbea58d9b12e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34eaa3a7-1b3f-49a2-913e-d97336dd7d44"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "169f4f21-0a7d-4462-8033-46df49af46e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "cdbcd6c3-3340-4a45-844a-67d578682eb7"
                    }
                  }
                ]
              },
              {
                "id": "fb9b3501-3812-4be0-ab9c-083b64fcc016",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea066b04-4bad-4de6-b882-28d291e05431",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "702de262-0165-49a8-85e6-e5bac3630b44"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a01271d-7c8e-44a4-ba5a-d22ed313b993",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a72f5e5f-8bc2-47a6-bb16-b1a2ae5487b1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1d565ef4-c065-4746-9753-454769180abd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff4bb733-fc0f-4509-88f2-295f2172acd2"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "10055782-8b18-476e-a4d2-b7b9b3ca4e21",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b907d807-66d8-4299-9ae9-cba271bea453"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ee2018dc-1a2d-470c-9f20-e4e4d4090378",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "724c335a-538e-44c8-9dc6-48ae9e66b5cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fb4439d0-ea37-4bfa-a135-7e71d82ec8a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5b156595-c360-499b-be2e-da17aa35af7f"
            }
          }
        ]
      },
      {
        "id": "f8816876-cbbc-4be9-9a52-97cbb216707f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "4e852ecc-cf20-45e0-b886-0bb8aa49a737",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c9736515-a19b-4e5b-a521-096ed776289b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5a820bf1-db54-4ec6-a2dd-cf98942cd412",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b7c7c3-cdde-4d7c-90aa-70148e1b2edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107210ce-71fe-4f42-8f65-438a044f1898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b0319c3-a79e-4f8c-9d9a-33465f94c735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a51d27-2c94-4ca3-b7b2-21ac60bc1bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51141ff9-887f-4fd1-ac39-0c9de9d673c4",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eac8f481-ea9e-496b-8995-90567775b2b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "570ddd09-ea7d-489a-8f4e-5b57e11d7133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83990be-a439-4cf8-ac3a-b4837a8751fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b858e72-5a91-4843-85dd-6eb9caf37a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40915cca-180b-4f72-921d-a02aa1a0081e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2240ef-f46f-492b-b0b5-e3b87e5a379e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90955c5e-699d-4408-bd0d-2a115fc54cef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0b0f15-c2b0-4a82-9eb3-4a0cf09f326d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37e8bfea-45a6-4d65-817a-5548e198da66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83d79fd-9054-4c10-99c4-eadf4853218f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a7f81a-5231-43bb-8fae-d291a27187c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ad47e0a-08bd-4ae2-aa93-eccab9884694"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cd7300-e78c-43b1-86b7-9d80232ddea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e4ec73-7628-41aa-b850-80cc9a21e633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d94a6e3c-536a-405d-840b-bd1f014ffa18",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741b56cf-60ab-4889-b89b-2b9b7286f4ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24962657-ae05-4311-833c-4049805b312c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98cff762-5858-40f5-bad4-a245de32f131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76e83f33-9e84-464c-a825-db1cab100ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "592300bd-afe2-43b3-9620-9458f2bce2c7",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7eca9f-7935-4196-96e3-5b28bdcb9c1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3b67de-667b-4017-ade5-129760986c31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e40b9dc8-af6f-4571-9807-53565ee862f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d0d3c2a-1ccd-4526-8165-f9956b497550"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad333aaf-f90f-4323-a400-65c1e0c197c9",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a50c30f-2b61-4330-b5a7-6d1ccbbd4eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1615eb40-be95-43c4-8972-26fb812cffae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50315574-5219-4514-b17f-f275df38bf7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "72e87842-a271-466f-9bf0-9dcff7fa13cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623cfaee-ccd6-431f-99d5-8e3eb6cdea8c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75cd631-7436-4ca6-963b-005712fd2bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778592e0-1ebf-4b49-8000-031223042096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8fa920-f672-40ae-ba05-b096cceccdbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a69873d1-0581-476c-84b0-1ee96a34458b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8d2110-105a-49ec-9066-8734abbc384d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea8272d7-1fc4-454e-91c8-547a7722a82c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "745699ac-ce55-4af2-9b1d-979cac8df966"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fff3df-b2bf-47d1-92d5-c9cf83d3e34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f54b7775-19f7-4357-b0a9-2411a9d5c93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c765b301-7d0a-4a77-b174-499e3ed49cda",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8869e29a-eb74-4ea1-a92f-a7ca4004f263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53ca31ee-b94e-4f38-991e-f875c1c5a3ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ed194c-9186-4bed-8d72-bb0d4937b4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eef243fa-a221-4890-9535-3bcfacc5d3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69cd61ec-70ef-44f5-958f-09bb8edd86c3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e2a2cc-334e-4108-b50b-6b6d24f8b111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a158cd30-27ff-4716-812b-8490bc41fa0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2214bb72-0b40-46d1-8622-625c594a4307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "06199fb2-597d-4c44-87ab-25f5e25822c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5effd84-bc35-4a8c-b099-625c618e11db",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf1490b-6346-41ca-bc4e-876e19c36ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2627fb3-82d3-4bff-911e-f90b2b2f4602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f652c5c-5fec-4a80-946b-361410a2c9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "539b792e-d168-4add-95ce-f0fca755836d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17714480-b628-4bd1-8369-eab11323106d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56150e4c-0850-4f3a-98f8-ca2ec6b86f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1793a5df-046a-49b2-afdc-6f9aa3297817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b61898-e447-4c08-9a64-aadd054ed53f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "97d93958-baed-4f14-bc78-05376e8d4bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2384efd0-04c6-4b8e-94e7-8e31e966bca9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbb4f1b-41a5-4073-8e55-d11905442f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270530e9-55cf-4914-aa89-708f8069dd27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "540e8cce-4c52-4c0b-b31e-4777af177067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7badf36-ed0b-4822-b6dd-dd0251160db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1867a8e0-dd86-43e3-90d5-77988e45b54d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df95d37-0051-4c6b-aaf7-de6b753f5bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f69b5f87-86fe-48a3-a1af-ea413288e88f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2501212c-1a42-446d-81f4-e82263f18a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cae8ebff-abb5-4bd0-a127-e7a9b2e0d6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26551410-f82b-46ca-8d6f-c75188e3a051",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f0251b-7bfa-40dd-ad29-58a2dcc6cda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83538415-cfa1-40fc-a7a4-4d74cd650780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c978e4de-b1d5-4013-92a6-3303e811e8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9b9faad-3a08-4307-a552-93af654deea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5e728b-faa4-4bd6-b19c-b50cb08da900",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "309e32e8-4f23-41b0-a8ec-593c51bfa3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "867d32f4-7457-4518-906d-eb53683eeeed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6794f353-7ed0-48b2-82f5-ba988335e849",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "535ec7b1-d997-49b7-8229-54f50d8428ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22f04de-fb4e-4a5a-91de-05e9a2948c1a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124dea81-b8a9-4d61-8694-913305f671cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cef1925-ef88-46d1-a5ef-39d66fcf7ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3370d5a-d4e1-4751-a05a-34ded842ef9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "af2947e9-d776-40eb-82f4-f6748eaafd78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609668a7-f13a-4b20-ac04-6ed44dcbebe7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "883b4709-da78-4f27-bd00-1955857fda87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a455970c-379d-470a-b176-1686021a3b42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d315a811-b172-4e37-b364-9000a48f63ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4b4b187-21a0-4b71-b070-c1540290c50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14ffce3-40e6-4e9d-a511-6490d3a0841f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae56de8-6f55-4658-aedf-5de2be4f3272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41e9c8ac-1bd3-4462-b2db-bbf865aadcc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8cf02d-ce69-4757-8489-e00c7b11fcb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3975b679-dbce-4179-a64c-c8c62e5017fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa0b906-83ac-4fe9-963f-c5bd9855984d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90468129-befe-4bf1-bf0b-7c53ce24a2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca76ff7-efca-43ef-ac98-cc0451bb35f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69211494-54e5-4d0c-b871-640f6cad4abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf81084-11a5-4e80-924e-26e9073ec53e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8628ab88-5d13-4957-ab8a-bd37e2fe60fb",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae8b3967-97dc-4584-be70-97e93f441366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8037a555-37ac-49df-8e12-1f4ac3c085c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0b369e-52da-4fe4-918c-898266a56072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ec86035-6040-441d-b2cf-c96f9e25fecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcab7c53-a3ea-40e7-b5b2-4cbf5c7e588f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ca78b4-a706-45ad-8d38-dd8e4cc1efd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f05607-ded5-463e-b3ca-d40f927469bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca75a128-28b0-4c12-b5cc-b03b58bc684b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e879cf02-d110-422a-a9f7-03ed3138599a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212b2db4-e804-49fd-a085-ecf962a4680e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2410010e-1527-44f9-a1bc-344101418f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e59bee68-65cb-4131-b937-4f64af42392c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe993cd7-e33f-4edd-ad0f-bf0b819eb95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f18afafc-c2ae-4600-9e71-36ee82e0386a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da459bda-9d6b-49f9-a112-aa57e674642f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84dff32-261c-4f4c-8cd2-6f0e16996453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e8accf4-64f3-4146-aca1-9e834cb1cc7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8de62e-eee7-4af4-bc13-ac49b2a97678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20003e82-f0f6-492e-8feb-2465ee923355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "398bb86e-b668-464f-a27a-af5c44203a2c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51339fc-98d6-4813-b8c0-b45a0188884b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1693fb92-9b8a-4365-b706-6a2088a593d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c29902a-87fd-4aaa-a38c-1bd943cad579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e63c287-8fd0-4b3d-84be-824946e3f1ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b882b799-6b96-49ed-b9da-02aa6c0b7ed4",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37280a64-c503-4ee4-8d1e-fa162cb20cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07beecad-a559-4e73-961c-90e2eff0dc7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0cd3d6-2b17-4f0c-ae26-fe45ee83f221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "517159b9-2a8e-4c27-a0ad-d17d29bdb31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14643911-45e9-4633-b812-aace1ad1d804",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39653bd9-a63b-415f-a17d-0a682a35e6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f03104e2-1560-4904-9e77-d6652f4764f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9a6879-8014-4a56-9818-8fc3f38f4e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b953d29b-2643-4664-9561-a8b4f4719d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f9446d-fec6-4126-bc79-3bc5974211ca",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7396de15-d01c-4673-b9f8-ad493bede3e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e2b385-9dac-4694-a789-7c113ee779f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9239d59f-0e3f-4a05-9c97-2bba4567d1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45c13e49-6357-48f2-9ffb-10ea7ee75216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c732c550-a430-44fc-bf2d-3a4ea9167086",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e5971d0-5869-4a52-9ae5-387ca95ec79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bec480b-6147-452f-95dd-b409eb2b1a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb695fdc-58dd-4908-9b85-18b5f53ac4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d2b65f8-a1d9-4add-b6f4-58ec42d5ccff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0abb2241-a8d6-422b-9945-dbb9244e8117",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7720bd7b-923e-4ecc-b942-38c49a2cd13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd781405-fa4f-4799-947e-cdd5ea3a230f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e38e358-56a0-4e0c-996c-6236d19c2e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d639ba0d-1b02-40b1-8587-014320e6bc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "932fe4f7-d638-4efb-b16c-e29aeff73e1f",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b92929-0f61-43a1-935a-b8a2097b843d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3598718e-c3d0-489a-96ef-721203b904ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9733d5be-808e-49b5-b443-bc0cdab95dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cef3ba2a-fcf7-4ff2-af4f-9c40a4eb50e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b06e6700-97fa-4d68-ad87-08fc7abba590",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cd576af4-4d2f-4258-aac1-782ae8004b66",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88f807d2-8fcd-489d-af64-fa69b5932114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37d7bf61-d72a-4e69-8dba-cd5b6ca3d87c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecef1ac5-1a68-4d52-953d-3deaa4952464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "917e8e61-0ef9-417d-896b-03c8655f3b9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca611a3-7164-4e5c-9960-79b1874d5e39",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d27333-7e77-4647-ba2e-56c51b0c0dcc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "c1817ccb-a08d-46e6-b756-2dd08f45ca06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd8f326-7504-49dc-976a-51fcd1408d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c2973fec-d0c6-4983-ba1a-cd89f56f524e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9470071a-cd6f-43c7-a21f-697c9f343d80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27bdf7a9-dc6a-48bc-9bb8-20fddfc7e780"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2d37d1f-0f49-49d2-8bf7-8c74e9ac6e9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a172bd7a-22a5-44b1-896e-f36707909fab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f440f47c-357e-425c-a2d3-068d71d132a3",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "06fc6b5e-6912-4fe9-b985-81c52937b17c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2c060d4-0860-4c15-9bda-10409f44eeef",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f13c242c-531e-432c-9878-992ffa859f43"
            }
          }
        ]
      },
      {
        "id": "5971bd9d-4862-43b2-8f7f-f0ea24befefc",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "19cf3318-03c3-4d80-aba8-262d12bcd5a6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ae6cf06-86a2-4a01-bcb9-93f25546ed44",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "47b3f470-2964-4c90-8a68-58b085150762",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b2570f-80c9-4e1d-b4a8-18eb04f93986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22be0e64-6dca-464a-9839-c0b766b7f7a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99494a72-1483-4f5e-950c-9c012740c656",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a58f985-a042-4ac1-8794-8dc69cd82f5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c67fe0-4b6b-4400-9385-9af12cac0b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74cac0ab-643e-4353-a1ba-818e2cbc2a4f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08de6906-d9d2-4aa9-8dae-0f14af37df9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3018c56a-8ae2-4015-a8a0-fda944f0487c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c20bab5-4120-4b40-8349-5fc9ef6d8ac2",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d100d4-b29c-4761-9b26-18df455cf6d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb11edb8-72f7-4689-9711-1b787503342b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0288f8-6c42-4f07-841d-8452bbfc99b3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df93c6d6-d6ea-4354-acb8-6d461b5f31b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad01ea42-880a-4e97-ab6a-0a0e5338bb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd997e1b-8606-413e-85ce-ed494ab621c7",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "153f09d8-b5c9-4145-994e-14b0fed4d3fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6752193f-44cf-4d73-b5f8-4df5be9d35f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d032ec4f-0a27-4e82-88d8-43576b72b82c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d319ba62-eba9-447f-9196-97bab779e5b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f94baa5e-21dc-4f03-86bf-b2dbb4317f96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ecb09e-b269-4160-bd18-d4629ba782f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5257950f-00a3-4e3e-8d80-bf67fea9d0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "817747ca-4025-4b29-8bb4-d4eee31c5fc3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec8a022-9cc7-497f-8a79-ccdc51ab3ad1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26ff8049-6e91-44e7-a785-88cf2f34c7ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63b7a4bb-cd4d-4402-8d2d-5d1775268740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48303044-b49c-48d0-9f84-d8442ecdf19d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfb2b67-55cd-4b6c-83e4-f2550d2e8860",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff13d764-34cd-44fd-90f4-26f3318e8895",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1c7927d-f836-4d37-8456-0a798b9803a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b4afcd-8181-48fd-aab8-7cc412dbc7a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "024480b1-39b2-4c97-b8d8-7f29abe532dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995096d6-125c-4f5f-9393-a8dcb564c74f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e28a6e-53ea-4f95-a553-ec4310a7f142",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d26e0dc5-6aec-4f49-a683-3424d9caa27c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8759a678-ae21-48c9-b628-641a7230ccc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50046f92-9f25-44a4-aba9-dbbb4d6f5d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02895a8d-f006-4d1a-84e4-6e89c0575db8",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d009b899-eb04-4050-8723-b7f2470dbf26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e629527d-64d7-408c-9ca9-6f3c999e75ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1214e675-53f7-4a50-8be5-5a9345908c5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb04b697-64ad-4537-b56a-47d2e576dec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0868cb85-5c69-48af-92e4-ee7284d9d6b4",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fce84a16-fbec-453e-8f08-4fd567f75e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0773e45-edeb-40ca-9ca6-7926dd329aff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39420643-8b0c-476e-8edb-1e1248184f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604325b8-7dc5-4e92-bd48-b30c2218dfb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0183f8cc-5379-4028-8590-7c1dd1d0dbd9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140b2c21-a0a9-4bda-8207-ab42091abafd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7983040e-d103-4184-ab4f-46f0692bca1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef45e40-3dcc-4f33-8d34-069b0d3b3abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5c45ca-d193-4709-a57e-b704452da0ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0df7daa-1a12-4b30-8140-06d4e1dab30f",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91016979-15fd-4d8c-a5fd-f95845554032",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74bfd60f-f09d-4d93-8708-95c48eea12ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b78441-1e4b-4120-8fd2-b107c4c97cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a489b9ca-4b76-416c-99ff-3cfe76727629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68df1cad-a4d5-4e46-a732-79f29fc2cb93",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d95cfc-5c0b-4c27-91b3-f1456555be04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6314b56b-915c-466e-adf7-7b292e2032fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e7b6a8-2c51-43f9-8f05-ae4cde5187a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bfbdcfa-ad1c-42bf-9133-1822294ac56d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b4ad0c0-e609-4f4f-8fb7-02d4faaa1922",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ca0437-0c04-47e5-90b6-6a74110dc033",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84378db3-6a1c-4c5d-ac9b-7be3444ad9f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf39415-6bbb-412f-b933-370906a62564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e758b88-50bc-4070-a12d-0442058ca962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72092ac8-9fa9-4d9e-81e9-63be760cc38f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ce3355-653a-491e-9af9-269b2755e6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2e559f6-206e-4ade-a1cc-02334e642b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a980fec-5311-4e3f-9cb9-bf3c58a7a20f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b725cb-9722-4dc0-8946-9d4d49228011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b8ec4b5-ab19-4b0a-87a9-d33515d493c0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4678cc93-e848-4b7e-b440-a84ee22440c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ccfe0bc-d4c6-4f82-9eb3-71dc2caa3d40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b8c566-8b52-463f-b18e-b14a65c438a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2670a76-cd35-4d31-86ac-d8c0d4faa03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f49cc0-fd38-47c4-a99a-9d3153d4271f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167eff93-5670-48c8-b652-8b73afb37260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37183b16-c51c-4d15-96f6-22b4640acafc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57ba1836-7aba-45e7-8e13-5ca6e6a9367b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c534ca7-87c6-4a69-966d-af28f7b44442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99cb4e0d-0f21-42fd-8e65-d06a6107e293",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7bf61a-d932-4326-8ed4-ce396a06d448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0008755d-289d-43a8-b7b4-5ed7a54930af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73bb4eab-982f-4fee-8529-3aad025e2314",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de05cf39-d050-4c23-8d0a-413ee12786ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81a42f9-567a-49b6-ae69-02184dfc6523",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae6ec68-73f5-497b-a9f1-36003cfadf09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa82c50-ee67-4cdb-bd24-a33a81af5116"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "489e0fb0-190b-4169-a5d6-b91839dd7773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f8e7584-a695-490a-937d-4dfb7cfa0e34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3eea23-c3ca-4bb5-9647-91811e8de038",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1544137-6460-48cf-8c0f-ef211c1dcf3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fabe803-b4f5-45da-bb7a-e772fb8ca556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "935d71c5-067e-4467-8a3a-f91b62ec664e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5071975a-618b-4c4f-8a2a-95df8a59e243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11098df8-de88-4452-9ed2-130af18e4411",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7397b8-d64f-4a56-9a78-5f6aa4500999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eeb22bb-0a6a-48ab-a565-9a5c47a2c983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b162f984-5682-4986-a8cf-ca03a07d599f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b764ce3-cee8-4dc7-99ae-8bcf93b3d30f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0da2887-a6a4-4911-a043-289197c408d4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a0683a-2abf-4b64-9864-761b6f2e8604",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dd8f2da-bb10-4a06-a969-e00ef3d867d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d8362ef-cfb4-45a0-a36c-d8d930a63236",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f55dcf1-0c36-4d83-b72f-9823ec48415e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675fd970-edcf-4721-8167-d6103c8a5f71",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a5e686-5258-4640-805b-be68c7c00e61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e3820b3-a735-4e3a-b596-e5c160961180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0b8a07-113b-49b6-902a-5ec7a8ee984e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56576c6-0bf3-4aaf-a4b5-67e733e993b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5a72f65-e411-4a25-a29c-68046a597f07",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7075052f-ec8a-45f9-b404-484eef2355dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce0f2a50-f0cd-4144-9d92-36af52a372d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f82aa830-d333-4176-b5c9-b9d7effd05c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deef5e56-0ce6-481a-9397-320014f595f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0bd90e-e883-446b-bfac-7fc774cb6e1a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ee9701e-29d6-4ee6-a7f0-41e2671a5e80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b0bb902-7933-4dbc-b5e1-98d8967298bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de39b0b3-1ae8-4b07-8b8a-58663aa6a5ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2e4dbd-70e2-48a3-a6b9-db6b522c0af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8eb28f-b93b-4a4d-b112-e96e19144656",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07afe55-63ca-4f83-af0d-d63cb5761cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "016162b1-c692-4b8c-a2a3-75497118b675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa34aa39-aad8-4021-9756-b4c7defc4a91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64dda20b-0a83-47a7-af86-f0f47abfb512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652de4bd-ad8f-47c2-81a0-5df45394030f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5eeaafd-1d2c-4663-9da8-45bcc6869c8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dceda7e-7ea2-4ec3-855d-d2c9b0628c86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff1f4f2-a17c-48cb-8217-01b5336d7881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df1d568-1c4b-45dc-ad24-b3073cbb1d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6c2973-e801-4313-a701-85bff24cdaa5",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8df82b4-2806-496c-8f29-47d7dcbd41a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eee0a3a-a8e3-480c-92bb-005374012c52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d79e762-c7f7-48d3-96c5-21020247c575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d9d46a-c6a8-4bf0-87ed-576f32279ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "664fc385-d72f-4a67-a497-05f99252588f",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463650e4-e2f0-48d1-be47-843b57e2ad65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "736e85df-3cc6-4b4f-afd9-594321f57289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73959708-d04b-481c-b5a4-cee8d58f21cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6f7a35a-5fb8-4048-9d4a-78489b574b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7681b7ea-e56a-4991-bfbf-0f23df0014c6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf92cadc-0589-49e1-97ed-d9e856368ece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8c4090a-5099-4b95-86c8-9ff3a0882896"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0efaab16-6c54-4264-a9d6-c77308e259a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bad8ddb-ab2e-4361-98f4-ee1231f9e8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6c5b68-d592-4899-8e40-5bec20d7f40f",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6afacc13-6107-47d5-89d0-64b4d78af8ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6171fc75-d5f4-4d67-8ca1-d2111c9cd67f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad27e25-5d6a-4ba4-9d82-058c145c5c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f0a693e-09b4-4460-9f36-d7f11a87149f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "887643ca-0943-476f-97b8-728bc0c1dd2e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c0beb7d-ee3f-4328-95ec-a840df535662",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7784346-ca99-44fb-9463-fc3f3471b54d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11cb2593-e2a9-4bf5-bb88-7a9b67dc734c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b64b90cb-b39e-4bde-95f4-3fa7b19a091b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b628e31-d5e6-4b74-acdf-a49e0ff20883",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "678eb403-c925-4b12-b321-e4242ac1d327",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad718002-0095-4d5b-b914-c8a08a0ac29a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "506ee5a8-000e-42a5-b549-6520c2e3f7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d29337-f331-4c25-8477-b6f6c7600ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1702493e-2f19-48cc-a985-e295150b848d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389cf984-1da3-4760-947f-883b335c3062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77c34cc9-d91d-444c-84db-bc45bdb08b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "634281bf-492d-4515-a8e2-48191c3472f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bf15639-7175-440c-ad0c-f2050d0b17d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff6e14f-b07b-4da6-a0b7-20742756a4a6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c4c370-a1fb-4ab4-b328-35e2ff5e2b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd86237-1365-42be-95aa-a8cf82b68794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d4c6e3-e7ac-493e-85f3-f77a7d8a3641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3f0e37-192f-4316-863e-d972a3810698"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bfbefe4-3390-4171-8c89-ae1b524414c0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e810cc16-3b4d-4351-9edd-3d251e20eb16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd868aac-1644-4de7-ac8b-81183e2ef997"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ca8974-f338-40df-8569-8542955c5b29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "314ff276-2b7a-4f0e-a891-e27eb89224d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20d6b40-9d48-43ab-8ec5-ca1337f900fc",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea740d90-f2b0-49ca-bcd8-4524f9643e71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbc08ae7-6773-464d-a6d0-45997d9421d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c19667-a24a-4eb4-a188-a801cb382fef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b9f6bf-19bc-487a-8264-bdb7d18ab2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f84d738-8ad0-4cc7-a578-b10697454a5b",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4b00d8f-3e8b-4f05-a865-21036802f0b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e92b3a0a-2043-4ac5-b9a4-ff1b0280ce31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b425ec-77f8-4d63-88be-8edcc9824956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a8830b5-56fc-415c-87ab-493b6448f0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa3abd0-05e3-49a7-bec7-80e8e0dbafb7",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f149aaf1-e54f-49ea-b420-80b29790174e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0e0470-6aaf-44d4-b98a-77d49eee2c1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91e830f7-627c-490b-8331-277ba5c20753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735062c0-d1ad-4c22-8fc1-c895b5a87ccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9901de-c87c-4212-86dc-a5bae8bdd3f0",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d5022a1-aaf6-4807-b2c1-091796113230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75314f05-7847-47ca-8f1a-0a5a519f91f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a40157-449a-4986-9c57-5644a2845ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f13acf-73a5-47ba-85f3-a97f0e529989"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb299786-60a4-4d46-b0e1-92ddb09a25b3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5037e2b3-4b52-42cd-b0dd-0ef6c355b625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b458d261-fadb-4e00-81a0-214905a2d39b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9078a6-d408-4afd-b300-895598243061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a22ee66a-48cc-4ed8-8ea9-477eee804856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a64936-8ecd-4241-a849-634e5bffab46",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b14820-a06d-452a-b4a3-10db119dbe58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "611f0c1f-25ae-4a3f-b7f7-981b5624e672"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6d00bb5-ff5f-4467-b86b-1f94f7290ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da5866e-96fa-4d68-8ad0-8644e277c881"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f2099b-a181-4eb8-aa7d-06e6fe5df92f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c66fba-f692-4ae5-85e3-b973d9ff73b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33828bf1-a074-4b8f-b832-8b768b9f34c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ddbf6b-050b-41a4-83c4-92741f5277b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11aaf82f-89a5-4e83-a08c-435c4b89d81b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88dc4a95-1e33-40e5-9336-fa8ddf6c98e9",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71fe424a-89d6-4a27-923a-75683b19af60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d65d199-689b-4e74-92d9-6e0c58b5bd39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd5dc80b-b6fd-4e2d-9eb4-407016221391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6565bfa4-fcbd-4b9c-9177-f1359dc3603d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f643a7-d25a-47e6-bc33-b11a5ec830df",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8205ee66-9f30-4c20-8b35-7daafd4f3bd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "454d1e5e-a3a2-49ee-9a5f-f385ff8d4041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2394a1d0-cbb7-4dcc-9179-66f7a46c301a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7357f776-a952-4236-9ea5-db6d49a0ba71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8402696-ef95-4ecc-b258-013ccb789406",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882069a5-2164-4010-8ef4-58a5c8b5d1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d970c350-5be0-4897-8718-f25c08d1bfc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ca80db8-2eba-437a-90c5-49e0bd97fafe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb9c4c25-7581-4f49-bbfd-de7a84e6e312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3d7f9f-eda3-49a1-b2b4-9c1464953cad",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02617964-9bda-4b3a-8e4b-a8aa60d1eb57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3f7a36-3753-44b7-9d2e-6bbeb040a051"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82513fa-b546-43d1-84fe-992a72775d2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00f43c5a-5f3f-45cc-90a3-016aad4a2675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128b4ecb-1321-4650-b0c6-3b287dbd9909",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8dad4e5-bca9-404a-936f-fa4ac218bdf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b9d3a3-a952-408d-8497-92afaa692670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7436300d-5fc7-4dd0-9cf5-77f6990b87ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96309714-6723-428f-9188-4cf047529096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfd79b25-232f-4a59-b9cf-ed68aefbd817",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32e92e51-b5c8-4620-9061-4842f6489f3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f7e1d6-b64c-4853-8d0b-a229106bb271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e26de01-0099-41cc-91ba-8010ff156fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f80fcd7-ba7f-440c-8f3c-11f7c3f54110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22e6fffc-ea54-4520-9442-14a43c70aa8f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce16f90e-1b0b-4035-85b9-5f40ac542cb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76874dd1-c4bf-4389-80e1-5e06ed34e7fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea16882-9eb7-4caf-8904-ff921287a449",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5e0774a-7385-4d77-ad7b-70f3ec90337b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71dfa62d-c58e-4e14-9dc8-23f352e4a58a",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de706f6-5f09-4be4-a5ee-e2d8d879fe58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b5c3e0-9522-4d21-b995-8e7e55a0267c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b34f204-ddf9-4045-a36c-2d40847fd576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba90512-c24f-42e6-b374-facb7a46285d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a3cb7b-d324-4ac1-88a0-a0b6cfc3337d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849b63ed-a737-48fa-b6f2-754548b9e962",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acda0812-b889-47c6-a500-5c5732f85fd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2aabb52-6a30-4408-bc91-b8c4fbc73728",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beb76a43-23c8-4e11-9c6d-a716682dafc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0909193-0b14-4e61-8f4d-80488ec205df",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a40934-2e14-4f08-8d43-cf5d16801d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d41d67-ff4e-43e0-ab41-2498ccabefdf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb1f9d2-6cc0-47df-81d2-f5c1b170e457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57cf5afc-782a-4ed3-843a-6260aeb486bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f951093c-5af2-4e0a-9c5a-c2d3ab4917a8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d670d34a-2b09-428a-b24d-4aee94ac5462",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd8e3b6-398d-443f-9b03-6fb641a1b0da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6bb7a7-b442-403c-8da0-0bf668595c91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e12ee86c-2780-4809-8b7c-9d9e80f66855"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f1195b7-4801-49c2-bd61-9e6da4dba24d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91cadcf1-c876-4c44-90dc-14afcdd49bd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ce1b66-da07-4bc9-84ba-ccc17d8411dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7474f02a-bb42-49c5-928e-2ca948491e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f51f9f7-8317-4ace-9741-ac8c55d30897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55aedfe-893e-4853-88c8-d26df66ace51",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d662e66c-3888-4d55-a854-aa622a5b75b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4bcf7f8-082c-4d31-87b5-0f542f706d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd11d7f0-b256-43be-aa42-80e74101adf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f130ec4-7fd9-4829-828f-4e2f0af89273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c52ac97-ce53-4e83-9a56-d2fe81837de6",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ab6194-e928-4806-b746-495ebd072291",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3305f145-fc1f-4065-b9f8-dcaa166424a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea47927d-62cc-4408-be9c-86c857a2ee5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bc01c1a-5cf3-40a9-94ff-2004d73fd533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c3c668-43a3-4b15-abfa-1e61c4d84d46",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4687d23-fbb8-4e2d-81f7-3a06862d88a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6723fa-6805-4e14-9e62-c3091e246710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8b7c057-2430-4812-bbde-e8f5c4354b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5cd7b2c-3022-41bb-8b4e-56dcc3b759c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94302708-e419-45d4-a2be-0aead502ce76",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d82f80f-bcde-4fb4-8e42-33f169687c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4cebe09-c2ac-453c-a5a8-b1db98348831"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21bb2de2-44c6-44a4-9e8b-6ecdf5ee2cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee69e6ce-9201-47b0-978c-d4230104dfae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "207bc0d1-71b7-43f2-8c2b-d51d41bdbf55",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee8bb3f3-9e5c-4f31-a225-695190ec0760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b181a4e1-af05-43e5-9667-b5807a8e6fc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad7e076-822d-416d-ab6f-203d6f6d8e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78c20c7-7361-4952-a351-1c38c09751ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a78eff5-97c5-4d0f-b186-1ada09c2dbe4",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e072b00-6a70-48de-b785-d5b0f72d7f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521c439b-87f8-408b-8afc-46adbbb29f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2000cc-d4e3-4c32-9340-7236bae21a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1606a75e-efcb-4b8f-81b0-9d4aaf06faa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f640692-88c6-4e05-975c-0fedca71d3ed",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac0dfaf-f39e-492a-afbb-e656c6f7d372",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d438dec7-4bd8-40c0-908d-aa9008918015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616b4933-ab29-49de-b7bd-11108ce984c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5751c73-fd3f-4501-8e90-d293c037ffab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31f66bf-6754-4486-ab73-0c08d0e823a3",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628ec0f1-7c8d-4f54-b5ad-9a602284a447",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82446163-6e2f-439f-8d21-4494fb6893f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be49ae1c-2331-4021-ba0d-b59f249c992d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5e2146-b390-4df1-b47a-10c4ceb857d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc62922-5327-4996-a6d3-85036538cec3",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9bdb6d-79c3-4410-b8c4-1ce29c9c1c8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ad4dbb0-304d-4bba-acfe-45f6645d9336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1702139e-90c2-489b-8124-4cc99c0b9a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef5cc65-b085-4995-b061-8958877b8a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28c00bb-17d8-4676-a3be-a21a0f670ef4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1eba93-415a-4a69-ba30-1d2f56253a29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c4f0906-f239-4882-94de-c51f055097d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a991cb2-fb47-48ef-8581-024ffe50f762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa8f986f-d400-4c74-aa84-7dff802fd2ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e629e71-c0df-4dda-9d11-f5c948111a8e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3db56a63-f636-4ee2-a9fb-46699da3a3c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "854369a8-b8b8-4897-9e6a-d66093aa4054"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "554ce812-bbba-4da0-a5b5-d5bc99f9e827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3536fee5-b8b1-4be9-a967-3d16981625cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d5ca446-1086-4484-bd68-a82b7ec1c050",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37f8854-9a66-40fd-8f51-8c13c0a0f77f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cf51315-a23f-4f88-8a4b-02a3abe3992e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72db5cb-0678-4e89-95a8-d5f0baae7634",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0d2b702-8d72-4853-a86b-2b442758ce5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7ebdc7-53e1-4f14-b3cf-3d6db8dde334",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "592ad677-811c-4f61-b1df-2c091bcc446b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "155580ac-06ca-4145-b134-cde3d45b7b35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de90e1f2-51d9-4bc7-93ea-87ea3c66a468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f161d957-a495-4e78-9629-c01db1fda96c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0e3f6a3-fb4c-44c5-aa65-db5164346f70",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3cf7bb0-f578-4715-89ac-61bd332657ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f618cff-2d9b-46cf-a2f7-bd0833198094"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "410d318e-8bbf-4616-bc1a-7da984ccf998",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc8bdaf-f1a6-4fbb-969b-ef04c38da897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be36358-7f89-477d-a57e-946ee5a5e561",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34a45fba-4ecb-4740-9db3-f5d9cc005d95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2ea7d21-c998-4a69-945e-afd26f5f17a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e15d1282-e6b1-4ca9-93eb-47c7e67497a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576965da-5f5c-41c9-9e6f-b35033b6fe09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9907b47c-324a-4b46-b375-7e70563ab310",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8163f08a-7e7b-4538-afc6-6688a65af6b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12efe108-8783-44e0-a258-72724bced08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb30aa31-1cf6-463d-9781-dbd15f88c7ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69577363-9aed-47a1-b80b-19145d3ca20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cf8418b-4a52-45a5-89ae-06f4d612386d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef76d1d1-a57e-4b42-ba1c-a6a635db4462",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11568e87-a7f0-4054-b13e-ac84abf9d0ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d8fca30-e29d-4516-bae5-b14c16d0893b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36656d02-00a2-43eb-b065-d8beccfb2bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa3f9ca-97c3-42d2-ac2f-410b03b33ac7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b7b27c-57f6-4361-8200-829a811fe595",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fc33546-2383-4e7a-bd8f-35fef5589475"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c85e3f-7b16-4530-a803-7b980646e16f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc6ddd6-1f35-406c-9b5d-ca12277332d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7ea830-51c4-4e54-9184-7fc357dc5ea6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce84e624-ec67-4b70-b249-7d2813503dfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0607e5d6-8eb6-436d-a3a0-cec7ff63a6e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5874d577-de73-4209-8de0-ab0f73769d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7d1a6c-b5f9-4e06-8ef3-5177b9f562ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d77784e-f2c0-4171-b3a3-ba598d733d19",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e47a543-4d58-4500-abf1-a914a161df01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56d6f700-57e8-485c-a69a-e78a134806cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5c0f79-09c6-4060-9e9f-976eae99a465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b59252db-5a43-46cc-898d-88638285748e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a745a93-2f75-4c08-ab02-d9c80e85e819",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc3477d-75e3-4b44-a44b-d6688afcf66b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1957615-f975-4e4a-9ca3-f577dc7f9939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1506db-5172-4b02-8b67-67654a0ebc64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3174b8e2-73c2-4d48-9a43-a55d51b4cf15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6b44f5-ea81-42c1-be82-6d1eb66f3f67",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985ab4f9-40e9-4647-ae01-53b3e2e794a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8d34a63-9540-4051-b3e6-8bc5872be139"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "566fd436-218c-45bc-8a53-e111a5c90fcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dd5b2e2-56bc-4ff7-99b7-733c2be75301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d51555-0760-482c-99a2-1dc989fb0a6d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157ec2c8-0938-4de2-887a-5df50f7d0938",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49fa8300-09b7-40f2-8eba-6839316f1e45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1289b41a-c6fc-400c-82d7-949a76870106",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b7e1e0-f2ef-42d6-b97d-fc97b2320b70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906cdd5a-864a-45c7-9045-8edec2f75959",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3c37e1-b60d-4c7c-bd3f-6abd892480f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "519653aa-3109-46f0-9bb8-24523887330d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7884a4f2-a120-4ab0-91b3-2bfc227601b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "840bf375-a453-4bb1-b4a7-7cbe08eb66d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0996edfb-bfbd-463a-af34-7a4f5ceb952a",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6d74e0-0431-450b-9008-031cbbad6fba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b7826f9-1e5f-4be7-8330-6fbc94b0e47f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7cb66a6-8788-48cc-a0da-3a95c0e2ac27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ad0b13-96c4-49c9-9000-ecc36fee4b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcaf6682-b41f-4e06-9329-fcc2d3991dcd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac946bb9-9f1c-47a6-aa74-4fd9518c7c9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4bd4a8c-fa34-43c9-903b-08a4fe322820"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e9bd3e-3e2c-4693-9a32-1424b69ce50f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe4a27f-b3e7-4c46-a536-5128c2316198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c71a17-14a7-447a-80c7-50ae25c2efab",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf126ec5-b252-484b-bc5a-84fd1ae74cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21fd40e5-5363-4bfa-8548-200d843e421a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6afd08c-7037-4247-8300-9bbf2e9b841f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8fe28a-d7cf-488d-8c1d-ad8c89c51581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958dba0d-415d-4510-bfa7-b12dd3d72087",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06c43da9-260e-471e-81f0-5275c9ca7419",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "968be8c5-c213-4f11-8c5a-0eaebb77b816"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5346582a-f59f-4545-97c8-976cbed1ade1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5806fffd-6ad6-4ae3-a2aa-0cbc638cf263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e338e5ef-b158-4ed8-8138-5e3015f78e3b",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "facaa2a6-76c6-4709-b299-21afbb0c70e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e975f269-2b71-4bde-a46f-57910b1856e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b410c9e-9418-4ef8-9a42-b76b98064a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cfe2f18-76e2-4e4f-bff2-fb91faa72109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3e5abc-7ce3-41e1-a926-d5d8a6f0e12c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b9da27-84c0-4b33-b6fa-003f65987523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9008ea37-c456-4db5-9018-def5282c4bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7a5dab-de6d-4e12-b9dd-63050cb3e692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac9367f-a385-42ce-a733-b9330c474320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b56e0e-3faa-4dfc-8ebc-bc072d8f5181",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6601c514-dd60-4889-a0d2-e95a4abca984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "972acee2-9ad9-42a9-888e-f3074b68b654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49148de-d7fb-4f75-b4e5-db66614447c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05139820-af4a-41c2-85be-e1943c6f297b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2befca9-0d40-4d74-a762-f8ebfed15637",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e59fc88-3d38-44ac-bd7b-48898e6e816a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "612b0a3e-1bf7-4b31-9a7b-1f55692bfb8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a86e29-c271-4454-bc6c-45bd3d35989f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc47ee46-e805-4f60-b9d4-8d11324f4fa2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b9b5e3-8055-410b-aced-8faf5be5b128",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5668311-7d6e-47b0-9ffa-d1f4735bb8cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e59fabb9-92b6-4d47-b871-3bb1f485f40e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67db51fa-1a60-4a18-8f54-6457815d06c9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bd5da9e-5f73-439d-b6c0-414695f48113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18a98f7-78a1-42c4-8855-5ec610bd86c5",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33e2db00-ac55-411d-8bba-cd1010dae3e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcb269ea-8f50-4ef2-bfb3-81ff5d116a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3288e752-3cb0-4818-a453-b77a64b77b70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f66360-5ccc-47d7-bf3a-fed758fd36a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e871ece-cd7e-4f03-bcba-f85d1b4e73c6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82712381-a632-4176-b52e-aebf3674dae8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b5d191e-717a-4dff-90c3-cf7993ccace7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d3ab7d2-e46e-45f0-a6b8-808a128764bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2badb90-d0f2-44b5-9e88-8fc6e0f590b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d2dec4-5a5a-41c5-8e5e-a3c82130bb28",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f1617b-08dd-43c9-90ce-13379ac82eb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a882a8c-913a-4c16-a218-63534d73ff7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ddbf88-fbb2-4aa7-a627-50fac1a737e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfc7fd56-811c-4675-b1cd-33335a9b790b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41574c89-c88b-4af6-be32-2a284ea6a083",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1b20b9-9492-4a97-a3e7-1a829704749c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecf23884-1d49-412d-a09a-e7c15ac43aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b37021b-40ad-46e3-8f34-dd7e7ce1ef91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac1b3b00-6004-40de-b10b-e78fee8f2c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b718d461-d31a-447a-adb0-fc0efabc2ae7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215a1722-2525-4930-bebb-472efa71e566",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb1557e9-d341-4868-b3bc-eef5cc756a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0f16c08-f1a0-4fd3-9c8a-ed2c4d4f0364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b8cee66-be1e-4a92-b777-dd96d291ca41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a348b26a-824c-4760-9307-67cd0dcf13f2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7e61d2-9065-43a3-a82a-48e01612356b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5335d167-47cf-4909-a978-149f27ea0be5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e07945d-c70c-4ac9-81f5-3c5260c8c583",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f049b7f9-0fbc-4a9b-9cd0-59019de16baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d31edcb3-c805-4806-ade8-e0399680553e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad4abfeb-092f-475e-95c8-e5ffa8b2f713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65a8f8d5-0731-4b39-aa22-5cca6e282ca8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6095e013-f529-4ea9-a63d-01a878046280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "530d1b76-a352-4777-90dd-eb88d3b0d679"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d917140b-dcf1-49a9-bd89-de6a0bbd6da6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8083850a-f1bf-493e-b381-7e30b4fb1f1f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "23a7b823-a879-4776-b70a-772dba216c0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7b1a567b-10da-48cb-99d7-4e41a985ef7b"
                    }
                  }
                ]
              },
              {
                "id": "4ff4e506-2083-4489-87b3-04f3ac3f9d40",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "07341e6f-c54a-42c5-9dfa-56e5286c8512",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "927f871f-77e5-4f78-ac32-dc546da13bfa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e2d37bcd-3065-4f60-8edb-c17afe25410d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34346e9e-185a-4f5b-883d-f282e9147bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0adc82f8-2360-4a6e-b832-d48fc69c3a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b226c01-62bb-4bb2-803a-9393b45db2fe",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd47c83-e157-43cf-b8aa-8f019aaa728b",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d8c2cb33-3f4e-4b07-809f-f8ff67a96158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48273990-4d53-47c5-b86c-b2d4ad69b0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "225846bd-1261-4829-8c1d-4c90c5cb71c9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ff6c9b1-0c12-4384-b229-4897eb6b9d7c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "979d66be-100d-4886-adfa-8c241d13bdd7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c673ef04-618c-4f4a-944d-380f4bded01f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8b5fabb-e0d2-471b-aa5d-b952a0104c70"
                    }
                  }
                ]
              },
              {
                "id": "5ec3069e-eaef-4758-9a42-70751b120aa1",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "54736875-145e-4ace-af29-f867a9df55df",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07403ead-8d68-4af4-9b37-f0c99d3eef80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ea4a5c63-ed02-4d88-b028-40ccf4f23f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a436513d-dfc2-4b14-8820-b4cb2e0281f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7a38879-0e06-496c-8f8c-5dc3034dc89d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c74d6f43-7991-4773-8c2e-ce2872fa4e43",
            "name": "Positive Testing",
            "item": [
              {
                "id": "48e49b2c-36b1-4d37-8ecf-ca1242cc8985",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4e7b3411-44ea-48a3-92c2-a2a7649ddf45",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "be4861e2-4bfb-4aac-b66d-35cbce96a75f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "775d5eb9-7688-42a1-a469-daca1e2983d1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb15f3a9-ecb1-40be-b5bb-911f4e878c8b"
                    }
                  }
                ]
              },
              {
                "id": "405763cf-e04e-46b8-abaa-0cee491023ee",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "66140685-b5e9-4e3f-a37d-cb63c30654b7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "75e589f8-b321-44bf-aa5e-8f39812c147c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bf33070-9f63-4dda-8fbe-e9942ddd402e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20b528d0-8b01-45cb-bb84-d723a61458fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47b37ba1-f328-45b2-b1fd-879e6462bbbd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "42c73d81-c91b-4e88-ba8d-bf33cf664d29"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aefcf956-cbe6-40f0-b516-782ebec56f97",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b5e47b7f-4007-4213-9a4b-dc0deeecd09f"
            }
          }
        ]
      },
      {
        "id": "479a2397-ef67-480a-8628-5dfbf404b1ec",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f77e3861-08f2-425c-acd3-c66e3d3be6b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5be5063c-1081-42cc-b965-cc8e2adbf292",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c5edae94-dce0-4a82-8d2f-7a98ae3289fe",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559f5dd7-b3aa-4400-bf52-9a683bd5a6dc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "de7db290-37d9-48bc-9e67-a1e28c91e641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b77e32-f6e6-4047-abd8-7e3f76332494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4122e8a8-48a7-4b97-a7cc-56015102e75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0aee56b-2c51-40de-b473-cfcd6a6c7ebd",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8bd160-c0c8-4a65-9f19-0b9dbb40e7b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "e430ad14-b98e-44ec-aeb1-7948e72d1f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e90c5796-126f-4346-b4f3-64f9c80a9521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "879e71cb-eae4-4f24-a33a-12778304d4ea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3f9593cb-7df5-4e48-af90-7529ad113502",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "131491db-3183-408a-9850-052bbf1c197a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c745476b-fd3f-42a7-8121-a4b7975dba3a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e2a9c9a-6f6d-45aa-a4d5-d76e5d49a8d5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7b5c06d-2dbf-4af6-bb19-546b95cbc01b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0e152a43-3554-4cb4-9d95-2a7fd3c4b016"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "faece3b4-991c-49b4-89aa-8604711413eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "982134eb-76d3-4763-8868-f11a2456f0ed"
            }
          }
        ]
      },
      {
        "id": "b882aacf-0fa0-4fe4-9e12-8598cab68bf4",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "55ca2f9d-4a08-42df-9d1b-594824473d1c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "29e86943-f03b-4f69-905a-74227e3509c9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7bfe7b55-f3c4-4aca-acc5-fcc5b69a6f6d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c8050f-9f71-4b3c-825c-40988d96b7d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "7c7cd7ef-838e-4b28-94ff-7fb9f87710a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "beecb7be-ab34-415a-96e4-292089833672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7b0a115c-b51f-4e96-8665-b6883d921238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b95ad5-3d07-431e-aecd-757a395de978",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "642abec9-9005-487e-a244-503cb5a931fe",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "74737000-576d-4b5a-8018-72fa8042bb73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff17af3e-5ece-499d-913a-7420fe89c287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d037682-048d-428e-ba0b-c2e106737ef5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "445915d7-4257-4f46-a320-53f9789a64a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e560dccf-c596-4bc2-90b5-3f17d58827c8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6231b98a-4217-4285-ac2f-1acaa1d082bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92f56e4a-3a12-4d4e-80a0-2b003adfef5c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df88ee06-312f-485b-8aee-ed517faa1e73",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "90e12ae7-3473-414f-93c6-9717e8c1f1e8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eb30b472-fa3c-43be-964f-868ce9b7a06f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef7bd545-0b30-4292-97bf-01d328f19553"
            }
          }
        ]
      },
      {
        "id": "672e8828-a416-41ac-bcfa-bbc1bdea53f2",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "df980169-9fdc-40e2-8025-645f1ca933e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6187b515-93dc-4ab7-abd8-49364572d337",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "067233e4-1221-4686-b1a3-e9ab26509403",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fa78ab-4c90-437b-a095-56c038326386",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c2f8c36a-9fc0-4320-8710-89cfd7a98758"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f993042-278f-4fb4-84d5-f9b8ed52b8cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33d9fc04-663f-4096-ac3c-6ca7b5adefb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48226b9-bc33-48fa-a6d2-f727dac2e517",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498dea1c-cd59-460e-9ef5-c8a80d2ec981",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f252ea20-66e0-4a26-baf8-56d56dbe4cda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca080b26-4a0d-43c5-9b82-588b1551f81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a6692d04-d3fa-4522-904b-92cae3d01d91"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "423cd448-7cc3-467e-aba5-1ef8ff6f537d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1cdf40f2-075c-4117-b4de-19352513f475"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bfa8733-eb5b-4d4c-a244-5c6e9391212b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "131671db-4f84-4bbe-b006-59a2ee30eb61"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b8f2df00-b5a5-407d-9e64-989d98b9dfe7",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "a4cfb358-d7f9-4537-a327-d20fa5139053"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ec0e2a2-7963-4191-b79a-3023183766c8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ba1fbc5f-7de7-49c5-893b-a13b42592b5d"
            }
          }
        ]
      },
      {
        "id": "923a840d-a31f-42e9-b81f-af05ef785214",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47b436bb-d360-48fb-b116-59cf2ddd5c61",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "984e44a8-f004-48b5-a4dd-6150230e2c37",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c93bdc17-d11f-48ed-bbb9-9e2768de60ae",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99338161-365a-4cbd-a3f3-ae07abb1acf0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "94f60c06-966d-40a3-ab1a-f16b45dba751",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1901,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 259,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 511,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 955,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 946,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 614.2741312741315,
      "responseMin": 11,
      "responseMax": 6416,
      "responseSd": 701.5714504892713,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1677199211771,
      "completed": 1677199381813
    },
    "executions": [
      {
        "id": "73aa0e53-2db7-4c70-9a17-e7e8cac7921b",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "256af92c-76a2-426c-9f02-b18c8bdca56f",
          "httpRequestId": "50e4fba3-f211-43a8-8f38-7e43807e8c1c"
        },
        "item": {
          "id": "73aa0e53-2db7-4c70-9a17-e7e8cac7921b",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "af69d23a-16f0-4f9f-b962-df2c7f0f9442",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "90d2999e-4864-4164-a344-b4873dcea03a",
        "cursor": {
          "ref": "4276239a-2eb1-420d-8ad2-00d7cca1220a",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "317b148a-98b2-4447-8e14-48d25074feae"
        },
        "item": {
          "id": "90d2999e-4864-4164-a344-b4873dcea03a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b51ba6c8-62a9-4d66-b451-e18458d64918",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "51f84000-e4fd-4d16-a7fd-d358591b379a",
        "cursor": {
          "ref": "15b8fa59-22d1-4606-aa41-126cbfab82f7",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "8309fbdd-f9d7-4063-8129-5c5ef107280a"
        },
        "item": {
          "id": "51f84000-e4fd-4d16-a7fd-d358591b379a",
          "name": "did_json"
        },
        "response": {
          "id": "3e586254-2f40-41e2-bdcd-3c090aaf5793",
          "status": "OK",
          "code": 200,
          "responseTime": 847,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86f8307-09e0-4d07-a3db-802c006c9fb9",
        "cursor": {
          "ref": "c51b4848-e5c2-427c-bed4-0aae9eb7d139",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "76cf5005-edba-43d7-8e8c-3aec70013ce3"
        },
        "item": {
          "id": "e86f8307-09e0-4d07-a3db-802c006c9fb9",
          "name": "did:invalid"
        },
        "response": {
          "id": "226364c9-30cd-475c-9384-e93ce042bbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86f8307-09e0-4d07-a3db-802c006c9fb9",
        "cursor": {
          "ref": "c51b4848-e5c2-427c-bed4-0aae9eb7d139",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "76cf5005-edba-43d7-8e8c-3aec70013ce3"
        },
        "item": {
          "id": "e86f8307-09e0-4d07-a3db-802c006c9fb9",
          "name": "did:invalid"
        },
        "response": {
          "id": "226364c9-30cd-475c-9384-e93ce042bbf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 676,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2003a79d-b2d0-4aa4-849c-d349ad3ab231",
        "cursor": {
          "ref": "f63010e2-2d23-4d2c-a7f6-8603809ee1c4",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6bb452e3-3fa3-4e3a-a7a3-6966d00d29ca"
        },
        "item": {
          "id": "2003a79d-b2d0-4aa4-849c-d349ad3ab231",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "8483c26d-a06a-43a9-aa88-2454112f51b9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1025,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4882d8f-bbcf-4ba1-953f-97e1557cc5de",
        "cursor": {
          "ref": "d45e9195-9f71-4891-b930-20d003de479c",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a14cb214-120d-4ca4-9c94-135b5b009766"
        },
        "item": {
          "id": "f4882d8f-bbcf-4ba1-953f-97e1557cc5de",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "308831eb-10fb-454c-859a-939645ea03e5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 885,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef28421a-be98-4867-a917-986a1ff0dc41",
        "cursor": {
          "ref": "9f14eeaf-0001-4353-bf3c-d99a3c8dfc52",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "08f86ec3-7e86-41b3-a5d9-f084eae916b9"
        },
        "item": {
          "id": "ef28421a-be98-4867-a917-986a1ff0dc41",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4fc2bbde-1c90-456f-91f0-e57b6367f2c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22b547f-d388-4594-b3a5-4fa7a5d3c358",
        "cursor": {
          "ref": "34492fd8-38da-44d2-8b20-e1d876fbbf1c",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1215c968-ceaa-44d1-87bf-518efa5056cb"
        },
        "item": {
          "id": "f22b547f-d388-4594-b3a5-4fa7a5d3c358",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7d11f1b6-f4e8-420a-935c-8c2485cfa856",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 960,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f22b547f-d388-4594-b3a5-4fa7a5d3c358",
        "cursor": {
          "ref": "34492fd8-38da-44d2-8b20-e1d876fbbf1c",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1215c968-ceaa-44d1-87bf-518efa5056cb"
        },
        "item": {
          "id": "f22b547f-d388-4594-b3a5-4fa7a5d3c358",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "7d11f1b6-f4e8-420a-935c-8c2485cfa856",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 960,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0973c621-70d3-4477-a5e7-5ac0de7b29d7",
        "cursor": {
          "ref": "0517dc0c-5d01-49a2-b8c6-955ab1742373",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "dd05d44a-aa5f-47d9-8a52-5ee21e0eeb45"
        },
        "item": {
          "id": "0973c621-70d3-4477-a5e7-5ac0de7b29d7",
          "name": "identifiers"
        },
        "response": {
          "id": "295b7ba5-bf97-4741-b5c9-f90bb511bef2",
          "status": "OK",
          "code": 200,
          "responseTime": 1315,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ad4e1c-aecd-44d0-b246-4dd0eb6f125b",
        "cursor": {
          "ref": "a1f6901a-b770-4979-8735-e3f3316ae8c5",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4084f8ec-f232-416c-b96e-951d32fb4120"
        },
        "item": {
          "id": "c7ad4e1c-aecd-44d0-b246-4dd0eb6f125b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "069b3736-d496-4072-ae88-bab5bf282492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ad4e1c-aecd-44d0-b246-4dd0eb6f125b",
        "cursor": {
          "ref": "a1f6901a-b770-4979-8735-e3f3316ae8c5",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4084f8ec-f232-416c-b96e-951d32fb4120"
        },
        "item": {
          "id": "c7ad4e1c-aecd-44d0-b246-4dd0eb6f125b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "069b3736-d496-4072-ae88-bab5bf282492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361f9908-94a2-430e-af90-e756a27611fa",
        "cursor": {
          "ref": "d95ffec4-3057-4f10-a288-dd530676827c",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5ab70b9a-0973-4af6-9f46-c1a9d66fafb4"
        },
        "item": {
          "id": "361f9908-94a2-430e-af90-e756a27611fa",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1cf9bfbe-7ed6-49b1-a103-344d1bd8d834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e274bcb7-ea9e-418e-8211-f002a4f025fb",
        "cursor": {
          "ref": "4f96840e-cb44-4b99-9636-7b7abda7c17b",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "39975642-bf58-43e1-8f9f-5c75b860fa42"
        },
        "item": {
          "id": "e274bcb7-ea9e-418e-8211-f002a4f025fb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "479145ab-87a5-451e-99d3-e02e63e284ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf30c42-6bac-4a31-b5ee-8481eed71f84",
        "cursor": {
          "ref": "802e8194-0cca-4009-8829-ef065587e6c1",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "df693ed7-95ff-49c6-898e-868b61052051"
        },
        "item": {
          "id": "fdf30c42-6bac-4a31-b5ee-8481eed71f84",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9a787b37-593f-4426-9ba6-2e0784152e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d80eff-da42-4726-977c-5ff50f455192",
        "cursor": {
          "ref": "bf5214fa-104d-462f-963a-d3399d7dd140",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f4909b53-9a2b-4f7e-b238-0c08840a74df"
        },
        "item": {
          "id": "d9d80eff-da42-4726-977c-5ff50f455192",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "b019b734-cd4a-483f-a4c6-81cf0de7d51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0cae2f1-c53a-4477-837f-3649b8ad015c",
        "cursor": {
          "ref": "6835901b-7df9-4928-bb73-9dfd97dddebd",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "41e6dc91-394d-4da6-ab1d-73552cda3c37"
        },
        "item": {
          "id": "f0cae2f1-c53a-4477-837f-3649b8ad015c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "88eb58fe-d10e-44cb-b357-1c3d11fa414f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 652
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97751ca3-dea5-44c2-b625-cf61cd2f8aa0",
        "cursor": {
          "ref": "9aae5381-514c-442b-b106-d82e7a6d0133",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "dfbe912e-e310-4e59-b7eb-2d41f418972c"
        },
        "item": {
          "id": "97751ca3-dea5-44c2-b625-cf61cd2f8aa0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1af24185-1095-4e7f-b3e3-912836adf680",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda9c30a-d22c-4573-86d9-c348ff72e8c6",
        "cursor": {
          "ref": "708637dc-c0ee-45c5-91f0-fdd64dce6b02",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "57bc6588-d5f4-4181-b537-b7ca71aeb1aa"
        },
        "item": {
          "id": "bda9c30a-d22c-4573-86d9-c348ff72e8c6",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "83096f39-e954-458d-981b-173bc5875b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60451f1-2c8f-4ea8-a392-4c838b3b3fd5",
        "cursor": {
          "ref": "8761e990-4101-4206-8286-b1e6596f842b",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8222822b-39a8-46fb-9839-f8755151cde2"
        },
        "item": {
          "id": "f60451f1-2c8f-4ea8-a392-4c838b3b3fd5",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "aeb5e14d-3132-4c90-bdb7-84aa38b82a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c02c923-cba4-4dd7-aefb-96c7e38c1b15",
        "cursor": {
          "ref": "b707fc5c-228f-4832-a390-7bf654ecf688",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c8174fee-c7c6-4add-a67e-b29138caa66e"
        },
        "item": {
          "id": "2c02c923-cba4-4dd7-aefb-96c7e38c1b15",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d146c93a-11ee-4861-a67d-2fd41987427c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73dfd6b2-6fc2-4498-b285-5e89eb21cf3a",
        "cursor": {
          "ref": "92070636-653b-4c9d-b6df-6c5739130bbf",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "22060f2b-8e8c-4ea3-8678-91d8cc5e04b7"
        },
        "item": {
          "id": "73dfd6b2-6fc2-4498-b285-5e89eb21cf3a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "df3a2b1a-fc65-4060-ad87-8038dc1a897c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 658
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e8289d-3398-465b-af90-f3d9e49db880",
        "cursor": {
          "ref": "2fd8642c-76da-4176-b1f6-f38447110472",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "313fec9c-c5c5-47f0-a37a-a2089776a431"
        },
        "item": {
          "id": "f3e8289d-3398-465b-af90-f3d9e49db880",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b8e535ff-ec26-4ae0-9688-e795b48c8b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 699
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa744619-3d29-4c66-a6d5-b2c107babf42",
        "cursor": {
          "ref": "02d08b9e-a8ff-49ce-9003-a8523fcc8cc0",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4e8459c4-6d64-4e92-a238-7f4590f999d0"
        },
        "item": {
          "id": "fa744619-3d29-4c66-a6d5-b2c107babf42",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9e07c716-108d-4a33-9b1d-b611483e5828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3f04f7-2a0c-46b6-995f-1c68c1073bb2",
        "cursor": {
          "ref": "8b8706f0-9960-4ace-b459-1d327e614ef6",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "0d324673-62ea-4ece-80ee-206add6a6ccd"
        },
        "item": {
          "id": "ae3f04f7-2a0c-46b6-995f-1c68c1073bb2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "d9c9e13f-4ddc-4235-a25a-032a8ff8a633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a951f50e-f7c9-408c-9e86-f3929388d0b5",
        "cursor": {
          "ref": "00a4f07d-d69a-45c9-8001-dbfb1c16bb6a",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0ab7ee8e-59a3-4115-9599-577b2b4910a4"
        },
        "item": {
          "id": "a951f50e-f7c9-408c-9e86-f3929388d0b5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d05e4b93-e33e-4c4c-9b19-1ef547fe7e13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db1e950-a680-43ca-bf87-5f339d4d995f",
        "cursor": {
          "ref": "7c12d4fb-909b-42fc-8622-1b62df1c6181",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "eefd5bef-4641-495d-9e75-e29141671528"
        },
        "item": {
          "id": "4db1e950-a680-43ca-bf87-5f339d4d995f",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "939e88b5-6cda-4892-bcab-ce0e2904600b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b693ffa-d045-4b32-ba74-a4dfbbef106c",
        "cursor": {
          "ref": "1357e844-3e33-4362-8928-a0f61526dfa5",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "aae591df-db49-4420-848e-b24efd1663be"
        },
        "item": {
          "id": "2b693ffa-d045-4b32-ba74-a4dfbbef106c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "420480eb-7c39-4876-942e-01a7962d1d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c16eb79-bc89-4877-afdf-cdc0a848d8d5",
        "cursor": {
          "ref": "0c958931-3f55-4326-8832-2f190f86e439",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "db095add-9ac9-4c0a-adf2-d359556a3195"
        },
        "item": {
          "id": "0c16eb79-bc89-4877-afdf-cdc0a848d8d5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "355b5f7e-0299-49cf-90be-80f0937d99db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39436bb1-a558-4655-b889-560d353fa225",
        "cursor": {
          "ref": "6e534144-95a1-4e3c-aba1-068bffb67d7d",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bff39ddd-a401-49c9-942f-2cb8967be32b"
        },
        "item": {
          "id": "39436bb1-a558-4655-b889-560d353fa225",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "65574a32-547f-4818-9311-45d85a2b7886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103fb817-76dc-44b4-bcb6-06a4fe3bec2a",
        "cursor": {
          "ref": "4f0193e0-1efb-4cec-b981-825888c1d3eb",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2461aa2d-1865-47e2-b32f-a7f3fa370ec3"
        },
        "item": {
          "id": "103fb817-76dc-44b4-bcb6-06a4fe3bec2a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "ed2f7a0c-af5c-41a1-b3b6-66e38659b4fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65f9094-2073-4aa7-bb25-02b0043162c6",
        "cursor": {
          "ref": "fb9b38d5-9604-4874-9be7-18f6f7fbc2c1",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ca4bf0fe-9a65-477e-8531-13bd5710ac26"
        },
        "item": {
          "id": "d65f9094-2073-4aa7-bb25-02b0043162c6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4bcbcfa9-db67-44ae-b5e3-e854b7a0a768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86b2adf-4aa1-47e8-9539-675618a10ada",
        "cursor": {
          "ref": "53124e63-0e4c-46ea-90f4-70406b3cb678",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "e81f5434-815a-4297-90c2-daa5dc68b489"
        },
        "item": {
          "id": "c86b2adf-4aa1-47e8-9539-675618a10ada",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "6205475d-04a1-4f1c-9586-393d0de48b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619cd0df-bb02-4a96-a882-e9ef25e8fe0f",
        "cursor": {
          "ref": "8061720a-d54c-4d13-bd9a-4228fb1757bd",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bf8f390f-934f-47df-b877-5961d4aab41b"
        },
        "item": {
          "id": "619cd0df-bb02-4a96-a882-e9ef25e8fe0f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f23f2691-3982-49c1-8632-40871f8904f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ea51ca7-1f5a-43b5-836c-764392f2e214",
        "cursor": {
          "ref": "d4689722-175d-4799-9979-146b230b5951",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a1f8eaaf-296a-4bce-86a0-abdf7935356a"
        },
        "item": {
          "id": "2ea51ca7-1f5a-43b5-836c-764392f2e214",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "94f7c772-e73f-4606-83d6-01bba0750ead",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a1a05a-ac97-4b69-96bf-d16332fab60c",
        "cursor": {
          "ref": "812afb29-f682-4c12-bea0-7a40162dd67b",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "679e3328-641c-472e-9328-2d8a181c0fd1"
        },
        "item": {
          "id": "06a1a05a-ac97-4b69-96bf-d16332fab60c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "98efcb6a-66c9-4a23-ac5e-56ac1b67d6e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69ba6e6-702b-415f-a92f-fb7eccc95f29",
        "cursor": {
          "ref": "72c2619e-1998-487d-968e-c3db0f3cf47c",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3e18bc5d-2494-4b89-a431-1d1c0a594c2c"
        },
        "item": {
          "id": "c69ba6e6-702b-415f-a92f-fb7eccc95f29",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "8fe3b473-dba1-4b65-a758-7a631e439a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2847a926-8260-4996-8223-4b95b6036515",
        "cursor": {
          "ref": "035e60c9-91b6-4cb2-ba80-52073c091695",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "48a49f77-63b2-44c1-a027-73cbfa788249"
        },
        "item": {
          "id": "2847a926-8260-4996-8223-4b95b6036515",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "54bae976-5afa-48ce-8416-bd467e3983be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338b48a4-8073-49f5-8a21-825c5ff6f0a1",
        "cursor": {
          "ref": "2e63093f-d367-4e73-b8f9-efcd7d63da5e",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "38c77bc7-207e-4968-bf18-1d3cbd0bf82b"
        },
        "item": {
          "id": "338b48a4-8073-49f5-8a21-825c5ff6f0a1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "03aeed51-05cc-4f43-ac10-6c9a9777c5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 676
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13dccfd7-1043-46cd-bae4-39126c3b1105",
        "cursor": {
          "ref": "fc1f9feb-f725-4d75-878f-50d9599eed90",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "0430277b-e6c4-486a-b825-7f657954d2df"
        },
        "item": {
          "id": "13dccfd7-1043-46cd-bae4-39126c3b1105",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "6276bc93-d3db-4616-9030-4ba98748b989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 674
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a90d2fa-248f-451c-aaf1-b4290ffab131",
        "cursor": {
          "ref": "0ad62c68-2222-4923-85af-02cda7c04928",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "d11f9905-6ecf-4df4-bcbe-154678674fc4"
        },
        "item": {
          "id": "6a90d2fa-248f-451c-aaf1-b4290ffab131",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9a793a50-2f9d-462e-895c-d4bfffa1d717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd4e951-2c16-4301-aa77-f965c047ddc0",
        "cursor": {
          "ref": "ca8f81c7-b4da-42bf-b1e7-a8a78808118f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "31a82661-ce65-4413-a398-f31c9fce374f"
        },
        "item": {
          "id": "5cd4e951-2c16-4301-aa77-f965c047ddc0",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "ef94320a-91db-414b-8d2f-d896f18af9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba0ea9c8-7207-41ba-bec0-f936d10a2c5a",
        "cursor": {
          "ref": "b074eca0-4bfb-42e7-91eb-5e193c9edce6",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b82e099c-5348-43a9-82b2-756298d6b237"
        },
        "item": {
          "id": "ba0ea9c8-7207-41ba-bec0-f936d10a2c5a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "170fca4b-647b-474f-aa45-9ab0a50147af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1028
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "466aacd3-0f08-4d2d-b526-20dee0e42929",
        "cursor": {
          "ref": "25d1461b-f60a-4a12-a644-b3d6f73e1240",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b7a2c506-ea52-45a9-bde8-ecdccaa9ca09"
        },
        "item": {
          "id": "466aacd3-0f08-4d2d-b526-20dee0e42929",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9c059036-3c64-450f-89af-8b4bd3ad192d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 540,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6288503-ec35-41f6-88e0-01e567d57e1c",
        "cursor": {
          "ref": "c5bf6bd9-7f1a-4dd6-a60f-36cdec59d382",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d044901e-8035-4158-b9e2-239fdf0ef529"
        },
        "item": {
          "id": "b6288503-ec35-41f6-88e0-01e567d57e1c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "941a1eae-59b1-457a-a788-47002136aa70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1027
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cac5cac-020b-49ac-81d4-fe8a00b5f858",
        "cursor": {
          "ref": "deff20ef-93c0-4794-bc8d-375ddba2b98f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8be8661e-c7d4-42f2-be41-2a31abb6db17"
        },
        "item": {
          "id": "0cac5cac-020b-49ac-81d4-fe8a00b5f858",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6126e122-454e-4fba-b725-5fb0c839837a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac21c41a-de98-4f0f-a25e-97307be6f516",
        "cursor": {
          "ref": "71d80083-f538-4f4c-9dc1-e4b87f21f0d3",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "c17323d6-263a-42d4-9644-f4812e03e434"
        },
        "item": {
          "id": "ac21c41a-de98-4f0f-a25e-97307be6f516",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "27129d6d-962e-4f4b-8a4b-e43fe343511b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 658,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23139fdb-045c-4911-9205-495c02f39a25",
        "cursor": {
          "ref": "057c1047-b66f-48db-9be2-9564a779a24a",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "782bf93e-d2f7-41c7-9501-d249802006c7"
        },
        "item": {
          "id": "23139fdb-045c-4911-9205-495c02f39a25",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8adf6060-62b1-4c9c-b1ec-82597557ddfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1058
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af829474-dc14-4996-b5d4-1f227966a5c1",
        "cursor": {
          "ref": "2eed492d-2305-4499-ba4c-5a7fd374c41c",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "805815a2-bac8-4a8d-8716-f6e3109c1bf0"
        },
        "item": {
          "id": "af829474-dc14-4996-b5d4-1f227966a5c1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8b90b87e-a550-4f4f-9ace-3eef0310123f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b16e4ec1-2bd4-4edf-81d5-47d58e16f6ec",
        "cursor": {
          "ref": "758d94a7-0cf1-457c-b887-ae74b9448f8a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "15130ad1-318a-4d63-92bf-d472363786e1"
        },
        "item": {
          "id": "b16e4ec1-2bd4-4edf-81d5-47d58e16f6ec",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6dfbfd64-600f-4e3f-87d3-0143963c2125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8c8782-81a8-48b7-8d1a-778c03432dee",
        "cursor": {
          "ref": "9d800281-c2ab-43e1-b215-033c314262cb",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "b15d2169-c3c3-4290-bf5a-2c1ed14d17ab"
        },
        "item": {
          "id": "9f8c8782-81a8-48b7-8d1a-778c03432dee",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "7c6657cf-86e4-462a-a797-cebe61eaa39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c8ad7d-81f6-49e5-9d20-68c7f474f4ba",
        "cursor": {
          "ref": "a3d0972a-4459-4c82-b347-fa77f6eff08a",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1fbde075-5174-42ed-8822-114802c71a55"
        },
        "item": {
          "id": "94c8ad7d-81f6-49e5-9d20-68c7f474f4ba",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "895c4dd9-860c-4507-96cd-7ca6f07da2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1366
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460be878-5cbf-4727-a39f-3b91ab9c3798",
        "cursor": {
          "ref": "e7d2c8cf-81c2-4de7-bc2a-cf9227957be9",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "b7bebd02-dbc5-42fe-bcbb-74c01a373d57"
        },
        "item": {
          "id": "460be878-5cbf-4727-a39f-3b91ab9c3798",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "707a1d0e-abd0-4ff3-8576-b17b2ed6fbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1769
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7188af91-7d3e-475a-b33e-0f51a72cd6bb",
        "cursor": {
          "ref": "ff22a682-0f54-46e3-bce1-024f484f234f",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0a6fb801-47b6-48d7-8728-5bccc21dc906"
        },
        "item": {
          "id": "7188af91-7d3e-475a-b33e-0f51a72cd6bb",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "219eaaa1-b7de-4c79-9535-a3aaf8d0be50",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 639,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc729f91-998a-433e-9b75-8762267edef7",
        "cursor": {
          "ref": "f4439022-cb06-4ecd-a5a3-7244ce4ab455",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "30290bf6-bd84-41a8-aadc-9e45335aa1d5"
        },
        "item": {
          "id": "cc729f91-998a-433e-9b75-8762267edef7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "7c07467d-4121-49c1-8e99-9dc8c63f2e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 657
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e187736-6849-45a8-a6de-eaaf27343009",
        "cursor": {
          "ref": "1f207628-69d1-45c2-b743-10013e4a432a",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "52be01c3-a4ab-42b1-8cd3-b03464c3c5bf"
        },
        "item": {
          "id": "8e187736-6849-45a8-a6de-eaaf27343009",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f6404fac-d195-4cc5-b987-0a81ad9ff7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 681
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0d6c4d3-cf83-4fb5-8076-6a6841a569db",
        "cursor": {
          "ref": "0ef1083e-5701-420d-acca-44da30426bc0",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "76485d1e-0ed8-4508-a6d6-e91ba916c131"
        },
        "item": {
          "id": "f0d6c4d3-cf83-4fb5-8076-6a6841a569db",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "2482e40e-a2af-44b9-82d5-a25c32d9d385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 662
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bd9eb5-a185-46a1-b155-4299db53d553",
        "cursor": {
          "ref": "0201aa50-0eff-4369-9ac7-a1f8b3193afa",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "9dadc78b-8a34-42ff-8335-645a52c868fd"
        },
        "item": {
          "id": "05bd9eb5-a185-46a1-b155-4299db53d553",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cccd2631-d746-43ef-a24e-b191f4fee006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38ff88e-6a65-441f-b031-096eed062ef3",
        "cursor": {
          "ref": "411773e5-9a57-4046-837e-572ab26f37f2",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "96040a6f-9df7-42d6-b1f7-e571fd1629a5"
        },
        "item": {
          "id": "d38ff88e-6a65-441f-b031-096eed062ef3",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "346f2a7a-3616-4f91-8ced-57e78a390275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98fe8713-3f70-467d-bc5d-aa2c78ebb170",
        "cursor": {
          "ref": "16c01bc6-1e3f-4f4a-9e27-082d1adaa10c",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "29a75760-f211-4d82-82a1-62feda38a96f"
        },
        "item": {
          "id": "98fe8713-3f70-467d-bc5d-aa2c78ebb170",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a271907f-a84f-4f95-a98f-0550127c5ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e10ee0b0-495f-47a1-bbf0-bea0698549fa",
        "cursor": {
          "ref": "2a114305-835e-4bab-b083-cd529c9294c4",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "1d3b2a7f-de1a-4bfd-a5e2-2b0a9019a58e"
        },
        "item": {
          "id": "e10ee0b0-495f-47a1-bbf0-bea0698549fa",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "1094c2f7-b1e5-4d22-97d4-00fc6d4e02e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 712
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8733de14-03ac-4c45-9fac-f7fc371d2643",
        "cursor": {
          "ref": "76458655-5ffd-4724-a348-3866ab4ecbcf",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6cb919e5-2665-4090-b5d3-54318d490030"
        },
        "item": {
          "id": "8733de14-03ac-4c45-9fac-f7fc371d2643",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b88f6c3f-744b-43e5-a790-6a4983e1fbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95ae0fec-7a54-49f0-b414-e17d8a475f0b",
        "cursor": {
          "ref": "8de53a7f-d0e1-4560-ad1c-6a6b39624d2a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a143444c-2929-41e8-aa39-7ee9adb6caa9"
        },
        "item": {
          "id": "95ae0fec-7a54-49f0-b414-e17d8a475f0b",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b2ee21fa-768f-44ca-8ca5-7450dbd2eda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 1153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf4ef160-6b5d-4880-981b-b3aa59b106b8",
        "cursor": {
          "ref": "34be41b4-3d83-4a2c-a18a-3f5ca97b33fd",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "5275fe0f-3759-436d-ac8a-9caca78021b2"
        },
        "item": {
          "id": "cf4ef160-6b5d-4880-981b-b3aa59b106b8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "8f24e47f-a0db-44ab-b2a2-17ed559e55d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cca5a9b-6200-4b7c-9ed6-f5f400a25bf8",
        "cursor": {
          "ref": "11bb1083-0356-4c5e-8dec-5f065640e523",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bfdaf502-21fc-4c40-8d48-5060f83b8a62"
        },
        "item": {
          "id": "8cca5a9b-6200-4b7c-9ed6-f5f400a25bf8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "527c0853-1de8-4004-94bb-bcb90590f33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 959
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431dd8f4-d1f6-4c55-b3a6-60d09fea0d85",
        "cursor": {
          "ref": "655511e3-8ac4-4615-b4e6-9096b716d9ec",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "531307cf-4405-4630-8d14-80af16683de0"
        },
        "item": {
          "id": "431dd8f4-d1f6-4c55-b3a6-60d09fea0d85",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "035917db-98c9-4916-92f0-a0254b6ee5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52114aa6-5720-4791-adbe-9bd30b11f1be",
        "cursor": {
          "ref": "2e4cece9-0ed4-402b-abbf-3aab6c905d66",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "28db72ac-cb85-40c6-82ac-d6abe595452a"
        },
        "item": {
          "id": "52114aa6-5720-4791-adbe-9bd30b11f1be",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "fec3c0ba-388c-43e0-87ba-c12cde417070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2cdc4c-59ba-4223-83db-bd3212edecf1",
        "cursor": {
          "ref": "8438d3e4-9916-46ad-b4bf-b40d5f6c181e",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "227f9347-0e33-48e2-9bfd-38b9674eb46a"
        },
        "item": {
          "id": "9e2cdc4c-59ba-4223-83db-bd3212edecf1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c2c64770-88a9-4160-9e09-1455c5573660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5b81f5-a078-4674-a7cb-031a802def4c",
        "cursor": {
          "ref": "713b9b26-1333-4c02-b472-e49932f29b95",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "2f0e2a51-100c-49b2-b5b1-7932f0795d95"
        },
        "item": {
          "id": "ec5b81f5-a078-4674-a7cb-031a802def4c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ceee9c4f-26da-4bf8-96ea-ffb7ae8a50c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1454
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96715296-1790-4e33-b287-da5ac5c8a7d2",
        "cursor": {
          "ref": "e9d66598-3290-41ac-a119-c3a7ce6ad4cd",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "7e56dc1a-b11d-4c83-9aa7-836482c9c754"
        },
        "item": {
          "id": "96715296-1790-4e33-b287-da5ac5c8a7d2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a9f7b21d-47ab-4439-b372-da968b20db45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370f0729-3fe4-4c21-89c2-de7f216b23ad",
        "cursor": {
          "ref": "6147cda3-bc9d-42b2-bc24-cbb8cf9946e3",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "cd0dd0ec-1a24-4cb8-a8e2-2a6e2e4181d7"
        },
        "item": {
          "id": "370f0729-3fe4-4c21-89c2-de7f216b23ad",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0750dae3-a821-4893-8005-d5df7bcc3447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f73c71e-f1aa-4a84-96a8-b3e09b3beaef",
        "cursor": {
          "ref": "a29ff4f1-01dd-46ec-ac13-8a106bf881b2",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bf632f9e-34ea-483a-9494-bcb78c61bef3"
        },
        "item": {
          "id": "0f73c71e-f1aa-4a84-96a8-b3e09b3beaef",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c98eb2fc-fef8-4559-bab7-52d6e38aa060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b5b6c4-34c6-4f7d-a528-1cefafd5eaa3",
        "cursor": {
          "ref": "d24c886b-77bc-4b8a-9e35-556edcfbe712",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "432c4000-8de8-4c96-83a7-8ba7e00bc6c6"
        },
        "item": {
          "id": "69b5b6c4-34c6-4f7d-a528-1cefafd5eaa3",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "9dfaa918-50b0-40ed-8983-99b0461eb756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e2eee2-e3f5-4a55-8a80-7f686add7278",
        "cursor": {
          "ref": "af28fa38-3d6f-434f-ae2f-10a0646fa070",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "429dad5c-bcfb-4259-9d7d-09cce4c3eb51"
        },
        "item": {
          "id": "16e2eee2-e3f5-4a55-8a80-7f686add7278",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "766792de-a0d6-4a1c-b731-fa76c4354f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a05b5f6e-5206-47fb-9641-11c3a9893dc7",
        "cursor": {
          "ref": "3304f3ab-adfc-48c2-ac67-b5fa8d26f818",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "51a8050c-c858-4fae-a70d-e7fe69e4f958"
        },
        "item": {
          "id": "a05b5f6e-5206-47fb-9641-11c3a9893dc7",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f4b4be4f-e2f0-4091-9ec8-0a3a4f57d71f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 613
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87aaecce-15b1-492a-807a-c40530aa74c1",
        "cursor": {
          "ref": "f05d5d86-f00a-4f50-8c61-c50d1977a231",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1da69e66-e57f-4642-bb92-bfdcc463cd6d"
        },
        "item": {
          "id": "87aaecce-15b1-492a-807a-c40530aa74c1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e7518dbd-19d0-4daa-9e53-e7941b6d87d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5007dff-385e-4090-a637-11b7cb6f6b36",
        "cursor": {
          "ref": "bc15370a-366a-4fa1-9a79-f266fa36a7ae",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b6aba0fe-d510-416f-9046-dc6fbb4be571"
        },
        "item": {
          "id": "f5007dff-385e-4090-a637-11b7cb6f6b36",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "aeaccace-0d16-467e-bb61-67664a8bcbf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4cd49c-3264-423b-b09b-d24f74acbb20",
        "cursor": {
          "ref": "f92088ef-22bc-448c-be69-4a3f16753d23",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "758d9896-fa0f-4492-a054-d908d788bbee"
        },
        "item": {
          "id": "bd4cd49c-3264-423b-b09b-d24f74acbb20",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9a64ddb7-7184-49d6-814d-e406ce172903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995f5659-b266-40d8-a404-5b3af22c66bf",
        "cursor": {
          "ref": "ff87a0e5-e94c-4b46-a95b-a0b2cc5a579c",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4a8a2ed3-b3ee-4a02-8b60-a1df0061f332"
        },
        "item": {
          "id": "995f5659-b266-40d8-a404-5b3af22c66bf",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6607a9e1-7525-437e-a789-751d9f5700e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 613,
          "responseSize": 647
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cfe7d42-ca23-4213-a545-f871fabab316",
        "cursor": {
          "ref": "893752db-1917-41f6-bfa4-f59e5e285583",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "04627f12-94fb-4dbd-b7ea-40dde666b952"
        },
        "item": {
          "id": "1cfe7d42-ca23-4213-a545-f871fabab316",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d886c760-e721-41bb-8758-3eeac425fa25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 889
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a60fc6db-039b-472c-8810-1ea5c6437848",
        "cursor": {
          "ref": "e06f112f-2b98-4251-8647-9f10f53a414f",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7d0a2621-00da-4bce-bbe6-2dfd7d4f512d"
        },
        "item": {
          "id": "a60fc6db-039b-472c-8810-1ea5c6437848",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "59ff9339-4e8c-4fd0-9832-5cd7cfdb383c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 870
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e340d6-2216-4ac8-bf26-719c57f6d536",
        "cursor": {
          "ref": "dca87b17-c08d-443d-8a00-0ec58ca21f9d",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6d70d293-3fb4-4e49-8333-5cea8fc42985"
        },
        "item": {
          "id": "38e340d6-2216-4ac8-bf26-719c57f6d536",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1405bbb4-e842-422f-ba79-ad5534ea7e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "967fd7b0-d62b-47af-98a1-95121720d27b",
        "cursor": {
          "ref": "ab141485-7903-4a7f-8d29-09e354b8723f",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "caeece71-bf6d-4b53-a95d-2eb644841a5f"
        },
        "item": {
          "id": "967fd7b0-d62b-47af-98a1-95121720d27b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "02d17d93-73ed-4663-a359-2fe5ed6e55be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 664,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eedd7aeb-4478-479e-931c-f00c6788af93",
        "cursor": {
          "ref": "679beeff-512c-48a8-87af-29a4bc27e92e",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "42dbf6b0-9a0c-4844-a7e3-dd95abb78aae"
        },
        "item": {
          "id": "eedd7aeb-4478-479e-931c-f00c6788af93",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bb0bc74c-c285-4c40-9c1d-52c204806fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 867
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83babab6-29e1-4664-8d50-3bed079bcd60",
        "cursor": {
          "ref": "f1f75ce3-1db8-4fad-8d4d-9a0279552879",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f7de0af2-f752-4360-9b72-4148ea910edb"
        },
        "item": {
          "id": "83babab6-29e1-4664-8d50-3bed079bcd60",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d9018d8d-1154-4047-afe8-f43e8fcb5e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 738
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "355de56c-7b65-44b2-aea5-ceed518b28a1",
        "cursor": {
          "ref": "25fd179d-bfa6-4e41-b8c1-e092e3117f43",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0589d7da-40ce-430b-bca1-7d79cb51ca5e"
        },
        "item": {
          "id": "355de56c-7b65-44b2-aea5-ceed518b28a1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5c1adf8a-5355-4d6d-b0cb-3e3bce6313c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 627,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02d2626-a002-40ca-b130-ff79bf0d0cff",
        "cursor": {
          "ref": "9d917408-bf1c-4c2d-a1b2-931f12ab9ed0",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "93939d50-1edd-4091-a6dc-8fb875b08778"
        },
        "item": {
          "id": "c02d2626-a002-40ca-b130-ff79bf0d0cff",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d8c3f5e3-9171-4733-88e1-c8cc615b0e6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 654,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc4f6bb-ffc8-47de-ae74-c96565ae8925",
        "cursor": {
          "ref": "e0b0c35a-2f26-4b38-a794-14aedd74e17c",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7ff31571-e72d-433b-9ab0-906b72da6310"
        },
        "item": {
          "id": "dfc4f6bb-ffc8-47de-ae74-c96565ae8925",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f1323220-cdb3-4552-bbca-95fbf6c8eb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 970,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50bf646-8034-47d0-8f06-713dd2f639d9",
        "cursor": {
          "ref": "874ba647-39b5-42b3-8270-cd8f3243eb4f",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "77eb591d-a0b7-4ac2-86a4-76884727b38e"
        },
        "item": {
          "id": "a50bf646-8034-47d0-8f06-713dd2f639d9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "17b047e2-d15f-4382-879f-74b715971b09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 686
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2263b1b3-4ff1-4456-a75b-cba54e039a59",
        "cursor": {
          "ref": "92265514-da89-4dd3-a5f9-457eb1a12b6d",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "415a97ae-6364-4746-b793-8de802d2bbb6"
        },
        "item": {
          "id": "2263b1b3-4ff1-4456-a75b-cba54e039a59",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "a52bc868-9a9e-4d15-9b99-ff6a10e26d1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1261,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a84399-094d-4ca7-9ee6-fe01942f3e42",
        "cursor": {
          "ref": "c850316e-3116-4690-88db-89bab927297a",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0d6a3208-2369-4c21-b322-3ab48898991a"
        },
        "item": {
          "id": "09a84399-094d-4ca7-9ee6-fe01942f3e42",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "70823cfa-c285-4c93-bc46-92f0d1d591b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 883,
          "responseSize": 737
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b905dcca-f703-4db1-86e9-cade63c7f34c",
        "cursor": {
          "ref": "155dae72-0dbf-4f40-af73-81f8468effce",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c32d2458-64eb-46e9-ba43-f383a167ef6d"
        },
        "item": {
          "id": "b905dcca-f703-4db1-86e9-cade63c7f34c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a5a8a6e8-5f54-47db-a5ee-13b7f01a5068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4288c059-12b9-4676-942b-aa955f706fdb",
        "cursor": {
          "ref": "f97241f2-139a-4d64-ac40-589a52e90774",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1389df41-6c69-4a45-87ea-4ee2109cff48"
        },
        "item": {
          "id": "4288c059-12b9-4676-942b-aa955f706fdb",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "7c543794-8e86-45b3-987a-c0ceeaa74965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 709
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec3817d-3a1e-4618-b3d1-7a95f03cc523",
        "cursor": {
          "ref": "288ee456-9cbb-40b9-a016-d540fed1758b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d3d5be9e-f189-43ac-a6a2-0f09c3c98d35"
        },
        "item": {
          "id": "cec3817d-3a1e-4618-b3d1-7a95f03cc523",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "41f9ff97-f5a6-4020-84dd-2ac7ff3fd5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 706
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f70dd49-651d-4c29-b932-f863ad037083",
        "cursor": {
          "ref": "c760e082-a133-4ef9-9f1a-893dbbe0afea",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "2ccec700-a38f-43d6-91fa-35dfa53b11c6"
        },
        "item": {
          "id": "9f70dd49-651d-4c29-b932-f863ad037083",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0e7e3cba-e468-4fc3-954c-b1961851c794",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 702,
          "responseSize": 708
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da7999d-ee80-4c6d-be29-eb3fffcdb510",
        "cursor": {
          "ref": "c6630cac-6444-4747-a164-4aa0247f0007",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6f40eaea-3d8e-4674-97c8-b331e00c4985"
        },
        "item": {
          "id": "1da7999d-ee80-4c6d-be29-eb3fffcdb510",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ca00b7a0-2e51-4dc4-8f49-588cab0b9d28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 974,
          "responseSize": 730
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c2f422-c1af-4914-bb99-e3cf4e0e63df",
        "cursor": {
          "ref": "9c8f594f-c3b6-47a1-93b9-7dc1aed7ce0d",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d9b3d6df-d9e8-4ea6-b7d2-2dbe960d9364"
        },
        "item": {
          "id": "16c2f422-c1af-4914-bb99-e3cf4e0e63df",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cdb7e239-e025-421e-bceb-2b76ff11c178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1075,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507cdaea-af75-4098-9e7e-038cddb9d047",
        "cursor": {
          "ref": "f40addb7-ff32-457f-8158-df980b0717fb",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fae9fa2e-30a5-4c9b-9578-469c51d3b309"
        },
        "item": {
          "id": "507cdaea-af75-4098-9e7e-038cddb9d047",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "040d21e6-4438-410e-99e5-b3a6bfa277c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 913,
          "responseSize": 1006
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ed0a5d-0c94-451d-b82c-f50e9b228596",
        "cursor": {
          "ref": "f7185ac2-134c-4c0c-b9fd-a5e348a410a3",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5dd8127e-c1c8-4063-b7d6-42c0cbb50648"
        },
        "item": {
          "id": "62ed0a5d-0c94-451d-b82c-f50e9b228596",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fc83c720-be70-48ea-8c17-1df858033c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 842,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27619035-5d22-4e4e-8cd4-498c35a093ac",
        "cursor": {
          "ref": "c8912d27-b2f8-4603-91ca-0032dae6e7bc",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "895c7441-4b36-4512-b5e4-47536f03eeeb"
        },
        "item": {
          "id": "27619035-5d22-4e4e-8cd4-498c35a093ac",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9d38b223-5df2-4467-be2e-d6e6d3dbe65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be6c192-3c97-4d40-8e5b-e58708971783",
        "cursor": {
          "ref": "1c3c90e4-9d66-4096-af80-1f91e0d3faf5",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "666df0d0-2495-4665-8002-b8c33bed21a3"
        },
        "item": {
          "id": "7be6c192-3c97-4d40-8e5b-e58708971783",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bd74c98d-26b0-4f92-94ea-860357d565d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 630,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf0e943-e4b6-447a-906e-daa16a7e133f",
        "cursor": {
          "ref": "785d961d-4bd5-4a31-a2fa-6cc57e518eef",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "65004727-18b8-4931-ac1c-a42518222f81"
        },
        "item": {
          "id": "1bf0e943-e4b6-447a-906e-daa16a7e133f",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "903db39e-eb61-4252-99a3-3553e7da0cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed3f766-5084-4462-a09d-b2ffbb260592",
        "cursor": {
          "ref": "91f1b84b-89d5-4516-a728-93623142e529",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3672d635-d25d-433b-bde7-e5ac7bdec7ac"
        },
        "item": {
          "id": "7ed3f766-5084-4462-a09d-b2ffbb260592",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "95c5ef23-6b81-4f9c-b6dc-779df55f69b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 806
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3744b58f-34a9-4ef3-a696-2d8de7bfa35d",
        "cursor": {
          "ref": "029d7d10-0a85-4e8f-9c7c-db44443d1051",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "95be1984-3983-434d-a244-e0b5c2960653"
        },
        "item": {
          "id": "3744b58f-34a9-4ef3-a696-2d8de7bfa35d",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "528c5ea5-93da-4c3b-af8e-25fbfbe75a18",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 44,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fda210d-a20b-4502-8dba-0b378cec044b",
        "cursor": {
          "ref": "707ed589-01d3-4c8c-8125-f7032bc3ea14",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ab8cd296-1849-4ff3-a3ac-27f2df5208be"
        },
        "item": {
          "id": "7fda210d-a20b-4502-8dba-0b378cec044b",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "31bd4d99-bbed-425e-9d37-a41581ee78ab",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 561,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "259149b1-dce0-46f4-ba0e-20c9a2c831b0",
        "cursor": {
          "ref": "468f3142-036f-46cb-92ab-6a241a7c06a2",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "87932c37-f4be-45e7-85ca-f87921c3a09c"
        },
        "item": {
          "id": "259149b1-dce0-46f4-ba0e-20c9a2c831b0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "7dc3e62d-d041-46b2-b2fc-210308010605",
          "status": "Created",
          "code": 201,
          "responseTime": 4503,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c57c90-5a1a-4b43-8b15-4f8cdf38afba",
        "cursor": {
          "ref": "f24f4997-0fb5-4d97-be1e-4d566c6c53ce",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "4ce1a4e2-1bc1-4159-8a9f-1e148c0fb190"
        },
        "item": {
          "id": "25c57c90-5a1a-4b43-8b15-4f8cdf38afba",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "8a83b456-d67b-4443-a7cc-99069c4807e7",
          "status": "Created",
          "code": 201,
          "responseTime": 5301,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc56a39a-d850-47ac-b337-db11637ddd26",
        "cursor": {
          "ref": "a2f9527b-5dd5-4b74-bee7-7b0572d89642",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "234db873-8eaf-4314-806c-d0bdbfe16fec"
        },
        "item": {
          "id": "cc56a39a-d850-47ac-b337-db11637ddd26",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d0eb37c1-ec17-4a83-9cdd-2e110203d322",
          "status": "Created",
          "code": 201,
          "responseTime": 5048,
          "responseSize": 771
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46bfbe6-f559-4c61-ae9e-c37d2cf22adf",
        "cursor": {
          "ref": "368672fd-ea07-4385-96ad-84c1b939a5d8",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "08e04272-cc45-44de-ad66-b4710d74e62b"
        },
        "item": {
          "id": "f46bfbe6-f559-4c61-ae9e-c37d2cf22adf",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9fd53b3b-6773-4cd9-a7dd-f4325d2a46c2",
          "status": "Created",
          "code": 201,
          "responseTime": 5213,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb9b3501-3812-4be0-ab9c-083b64fcc016",
        "cursor": {
          "ref": "05c1e9a6-d193-48bb-95ad-736bf91e3423",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ad3900ef-c1a6-47f8-9f5b-991d086aa112"
        },
        "item": {
          "id": "fb9b3501-3812-4be0-ab9c-083b64fcc016",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d4f79401-65aa-4956-b751-ec547961e930",
          "status": "Created",
          "code": 201,
          "responseTime": 6416,
          "responseSize": 1088
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a820bf1-db54-4ec6-a2dd-cf98942cd412",
        "cursor": {
          "ref": "ccb5d53b-4782-45c3-a28c-400c0f564762",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "31633597-3adf-4165-89e7-da422e10457f"
        },
        "item": {
          "id": "5a820bf1-db54-4ec6-a2dd-cf98942cd412",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f97893a2-ec90-4ff2-85ea-33d2354e0c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1528,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a820bf1-db54-4ec6-a2dd-cf98942cd412",
        "cursor": {
          "ref": "ccb5d53b-4782-45c3-a28c-400c0f564762",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "31633597-3adf-4165-89e7-da422e10457f"
        },
        "item": {
          "id": "5a820bf1-db54-4ec6-a2dd-cf98942cd412",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f97893a2-ec90-4ff2-85ea-33d2354e0c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1528,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51141ff9-887f-4fd1-ac39-0c9de9d673c4",
        "cursor": {
          "ref": "021a1eee-0259-4b30-a93c-fab803be7752",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1afeeceb-e3fe-4635-98ee-c26d3c594207"
        },
        "item": {
          "id": "51141ff9-887f-4fd1-ac39-0c9de9d673c4",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "4a7cd506-071c-483c-b67b-9799fae8471e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 931,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40915cca-180b-4f72-921d-a02aa1a0081e",
        "cursor": {
          "ref": "f74faf43-1545-4d3c-8866-fbd498ec4842",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "114641dd-479e-43bb-9094-2e2dc4d88cb5"
        },
        "item": {
          "id": "40915cca-180b-4f72-921d-a02aa1a0081e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "810abb16-ad16-4885-a59a-1c7d0ad2eb3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1012,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83d79fd-9054-4c10-99c4-eadf4853218f",
        "cursor": {
          "ref": "8b6b00eb-76d4-4fb6-aa0b-4081f0757bfc",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a61ec16d-a2bd-484b-92de-91d842e8a463"
        },
        "item": {
          "id": "f83d79fd-9054-4c10-99c4-eadf4853218f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "9cd4a906-70a5-46cc-bc07-c4e9378580bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 991,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d94a6e3c-536a-405d-840b-bd1f014ffa18",
        "cursor": {
          "ref": "32fcabf5-5f5f-436c-8833-74c308723f46",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4022f050-1e45-43fe-948e-ec2e29dc3985"
        },
        "item": {
          "id": "d94a6e3c-536a-405d-840b-bd1f014ffa18",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3ac565cd-f836-4844-9348-75b7ec23017a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "592300bd-afe2-43b3-9620-9458f2bce2c7",
        "cursor": {
          "ref": "443b8235-9f87-44e0-9e25-0eb627eb2fe6",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a73611dd-931f-482d-b3fe-6e5dcaf78f4f"
        },
        "item": {
          "id": "592300bd-afe2-43b3-9620-9458f2bce2c7",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1b23b6ac-95f7-4c39-8d6f-a3ff2ac9b0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad333aaf-f90f-4323-a400-65c1e0c197c9",
        "cursor": {
          "ref": "61d202c7-d02c-4e4b-8f34-22c18bcbd239",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "31bc6e35-627b-42da-8daf-de39a7d992ee"
        },
        "item": {
          "id": "ad333aaf-f90f-4323-a400-65c1e0c197c9",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "beba24da-13b4-4634-931e-2f4b974088cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623cfaee-ccd6-431f-99d5-8e3eb6cdea8c",
        "cursor": {
          "ref": "6df89b02-2472-421d-909c-c7dca2a896a8",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fc9a6325-3c61-4614-b639-f7bec7093856"
        },
        "item": {
          "id": "623cfaee-ccd6-431f-99d5-8e3eb6cdea8c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "892dc40e-d457-464f-8063-312d99b4d45c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8d2110-105a-49ec-9066-8734abbc384d",
        "cursor": {
          "ref": "1229cf42-9bc4-40c5-9a30-a536e6985f9d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8b2b9a85-cc5c-4304-8cfa-cc0158170e30"
        },
        "item": {
          "id": "1c8d2110-105a-49ec-9066-8734abbc384d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "16014cb4-fd0f-490d-a013-8b8ab59239b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c765b301-7d0a-4a77-b174-499e3ed49cda",
        "cursor": {
          "ref": "427c679f-a22c-43c9-8913-aabcd3c3caae",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d52fb7a0-204a-4e74-a0d4-6a201019e89a"
        },
        "item": {
          "id": "c765b301-7d0a-4a77-b174-499e3ed49cda",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "04b23759-170d-44dc-a77f-eb2cbef92ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69cd61ec-70ef-44f5-958f-09bb8edd86c3",
        "cursor": {
          "ref": "dcfe52e5-7268-415e-99ca-ff1ca6af2538",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0157f885-e4ad-4bb2-b65c-de45ca294dd0"
        },
        "item": {
          "id": "69cd61ec-70ef-44f5-958f-09bb8edd86c3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "5dba15af-281f-400b-b91f-2c5857f1b674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5effd84-bc35-4a8c-b099-625c618e11db",
        "cursor": {
          "ref": "4f222457-6629-477e-91a2-38e8693c2de7",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fbe8f8f5-6127-4fc8-840b-469666f23a49"
        },
        "item": {
          "id": "b5effd84-bc35-4a8c-b099-625c618e11db",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "048e2768-2299-49f5-9a10-1f0570b7ab04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17714480-b628-4bd1-8369-eab11323106d",
        "cursor": {
          "ref": "fb3d977d-a211-4a71-be01-380d7cc83347",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "bf559854-201a-4dc5-9da7-9446abfb0df8"
        },
        "item": {
          "id": "17714480-b628-4bd1-8369-eab11323106d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c8073645-de85-40aa-88e6-28df6cdfa7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2384efd0-04c6-4b8e-94e7-8e31e966bca9",
        "cursor": {
          "ref": "a2275076-e6e3-4924-9d8a-7061246f76fd",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3662326b-93db-474a-bdf4-48c284d3840c"
        },
        "item": {
          "id": "2384efd0-04c6-4b8e-94e7-8e31e966bca9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "38b8643e-d45f-427e-90e4-5465b344e84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1867a8e0-dd86-43e3-90d5-77988e45b54d",
        "cursor": {
          "ref": "5f58153d-e985-4e7e-b595-a752af8331bc",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a7007815-781a-4dcf-a5e6-2b3dd03e6d90"
        },
        "item": {
          "id": "1867a8e0-dd86-43e3-90d5-77988e45b54d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f75d68bf-8daf-470c-93b0-54d39f3dc9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26551410-f82b-46ca-8d6f-c75188e3a051",
        "cursor": {
          "ref": "3095314c-70f8-47a2-b359-0b906a22c438",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5414cf3c-e290-4d58-89d1-d1cdee5d0766"
        },
        "item": {
          "id": "26551410-f82b-46ca-8d6f-c75188e3a051",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "82437331-f128-42be-99ca-45dfb9230725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5e728b-faa4-4bd6-b19c-b50cb08da900",
        "cursor": {
          "ref": "b76bcc5f-543e-4cd1-bd49-c0198044e817",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c4b6784d-6529-4de4-b639-fe615abbb513"
        },
        "item": {
          "id": "0b5e728b-faa4-4bd6-b19c-b50cb08da900",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5e2d1d36-833a-4a64-845c-96ef4de3995f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 581,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22f04de-fb4e-4a5a-91de-05e9a2948c1a",
        "cursor": {
          "ref": "526d388f-2b0f-418e-afe4-4b8b52f936ea",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "534e8044-125c-4878-b4c8-482fc7d193d1"
        },
        "item": {
          "id": "a22f04de-fb4e-4a5a-91de-05e9a2948c1a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "6df326d2-87a9-4893-ab92-2817e31360d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609668a7-f13a-4b20-ac04-6ed44dcbebe7",
        "cursor": {
          "ref": "aa55c514-2b43-4095-9b19-446ac70c0ae9",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7c37d0a9-8fd0-4aac-b7a6-6e0b6cb61d01"
        },
        "item": {
          "id": "609668a7-f13a-4b20-ac04-6ed44dcbebe7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "51a7a29a-c96d-463e-bdf3-f6da9780ba2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14ffce3-40e6-4e9d-a511-6490d3a0841f",
        "cursor": {
          "ref": "8700bb24-7119-4628-a052-a77240e0f800",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "cd541ab3-81ca-4878-af1d-702a3f50b259"
        },
        "item": {
          "id": "d14ffce3-40e6-4e9d-a511-6490d3a0841f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dec0f82e-bd96-40da-a082-61ef61d0253a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa0b906-83ac-4fe9-963f-c5bd9855984d",
        "cursor": {
          "ref": "09e30c1c-c575-4c05-824c-7305cac7e9f4",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "73ce203c-9998-438d-abe0-7e2bffc3c772"
        },
        "item": {
          "id": "9fa0b906-83ac-4fe9-963f-c5bd9855984d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2215f4ac-7696-4ad2-81cc-20b16b5b0d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8628ab88-5d13-4957-ab8a-bd37e2fe60fb",
        "cursor": {
          "ref": "ba887642-aedc-480d-bed9-da08f1756253",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "452a0318-51b2-435f-867b-7f5d72a701eb"
        },
        "item": {
          "id": "8628ab88-5d13-4957-ab8a-bd37e2fe60fb",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3aa232e9-723c-400f-a1c9-b748bfdeb676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 558,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcab7c53-a3ea-40e7-b5b2-4cbf5c7e588f",
        "cursor": {
          "ref": "53142212-7e0d-43c4-a101-bd1208fe3a72",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f2411cfc-8294-4751-809e-45fc687e968f"
        },
        "item": {
          "id": "bcab7c53-a3ea-40e7-b5b2-4cbf5c7e588f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "78ffa42e-eed4-4959-87e7-cd784dfd9f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212b2db4-e804-49fd-a085-ecf962a4680e",
        "cursor": {
          "ref": "af6a6686-3421-4151-97dd-68f2bbb9500e",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "9140a011-d8fc-4f61-a0ae-9c6eaeb38103"
        },
        "item": {
          "id": "212b2db4-e804-49fd-a085-ecf962a4680e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "44d54ca4-3ff7-433b-b0a8-959f50272051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da459bda-9d6b-49f9-a112-aa57e674642f",
        "cursor": {
          "ref": "e08c8812-2f5c-4535-90f8-4bfe152b969e",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a971eff2-6c12-49da-9c84-ba47e2059fa8"
        },
        "item": {
          "id": "da459bda-9d6b-49f9-a112-aa57e674642f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1aec07a5-cf50-4706-82af-2c2770807b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 644,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "398bb86e-b668-464f-a27a-af5c44203a2c",
        "cursor": {
          "ref": "9011546c-e4fe-4c3b-b08e-3ac7fcda9043",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "adec5347-046b-4257-9622-24d562554120"
        },
        "item": {
          "id": "398bb86e-b668-464f-a27a-af5c44203a2c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "454acffb-f36f-4059-90b3-9978851d716a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 666,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b882b799-6b96-49ed-b9da-02aa6c0b7ed4",
        "cursor": {
          "ref": "7de6adcb-933b-4a20-875a-e4a86e4eea75",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7be59406-0cb3-4404-97d0-cf34c93b62bc"
        },
        "item": {
          "id": "b882b799-6b96-49ed-b9da-02aa6c0b7ed4",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ae8484c1-7253-49b8-87c1-0fc42766e7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 864,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14643911-45e9-4633-b812-aace1ad1d804",
        "cursor": {
          "ref": "9f5b09d3-7d7c-4e83-aa1a-1a05bce00360",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "26075d59-82fb-46e9-b466-253595ee307b"
        },
        "item": {
          "id": "14643911-45e9-4633-b812-aace1ad1d804",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f0286fbd-d86a-43af-947b-547e8f71577a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 857,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f9446d-fec6-4126-bc79-3bc5974211ca",
        "cursor": {
          "ref": "f01ab80f-b1b7-4f5e-924f-75bac3dbb735",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ac8ad453-f7c8-484f-8a77-d108c913324f"
        },
        "item": {
          "id": "c0f9446d-fec6-4126-bc79-3bc5974211ca",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b7afe09c-4020-4c58-969e-7a2c30cbee44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1003,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c732c550-a430-44fc-bf2d-3a4ea9167086",
        "cursor": {
          "ref": "6b083876-7adf-42fb-8db5-d1bd750caf4f",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "64cf4fe5-e155-4b5e-9287-6861a2be0c7b"
        },
        "item": {
          "id": "c732c550-a430-44fc-bf2d-3a4ea9167086",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "42e72fe9-b577-4444-ac7b-4135c568537e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0abb2241-a8d6-422b-9945-dbb9244e8117",
        "cursor": {
          "ref": "20d16f2f-e4d5-451e-8167-83ef74a9817c",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "0b4c0b89-4624-4171-a5e6-f5ed43b452b5"
        },
        "item": {
          "id": "0abb2241-a8d6-422b-9945-dbb9244e8117",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f78e9d93-e983-40a0-bf7d-df4e18fb9e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "932fe4f7-d638-4efb-b16c-e29aeff73e1f",
        "cursor": {
          "ref": "1ca370a6-792c-449e-a9b3-73661d1944ad",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "14f13c5c-7ca2-4884-8c4a-cfe1d071d687"
        },
        "item": {
          "id": "932fe4f7-d638-4efb-b16c-e29aeff73e1f",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fb5fe29a-c273-418b-a155-763516c7b468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 648,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd576af4-4d2f-4258-aac1-782ae8004b66",
        "cursor": {
          "ref": "9a113d61-af9f-41c7-93e0-f6c9ec12f2ff",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "0a078922-0105-4122-87a8-0b524f551c3a"
        },
        "item": {
          "id": "cd576af4-4d2f-4258-aac1-782ae8004b66",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "531db057-d3d4-4c34-85cb-5367fd9e4e0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca611a3-7164-4e5c-9960-79b1874d5e39",
        "cursor": {
          "ref": "23ec77a5-41f3-4891-bdca-b44dda267286",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "62a5c5b6-4977-42ed-a505-ba0204e56d7e"
        },
        "item": {
          "id": "3ca611a3-7164-4e5c-9960-79b1874d5e39",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "b216c263-3722-4306-8076-663281081d63",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 608,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b3f470-2964-4c90-8a68-58b085150762",
        "cursor": {
          "ref": "4c062f4b-ec99-4ffc-9194-c74365643457",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cffd1bd7-27b7-40e6-9a7f-e2131c99d727"
        },
        "item": {
          "id": "47b3f470-2964-4c90-8a68-58b085150762",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "762e975e-7070-4895-80c9-7fc41a314046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b3f470-2964-4c90-8a68-58b085150762",
        "cursor": {
          "ref": "4c062f4b-ec99-4ffc-9194-c74365643457",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cffd1bd7-27b7-40e6-9a7f-e2131c99d727"
        },
        "item": {
          "id": "47b3f470-2964-4c90-8a68-58b085150762",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "762e975e-7070-4895-80c9-7fc41a314046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99494a72-1483-4f5e-950c-9c012740c656",
        "cursor": {
          "ref": "473f22ba-b3bf-4fe4-99e9-479bff35c4ed",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "32526b4d-e414-4cef-9e08-8cd424fb4b02"
        },
        "item": {
          "id": "99494a72-1483-4f5e-950c-9c012740c656",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "95b090e6-0ab6-465e-a35e-c9f12d951843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74cac0ab-643e-4353-a1ba-818e2cbc2a4f",
        "cursor": {
          "ref": "1fbfdc48-9c61-4032-be73-e725a59127e2",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c677a4eb-54c5-4338-b3be-a12611f6b144"
        },
        "item": {
          "id": "74cac0ab-643e-4353-a1ba-818e2cbc2a4f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "69608f12-ce7c-4271-a742-357b6bc17b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c20bab5-4120-4b40-8349-5fc9ef6d8ac2",
        "cursor": {
          "ref": "7bf58708-9977-4c72-b957-0917867bd786",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "0b24ec2c-f0bf-42ee-8a18-28af6b202460"
        },
        "item": {
          "id": "9c20bab5-4120-4b40-8349-5fc9ef6d8ac2",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2f851e92-c7c4-4b5c-b366-f4cffbf83c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0288f8-6c42-4f07-841d-8452bbfc99b3",
        "cursor": {
          "ref": "da533d5e-3061-4030-8d88-89558a0a47f7",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "eb58614a-1d68-4b97-b73e-9e31ed138c46"
        },
        "item": {
          "id": "4f0288f8-6c42-4f07-841d-8452bbfc99b3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "2a1ff9fe-0dcc-4e50-ad18-ccfda507ef0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd997e1b-8606-413e-85ce-ed494ab621c7",
        "cursor": {
          "ref": "437f39af-c194-415e-916b-98e4dd685439",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "939b1e50-ce00-4013-a722-d289dca16949"
        },
        "item": {
          "id": "cd997e1b-8606-413e-85ce-ed494ab621c7",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "844e7f12-35d7-430f-8f39-8bd022df2fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d032ec4f-0a27-4e82-88d8-43576b72b82c",
        "cursor": {
          "ref": "ed4c52f5-48d6-4055-9869-80e5979a3b29",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "97ede69e-4e75-4e64-9b77-330d27d9be8b"
        },
        "item": {
          "id": "d032ec4f-0a27-4e82-88d8-43576b72b82c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "d5df1d1a-0927-467d-9dcd-d3149bf59dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "817747ca-4025-4b29-8bb4-d4eee31c5fc3",
        "cursor": {
          "ref": "b43465d6-d0b4-452f-a897-95ea0a90c6f6",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "312bd92d-e929-40ea-867d-1a137316d850"
        },
        "item": {
          "id": "817747ca-4025-4b29-8bb4-d4eee31c5fc3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a185b305-9a7c-4ea2-963d-0b8ff1f8aee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 401,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfb2b67-55cd-4b6c-83e4-f2550d2e8860",
        "cursor": {
          "ref": "257e8088-11b7-4b1c-acd3-009edb506b8c",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "32ee6d3e-031e-4e2c-816c-2df827bda75c"
        },
        "item": {
          "id": "bbfb2b67-55cd-4b6c-83e4-f2550d2e8860",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "10dfa637-6b40-4a5a-bcac-c3997ae71c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995096d6-125c-4f5f-9393-a8dcb564c74f",
        "cursor": {
          "ref": "14aec4ab-2885-43c4-b20c-739f79d456cc",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "37ba912a-597c-4b76-acf2-22b5acd3d748"
        },
        "item": {
          "id": "995096d6-125c-4f5f-9393-a8dcb564c74f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4147672a-c386-4545-ba88-e572934c0e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02895a8d-f006-4d1a-84e4-6e89c0575db8",
        "cursor": {
          "ref": "02ad814e-2fb9-4528-a172-73dc1a100f1d",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "dedb07be-5dc8-459a-a56d-0bc105758723"
        },
        "item": {
          "id": "02895a8d-f006-4d1a-84e4-6e89c0575db8",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ac2c7f68-98d9-44fb-a24a-804eff3156bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0868cb85-5c69-48af-92e4-ee7284d9d6b4",
        "cursor": {
          "ref": "84814394-426d-45d1-80ed-53ebc30d33ec",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "79ed1af0-08c6-491b-bff5-d769ec1501b4"
        },
        "item": {
          "id": "0868cb85-5c69-48af-92e4-ee7284d9d6b4",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "2ccb6a08-0744-4546-b519-f331b2a945aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0183f8cc-5379-4028-8590-7c1dd1d0dbd9",
        "cursor": {
          "ref": "21d3ef36-2dc6-4c75-9cb5-d9629b482c99",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d32d461e-c15d-44dd-acf7-b9ce184d2602"
        },
        "item": {
          "id": "0183f8cc-5379-4028-8590-7c1dd1d0dbd9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a44ec3f1-7bbc-4e60-9acb-ef5c6df93b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0df7daa-1a12-4b30-8140-06d4e1dab30f",
        "cursor": {
          "ref": "9212dbf4-1bd4-4f5c-a7c5-ddfeb404025a",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c6133017-b7ca-4c84-b940-d02118ce0fa4"
        },
        "item": {
          "id": "c0df7daa-1a12-4b30-8140-06d4e1dab30f",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5f9e6334-f055-49e6-be25-151d3b4ff6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68df1cad-a4d5-4e46-a732-79f29fc2cb93",
        "cursor": {
          "ref": "d9de2383-bb36-4cbf-a682-0f55ec9106c7",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7dddd6e0-7865-4ec2-b02e-dd7f8ac00646"
        },
        "item": {
          "id": "68df1cad-a4d5-4e46-a732-79f29fc2cb93",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8ead2ae0-b5b2-4831-b001-71310bcf37d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b4ad0c0-e609-4f4f-8fb7-02d4faaa1922",
        "cursor": {
          "ref": "94ad6416-0fdc-4ab8-941f-48e7a3fdc3ad",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4a84a9a2-56d7-4b64-9764-1ed3a27eee42"
        },
        "item": {
          "id": "3b4ad0c0-e609-4f4f-8fb7-02d4faaa1922",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b6c2e55f-3db5-4c72-8a9d-9b61a47fb383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72092ac8-9fa9-4d9e-81e9-63be760cc38f",
        "cursor": {
          "ref": "22b77eb3-c41e-4bf2-aa5f-8b563d91c73f",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "b0cd9630-48a9-4604-9e72-215b387488c2"
        },
        "item": {
          "id": "72092ac8-9fa9-4d9e-81e9-63be760cc38f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9c89c285-3763-4cf4-adef-23dbebd3302a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b8ec4b5-ab19-4b0a-87a9-d33515d493c0",
        "cursor": {
          "ref": "20a7572c-0a09-4e08-ab4c-27e7e324cd25",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6915b4d4-0236-4246-a667-ebb5257ba7e1"
        },
        "item": {
          "id": "8b8ec4b5-ab19-4b0a-87a9-d33515d493c0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "e56cb12f-005c-42e4-9212-24e841c0ad65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f49cc0-fd38-47c4-a99a-9d3153d4271f",
        "cursor": {
          "ref": "40837235-67f6-475e-8df8-7b132bd1188d",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "04606b9e-c8b6-4fdd-8500-14ee08e03d22"
        },
        "item": {
          "id": "b6f49cc0-fd38-47c4-a99a-9d3153d4271f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "374642a0-de1b-4e0b-a730-7987dbf91a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99cb4e0d-0f21-42fd-8e65-d06a6107e293",
        "cursor": {
          "ref": "69720ce5-094e-4bee-90e7-276ae40be35b",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "c58b755f-b4f9-45fd-961e-e0fc1d262a3b"
        },
        "item": {
          "id": "99cb4e0d-0f21-42fd-8e65-d06a6107e293",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9dc10d06-6931-4f0a-b13c-3a142cbf6e42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d81a42f9-567a-49b6-ae69-02184dfc6523",
        "cursor": {
          "ref": "d575a7f7-114a-47f3-809c-0d5ba068a7a2",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ee4f318b-865e-439a-acdc-cda1004f05c3"
        },
        "item": {
          "id": "d81a42f9-567a-49b6-ae69-02184dfc6523",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "0fe64be2-b2ba-4077-a724-f443235d3975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3eea23-c3ca-4bb5-9647-91811e8de038",
        "cursor": {
          "ref": "fdd7f26a-17fa-4b48-9fc3-0d74cfcbf626",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "7c919ee8-8e53-4b99-b988-2cd45cc89004"
        },
        "item": {
          "id": "dc3eea23-c3ca-4bb5-9647-91811e8de038",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "dcc903ee-bead-4f6f-9a0b-2079c8d5f295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11098df8-de88-4452-9ed2-130af18e4411",
        "cursor": {
          "ref": "59fbb219-51ff-4968-bac5-6dd16f2f9415",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ad94ab8a-a837-42d8-88e3-2ae6f0fddce4"
        },
        "item": {
          "id": "11098df8-de88-4452-9ed2-130af18e4411",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "21bd2824-a801-4a57-a43a-a649f4e2f9d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0da2887-a6a4-4911-a043-289197c408d4",
        "cursor": {
          "ref": "8a6e44bc-2d69-4297-b6df-cefdda89b18e",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "65e5d1cc-9723-4b9d-8c5b-be35c4d37d64"
        },
        "item": {
          "id": "c0da2887-a6a4-4911-a043-289197c408d4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4a6dfd41-1721-45a9-89bb-53446e1d3dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 381,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675fd970-edcf-4721-8167-d6103c8a5f71",
        "cursor": {
          "ref": "4c480d59-4d75-4c25-97b0-5e92c3bd2327",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1d47d81d-4a37-444f-ac5f-9b10b7e88962"
        },
        "item": {
          "id": "675fd970-edcf-4721-8167-d6103c8a5f71",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "f9c8017a-8edb-4198-8e27-5ac310f64cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5a72f65-e411-4a25-a29c-68046a597f07",
        "cursor": {
          "ref": "01b86b67-e94f-4ffd-84d4-cc42c9c3abdf",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "dc2af370-c613-4342-ba7c-90fdc8d12ac1"
        },
        "item": {
          "id": "e5a72f65-e411-4a25-a29c-68046a597f07",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1d8cadf2-20bc-4289-8b6a-8783d2b32387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 370,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0bd90e-e883-446b-bfac-7fc774cb6e1a",
        "cursor": {
          "ref": "d7b1e578-f8cf-4ea6-b3d5-133bcc6325df",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5231e4b9-ac93-4bb2-81f3-514cf2c6cca2"
        },
        "item": {
          "id": "9d0bd90e-e883-446b-bfac-7fc774cb6e1a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4be65f5c-37e2-454f-a985-db9d972dcd3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 418,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8eb28f-b93b-4a4d-b112-e96e19144656",
        "cursor": {
          "ref": "d90d05e1-5959-4b6c-8321-eceea583a8a2",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e750ed24-5720-4560-9fbf-084f696aafb9"
        },
        "item": {
          "id": "ce8eb28f-b93b-4a4d-b112-e96e19144656",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e93811cb-7e81-4084-924a-92557c2834a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 730,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652de4bd-ad8f-47c2-81a0-5df45394030f",
        "cursor": {
          "ref": "316b0475-4803-45d0-8d61-227642675395",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c6150f28-cb73-447b-80fd-c9e1df4e467d"
        },
        "item": {
          "id": "652de4bd-ad8f-47c2-81a0-5df45394030f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fed1431b-b9fb-43cb-9858-c35c378624d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6c2973-e801-4313-a701-85bff24cdaa5",
        "cursor": {
          "ref": "eb73c29e-1920-4e3d-b30d-3d09d6d9a9ef",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "70e39dd7-8d86-444c-a915-b6b9bf0b4842"
        },
        "item": {
          "id": "bd6c2973-e801-4313-a701-85bff24cdaa5",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "701fb1bc-3d9c-4761-95ef-948d2a8520b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 722,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664fc385-d72f-4a67-a497-05f99252588f",
        "cursor": {
          "ref": "41ab10ba-5aba-4c1b-a3c1-6450102c921c",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4ce00115-1850-40b2-b690-c01627bacbbf"
        },
        "item": {
          "id": "664fc385-d72f-4a67-a497-05f99252588f",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "0fb9134d-f642-4287-9b29-a66670a9757a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 774,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7681b7ea-e56a-4991-bfbf-0f23df0014c6",
        "cursor": {
          "ref": "20e9b0bb-76c4-4b1e-8419-7f04454103e6",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "f154e516-9189-427a-9f12-7367bdfb4194"
        },
        "item": {
          "id": "7681b7ea-e56a-4991-bfbf-0f23df0014c6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "98abb607-7542-42a4-a98f-1cb9cd895906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6c5b68-d592-4899-8e40-5bec20d7f40f",
        "cursor": {
          "ref": "cbd3b921-364f-4f90-977d-f2d35b4588e3",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6f8e1cd8-510e-4979-adff-f5d0b43eb139"
        },
        "item": {
          "id": "1f6c5b68-d592-4899-8e40-5bec20d7f40f",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "59cc7e8b-80a6-4da2-aa43-0874e304e0a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "887643ca-0943-476f-97b8-728bc0c1dd2e",
        "cursor": {
          "ref": "8c8af4af-4277-43a5-afb2-2b61a581cc81",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "12e09e08-dd21-46e7-913b-f63dcc3e23f4"
        },
        "item": {
          "id": "887643ca-0943-476f-97b8-728bc0c1dd2e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "28c52d7b-6b60-4ed9-b3ff-67b975311379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b628e31-d5e6-4b74-acdf-a49e0ff20883",
        "cursor": {
          "ref": "32bcfe69-3a91-47b3-94e4-c0fdc8d81757",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a5267479-4428-4531-9f82-b820e55ca329"
        },
        "item": {
          "id": "5b628e31-d5e6-4b74-acdf-a49e0ff20883",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9f1bd884-b3d4-4f91-9300-b242f81ba68a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1702493e-2f19-48cc-a985-e295150b848d",
        "cursor": {
          "ref": "67403e7e-5a89-4989-9d4e-44e31ce8eb98",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cde8e9d5-b931-4ba5-a8dd-8902038ee05e"
        },
        "item": {
          "id": "1702493e-2f19-48cc-a985-e295150b848d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "a819e541-e069-4873-9886-cd0ed393082e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff6e14f-b07b-4da6-a0b7-20742756a4a6",
        "cursor": {
          "ref": "cd50df58-e6f8-4702-951c-dc8257753bf9",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "94ae5a6f-4db9-4bee-986b-e065881a3fce"
        },
        "item": {
          "id": "4ff6e14f-b07b-4da6-a0b7-20742756a4a6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "74266b56-ac11-4571-88f5-7ee34195972e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bfbefe4-3390-4171-8c89-ae1b524414c0",
        "cursor": {
          "ref": "6e5dc7e7-3908-4bdc-8989-7e2426a673a0",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e9874ed1-b923-49bd-8d25-4d4f8fd04e00"
        },
        "item": {
          "id": "4bfbefe4-3390-4171-8c89-ae1b524414c0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e6ccdf8e-c7a3-441a-8dfa-c1955c8a0f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20d6b40-9d48-43ab-8ec5-ca1337f900fc",
        "cursor": {
          "ref": "b0af42eb-a11a-4c10-8ca0-f29310a0d7eb",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6ff577dd-2ef2-4722-b4c1-f7cac59420cd"
        },
        "item": {
          "id": "d20d6b40-9d48-43ab-8ec5-ca1337f900fc",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "85dabfda-f92d-42ac-91dc-dd03e10d4339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f84d738-8ad0-4cc7-a578-b10697454a5b",
        "cursor": {
          "ref": "80c9aea4-71ff-404f-bb25-333a87eec1f6",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "b160ac8c-c4f6-40f7-9ea4-1481629de441"
        },
        "item": {
          "id": "1f84d738-8ad0-4cc7-a578-b10697454a5b",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0743adee-1e4f-4687-8809-3a3f26845f3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa3abd0-05e3-49a7-bec7-80e8e0dbafb7",
        "cursor": {
          "ref": "661a404b-11c2-40a6-839b-ebb707a33abf",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "542c682f-ffaf-42d4-a3d6-4e4f438da93e"
        },
        "item": {
          "id": "bfa3abd0-05e3-49a7-bec7-80e8e0dbafb7",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "42946f1a-5bbb-4862-83bd-6b5412b40d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9901de-c87c-4212-86dc-a5bae8bdd3f0",
        "cursor": {
          "ref": "b0e5baf1-4342-4464-9a47-96639a642384",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "bb21a187-411d-49f8-a39b-8f7079b8cda6"
        },
        "item": {
          "id": "5d9901de-c87c-4212-86dc-a5bae8bdd3f0",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "19837ff9-5728-47cd-88fe-fee6af274c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb299786-60a4-4d46-b0e1-92ddb09a25b3",
        "cursor": {
          "ref": "0d66f6b9-61da-424d-8eab-c1c320c8d1b9",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "de4f07a0-ec70-4a0e-9ebd-fbd90394cfd0"
        },
        "item": {
          "id": "cb299786-60a4-4d46-b0e1-92ddb09a25b3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2266fb77-cd6a-4ad2-b37b-ef96223c689c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a64936-8ecd-4241-a849-634e5bffab46",
        "cursor": {
          "ref": "6711bb25-eaa8-40ea-aa9d-c09a0e909930",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "b031a5c9-6265-4f2f-b792-f7127fde9a43"
        },
        "item": {
          "id": "a0a64936-8ecd-4241-a849-634e5bffab46",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2cd070e3-86f9-417d-9a08-603a35592807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f2099b-a181-4eb8-aa7d-06e6fe5df92f",
        "cursor": {
          "ref": "bb6a7df7-7e46-493a-9f13-4dd87c520bb8",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bc20518d-09df-44a6-a083-7e04fd93f83e"
        },
        "item": {
          "id": "f1f2099b-a181-4eb8-aa7d-06e6fe5df92f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fa273eff-4635-4c56-9b45-81f43e2e58ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88dc4a95-1e33-40e5-9336-fa8ddf6c98e9",
        "cursor": {
          "ref": "fcd84176-79e8-445e-be62-eb2027260aed",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "2d7289cd-be8f-48fc-a4a5-8992808bae5d"
        },
        "item": {
          "id": "88dc4a95-1e33-40e5-9336-fa8ddf6c98e9",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e8e792b6-35de-43c1-96a7-27d0b440bf04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f643a7-d25a-47e6-bc33-b11a5ec830df",
        "cursor": {
          "ref": "3284d6a0-c367-4ae7-b8a7-e741b8cb956e",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0cc14afd-4a1e-44cc-815b-ea84aff70621"
        },
        "item": {
          "id": "52f643a7-d25a-47e6-bc33-b11a5ec830df",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "923df460-0d73-4d13-bf15-6b99bb46313f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8402696-ef95-4ecc-b258-013ccb789406",
        "cursor": {
          "ref": "71d45366-5beb-4d28-834b-528abe54dc77",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f85c697a-8c3a-4ba1-ba15-ed0cf58dc3ae"
        },
        "item": {
          "id": "b8402696-ef95-4ecc-b258-013ccb789406",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d50692da-817f-4b4e-bdac-0327e1044baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3d7f9f-eda3-49a1-b2b4-9c1464953cad",
        "cursor": {
          "ref": "9f14d480-d10a-4130-b344-ab86434ffd7c",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "cf51844c-b9eb-47e3-abba-073f759d41c0"
        },
        "item": {
          "id": "eb3d7f9f-eda3-49a1-b2b4-9c1464953cad",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "63f87a1a-7ab3-4325-9cc4-291bfc6a8965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128b4ecb-1321-4650-b0c6-3b287dbd9909",
        "cursor": {
          "ref": "adb64aec-35d0-4142-a015-f1fec8d96a1c",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "49a1ec22-9305-46fd-b247-5e0409bd1da3"
        },
        "item": {
          "id": "128b4ecb-1321-4650-b0c6-3b287dbd9909",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "3b7255a2-2b42-45e4-beb3-a3c262c6730b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfd79b25-232f-4a59-b9cf-ed68aefbd817",
        "cursor": {
          "ref": "dea19cbc-9120-48ce-bbfe-e357f4a224bc",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fc2c5dc5-ffd3-42a0-b53a-7df2dd38aede"
        },
        "item": {
          "id": "cfd79b25-232f-4a59-b9cf-ed68aefbd817",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bfea5427-dff6-471b-9667-a1b70bae53a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22e6fffc-ea54-4520-9442-14a43c70aa8f",
        "cursor": {
          "ref": "281badf0-5627-437b-ae4c-c9eb43ae271a",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ce37ebd9-fe40-4154-aa5b-747b82f0f7ed"
        },
        "item": {
          "id": "22e6fffc-ea54-4520-9442-14a43c70aa8f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2ae02404-99c4-454b-a3ec-cd0c7f10cebf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71dfa62d-c58e-4e14-9dc8-23f352e4a58a",
        "cursor": {
          "ref": "8810aaf7-4238-4ece-b96d-eb69f7c574a6",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "61a71e0e-78ee-4543-9c80-9452e9613d9a"
        },
        "item": {
          "id": "71dfa62d-c58e-4e14-9dc8-23f352e4a58a",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "fe8a1cad-e246-4e1a-9293-c06e1c870f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a3cb7b-d324-4ac1-88a0-a0b6cfc3337d",
        "cursor": {
          "ref": "6a302931-b606-4f83-b7f9-898d762e9412",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5173c9f8-d766-4338-89d8-85decce3b62b"
        },
        "item": {
          "id": "f7a3cb7b-d324-4ac1-88a0-a0b6cfc3337d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "933b9caa-9992-4a0a-8c80-96d92669beb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0909193-0b14-4e61-8f4d-80488ec205df",
        "cursor": {
          "ref": "a75c0ad0-cbe7-4b18-a78b-162902b06bbe",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "177250d5-cae6-4a37-aa91-c1ee27edcb2b"
        },
        "item": {
          "id": "e0909193-0b14-4e61-8f4d-80488ec205df",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ec14cb51-53e9-4e83-af27-b5d6b875f603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f951093c-5af2-4e0a-9c5a-c2d3ab4917a8",
        "cursor": {
          "ref": "eeb76b31-8c1b-42a6-b4ad-d151b4d62542",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4553af46-e85b-4bcd-8531-546eef5f5020"
        },
        "item": {
          "id": "f951093c-5af2-4e0a-9c5a-c2d3ab4917a8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "05dc28e1-351d-4178-b7ec-7c7055ecc51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f1195b7-4801-49c2-bd61-9e6da4dba24d",
        "cursor": {
          "ref": "fb2ee897-bd69-41e5-8773-3cabd6a201c7",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "683ad97d-f647-4ee0-adce-20509f1cdd80"
        },
        "item": {
          "id": "0f1195b7-4801-49c2-bd61-9e6da4dba24d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "80922b62-e1a6-4df2-81ac-8180c31d250a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55aedfe-893e-4853-88c8-d26df66ace51",
        "cursor": {
          "ref": "05fedccf-c4f3-4d2f-8000-ccc281e63f55",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7fc506f0-af1d-47e6-b8c1-f0beb08ddd72"
        },
        "item": {
          "id": "a55aedfe-893e-4853-88c8-d26df66ace51",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7cc9a048-e56d-4a75-975b-332667754131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c52ac97-ce53-4e83-9a56-d2fe81837de6",
        "cursor": {
          "ref": "7d9d1302-ad56-4a39-aa59-c6adbba0ecf2",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cfe95c91-628d-4e34-bceb-e70636c13530"
        },
        "item": {
          "id": "3c52ac97-ce53-4e83-9a56-d2fe81837de6",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "210d6027-4060-4cab-a6d4-b145f3ee09c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c3c668-43a3-4b15-abfa-1e61c4d84d46",
        "cursor": {
          "ref": "b46ec021-daed-4580-a84d-2b1bab1551ef",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d30b72b9-4c33-4d7c-9193-7eeb4fcad5b0"
        },
        "item": {
          "id": "43c3c668-43a3-4b15-abfa-1e61c4d84d46",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "9e895850-fc53-4667-8b97-6851e22ecac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94302708-e419-45d4-a2be-0aead502ce76",
        "cursor": {
          "ref": "a1c8710f-a06a-4ff6-8b0a-c6aeb184dd8c",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2625377c-c0a4-4ba1-ac21-a4b242bbea6a"
        },
        "item": {
          "id": "94302708-e419-45d4-a2be-0aead502ce76",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b67373ac-3efc-4878-b784-b39a18092a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "207bc0d1-71b7-43f2-8c2b-d51d41bdbf55",
        "cursor": {
          "ref": "9d529d5c-3d98-4211-b6f9-12fd6b9408b7",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f4a7431b-34c2-44db-8739-380a36009a89"
        },
        "item": {
          "id": "207bc0d1-71b7-43f2-8c2b-d51d41bdbf55",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "7e7dd843-b20e-42d7-a428-12b47ebbfb8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a78eff5-97c5-4d0f-b186-1ada09c2dbe4",
        "cursor": {
          "ref": "de6d12dc-8263-4a14-a6d8-1ba23e34cc5d",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "70be27a7-672b-49e2-b1cd-10e847810e32"
        },
        "item": {
          "id": "7a78eff5-97c5-4d0f-b186-1ada09c2dbe4",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "7d432569-39a1-4d5a-8307-00c53d08bc42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f640692-88c6-4e05-975c-0fedca71d3ed",
        "cursor": {
          "ref": "cec0c2f9-eee7-45c7-9233-d8a9fbc3f769",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "72ee520b-0467-408f-80bf-c81259615d65"
        },
        "item": {
          "id": "7f640692-88c6-4e05-975c-0fedca71d3ed",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "dcddbfd2-5620-43de-9829-26ca046257b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31f66bf-6754-4486-ab73-0c08d0e823a3",
        "cursor": {
          "ref": "3bfdaf5d-09cb-4423-8c79-e3f0a72a6a98",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "eea3cb1c-f7ff-4067-a308-623e003920a8"
        },
        "item": {
          "id": "e31f66bf-6754-4486-ab73-0c08d0e823a3",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "237a8dc8-aa08-4f64-80c5-66701f3d097c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc62922-5327-4996-a6d3-85036538cec3",
        "cursor": {
          "ref": "e3f310d5-25a4-4404-a42d-9ca5aca68126",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c772cc45-bfdb-4aa7-99da-0a6b93da64ac"
        },
        "item": {
          "id": "8fc62922-5327-4996-a6d3-85036538cec3",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4339b9a8-95bf-43c3-bac9-8f831b82964b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28c00bb-17d8-4676-a3be-a21a0f670ef4",
        "cursor": {
          "ref": "f79d6637-e82a-4cae-9e07-d490e153b866",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "424829f9-a500-4b74-a824-1b0e4ad80ed3"
        },
        "item": {
          "id": "c28c00bb-17d8-4676-a3be-a21a0f670ef4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6f2c5441-3024-47d8-aa24-a0a53e67e498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e629e71-c0df-4dda-9d11-f5c948111a8e",
        "cursor": {
          "ref": "3a00d6ff-cfb1-4bd0-b1c7-343f30485e71",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "10cf5d5d-1527-4828-8fb3-cf314a4dd6e4"
        },
        "item": {
          "id": "1e629e71-c0df-4dda-9d11-f5c948111a8e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "255ae4e6-965d-4f06-a617-efafe1e5c2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 388,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d5ca446-1086-4484-bd68-a82b7ec1c050",
        "cursor": {
          "ref": "883ac21c-cade-47b8-843d-9ed081908ffc",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "867ef4ad-d0db-406c-93c9-d295ccc8c581"
        },
        "item": {
          "id": "8d5ca446-1086-4484-bd68-a82b7ec1c050",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9dedac8e-70ba-4298-a6bf-fe799644cc85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7ebdc7-53e1-4f14-b3cf-3d6db8dde334",
        "cursor": {
          "ref": "8cf10eae-440f-4939-bbc5-f948fd21072e",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "4d84b88d-1bb1-41bd-b977-3cbd2741e013"
        },
        "item": {
          "id": "0e7ebdc7-53e1-4f14-b3cf-3d6db8dde334",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "e6e32bfc-c87a-4e3e-a814-4b44b119ee0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0e3f6a3-fb4c-44c5-aa65-db5164346f70",
        "cursor": {
          "ref": "893ea178-dfe8-4fe3-8ab9-a907f9417c0c",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "16d6c423-cbeb-42a8-8b34-5ed49aae1659"
        },
        "item": {
          "id": "b0e3f6a3-fb4c-44c5-aa65-db5164346f70",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e18ed420-ecfd-4639-8567-9af9aa143d8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be36358-7f89-477d-a57e-946ee5a5e561",
        "cursor": {
          "ref": "d2936261-4a50-4cdb-8e45-f44eb0676bb7",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "50174e74-8ac1-48ca-a112-c11948bdf346"
        },
        "item": {
          "id": "9be36358-7f89-477d-a57e-946ee5a5e561",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "53955d1a-a281-47b6-a726-8d55c9e963ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9907b47c-324a-4b46-b375-7e70563ab310",
        "cursor": {
          "ref": "6ed45f81-5d90-472b-9b07-a7ca6b844566",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "5a85368c-af6c-4fd9-bcb2-7bfbe508a1ea"
        },
        "item": {
          "id": "9907b47c-324a-4b46-b375-7e70563ab310",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ffef61bf-d0d6-4ece-a5dd-83695eb2aca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cf8418b-4a52-45a5-89ae-06f4d612386d",
        "cursor": {
          "ref": "612f4e4d-b1a8-4ad1-b202-b63d5126a941",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "086b24e8-667e-4299-8277-5400ddc8373e"
        },
        "item": {
          "id": "7cf8418b-4a52-45a5-89ae-06f4d612386d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "e63c5365-9d50-40bc-81f8-1d132d1edbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa3f9ca-97c3-42d2-ac2f-410b03b33ac7",
        "cursor": {
          "ref": "a0ab6b31-68d6-4c6a-bd5a-fc1d3782fc22",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4336fdca-4fa8-4b35-97be-9d988fa9fe9e"
        },
        "item": {
          "id": "efa3f9ca-97c3-42d2-ac2f-410b03b33ac7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "91e2261e-8d8c-4805-b5c7-a2c67a56ebe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7ea830-51c4-4e54-9184-7fc357dc5ea6",
        "cursor": {
          "ref": "58a831c7-7470-4af8-a940-0439901b396b",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a54fd5f1-1f46-4827-af97-41e49ad13532"
        },
        "item": {
          "id": "de7ea830-51c4-4e54-9184-7fc357dc5ea6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "c6e19761-0178-4aa9-95f3-77748e9a077f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d77784e-f2c0-4171-b3a3-ba598d733d19",
        "cursor": {
          "ref": "1158093e-0012-4357-a18c-3402757cd948",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a3af1baf-d90a-46b6-8940-e5e675c64175"
        },
        "item": {
          "id": "9d77784e-f2c0-4171-b3a3-ba598d733d19",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "08db4010-59e8-4ce2-b891-c08d6cc46171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a745a93-2f75-4c08-ab02-d9c80e85e819",
        "cursor": {
          "ref": "fcdd5279-1693-4477-9b68-c4bc6e2ce2b3",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e76a7db9-8ec3-4ef9-bbd7-c10f289383d7"
        },
        "item": {
          "id": "5a745a93-2f75-4c08-ab02-d9c80e85e819",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "34a99089-2fa9-4224-83a5-190e2aa09f44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6b44f5-ea81-42c1-be82-6d1eb66f3f67",
        "cursor": {
          "ref": "8d545a19-8692-4d78-870e-2c5817516e0b",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "b2928c41-feda-4d99-ab83-e367798001f6"
        },
        "item": {
          "id": "ac6b44f5-ea81-42c1-be82-6d1eb66f3f67",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "94aa2f17-559f-4456-ae21-8cbd67471e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d51555-0760-482c-99a2-1dc989fb0a6d",
        "cursor": {
          "ref": "4665b94a-0cd5-4b99-8b30-56040b041d78",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1a60e874-d121-40d6-8595-bcdb1b7a09a9"
        },
        "item": {
          "id": "c1d51555-0760-482c-99a2-1dc989fb0a6d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "8b136929-c7e5-4556-8b6f-00710f98c8a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906cdd5a-864a-45c7-9045-8edec2f75959",
        "cursor": {
          "ref": "fe434d70-4f07-4fa0-a160-ea1428a15831",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "21831864-ecda-4822-b470-0f9b18f87c44"
        },
        "item": {
          "id": "906cdd5a-864a-45c7-9045-8edec2f75959",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7f1677e7-b756-4b03-974f-a6187aa4b7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0996edfb-bfbd-463a-af34-7a4f5ceb952a",
        "cursor": {
          "ref": "a25b917e-9f05-4b8e-828c-90aeff3ebc6d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "77439dda-ca75-476e-b73c-a6b46e5b7bba"
        },
        "item": {
          "id": "0996edfb-bfbd-463a-af34-7a4f5ceb952a",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a8616810-baa3-4b3b-8cac-07a3c13eb2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcaf6682-b41f-4e06-9329-fcc2d3991dcd",
        "cursor": {
          "ref": "453ea3e5-413f-4688-b623-c584ce82ef97",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "fc0c722b-958e-4ae2-bbf6-241444ef1fbe"
        },
        "item": {
          "id": "dcaf6682-b41f-4e06-9329-fcc2d3991dcd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "be820d35-a624-421c-9264-f740f0d18d5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c71a17-14a7-447a-80c7-50ae25c2efab",
        "cursor": {
          "ref": "f453b901-8d4f-4715-9bce-7237a090c342",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6e429aa1-2253-4744-b0f5-bb9995fcae65"
        },
        "item": {
          "id": "84c71a17-14a7-447a-80c7-50ae25c2efab",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "23758342-159d-4e7e-b3c6-b1b788de8b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958dba0d-415d-4510-bfa7-b12dd3d72087",
        "cursor": {
          "ref": "b26fc4d5-ea77-450e-9a4b-669a18b3fa0e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c13cb1ee-63df-4767-84c0-187d8053b280"
        },
        "item": {
          "id": "958dba0d-415d-4510-bfa7-b12dd3d72087",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "264b19af-0616-4444-8a59-a2f59276f3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e338e5ef-b158-4ed8-8138-5e3015f78e3b",
        "cursor": {
          "ref": "c946d921-913d-4333-b627-717ee14211a6",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "24dab16a-df5a-49eb-8720-f8996ec268f5"
        },
        "item": {
          "id": "e338e5ef-b158-4ed8-8138-5e3015f78e3b",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "179e131b-c1ab-4586-9106-ecaf868506a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 350,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3e5abc-7ce3-41e1-a926-d5d8a6f0e12c",
        "cursor": {
          "ref": "f56ecc3b-32ce-4f4a-9942-25da89ca7ca9",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e39a6205-cf0d-4417-8d64-58c0e3920d7e"
        },
        "item": {
          "id": "8f3e5abc-7ce3-41e1-a926-d5d8a6f0e12c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "54c24ec8-b5d2-4e9a-a6d5-15881e2e5449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b56e0e-3faa-4dfc-8ebc-bc072d8f5181",
        "cursor": {
          "ref": "14e19628-606a-489b-9bee-a68d45da52dd",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "95c8403f-5a6d-485a-8fe0-11a0a15ea5b9"
        },
        "item": {
          "id": "55b56e0e-3faa-4dfc-8ebc-bc072d8f5181",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "dd99d0ce-feea-41fc-9506-b405e3a17e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2befca9-0d40-4d74-a762-f8ebfed15637",
        "cursor": {
          "ref": "c8ea1b9f-82ec-4b12-ad2f-2221294da1f5",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2d72645f-8258-4040-918c-b5741e295d00"
        },
        "item": {
          "id": "c2befca9-0d40-4d74-a762-f8ebfed15637",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b22d2dbc-47cf-4f85-8c62-e909afd0e13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b9b5e3-8055-410b-aced-8faf5be5b128",
        "cursor": {
          "ref": "2321c4a0-a105-4a44-8030-932418b5ca87",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "78101b22-d37d-4b76-bfba-c2144f8b1f12"
        },
        "item": {
          "id": "c4b9b5e3-8055-410b-aced-8faf5be5b128",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d1d9668d-ded7-4574-b0b1-dcc59494c42e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18a98f7-78a1-42c4-8855-5ec610bd86c5",
        "cursor": {
          "ref": "53bb8846-9374-4599-8cde-5f74f7c7b024",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "00ad6619-493d-4c06-aae0-fca8b1dd868d"
        },
        "item": {
          "id": "e18a98f7-78a1-42c4-8855-5ec610bd86c5",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "52958e6f-df33-47fd-977f-15b5382d7e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e871ece-cd7e-4f03-bcba-f85d1b4e73c6",
        "cursor": {
          "ref": "b29ab3cd-4e61-4d40-9247-493be16dac38",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "73569101-ee65-417c-b57c-741a3edac79b"
        },
        "item": {
          "id": "4e871ece-cd7e-4f03-bcba-f85d1b4e73c6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "789e9db4-0e52-4983-8092-b967aeeea2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d2dec4-5a5a-41c5-8e5e-a3c82130bb28",
        "cursor": {
          "ref": "54d2ab92-011d-4f69-ab8c-f5a0e415c1db",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "d32b7a0b-400f-4933-84c4-2f900c7c3728"
        },
        "item": {
          "id": "f4d2dec4-5a5a-41c5-8e5e-a3c82130bb28",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "7825c664-c5ab-40f8-8f9b-60c03a8a2db8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41574c89-c88b-4af6-be32-2a284ea6a083",
        "cursor": {
          "ref": "a383c34e-68a6-42ec-96a5-0d9dc057616e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bab619f9-0b13-4cd7-be12-5ea540b43437"
        },
        "item": {
          "id": "41574c89-c88b-4af6-be32-2a284ea6a083",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "41c1b878-ee02-477b-ad96-4e71bd5a8e81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b718d461-d31a-447a-adb0-fc0efabc2ae7",
        "cursor": {
          "ref": "d32c7ea1-e95c-4dea-a03a-98ecc2da9c96",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f21ef0fe-3a3c-4482-9d84-8b28d6db29bd"
        },
        "item": {
          "id": "b718d461-d31a-447a-adb0-fc0efabc2ae7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "fc072f2f-78ba-49de-86b4-138137573318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a348b26a-824c-4760-9307-67cd0dcf13f2",
        "cursor": {
          "ref": "58558d7a-2a84-4542-b12f-be7aae33c929",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "7bcf81d3-7930-4b12-ae08-b13a30739d41"
        },
        "item": {
          "id": "a348b26a-824c-4760-9307-67cd0dcf13f2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "4563fe1f-9edd-4769-a891-e66f3480f57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d31edcb3-c805-4806-ade8-e0399680553e",
        "cursor": {
          "ref": "f0d2dc32-3ec1-4dd4-a120-0882ff00b4c5",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2553f306-640d-47e2-ac7f-b8943f473656"
        },
        "item": {
          "id": "d31edcb3-c805-4806-ade8-e0399680553e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "19253823-82c3-4386-8787-a8af4a95fab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07341e6f-c54a-42c5-9dfa-56e5286c8512",
        "cursor": {
          "ref": "d45abc18-ae78-4c11-96b9-11bb7ae67eba",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "90890bd8-a66a-4d04-aad3-a8dd83f65c90"
        },
        "item": {
          "id": "07341e6f-c54a-42c5-9dfa-56e5286c8512",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "dd806c65-7ac0-4a82-9ba3-b1158084fc98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b226c01-62bb-4bb2-803a-9393b45db2fe",
        "cursor": {
          "ref": "89eba3f0-09a7-475e-bffe-e85c1d18dbd9",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "50fd6a4c-c59d-41e0-a49f-06390ed0c6be"
        },
        "item": {
          "id": "9b226c01-62bb-4bb2-803a-9393b45db2fe",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "f71ff619-14c5-45a3-a848-832cb501e920",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 344,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54736875-145e-4ace-af29-f867a9df55df",
        "cursor": {
          "ref": "59d3e109-0cde-4a78-ab85-aaa83f23d675",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "46a51b48-2340-411b-b482-cbe005047902"
        },
        "item": {
          "id": "54736875-145e-4ace-af29-f867a9df55df",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e8ec5752-df61-4b0b-b07f-7bc1a2b9a247",
          "status": "OK",
          "code": 200,
          "responseTime": 430,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e49b2c-36b1-4d37-8ecf-ca1242cc8985",
        "cursor": {
          "ref": "7065f340-d811-45d6-8a64-0d9385470916",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "7acf8491-a65f-4e2f-b69b-edce52c2a076"
        },
        "item": {
          "id": "48e49b2c-36b1-4d37-8ecf-ca1242cc8985",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cda23023-a274-4a85-aae7-7f3e27cdc080",
          "status": "OK",
          "code": 200,
          "responseTime": 1842,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "405763cf-e04e-46b8-abaa-0cee491023ee",
        "cursor": {
          "ref": "b0d1f715-97be-4dad-a0f1-8d171b3cc36d",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "4f200405-a8b2-4f55-b3db-091a62c4fefc"
        },
        "item": {
          "id": "405763cf-e04e-46b8-abaa-0cee491023ee",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e36ea316-6a00-41e1-a54e-0e07da52790f",
          "status": "OK",
          "code": 200,
          "responseTime": 1635,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5edae94-dce0-4a82-8d2f-7a98ae3289fe",
        "cursor": {
          "ref": "e1bff49f-1996-4139-b1fb-77faa59cfeec",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "54f5a6dc-e5c4-4ada-bea6-fa68e6c816f7"
        },
        "item": {
          "id": "c5edae94-dce0-4a82-8d2f-7a98ae3289fe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "af88415d-ee37-47a1-bf82-3737533a6563",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5edae94-dce0-4a82-8d2f-7a98ae3289fe",
        "cursor": {
          "ref": "e1bff49f-1996-4139-b1fb-77faa59cfeec",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "54f5a6dc-e5c4-4ada-bea6-fa68e6c816f7"
        },
        "item": {
          "id": "c5edae94-dce0-4a82-8d2f-7a98ae3289fe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "af88415d-ee37-47a1-bf82-3737533a6563",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5edae94-dce0-4a82-8d2f-7a98ae3289fe",
        "cursor": {
          "ref": "e1bff49f-1996-4139-b1fb-77faa59cfeec",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "54f5a6dc-e5c4-4ada-bea6-fa68e6c816f7"
        },
        "item": {
          "id": "c5edae94-dce0-4a82-8d2f-7a98ae3289fe",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "af88415d-ee37-47a1-bf82-3737533a6563",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 43,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0aee56b-2c51-40de-b473-cfcd6a6c7ebd",
        "cursor": {
          "ref": "db2f47ed-7592-4800-9072-dc5b7130fcd7",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9b92fe2a-6920-4489-b25e-ed9093c24e00"
        },
        "item": {
          "id": "e0aee56b-2c51-40de-b473-cfcd6a6c7ebd",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "0288ddf5-bfec-4e24-b399-a74a0ad0b678",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 350,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfe7b55-f3c4-4aca-acc5-fcc5b69a6f6d",
        "cursor": {
          "ref": "4f749e3e-7b67-4ff4-832a-29a31416f654",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "aef2e7b5-fccb-422a-8658-a8d32fa28f9e"
        },
        "item": {
          "id": "7bfe7b55-f3c4-4aca-acc5-fcc5b69a6f6d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dacb8575-9758-4c8f-897d-f797ba381962",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfe7b55-f3c4-4aca-acc5-fcc5b69a6f6d",
        "cursor": {
          "ref": "4f749e3e-7b67-4ff4-832a-29a31416f654",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "aef2e7b5-fccb-422a-8658-a8d32fa28f9e"
        },
        "item": {
          "id": "7bfe7b55-f3c4-4aca-acc5-fcc5b69a6f6d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dacb8575-9758-4c8f-897d-f797ba381962",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b95ad5-3d07-431e-aecd-757a395de978",
        "cursor": {
          "ref": "e26a98ee-9317-48bd-95d5-65cbe76c3616",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fb318824-cb14-42a1-8e13-c4e95ba61573"
        },
        "item": {
          "id": "a6b95ad5-3d07-431e-aecd-757a395de978",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "2d6ac66c-f7d0-45a5-bd33-a426b9736f9e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 566,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067233e4-1221-4686-b1a3-e9ab26509403",
        "cursor": {
          "ref": "f1367df0-77e5-4830-9ca2-2b9793b5869b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9a3f92f3-96de-4abe-9c29-4ed3ac816efa"
        },
        "item": {
          "id": "067233e4-1221-4686-b1a3-e9ab26509403",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f792a206-88a8-4244-b770-014f26071cb8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067233e4-1221-4686-b1a3-e9ab26509403",
        "cursor": {
          "ref": "f1367df0-77e5-4830-9ca2-2b9793b5869b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9a3f92f3-96de-4abe-9c29-4ed3ac816efa"
        },
        "item": {
          "id": "067233e4-1221-4686-b1a3-e9ab26509403",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "f792a206-88a8-4244-b770-014f26071cb8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48226b9-bc33-48fa-a6d2-f727dac2e517",
        "cursor": {
          "ref": "66f76d09-5929-4fa4-8196-dd6fb45fdd76",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "81d50716-feb4-467a-a367-903a38c0c91e"
        },
        "item": {
          "id": "a48226b9-bc33-48fa-a6d2-f727dac2e517",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "7a294b21-3c4a-4627-968e-b8199f34d846",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1079,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}