{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "d83f62fd-85e1-4fbe-9516-7025e35c0dad",
        "name": "Clear Cache",
        "item": [
          {
            "id": "8d9e859e-08c2-4389-90b1-22556abaa5d7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "18232bc8-3024-4a8b-b1e0-53a47a692ccc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "614a8b20-3e66-4701-8bc9-82c3652f491c"
                }
              }
            ]
          },
          {
            "id": "e495e135-3976-471a-99b2-b6c08a8e4147",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ef1d9615-bca3-4692-a518-e2bc3fb8a4f5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "de1a207f-7cf0-47aa-94a7-48d94b4b3d88"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "226975b6-daf7-4b2e-910b-a1a88585be41",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e539314e-b6d0-4aac-8ad4-73332d4e33f0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "94b507b8-8f7f-4a74-a33b-4de3a45a8d67",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52d611aa-77ca-4722-b922-58fe3b4df563",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09c3ba0e-cfcc-4d81-9c60-f91518900fa2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cea3c432-98fc-4891-9c2b-346cf0265ada",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f857693-70b0-46b7-9763-e115de7b0c67"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "950acb84-00d0-4f78-96b4-be042235853a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "448b435e-38f7-4521-9c4b-93ef7783f45b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e3efbcef-eed2-497c-bc8f-63cdafc2d64e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "536c712c-dd2f-4232-99df-d6497153100d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "641a671c-e46e-4ad4-bfef-2146f9d729bc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36c0918a-5e7c-4c7c-b6c0-8f2f5823e6fb"
            }
          }
        ]
      },
      {
        "id": "61393d28-8f69-4cc1-9a17-e38fd04e87d7",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4b6ec332-cbdc-4593-9f1d-58f7ac9b881d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cde35f9c-88b8-443c-9b25-0122ccd02077",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8ccc71c7-1b96-4e93-9866-f61125257831",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "466c86ec-13d8-4902-b874-f063dd6cb80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b020677d-688a-4092-bc95-fdc649d1a9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e1c99c-a5df-4dae-9f6a-1456683c0f16",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d567e3c8-c562-4a29-9a19-dcbe3c67bd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "33e2b361-393d-4f67-95e7-f7db772654ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3866970-af0b-4d21-86a2-9be0d1f51081",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767d2876-c8d2-4899-9f93-c20450e0fea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22cc588e-62c5-45bb-bef8-4400e4cf18f8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "02e2fe92-0e4d-4312-a594-4cff8060c25c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c572c84-ec50-4f99-b156-8dcfb90a0c37",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92b4439e-1752-4b9b-b105-cfe5921cb762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cb3a6713-c079-4906-ab4d-0d5b6d25d461"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29b5a58b-9abc-4f4a-9363-0ced453acb27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6734a6d1-07f2-44b5-b0f7-e1c3b2aaf0d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f4f9ac38-e301-4141-ac14-f06a06a34bda",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0d44fc83-50d2-4a3c-9064-455959adbefc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2f4c1c84-2dd6-48db-acd0-3ce99624643f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e317cf3c-eb14-4aa5-96d2-f733a751d61e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1af41d4e-0790-4b3e-ad5f-66cb0f75ee58",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "fb12b164-651e-40fc-9634-9b26c6481e63"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c7460194-fc69-4eaa-952a-15cc9a383ee6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb8da33d-f9bc-45f7-8d0a-84dba788b493"
            }
          }
        ]
      },
      {
        "id": "b26a4420-ded9-46d8-8a8f-372b198f5855",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "4560f2a0-a545-437f-9e7e-c7891ea795c4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "39b7180a-4658-4c07-8423-8617b0b32723",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "e6c4558a-dfcb-4d8f-aab6-78558016ab4e",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f36edad1-d580-4d77-b648-28548f09781d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8204789-5ab8-450c-9b51-27db23e9647c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46b6ea73-5c34-4412-8c0b-fe46a739356a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0433d46c-885b-436e-93cf-cf30306a4bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f613266-9d76-4c94-a3d7-abbcfe28235a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5381cd4-51c1-43be-88c0-4ad47a7063c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7f3d83-99b5-485b-a296-6322646cc6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2a2e99-9986-4787-814f-ae4dd32033f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e87e403-398e-4ed4-ac4f-0601e931ae86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37983779-1d54-4735-92a4-0583ee1d1fac",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed7fe753-a1e6-4ee5-ade1-af6c8ed70b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df1146b-73af-4c9c-a169-bfe9512226bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c5c9d8-ceba-4e99-969f-8d5d40d41a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ceedfe15-7f49-4b21-ae6c-505586b478ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c287710a-d779-445b-a544-fa8f39317e9d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50495675-2d52-4737-8775-29893d411708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044d0a29-4f1c-4b90-90c2-dab24e52cb95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01bbe8c-8a14-4199-81a3-fbad24142073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa4a2597-3124-4b36-8c73-4f40840f1d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad54f1dd-f5e5-4385-b3de-67cec52d4c7b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e018c1a-1c88-4681-8777-31750fda8671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bb24280-f645-4f3c-a04f-bc3faa7539d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68749376-f101-42d9-850a-361fb41639a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79cf85e4-9111-4d50-afe7-eb99afebb8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "970c1e0c-ffd2-42e0-84bc-fd1e2c8c45f6",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c734e4a9-4faf-4dd7-9e52-90b5f7097d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07071397-0416-4e81-9f56-86a681252a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88e24f3-328e-480f-9605-d58318ada4df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "448da901-9f96-412c-9177-f894f704e4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa0aeab7-1207-449e-a96a-e58adb19872c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6e20ec-2b12-4183-9769-6429fb23a2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aedefb6-95c0-4b66-9eff-c134b28e97a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc701a2-a0f9-4792-8877-19b3b1e4d437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2421a79b-0a58-42f9-803a-dd1ba27c7a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d49b2db4-828c-475c-968d-df558a0fe534",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f31dd6-668f-466a-800e-123aeaad51e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fde27cd7-f914-4b33-80c8-ff3841fce7e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d945d47c-6258-4c72-8158-1582ead14de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9797ccd-26b8-4a4a-9b9c-c615dbd5a8a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf8f2f2-e23e-4e80-aa88-66f13a07fa4e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1053152a-3d5d-453f-8e7a-653d7491c87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db0049ca-7bf1-4c0a-8b96-90ec29bcd127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d55869-4067-42ee-8f84-232bb25acd72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5920c65a-4a62-4f8b-a914-c95252c2ebde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a99ab2d-cc52-4ed5-8aa8-43ea4f9f3239",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02de65d4-d015-4d8f-af45-c14a9638927e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01ffbbc9-f12c-4e79-b316-c2e3761877cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d20c5ae-73ef-47d5-b65a-40a6fba018ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "080e02d8-760e-4a63-931e-1dd3d0ec7a98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aec2eea1-859e-4cf9-856c-a0ea87855893",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b87a1f3e-6883-40a9-93f1-4f6bf13dd30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2b1b19-c7da-40e0-8451-969fb206ccf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4a4cfd-8304-4591-9ff4-af30f8902855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a840c70-5f93-4bfc-8a78-ee6155628f8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2204bf87-3fcb-4554-8c52-8769a4f2a46a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197aae3c-a28e-455d-af22-e989c2687287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "960b50b2-bcb5-44f0-94ee-242a9bac0054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cdfacc6-b90b-4228-8baa-2c9141d6897b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7489944b-e244-41cb-9aff-d5048912d23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98328ca9-454f-4aa4-9e64-ca6fb4d62d80",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e87b688-9dea-4a4c-85ff-9f07a97b7daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f16a5e86-7203-44b7-a651-eddae244e9f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd2a482-d7d5-44ed-a521-10ead19ebabf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67f05827-a3a4-4f6b-8fb9-d27a9dd7c738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09da7878-fddf-4fd8-baa4-ba89f3cb3f4b",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbc7ef2-2e4e-4d89-90c2-9c9c1e9eddcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dd46cf2-5812-42ed-b633-6512cd785efc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d71d091d-d797-4038-88a7-53d6d40e17ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d27c399-dcb3-427e-b357-f8d280cd7022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6713c7a6-0ab2-4c55-a10a-8d8a8fbc7df0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef5f6e6-0937-46d4-a885-9df37c6ffddd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b3fd18d-d3fb-43bb-847b-2fc981ce782e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24262916-9b87-41dc-a4ed-6cccd1f30201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ffafb02-a320-4902-b875-baca403c43cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdef37c2-f03f-438e-84a3-f43b23c0ff47",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c6aaeb-0051-4944-9fb4-a11bd92301b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5f10380-11d4-4b43-8cf5-9ddb4930af41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d942e1de-9817-4a61-8084-0b8486d3c7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6c5d269-dbcb-40ef-b426-a9522d288d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6593c200-c6fa-43ec-a264-29cd6e3a05cb",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac3b8a8-4f6f-4ead-84da-8d8ab080637b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa755093-28e8-46a6-9ee3-9160d5c88582"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd95ee39-bbb6-486f-b39f-f519342853f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "969faf43-704e-432e-b419-f312c9a47362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "772fba0f-8e31-49d5-8d67-4a148d5f0a09",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e26b968-dc1c-49b5-bc3a-004826fc99bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d80c2e89-380d-4826-9f9c-991a6a3b6e3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6446a69d-9201-465b-9468-89825c1b6d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "047b2ee8-d14c-484c-808d-2f54c6d7bc89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f8bd879-ac15-48ee-bda7-bcc3ac342acc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88af01aa-47f0-4965-a5c7-1c4540853b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9da01b9-499d-4f42-b12d-720461e7d24c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b581b1ae-8a6e-40ff-beff-a76be6175cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "725c2528-afad-44dc-b58c-4c6c396283e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fcd6cb7-0cb4-4c3c-a5e3-39337c706072",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a68c11-06ea-4dca-b324-81094b1b80a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984d2dc0-f681-4d62-950d-555f322bd4fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883080d3-e1ff-461d-bb73-e9d0a9552544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0ccfd22-3396-4a7c-8ca7-c51801f34aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e40d38-b82e-4e49-a3d6-493ed8d827bd",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb103164-33b0-4320-8ff1-555485cb019c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9042a715-5911-4c6c-aa96-b42ea5562367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab346c09-15b3-4b13-85f0-26e5fc806807",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "877dee09-c000-4539-bbd4-b089413ad02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93fcfc96-072a-45b3-a77e-3047af58b678",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e0e87f-e74d-428b-b14e-d467b1cea658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2028f051-55e1-4fc6-a009-52bf2b65d6e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81fbf047-7d91-4463-99ec-147e92601b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f8a9cb6-123d-4edb-b851-1a67125a894c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7467e28-7ec0-4f64-b393-5ec6ebb925fd",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f0fd0c-ba99-4ee5-b358-d2580c893dc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26d29158-b853-4be1-9f29-bae7baf950bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb345f7-6f81-4cf2-9a7b-bc64e21bab63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "654b90ce-7230-4143-ba21-faac25d0fae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c1dc48b-84bb-4a9c-8095-09663506a605",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebc3118-349e-492b-8bfa-7ff9b64a5fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdd87ff9-7dae-4f44-b71b-a39d1910dc99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77116971-43e4-47e6-9447-29c755bc2011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "18eac185-5e4c-41fe-b913-7931462b6266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b09097-7056-4d68-ad23-7e78ac933ee5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a46cfb-7ad0-4e6e-997e-e29d3171a1da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5bf1961-6634-4402-84dc-65b3a513c81f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e694cf-4e9f-4419-a62c-ad5ebb022c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "268a31b6-e5b9-4a6e-8ee1-306e2dd4595d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80075f4f-2fbc-41ea-b88c-728341e3b5de",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad148ab5-c281-434e-8c33-e5cfbf763e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be8824dc-f76f-4c6c-838e-d6b68b27e04d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9790b7a-43f8-41c5-8623-9f3ca07323f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fda748c-852a-4d7a-a397-5309b3e9d790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcf52b5-833f-49bf-a42e-7f72275c9103",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25127a02-a143-4c30-975e-83baa81ec880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9bc6cb3-34ef-48a4-ae9e-7c74a14e9b7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f5955d-9b42-449c-9dfe-903e5eef83b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "06c0d494-f8c2-4556-83d3-a8022661c8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2574f69-286a-4729-8276-f318d2dbdb6b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd52d1c-7b00-4037-8613-aa708508c527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04244782-52be-41ac-999a-e233f8a9ccf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0548b0e-cd22-455d-94aa-4efc949ffde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed9e1684-9657-42a8-a0e1-c979e00d8536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b380ae-d1df-4b73-9dca-0154c1a67061",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66761e3-65fe-46b2-9b06-0397b8a3f8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad38f948-8699-41ea-ba95-f3ba53f75db3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece86ee9-f40e-49ac-88a5-a59948018e65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05f55e78-3aad-435f-8b41-dae7342651f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2040aea6-8ed6-4436-8a14-8badd885dc72",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c3f083-ab37-4faa-a523-247e7989716d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b21e700e-1f37-4138-947a-68ef93c0e559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c7856a-149d-4192-bc8d-605c9353415a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "657967e4-bcc1-4ec6-8963-a9da7f9e97fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86faaca-33ad-4b9c-9083-8574db9cda28",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca7f32e-bb18-440b-94ac-67dd243c3331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ecf998-b3ef-43f4-8ba5-43da48ad0a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2abeff2-c656-437b-bc0b-0e1f8182758b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "023704ee-f426-476b-b58b-96bc312ded3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9681ce-fee7-4f08-98aa-fe4670c4b04f",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "226a127a-2430-4bd5-9159-a45b5b7a028f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b12735d-760f-4e93-bee3-5adfc09c0ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8cae002-57bb-4917-a7cb-d3e30202be5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "05f11d5e-dc52-4973-bce2-0a342bdf34e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abee4053-673e-440c-8c5b-9b5ebb80420c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d90c0b9-7930-488a-be0c-ee507b6a84b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b338df6d-8c1c-4b03-aba5-a7706d687b40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d450294-b404-4f2c-8303-ca7f59b0f4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62c06f17-1bda-4d95-b661-218cfe3055b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d37b5e4-50ed-402a-8efd-1bd5da772343",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0eba079-0051-4e0e-9ca4-d372badca6bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dcdc25b-9da3-4afe-bc7f-77ee5e9555e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c362a6-f2ff-4a38-adf7-07c8ed55fe2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c591ff5-292e-460e-9006-999921b260ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc7fa5d-5f6e-4945-95c1-c2449259fd0f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe8f03a3-d49a-4252-b56d-47e81648d61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6586d4-4e73-420d-8328-7810905db14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "298d9ee4-11dc-44ce-be2b-835cb3afe55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b90da0-ea67-44ff-b1d4-3a3b79c64efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddda02b3-c92c-4620-91f0-815948f6a79e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aede811-6d72-4521-9b13-c80dae23cc6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0433986-5471-4f61-a0f2-235feb8bb4bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "561a0662-686b-456d-b375-119661417e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3bfbdce5-143f-4b08-b47e-ab69ca9a3d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fb7141-9efa-4fb6-a237-f8a2c34e2de7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3f7a07-5421-44d9-b799-6f077da52127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c5f60b1-ef94-4553-b8f4-fdb5aef81de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585853c1-5d09-42b6-b559-017fe0f02abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4f43280-374c-4e53-88f6-110b1ad6aaa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d36bbbc6-7256-425a-81bf-d81b5f282d88",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4a4940-896f-43fd-8d3a-f4385641cbf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9114fc9b-1927-48c8-80c8-ecca3550d2b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "960e2b6d-65c4-4fdf-9981-dd87425234a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "abc72f9e-c1da-462b-8696-38c5e14774b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3445436-2223-4f22-8ff2-fc97276e40b1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c2b784-c85b-4b47-be57-527f9513ad0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db01d18b-d383-4368-b783-70290bd74600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf39e55a-3eca-4db0-9b53-7366a9c3d38d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "95bbe46a-bbcc-42f8-925d-69b1dffc8504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a87cb732-ae2a-4b28-8b5b-6c88892f41b7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bbd68cb-e57f-48d4-a45b-744dab3a9553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ebbcd5-4576-4369-894e-9f88e712b0a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de4e70e-1960-4657-9fa2-5931761906e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e39bed7e-a21f-4bb5-8b3d-e1631c2da7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "045d7416-df64-46bf-99ec-97711a8f8d92",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94ed3de6-eed8-474c-9a8d-c155c2e98c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1755d6bd-034e-4ff5-9e0c-1e53ffa65341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2fa71ca-af17-41af-b40d-56439cac8073",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fc93e89-35ee-4662-a277-3b1dac4519eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9602861-795c-4afb-af46-cdb9c9477ddf",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba0fc3cc-1a15-48fd-aa9b-dd5e0530bc4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eeb8721-def6-4fab-9e0b-4007e4272849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74bb733-5556-4248-ada0-e99fefca1e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "72ac6d17-951f-48ed-94bd-1b0505d3147e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38dc9334-477d-4cad-a091-923b9449d8ff",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f13def3-d4c1-4830-a72e-bd8bbf28fd10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30502357-4875-49e4-9a55-85beb97eb806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7459fd7-6f6d-4944-bebb-279f90f019cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "585d3146-690c-4d65-be61-2ac172510ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf82a91f-0ce8-4446-a1e4-77575a4fe1c3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "826f1de1-f836-4798-ae48-80a61b3d4e17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a35e8fd8-7d8a-4e35-8f9e-5ebeba893c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77a087ec-1442-4466-a37c-2fcbd193edd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "10d166ac-21d5-4235-884f-95751dcc9775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843b0a19-be5f-474d-8513-fd9c6d98f68c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332084dc-f6a5-40c3-87aa-fb4e35a0b52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5155c070-6fa9-4813-864f-1efcb69c7bd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf3a20fe-0d69-40d5-a69d-3e7a3c2eec8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "34b542f3-3ee7-436a-baf8-b0bc5cf2740f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35502be-8ff4-49cd-89c1-001ea39e8b1a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af2677b3-1cbc-4da8-a811-c6db246d454b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4284aadc-7965-4994-b1eb-13dee588a71b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5426405c-8f92-48be-b830-8e70fa56638e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37ab931e-ddb4-479c-9f4f-02a6ad577bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef43780-2234-45cf-bed7-02e9be1abdde",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ad9372-e1e6-4e4b-a3b8-f0090012a45c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e7a5520-cfb1-49a4-9dee-28edc9f52f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e0a2b77-5ee9-4ff5-8cfd-38980a92521a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "753c1da3-c452-4028-a147-c2408014439b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bdd8383-0b22-4398-86c8-29bf598c64ae",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e650c0b8-a25e-426d-a3a5-89646da0c79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e07b86d-b77d-44a3-9ee3-f916b4cf17c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "752e52b5-725b-41d8-b802-34ca6ce54ade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f103b7cc-c1bf-4291-b113-ff7df5eb1d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf06137c-07d0-4f7f-b8f6-1f4fe87ed6a4",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0203298d-51d9-4dae-99ce-e81b50d72e02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f70ad702-0f33-4827-8590-13acedb13ee8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa47731e-11d4-4b05-be7a-ff23804b354b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04fd1302-da7d-474f-9f49-576402a9dcc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df1d5b9-f4dd-4f58-ae5a-1a3ceaf32c57",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10568c9-482c-4635-ba16-0e00d35f68c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36218dea-577e-4997-bfc1-e07a07674ff6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d45c77eb-d325-4cd1-ae67-a2b6c6badd23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e0b68fa-6094-4c40-859c-2bf7a0c58dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f93a3d9-cddf-4912-8285-74af2e388d5b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd82aeef-1eca-4cfc-ba98-edf777f723ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e875163-e082-43d3-9d74-da8f42114e4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe88f5a-eff3-40b3-9d24-c79a90eec366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "9166ffbe-dee1-49c3-8888-89267fb1e5c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38acca1f-2053-4dff-8772-b862c4429876",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b02b297-12c3-4235-9dce-46a942bea213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f90bdff-336c-4cca-ba4b-ba8540d716fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ac559a-b8ec-4a2f-b3e2-e0de761a4d9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c01ce86f-bfbf-48b7-8249-fe8c1f587460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18361a7-4815-4a56-8bf0-0a3900c0f871",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fb56c18-27ab-4e92-b806-f72d720b3721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f12799-6263-49fa-baa1-4120d3a1fad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de755bce-e3a2-4428-910f-fe5c16a02ac4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "942766f0-94a5-4348-a9d3-fb141922dabe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2250a7-9836-4b63-bcb1-f6be87dee73b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "242b6ac3-af10-4ad6-b264-2344629e71c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e75b14-ef17-44ea-b16d-a5396727221d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da77a48f-a8f0-4bd6-9360-8e86ae7762f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e86e023-a7bc-4cd3-bfe4-c17fcebd63e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1fd4b64-1cef-4471-9ca1-7b915736cfc9",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac4a50c3-f2fb-4f1c-9c03-6608ebb1fe9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53f3db44-26b4-4173-9475-ea0d376581b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c5644eb-9b4a-4d78-8dd6-6aa085ac6104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d2a2151-e6f6-4d26-b1b4-6869e9ebbd2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "683c7423-5e6f-4b05-a55e-d95886b94728",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "410cc94b-3c6f-4431-8f45-6ad4ee555edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b60b042-fdee-4b7f-98f5-15c955a441cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5391a33-0997-4ced-9518-65ec10be7e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0e7266ee-2bde-45f2-ab27-af37e57c00ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5252b9d-d99a-4d90-8366-1dbce577a84d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51da14f-5d24-4792-9393-2eb53e1a6d8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f18fe47-a525-45a8-b46b-5e11adf2f611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ea8494-1a32-48a0-abd2-e8989fe3b910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "06375bee-dc15-466e-871b-c0843933d55d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8525d483-dcd5-4026-a015-8d0cf5858584",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980ecd19-bed1-4991-a8a4-18cfb7b19406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e622a9-ce6c-4fe9-80e2-6b297633a5ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb88c353-2268-434d-9ce9-e594f4b8c9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "02db7ce5-dd43-4f42-b1ca-1960a7048888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d45409c-b0f3-4b2e-82b5-1800dc83c424",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9427f9d1-186a-4002-bce3-5498d5249eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90fa2e4b-2c3e-4caf-905e-7e44715d1659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a14831bc-3fe9-43ac-8178-881ea4653ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e06263c1-0f66-4695-9db5-194e626d8f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5d13e12-0aba-43f2-9591-3c006b9cc87c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d89b97-8b26-4133-90ef-0e151800dede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2acede5a-0010-482c-8347-08d112b5f217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd462f2-80ce-40cc-8746-20cfd5095ab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec0e2b02-eadc-4233-8a80-03dab4b95260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b27e421-b515-474a-a6de-6445001c0b4c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39534332-293b-44d6-b420-df87f97503d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e818a900-546d-4991-ab45-f37b4839768b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a924780-8712-4256-b8af-3c374d00c697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d4654b3-e1bd-4baf-93e5-e548b96ee980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746a7c61-2fa3-44fa-adfb-b272f8f5608f",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1ee365-70a8-49f0-9fa9-1e17a2707431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cbd85c5-e887-4d26-9d02-ccb7aca93e09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c42558d-c2f4-42f7-948d-af54540e5675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8be9d3ee-551a-4f18-837a-2dae09f1f67b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7c26acd-079b-4477-b10d-92e1d41561c6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37adade6-794d-4051-b547-db70c9429762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea2f958-bcb9-41cb-a00b-8c03d98301f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4672192-7ee1-4e40-80fb-ca62d78b5291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "69efa8e4-c062-4bc4-ad71-f75694786f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b857ab85-a1c2-46c5-8919-4087ab743423",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9a68ef-31e8-4a1d-b46e-a0f682b20ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7848bea-92fc-4758-ae30-282fa76acced"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4fbc72-285f-4eea-9543-90ce1c086eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b23fc7ad-e990-434f-bfb1-79e0b13664d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "326319f1-d38e-4db5-9fea-f90e462a2b01",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a2f591-1077-435c-8fe4-f743549d4243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68afc9d9-8247-4d33-ad78-17e51fc945fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18321c93-a6ed-4952-b4e5-556e858dba00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b4608bea-f36a-4032-9e39-7bd081d543c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ef788c-dfee-4e7e-b943-c62250fd336b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a5cefa6-e66b-4de8-b444-6bf715963528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c7e74b-6a9f-411e-9142-4fb8fce0a6fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368f1685-79f0-47f4-9cc6-c4130c0db06c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b8e8c59f-ba61-4bf1-a16f-e0e562aa9289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab877a2-ddb5-4be8-a46d-eca18b02867d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c5a0bc-d472-41d9-8403-a2560b68fd42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6934b52-fa29-4c7a-8aac-9f1eabc770ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44aa566-48ba-461f-95f4-e921bdc38afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eafff8dc-570a-4d3c-85f2-e7fc1d59cb92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253cdfc6-587d-47b1-96f9-03ec71432be6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f942a4-3ab1-4eeb-9275-86c7deb63ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c0fd0c-6a90-40d5-8d2f-b2590c92b96e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "105e61ac-ae60-4284-8145-78387d4e741f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "21e6e1ae-1537-4cb3-aa19-dba56922d707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f94b0d9c-a544-458c-9422-4ee0209e2e5a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49bcb97-a12d-4181-810c-60ba37de1cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23183f2-da94-40b9-bb56-a0e20b93c53d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1635e331-891a-45d0-affb-aae1d64f95f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ab39484-2d6f-4bcb-ab52-450ba2e272cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73d6569c-5010-4282-b619-8f16f9be267c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8eaaf33-6b69-4a1b-aaf1-0d3ded779f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6483545-9035-4279-ac38-ecdce2285d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0f57a7f-418e-48e4-9e17-7a6d4eae29ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3d249cc-e7b9-4637-9fbb-47c9ad2e6e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cabf17ac-3bc0-4e82-922f-5efdfb7e6849",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef99e734-c9ab-4671-8c8e-d62b6d57adad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b96f0a4b-0fdf-47ae-863c-935816921fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b60214bd-4b6c-4c20-8502-9961e0cbd56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "30077c96-4fdc-4246-8d16-c468393e211f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3053757-795e-4a7d-93a7-4204b053693a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d7b74bb-8c6b-42da-aaef-e108ba447621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcff862a-5553-483b-8420-63f7dccede88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbe2932-5bb6-4c8d-9fd2-ab62c22c71f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "76a8ac2d-0cf0-4e64-8c2e-65be70d710e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d578a208-0479-4c8c-b10d-dc15f6af2341",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5b6eb37-c028-4e73-b7d4-328e14f37732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb5663f-6f38-46de-8c39-3fddd55a86e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47bdd1f9-1cd0-45e8-89d8-9fd1a8628b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e2c8c13-9c50-40aa-9b52-599661554b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61895e8e-73f3-431e-ae42-b23fb7fefe93",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c84da441-42ab-403e-bb7b-672bc7ac481e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9862cf6f-38e9-45bb-b68b-7a9c541aabac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9cfd99-ccfe-4377-a2f2-0ae1aeebf545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "00c53f0e-3adc-49a1-8155-07947bf6af7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e3d68b3-a3a2-4839-8535-a174ba359ce1",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c71f87-1cff-487b-8bff-7218af82d694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d66694c-92b3-4b31-80cd-0fa7b3f756ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da779b43-f831-4470-a7d4-bb4a8ffe02c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ace9d3-5df1-4c2d-87da-4820030dc239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7446ebe6-6d52-45ad-a002-ecdd6734c15c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86966293-84bf-4db2-a5cb-23e95084ccd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef774e3-81ee-48be-aac4-fe318ad27ae2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8799b58e-c622-4991-b32b-6bbe280da8bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0a136ba-94aa-49a2-a121-6716c6485c42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3569a5e5-d195-4b30-956f-e7c13d5f2665",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa487739-f1f7-46d9-b6e3-ab11e3b9d603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "933b6dca-e85e-479c-ace5-930157bc06cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38733fa2-b427-4781-b5f4-99aaae8beec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "55d36236-0aff-4b9f-aa75-1610547be6c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cedf8b3e-1855-4689-8a73-47b150e2afbe",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e0bea4-e644-4d54-b20f-4f27318b9755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccd94a92-1a11-4fdd-8cd5-731992b2908f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f095eb6-6570-42d4-9b08-21772b538c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b03b5a18-2d29-4325-8712-47bf21e39035"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d840d061-624e-4dff-9617-c3f2c1865f84",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "793056e6-07cd-48d6-a208-b7438bfe638a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1cce6bc-e362-4b80-a093-e2bb9edf833a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6605a228-0b85-4099-a67a-2cb50746c505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e28ac559-ef67-4826-b9ba-d1ff41dd38b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da01b6c1-7ae5-4992-a454-56ff73ba9202",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f9cd787-3784-41df-914f-d059216ac760",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ddb2fd6-4aeb-43f1-9036-9cf9046bda8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d674fd05-ff04-4f43-914b-4618e6729196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59fe5cd8-8537-48a1-b364-3becdbea61f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666b90e5-9ccd-4e9e-82fc-7ba7a65f72e3",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdfeef0-2f28-4de6-aa40-74e8948d0f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d45ae0-e94f-4924-b23d-1d60f7e1b3e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "babecae0-330a-4a9f-9e13-1c999da84fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "be91739b-381c-4604-9adc-1c753d1e10fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff482f8a-c213-4821-bc3b-fe1fd039c59e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f46f81b-9650-4480-bcba-1fa916c35369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae7da804-9276-4cec-a966-49016b3b6ebc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b45b40f-3ae1-4f7c-bfad-979d52febc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a535858c-7e0e-488d-885c-b848802ed82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c3281a3-4dca-4a04-935d-e86c33910ed9",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb6db9b-929a-4be5-a848-2a8816906da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a9829b-d427-45d2-8d3b-3a07670b56a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6ca158-a9d4-4394-8b4d-b2b3de2871a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "307fca82-67da-4a5d-9cc4-408f41f252ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44c5d17-b816-40c1-9992-45baad98af04",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3530deff-4613-456a-b937-d3b0c4741fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12637530-d03a-43af-a074-7dee7359ec16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e857e876-ae33-43b9-acdb-144877b2779c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4cbd061d-dfe8-4b92-b9e0-c8b56a09d725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a1ea0d-3d76-4347-a6ba-9bc164af18cf",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15c17154-d57b-48ec-af4e-94e866c0731c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9297df3-326d-4932-8469-21629981a4d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37b73cb-dc84-454b-9423-1c550f06d1d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3f81a5-d9a8-41c2-977f-e564463c2e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf44c97-92ce-4558-a5e7-41fe59ef77cf",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c08951-68fb-4973-ab16-4034c5ca2b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef97b870-cd13-496a-8100-b395f23d90a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b8079e-92a2-4fa6-a24a-1fe3f9edafc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4e7ed6-0353-4053-b8df-02f369d02b1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51aee3de-3939-4d31-befe-8e90bcff2e45",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10087f54-64de-402e-9e38-7e8d8f991e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8791e062-bcc8-46b2-894b-3d460e929f49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bddd94d-0565-49c1-a85c-0c742457cbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "07ffc32f-e7cc-4902-95cd-ebce88a1a390"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84be58a7-bc40-4466-baf7-7aa02c12dd37",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1867d03d-35a2-4b78-84b4-ceca66616af5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f283c3a0-3cae-4fd4-a400-7f5cddd183b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9944f5-eb54-44d4-872a-a66a0d51745a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f35624d3-b76e-4ee5-9d62-93fbf6d3d6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a80c9b42-e6cb-412d-bcdd-3f75bf03e573",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f2e2f4-b0b7-4da6-89ac-257312e3585c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5bbc540-cd2d-4377-af39-c504dbd64a73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd56b6c-dd57-4838-887d-11404503a4f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9eee9d97-32ea-40de-b1c7-cafb6b65cb68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06d70b04-416f-4e74-89b7-f5f19aef1aa5",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98e43e3-6435-45bf-9ad2-65f8782f74af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6605d9c9-40e0-4c0b-8da6-c95643380da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13111d91-885b-460c-ba8b-3b91bcc148e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d330351a-fca3-4cf2-8b6e-010f0f7d0fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3656c61-4b1e-47f8-9bb8-7481682543e6",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a206e1-9e67-4735-8dea-9d24999ddd04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b004f6-9b32-4ff2-b955-99994a57612d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb860ca3-1b3a-45d0-8846-63725b4f0792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e46590ae-f419-40a2-b4d4-72410a8c2bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57fb2bb-4667-47e5-845b-c5f5dec6e676",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3ec032-8b80-4c78-97b8-dddffbe51f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a08716c9-3ed6-4847-a950-a1290cc963b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1954a5eb-4fbe-47dd-be4c-b33a136b4f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8bc4b4b7-7e7a-48c5-949d-c2adeead32cb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5ea1b267-b9a1-4243-8a7f-b51b25dca1a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "eb5019d3-f087-4654-9a0a-57f4da3ef298",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91ba210-cbab-4492-bc82-0d9bfbc51431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c98fd3a-e3b4-475d-a5cf-10611b0a0d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e786e7-51ec-4ddb-aa5b-ac37e8e8cd2c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a3d527b-abb5-4ad6-bc71-97a6c4ef26bd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a788be4-c173-4853-b716-b2dd86b691c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "206780e7-3ba0-4900-8ce1-aab21bbf2333"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "022e82ff-dfe4-4fee-8776-fc36593d6f25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4e6618d8-b8b1-4973-91ba-14ae324fac6a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9e846c7e-2c18-47d6-91d5-46c1970894da",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ce68613d-da0f-4fa9-9ddf-a597e354e292"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3ad15447-399a-40f5-a1e0-b09a8cb6aad9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "94091b26-0400-407a-a65f-e4a93cdee433"
                }
              }
            ]
          },
          {
            "id": "f72bcd0b-e195-4bb4-b839-7a86657980d5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7f5d452a-c731-4eff-94b8-1f354a4be125",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3630d53b-c2df-41be-abe2-ca84634b29ae",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adaf12e5-ad49-489b-9384-47af47c27187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d6ad22c3-65d0-4b67-bde0-cea00de05dd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ab0e3c-0dd8-4937-8b2e-2db26f37a872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc3926e5-6511-408c-a62f-e206c89f272f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5f59f5ba-e35b-4979-89d4-0e32bf42b841",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "332cfa8f-3dcf-448e-b92b-20b34a9c860c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9f356709-1ab6-49ae-a6b2-0a8d3c3b62ac"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "95a5ec0b-831c-4034-acb3-bf95e9a60043",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "829af8dd-0abe-4daf-a9a5-1c1087a75642"
                    }
                  }
                ]
              },
              {
                "id": "b6deeb0a-0e5e-46ce-9e00-a1f8d71d9ee4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cdef639-41eb-496b-93ef-3d00f19423fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d0eff1e1-4631-4cb9-870b-c13e9ca18a9b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2490d4eb-6719-4b71-88ed-8fddc3ddbcdd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f55cad75-a820-4d2a-8553-3d8a3cd55792"
                    }
                  }
                ]
              },
              {
                "id": "7bd79a87-6e9d-4eca-baa5-2bc08e2245c0",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75f342fa-f0c4-40d6-80c5-0a1e0b08c2f0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83e0a176-68ed-4b21-8144-1c4992239edb"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0c7a804c-1f20-4aad-910e-49b1b97107f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c8aa4092-be0f-407f-abef-bfc63dbc80c4"
                    }
                  }
                ]
              },
              {
                "id": "f28deb21-37f3-4d84-8e92-dfc42df1c728",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79767900-01a6-4944-929f-e59424768b73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c7337086-dda3-4102-971a-0de9d28e29c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eec5acda-f1fd-428b-b086-e531e266b6aa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ed526a28-de0b-4ea7-86c5-d183a042b2f4"
                    }
                  }
                ]
              },
              {
                "id": "972ed6e5-0961-443c-a5b4-3c001517b624",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb80564b-caf0-490f-9466-adc7a23139a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "650a7c56-87fa-4e01-bb28-1a198140a4c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8992a890-4a03-49a3-81ae-2c86afb7ae9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c0802d97-4c35-45e3-bce2-e8c21339290b"
                    }
                  }
                ]
              },
              {
                "id": "646e29cf-c344-4305-a19f-a87c6049f116",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7b071d8-21f7-4098-ae9b-8531bd1fdfec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bbe79c5d-ec78-41e2-abd2-0420c957b7aa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "49bb789b-ec94-4c87-abd2-b9d7cc540f00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "65564733-4347-45fc-ad5e-c3e2f486f3fc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "62542ac0-f266-4fde-bce3-19d07adadbba",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d82d40fe-355b-4bd5-a603-9f46accb04f0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f4d82c4f-a5e2-4205-be08-774b1a44dca2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5407b6b9-8a5d-403a-bd42-60251bbdf87e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "194091e9-03c7-4bd6-9809-cbafda36b413",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "29b2f913-479f-40eb-9d33-810e039488bd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af852fe9-f89f-467a-87fb-e4dae696c346",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac853c53-4865-4525-a0ca-6c970e3cf2e0"
            }
          }
        ]
      },
      {
        "id": "b8900a21-4d3f-4cbc-af27-8eed084ecb25",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9d112239-4b1c-4ddb-a204-7aa81a6938f4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b32afd6a-c55a-48c6-b6af-82d33d95337e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0aa1e9d4-5ce2-4c51-b4fd-b42185341808",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f09526a-c5fb-420d-9887-5fa01e0a3077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc278fca-c8cf-46e6-a55c-a7d8068c2216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f69d11e-1a0d-43ef-8465-3c362f84e049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "54dab083-79a5-447d-9a5e-96c5faa92a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6369d82d-2bf3-4484-978f-898352eccd2f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d4faf2-b425-40e5-ab79-46f2c7f0e868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a300b4-8a16-4b57-9099-32b96758f518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcf15de-df0f-42ca-9df8-f0243b840dbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b611c0b-90c1-43fb-ad9d-56f1a18e0e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec22b5bc-16ac-4e4e-9c89-21fd1a5af04d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83cf9cf3-b39a-4712-b021-5adb53e2fa46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a2d281f-8e20-41ef-9308-19c25be57d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1bf9e8-6886-409e-8ee1-8bc646d4960a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "387b92d3-1f30-4ce8-b98e-97f79f982e3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96890b61-59b8-449a-b05a-5c649786afe6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340d6657-07f8-442b-9989-c4aa65ffed94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df1e1dc-79c2-4851-b9f9-c0e15c9c9357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c123db52-1748-44e2-a4eb-b844a785dc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77e5d3d1-8da9-44d8-b080-5d879f863ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c32672-a890-4e09-aaf2-9edb95cbf4b0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3277fa6-9262-4e7a-87c4-2b526cfde12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1e34971-4b18-4c43-b210-40f52712191a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49b3ffd-9a36-4402-b12e-3d037e81e8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b108650-54b4-42f0-b71c-3097ef3949ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1596720d-014a-47d8-9e16-1c95ca00e078",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89770aba-a330-4c73-8d88-eb894aeb83a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00043b6c-2b9c-44ef-9572-d38c509086fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e87c897-28e2-4dd8-a6ab-4c726896816e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a4ee2ad-ff58-405b-928b-9325d418255f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c349c39-743b-4c86-b2ad-deb7469caa9b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ed62df-3665-4d4a-a82b-a8d94f403bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bbdec89-58fb-4c57-81df-60976abb9139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff28072a-b5ad-410a-b7e3-08418a229304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "be5d01bc-ebf8-4d7f-8567-91e2c8e6b6c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5ccc3d-5444-41bb-86a3-f98143db9273",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dadff5d-eeb8-4512-88d1-ce611417424c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b186ed-45b7-4320-8c85-4e4259c5aa1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf3c036-203a-46cf-8db9-f89232111e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "eaeeb25f-d7c4-4f25-98bb-4e33694a874e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83c02d9-94d3-44b9-af71-fab37a4eed71",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d7abab-e86f-403c-b520-a0bef28d0cba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa6beab-c31a-400b-acb8-d067ef31f11a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a10cf71-6924-47d8-aeda-225fb7177ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd150cc0-ee0b-46b7-9335-3a555cfa795c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d11d8530-8d12-4ec6-b02f-34de11936946",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c475e3f-e70f-4937-98a5-7e15a0f17483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67901cd5-cc29-4215-8524-769486ba5d66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2699ace9-e793-473d-8eba-32f057559438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80e0caff-d176-4020-88c3-768ffaa9ff66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad6ab577-ebdd-4d11-bd7b-fa3f881b3012",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d385315e-996b-41a6-85b1-352379d1348f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1cb6fb4-2c02-4ada-b508-b62346c6e600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc87d0c-8449-4005-9da7-ba15aced7c5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d9597a85-9649-454b-be64-06d3b9126506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47db270f-5a00-44a8-bea2-bc87382709ec",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece3f30b-fcce-49d9-b127-262d2348f11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89859fbf-6101-4971-a7bf-084dfab1e1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8766d54e-4def-4515-80f4-aab337686317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "58bf677a-f79e-4a7d-afaa-dcd75635e090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "510a9307-f568-46f1-aa82-52303f7e7947",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9b24e5-7070-4c64-82a2-401c9773703c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb05df92-4319-4245-8c96-395fefbf16f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495604ef-0e61-434f-ab01-5bfec6189ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbb5ef51-323e-4c57-9fa5-7af9be16e0fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b91283-2e21-4f25-ab0e-193efed48a6d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57b2d9b5-f5c6-4f22-88f0-e2f53793e321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a5f92f-df6a-4b14-ab7b-12e7ffb908f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1139701d-065c-4e16-ae6c-f8a461a2dcbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b7fe3c1-06e4-4557-972c-4aac1b6e7581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "493782f0-b4cf-47ef-8864-060014a24b2e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1677ec3-ae32-44d8-8158-3d0fb1208021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6bbcd56-90e7-42ab-8bff-2077ada5314a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75fe8e11-dc7a-4263-8ea7-8476af52e6c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "93afcba3-1de4-41d0-8462-64d5cec9ddfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948fb8fb-b607-4c30-8091-c79b21c5fd87",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ae243b-efd4-46ea-a1ef-ce839bdade1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc0e02fb-78e6-4410-a18a-47ea7e3103af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67dfcd91-fe26-4de9-b623-869d6311b01e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3cc9a6-fe61-4057-99ec-6bef085e2650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16da312b-1257-4377-bc7c-5438a668864f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b850b4da-d5b6-4a17-b5cb-563e02d44031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f0d0ff-d599-473f-95ec-8dc2c1c02ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57773e25-f74c-4b12-9474-3143ec6753ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4df4db5-934c-4188-9683-5bf125b07a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "330583e7-5081-4da3-a795-df3ab10c9648",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337b4182-6660-4a98-9c0b-f9fcbd3966a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e282e00-73a3-44ca-b0c8-8089040d9277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7201a0-8f65-4025-9faa-3dd99a38b2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a474374b-299b-4ed2-9b54-4ad19f5c4336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59e81f5-fdf8-4281-976c-d14ae9290f0f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638ae634-f618-458c-abe5-02455e8beba7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cdcbddc-4d13-492f-a6de-d9b38a772d9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c98da56-df31-49d5-aadf-d263c5aa29a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "48bd3b17-9713-430c-b8f2-bff5df49b0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcf1ef7-4590-4bed-818f-c8e3950218aa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9228c778-e8eb-416c-a970-d8682a281b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2aea951-ba2a-4f92-89f1-22489e11b913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f417648a-f845-4a92-b45c-ae793efbced3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7ecf6331-066b-4834-9b16-115243e0dd1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98faa6b0-a809-4698-b37f-765cf3e44b65",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9083b120-55b0-432d-a178-d298ef004086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7b250a-e03b-403a-bf88-606ebde514f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c69c551-bd09-4d41-81e6-e5ed00ee4316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5a5c79b-e486-42bb-a29d-c74589f7e0ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ee83cf-e218-40b3-9c95-42ab4940662c",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19da00de-1f0c-498e-8e60-fb409081eca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70eedc3f-9976-43db-a68a-f8777a9e8bfb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069c256e-cfc6-4695-a928-9f652120550e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b845062-56ab-42fc-b13b-fd558ed10e84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eee50fcd-8a8a-40c4-82f8-ca42353f075f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22d8cf6a-e55e-45a6-8b4c-d251ec600b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62d46a32-53ab-4892-8bee-f37dcc492202"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26be9114-058a-402c-b1c2-5e45e8479720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a518ce4a-ff1e-47a8-913e-ba4a5aa8eec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a6a9e26-e37b-409b-8a6c-4255f4d6efbe",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53f2b5ce-9b90-4767-b152-9d10fff656b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b4b378-7601-4014-8c4f-5f5055b1eb6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecdd7bb1-95dc-4417-80f1-acb264b5a69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38b32f6e-c82d-401d-81ea-0cca871d077c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67a774d4-ab57-4909-80af-f93189b6cf9a",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5153ae-21d3-4c5d-aa43-eb2bf39031ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5bf85e6-e4a4-491f-a014-cd7e3aca7427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31267c47-d488-4bec-aafe-4cb41fd3ab4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1151655-4039-421a-8ab5-acc61a0a25e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65017466-4934-4e8a-9248-27b21e91a678",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818ba3c8-672a-4aea-bbe0-13db6b7768b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cc8d05f-73cf-4f10-a2fb-84a2fffb202f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65454059-d831-4c05-8d85-3824f187c85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2149f543-2f9d-486e-b292-2aa33012223b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00bd543d-dee8-4f9f-b71e-39a707d19687",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cfa588-9c23-4fd9-ae4a-c2986aecae4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303034b9-9617-4e2b-9574-aecd0353a083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebc9646-2411-4e61-abed-0532e5fc51aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e49c59-5e1e-42af-a06d-5a6bda9202c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "384fe5b6-f446-4fc9-b1fd-b87f545496e0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd789d3c-0589-401d-860c-3d188c8a0251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8876188-b857-4e53-9ef3-ee3236bd9780"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10f86653-f81f-4734-9c9e-1c1b70f43e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee29763a-ff5e-46ba-95d6-f695ea90793e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3654ff5-1f70-4fd5-b14a-aeb3a92149c1",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9d4fb2-10f0-4883-9b9f-ece9ac6afd02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46259060-a7eb-4014-9cf1-d117544656d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdba2022-ec1a-4bba-9258-0b4f7bc40393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a64079f-4014-45fd-b122-0e1bf0305288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15e5114-d211-468e-8a89-8c08a7116774",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fefd9a-6d9b-450f-90d9-09056608fc48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "807b8a96-5197-4827-94e5-9cb76216c42d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92bca756-5442-4134-bf59-9b82cd7717b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee8436e3-01ba-4657-a029-c83115f75c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0194d5b-ac6e-4d08-a20a-3d6bacee34d7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a42d91c5-6708-49b3-aaec-19c5c2c84b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c42cba-43d4-444a-a0d9-be993088a0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74cab5f-ad06-4021-bc62-9b0586d0b9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3c3574f-e016-4350-ab5d-2d8288ee9226"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34267936-6b1c-4fbb-ad9a-e7641f279626",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4698790a-3571-41b3-beda-b5bc3166460a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9f51d5-5670-4cd6-84ce-2ef859620116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7c4fabc-d9f3-4146-ab3e-5c6d0f7cb894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "526f8523-9ab4-4d73-a3ca-ae6e7a1c8533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79fdbb03-7e58-4834-80a9-a8a9dc6f11f2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9a970c8-bae4-4e0b-80b5-ff883479d203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c56b67de-8326-4b14-b280-a1f8b7ef7358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "224e2529-3d03-4478-aeb6-1e08b1c9b32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a4b3138-ece8-40ec-a7e7-de90a0c024f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0368e935-3c35-4fa4-967b-9dc0bd48089d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6ae629-9d39-49c4-87f6-9a94fc2755f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aee3b299-6f5c-41bc-bccb-44fdf7bdfa2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b74a1c0d-2c8a-4025-bbb3-65a3c7d7a222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "544cc7b1-5ab5-46d3-96e8-523ac808baae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90136ad-e305-4857-b99b-abb72638846d",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "720ce0c3-0d22-4c2f-ac8c-6f5cafcb74a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92cf6fe7-8bfc-4571-bfe1-a878b3794d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d4e1c6-e06b-4b9f-a763-9ccd2f88a28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "16c3e1d6-21ec-46b0-afbe-a9fe4f8c3639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d661b19c-3588-46c3-b5fa-49d7c6e9f415",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3bacdc8-1333-4c9c-bba3-bc195d799d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08461e08-bc85-48b3-840e-78ee11ab6482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82600d60-df28-4dc8-9849-856bc7987191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b17f8c98-196a-4f4d-b7df-a28ac1350cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f30664-a867-4aad-ade8-04db72a109ff",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc0aab26-684b-40f2-a226-08d02f63c793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd6f7e6-37b9-47d8-8337-5b18c7d41d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488ae1d6-9c47-434f-bdee-1dba364f4802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec6b4efb-90a9-46e3-b753-0e51967d5963"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7067a620-a0ad-4740-baf2-37ffea657d4f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "746099bd-bf89-4957-8834-f7b92187834b",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4b9c273-af96-43fc-950e-a6277a14dc44",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5ec1ec-761e-4465-bc77-8885ef5c8c14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da8a2ad-9499-4be6-8861-8a80f335e66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "347c4d42-d6ef-4176-ab39-e06493b35045"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4795b2e9-fda8-4040-8e5e-fb03f4fc799c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "275815d8-d471-40f6-a435-087c42e6b3b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4608f01-1d45-4d72-9d2b-eb82399f4b23",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48e40e7c-0219-45b9-bb79-bac528c0f607"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3acf64c8-c148-4e45-83db-ff43cd794e54",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b9361038-3382-464e-a785-50883ce39462"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49b0db68-4fee-476b-a8d4-e7ab5b2e2e71",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1ff60dba-ad7f-4f4e-8dfa-74777121eb79"
            }
          }
        ]
      },
      {
        "id": "014f4623-1fef-42c1-9d9d-facd2312fd64",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f44dde71-49f0-4e8a-bfaf-a7d9df28c0b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5ed9b27b-b62c-4c60-a763-fb3847f49a0b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7daa168a-bf16-49bd-93b5-65a74d56c973",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dffafbc6-360c-444b-ab1c-cbd16380e598",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a179885-81f5-45a3-845f-098ba1d5d05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b565d8-0096-4c89-8f27-78f98834b9c1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b9ab5c-c737-4fba-b771-cdfdf3e76184",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f986c5b-d5ce-4e5b-a19b-a15c437df59d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "735eb99a-889c-4a01-92ff-a08249d10131",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7d8afa-1c02-4faa-9f49-3ead326fbc0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59af822-fa99-40aa-b59d-aaab93f34cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "785bd0c4-685c-471d-a1cf-8c05f37c4743",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea9687a-a15c-4dc3-8e95-4c123d12693e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3ae20b4-9895-432a-abb2-070ea25313a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8450375d-51e8-4397-8524-17de59b4550b",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6994a9-8d06-4223-9d9c-799303f4a6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bdbd4c4-3aa4-4478-ac1a-f884f5b64218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d42fa4-9fa9-4f2d-bc24-aecfa3899eaf",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d7b484-ea15-4e78-b5a2-01e1d40343c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0884607f-2067-4f63-b51e-52b875e51302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9caaf11d-6d15-4a0e-9866-42625ebbe481",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6a4a697-9be8-4d53-a37d-d9ef2d0a118a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ea2b3b-564f-4cb3-9c57-ed560935ac2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73489dd3-f619-4b2d-bd68-592e730eedd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1986eafd-6a17-4fcc-9746-a1e38985f0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "379332e0-0bff-4744-8ff6-41a5b7641c36",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9106b1b7-7375-4d12-aa8e-d2589cc82223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99f426e3-c1b3-4a4e-8e0e-1327ac8f8cff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5488535e-9f46-4c9b-b47f-10ea1b606ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "414d8263-d74f-4897-ad51-6f35b1d95e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e310b6-040f-4d80-a976-71ce28532fb1",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6935cd8-6e76-4ddf-b182-6eb4872f723f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f46cb7d-a66f-48db-90ea-0e5f4035cba8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e939a229-5c81-43d1-85e8-b41d377127b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7b4ce8e-0037-42f7-a442-856b9b79aefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc75549-7fdd-4ca9-98bb-eb602f360cf9",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aabb81ce-7381-49e7-8ae3-d506efe409ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd9b6b47-7fbc-4729-bc9c-7af7b38d1fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ed3dfe8-131c-4d2d-97e7-55769c652d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daa8e666-bbd7-4e31-9253-3f190da082fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3dcdf1e-9aeb-4279-a6f5-0e89c2b4e83d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a775acce-6b1e-4b5c-b78a-c31aebf22b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1b3e48-8be8-46f0-bc29-81883a802906"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3229fb27-114f-46f7-8647-2c1b94c5e129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "208a6555-6e0b-40fc-8359-0a875ba3e1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d320cfe-dd1d-4cea-bfb4-6c71d1103630",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf071af2-ce83-4665-a439-d0d411609e79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b5cd689-7653-4315-8e17-e957614ba312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cac974-c5c6-4e4b-80bc-299ecd6df581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bf5176c-050f-4755-b651-522ed0e0f43c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dabbad5b-1344-40a3-8351-b3534b18eb65",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918cdc37-1b74-45b6-a586-24ada33c716d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94b7abc6-87c8-47bd-98ae-43dfdf1c1933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0a8024-85a2-49c5-886c-b0b2aa9a87df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4063a69b-4d40-4c2d-a1a3-00fffa3e3c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70c05696-bf77-463d-ae44-af7c3f5002f6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a802ca8a-dc83-4321-8fdd-994a9bb76bbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eed4a608-c856-43d7-a853-1983e9549734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33ff800-83bd-4691-9c65-054cad038455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37ce98c4-63b2-44fa-869c-fc657b19f52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a335e8-103d-470c-822a-666939e0cb93",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4deff192-50fc-44d3-9704-68f0787a9615",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c565ab0-c367-4224-820f-59a39e17b385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c773ea62-d44c-4638-9f85-786ee4edcf28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc80e8c5-981b-46ad-887d-dd470b997da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e03113c5-f3a8-4341-8f6d-da822234e9b2",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f515efc4-d0cd-48b7-befa-cd8b61505249",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb185e30-98f1-4c4d-a8c4-98e0aad8afa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b9be15-ab3d-4fca-9140-ca1b829a7fb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da5b0e6-baff-4482-8d2a-8c8535ee94a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02ea602-7ab9-4458-aeef-48cb86a1e148",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6597554-6749-4e51-b47d-3fa0406d139f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06951923-5ffa-45da-9166-0a355549c3c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12b97af-40d4-488d-83cd-a87adabc5ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9878c0b9-9f06-444f-9a83-6c85dc6bc583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be79146-6bf4-47ef-a660-b1271c3f0623",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529889bf-aa4f-435c-9b87-3631bb80ccac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bfbf11c-2461-4d95-ab2e-05b3cedf8e37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca1e062a-49ee-4b72-9828-dc8f967ff090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b298221-4fb9-4ac4-b703-0040cb45e906"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e622cf-3c15-4c9b-a313-a5cc305b8244",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1225c63-60c5-485c-9713-2b7617476d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d424f3-f354-4749-a3d2-10896c18cfa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9beedf6f-f08d-430d-87c8-3afe0fd112e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4222c8-77ac-4ea4-89c8-363925df5dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86fd73a-4a1e-4e2f-89cc-e46c90de355a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adbf5c85-9756-4b5d-b6ff-66b6663d7fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c90ab51f-bb7c-44c6-94f3-8b09fe01228a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7de757b-f41a-40ed-bbd3-6c88d4ea3c1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6053dc7f-463c-4fd3-9856-960836344982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "246615e0-1838-4a55-9151-4206dd8cfe72",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a941a72-ed9d-4eb5-a316-fa0d3a9c7f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa396c5b-1528-4861-8227-6951ff60f6d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3173d5-e628-42f2-82df-96a100a19f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4911bf75-5c2e-4782-83c9-a78c53145c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2582d51f-8477-453d-8d06-360aed4aab17",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0188dcfb-a3ce-4329-9c24-6759027b06cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3489cc6e-8f9e-4932-b952-b9f70b31fa03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542316ed-5e8c-478a-803f-c612945f0fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f87c58-3140-4851-9000-f6824f2a0dde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baaf8a82-bdc6-4e35-a25c-e324567bb86f",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64cc279b-51ff-4d60-bc8c-85958dad9565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "947a1663-e5f7-41e3-962b-bfd863b7b587"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fe84c9a-5f04-4d8d-a73c-5e36313e412c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e3180bf-79ff-48b2-a584-4122cb57282e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc3bcec-6944-424b-a6fd-9d8cb0539afa",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a550c2-53f3-4bec-8b86-157274ff226e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ceb88ae-b6b0-491a-a223-9917c51e708d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66ed77c-a151-4e5f-976e-4909f67234bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480fa21d-bebc-4671-8ac8-f08b34b79535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74309e6d-d730-4e6c-9b12-dfa1675e50d4",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcdbeca-9cd9-48a2-b286-4be8f65ce10e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e34a851b-05e7-428f-955e-fa8ce8b22315"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52ba890-18ba-4802-ab6a-79b9604cd3db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d623b72-513b-4405-88f5-8fa90d71e2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b578bceb-f778-4ea0-9981-54bcbca18dd7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7982e75-872b-4136-b863-41b75a8681c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0079a9b6-fc45-48a5-b431-62ad1a89652b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "698500b6-f5b9-4815-b554-31bb8f00f3ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96cbdd43-03ee-4ba6-86a9-541a2a0b8f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53be3fb3-95ed-41f4-8e12-c4811887e121",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf238344-af13-4576-8b18-1635355d5354",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "315cb72f-c090-4381-b276-b2120a9c0776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d16bcb-e4d0-4d06-a8c1-92d0fab809dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43214393-767d-4aed-a2dd-8b0975b0432d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bcb20e-c822-4570-85fa-676a2bb192c8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e28bef67-4363-45f4-8b6e-0e23128df7dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3160433f-942f-4849-8fdc-8e7864e37185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c672e579-691e-41f5-b28e-879172c3d925",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99ab12c-dfb2-419f-a7fe-9f9f0198b439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50aaa730-a250-4122-9738-d0619655559d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ab40ce-ce78-4836-aa12-0948d61c0dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4710cd38-6b52-4cb2-b280-dcb89c48e979"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bbf1fcf-6a9b-437b-999a-c710ceb37bb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2affe3a5-07e2-4628-84c0-ebe707691187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f27260e-772d-41e3-8ed9-f34d6a9492a2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcc91f7-902d-4b8c-86a4-68224e7fd9d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ddf084c-1e9d-4898-85c8-0e69c11cf88e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9db723-bac0-495b-8fae-ead9c69bee19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb52548-3f1c-407f-afd6-4b9c160459d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b08d4e7-c7d6-4744-8967-e2689473a534",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8395d2-b0a8-43f9-97f9-c7fe61012d36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d20db24-0bbc-49ca-b0c3-5c897dff22a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6982233-2abb-495f-b228-006ebea3b8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ad58673-c2a5-4fb7-8bce-694931a98877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d75bfc-c06c-4140-a681-d846a7fe0b2b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d35dd95-99e4-4ab7-a04a-389aa3295b4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6836e130-907a-4a50-b00a-19bcb8120648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ab1ad63-eb73-4dd4-835e-4d9ee9c9b743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e716aa4-3176-4b8f-ae88-4519702b1793"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc051c9-1efb-465c-83fa-91e8c5379910",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8f5217-8049-4672-9a72-27683d533645",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b0829dc-6336-46da-827f-35ba885f8b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80d8a610-d8c2-4dc8-8c8e-0131eafb544d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "884bfdc4-6595-42eb-84dc-1d6e1aa27c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ac2bdf-3eea-4a35-b99a-d05be195cd89",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022bd594-f1c6-4a6e-a018-3c0cebc91c30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7770c5f0-ebb4-42a1-8f93-d37d9d5eb5a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "527a3aa5-8b74-4ce7-acf9-7a5b2bf5f32f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80603914-56d1-4b71-b511-7fb9c0e0be75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1373ac31-9fce-49e0-85d2-a982389d0664",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84be4cb8-0095-431b-8248-b75d90a6e17b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45df3a54-119c-47d1-9b54-c2f708ce6bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd9012a-8bd6-4c3c-99ea-e4c2698b3c7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef486c07-18af-4f1f-b733-089baa144b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a7a3639-9b46-4ed3-b51c-8e0944dee1b2",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33f4cad9-afac-41ed-8258-744348eadb80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08a3087c-243f-4877-adf8-db12a46d78c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3317ffd-b350-4537-bc14-b11c3de8bcea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c798133-6509-4023-b6f9-ce9eaa995f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7629e4e1-581e-41f6-aa29-7a6c8bf4ae3e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3083dcc1-4f25-4636-b3a5-234e93bb83e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84cc790d-156a-4bd0-ad70-74fb61a68828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5deefb-87be-443b-a748-87e9a9a7647e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a997cc7-16f2-427f-a76d-5b1c350193bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d25c4b6-0c51-42aa-9e19-0d29f615b8aa",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5157a6dd-072d-42b2-bce8-58b402780cd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eef8b3d-cc98-4971-877a-a11683abc2c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "989b9eea-b850-4f74-a051-73a78e206b2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3bd4ce5-4b52-4901-b75e-6f6148369629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d88582-0243-42be-9942-aaa8b76d3cc9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22712e53-aec7-4154-a178-aac611af3a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "008bc884-1055-4159-873d-d8715892ca94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92029142-448c-43c9-8c0f-67777661a7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aee0331-89a9-4b7a-bdff-2e3b6f57b33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1711f0c-491f-4767-9c46-85a4e3788b0c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6505ca1d-0eff-42cc-be24-ebcf1faaed15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70113d55-c171-43a7-bfd7-4c611c2e1d84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04db1f6-fefb-43d8-be84-cf811aefe028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f191598-dd1a-4569-86d6-ebfd3ec27701"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd05545-5eb4-4919-b30d-5e40d18c805b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fafc7dd6-bd68-4b42-8fc0-7537f16b86f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2a2543-5a03-4ee6-b4c1-c0dcc0aea797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49152330-1bc9-4861-a269-fbbc6c546410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f8cd70-7f9b-4bdf-863d-95a0fa3aeca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff2b5da-65ed-4486-9be8-cecdc2ebc0f2",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ef8880-e0c1-42d7-a7fb-d272e66f6414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f68da97-df1f-41f8-bf73-1fb7ab72c823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f98ebb9-a924-40ca-b469-8ffd4fe87c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94546742-117e-482d-ad1b-83bcf5aef43e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6db9f65-cdd8-4926-9d1e-abee349feba7",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae3ba3c-aed4-4d82-a752-9c4f7070f1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdcc9539-7eba-4bf7-ab60-85208a44dcc7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbf1c70-0c55-495a-9431-7defae20cce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a594213c-5493-4d6a-bd68-ee441f022f2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e4bd829-e348-4a55-be36-4c2c80c667d1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a7fa35-6a17-45fb-a8d2-06ab97fd88a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ae3356-528e-4d31-92c5-6fbbaa531a50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce562a1-1993-41c5-9064-2162e032ece8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85132562-830a-4262-920f-8432b5eff1a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203c9cfa-bb76-4e60-9e44-834b347817fd",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ff4cf0-ee34-409d-92c9-4909299fc8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "918c0407-6866-4155-997b-38acd0259a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1eb2e38-2d6e-4aa6-945c-cfcc61d3240c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce039c64-1e80-401c-855c-e722a7c3241f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c8b560-1b4b-41c2-8b82-15a280ff0643",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b702f85-a11f-4f49-8ce5-9f25ca92c361",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b65b774-cd67-4540-bc4b-ada81342c80b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1099cd59-3ebf-47e1-b666-4192d13328d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb7e54b3-53b6-47b4-9f04-dd37eda9c29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "688fded6-c790-44c1-9969-be1cfa8bab31",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58b8272c-d9fd-48ba-a7fa-ef058784d2dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ea0008-b320-4625-b214-0be5e2ea5f00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb0678b-2c8d-464d-8ee6-07ddf2b50320",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c94f0d2-270a-4a2b-bac8-76ddffc109bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc3a94e-5380-4dcb-89a0-fe75134d849d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc2dff5-a5cd-48f7-940b-dcd18112efcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99ed0bf2-8bde-47b7-a420-2c8422c030ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9eadcef-d245-4929-886d-ebce0b0804d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "678ad3ca-0d74-4bda-adeb-a59b4180a031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e19719f-7275-45fb-b43e-6a7e172276d9",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7460dfa4-45b0-4e39-884e-21bc487aba48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c631e9-e9cc-4ec5-b0ec-33dd4f99a92d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fdd950-cb31-46b7-820b-f296434fe56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3f5b7e0-36bf-4010-b317-1f06f572eab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29d5459-6152-4cc6-b4f6-da8fd54a1ba1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44f8edc-152e-4539-bb69-8bea2af9a874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c4fc513-309c-4992-a3c6-c9ab3c810c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0c29a7-d482-4e7a-9513-95713132a33b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951ea099-2db6-4556-91be-2396358f924e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a087e704-7653-4995-ab05-fffae1a38f27",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f67626e6-6850-438e-96ae-e02551b17d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af3b54c-5f83-4fed-8054-919acf1c0120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da3376e-b2fd-4989-82a0-e3cd425ca4db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9c91015-2138-4e59-a9e6-c8c92037ad14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c2fb574-e7e6-4ea7-88c0-38ccfecc614f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e14af1b-2bf7-43f4-b89d-2029bbd36128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef12e187-ac83-4d25-aa55-909ee228921c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cd7478-2f9f-4637-bf60-e0b9062b831b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d94c80-d330-41e1-ac29-139bf032d9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47645e0-1081-4967-b081-0ae2e859285c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52dae7c5-9753-4591-afa5-ef19f1033433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb908c6-b562-434b-a697-1548f577d226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c943f0d-b9b6-4f9b-960a-d5ac34c3096c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331c9bdf-0f10-427f-ba54-8b154cc4957d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0265ae13-3cc0-4d9b-8e5f-da3bb7b60905",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbfd642-8060-4291-b755-a05795ee8d74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b2cd22-8cfd-4a95-8f34-86bf1831da59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffcf9334-aa54-46cc-834d-ad0f8fc20af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1d44b23-6aad-4f1a-9e4a-32c64fe33f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912f3310-06d9-4232-bd6a-2695f8876d16",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63c9681-9713-4db4-97c9-478884e63455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4741be-c670-404b-b3c0-702a65221788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd7528b-4018-42bb-899e-038d2df7d3ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff3ea2a-aece-43d0-8a7c-3c205747b677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab16ae3-d580-4c57-8e7f-9dceb3a74841",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb25993-824c-4c80-bae2-517758aebd34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1890cd-2d7b-443c-830d-8c3f2894a2a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8a76d3-cb79-470d-8fd4-8291a129b54f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf0297f-a32f-46d5-822d-a7d37451bd15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477096d4-fa88-46ac-bc0f-933b1674108c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b26e355-e655-423f-af87-6c1f08cd7de5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b313548-9f61-4d81-9ccf-4fbc9ea36867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bb2376-6554-48f2-a6c1-134ad040e675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acd0f0d2-a9c1-4fd1-ab5d-49a813cfe9f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1a1a83-461d-486e-97c3-63ccb6e75fd7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2bd176-3032-4c6e-b46a-29522d5c8a40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "830c1314-06fe-41a4-a162-93fad2cd4bef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b252bc9-0964-4f3e-9d07-da071ff5ad9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2b822bd-0c31-4604-9bc6-f41b3607b8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9244d9ae-d387-4146-9e64-f4b5a9d3b81e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95ea37d2-42d8-4b06-bd5e-a8688e28ec4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b102f2d0-fb4f-488d-a62c-6c40065defc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4a8fef-6bbe-4d0f-b4a6-cd10bf628245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d01ee5d-94c8-4914-bc13-2d76cbbdf24c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7e0e3f-324e-4006-a23d-df5ed25741e8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cffecd8a-2599-4e1f-97de-718ed43fc515",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f57e47ce-6ba3-4654-b581-498c396a6de8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6072c756-2e56-4fc6-8e6b-039669768b68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c02bf5cd-3eed-45e4-85ce-227d98d49bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775f7cfb-88bd-4d53-ae10-0b248e272453",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61660c2d-6e27-40ff-bd22-e84d3b3d5d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd140835-635e-4193-9bb1-759f1facd01f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd450a05-2ce5-4204-a15e-754188e560bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d09e81de-814c-41ee-a0d9-cced4fd477a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea4f9823-0b3a-45df-b59e-b98cdbae5a2c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ecd2f0-ba9d-4e20-b2b2-6e0370c55cab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81da7504-43fd-4662-99dc-e496d7682034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56286387-c5b5-4b08-ba73-2006e18ffe46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b6dca1b-f441-449f-9af0-8f0f5307b6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64b68106-6d22-481d-98a7-86ca2f2571b6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3752285-bae3-4615-bb55-459e2d681ba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f1ba174-ca47-42f8-b5a5-02589e6f994b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df2002d-e369-475f-85aa-21939387f644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1570c55a-2859-4d7e-b322-d4900ce7c303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d99887-2eaf-45e2-8595-e9c375c8bf7f",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751a2478-8145-4020-9eed-e99d4a55f70a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d317ea2-51af-470d-aa57-dfcf950b08de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "308b2169-3bca-457f-9c1c-8e8d6b9ae163",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "decc55e0-c2f2-4a24-a754-faddbd7ea863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0080f7d4-ae0c-4ec9-95eb-f2684dd309b7",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446c1fdb-4ca4-41cd-a5e0-3b83e80b39d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d77ed06-3a63-4edf-a253-2b86e2b8a994"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "563f0786-9e9b-4bc4-b24d-bebbe405cc62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0209882d-69ba-4a10-acce-5b508eb01a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d94d70-241d-4bea-b0b4-ae6800ff317c",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea9fc53-1ef3-4cbe-a2c8-c1a40307cb8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7715769e-97bf-4126-8c97-d90554a6a97a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e30387fd-ae09-4afc-b703-cb8d074f3746",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3371f543-0f8c-45e4-b277-626a1fa36463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a0d8261-3f9f-4c8f-bd6a-675eac7b3523",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c3671c-3d0c-4957-9d9a-1aacdd254f40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22039b87-2c0a-4f6b-84f3-a865ed79d3f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4d82a9c-3996-4b87-b5b8-bc4c39d7af51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cc33964-cfb2-4ea6-a145-1f894feda7a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e8d3a4-2fca-49ea-93a6-ef8acc9fd301",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb89ad1-55de-49aa-b021-e374879e9136",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37ccb366-7ac8-4b61-a610-5dc8625d744f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec7021e0-d3f4-43b3-b251-bd0b52ab93ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb192cb1-a699-45a4-b26a-7ecc069ee491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd18df33-68f8-4e88-9140-1a975d6c4ec7",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3da97f63-465d-4b14-aa6f-eb22e74a1c0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2685762-043a-4b63-8262-fb39958ea410"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff286ad0-b861-40d6-85e9-272d9929ac0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9893b52d-9847-4d3b-aece-30466cd90d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68ec1711-0106-4b62-a80a-1fda23584cf3",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2ec07df-6bd1-4a37-b01e-07a6ca5a123e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa28fdeb-16e4-4936-9803-fc5e8bd1bea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34a91bfb-fb38-404d-99a8-7951a0519d45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afde41d4-79e2-4802-abd9-c622d1c14a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d348973-302e-47ca-bb6b-b924692ef30f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4226a1b3-d325-4177-8a0f-05b29aba2248",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d1ee18c-ae35-4aa3-86c3-7f2a5b5757da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e607c761-7657-4e38-a390-430ef58505c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcfd15ca-ddf2-41d2-8c4d-2a27e513e124"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e428edb5-8d97-4394-8ad2-95837386c4e8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8200ebcb-0465-475e-9990-527d26cd4bef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab2a61f0-d5aa-4c46-a086-de4316fa4e40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "042cecad-f5a5-4fce-ac39-8b3e41dde23d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b12a43-0017-49d9-9f63-418ef4b25e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe479a9b-b180-4a8a-bab8-d15cf0744316",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930e7758-bef6-46bf-ac73-683702c8cfd4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec11c34b-7317-438d-90c0-b0d41de0c64a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91950a88-76d7-406c-acec-2245059d10dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a21755-2ee7-4f91-87b5-a1faf5f32b4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffef15b0-aaa5-4a51-97ca-960af45a1360",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b5b966-7197-4aa3-b5aa-d6a5cfef3c6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e475000c-60d7-4fb3-9919-1e5ae45a547d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff09f714-c029-44c3-8f4f-295e539bddba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4c49f1-0bfb-401c-b490-5c3033cc58a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e14848-5056-41df-888a-026e0d5b18d1",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8972493-49f8-4acc-96c2-65e170911d21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac52686d-ba18-4e96-8b54-00265de58e19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "432a1fe3-6bf9-4b81-a52e-06aafd141132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "695aa26b-346e-46be-a3df-b14dc8cea840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "227ed0f0-ed53-4ca5-9374-f929e82cb7fd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb75f800-b354-4f1b-848a-ddcd3dd4c51e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "024cb9cc-2875-45d8-990a-0abdfcc256d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e6dbfa-b11c-4005-9c16-f5e23f0a7ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d570ede7-3f43-4abd-9839-b7e9d446d64e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "225f1339-e260-426f-9654-5fce594ec9df",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1cc900-4dcc-455b-bfb9-de2b17e88983",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f7affc2-c75e-435f-a977-8e3de159742b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee02eb3b-d5ee-4bd9-84b3-74ab0a0724f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41823da-ba7a-48cd-bd9f-ffdef3c58be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47e7222-e78a-4f52-95c3-7ee65e615b26",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a0a470-4a74-4214-bd64-cd2c9cea0884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f4b2c75-38ac-44e2-bb3b-8a0a951d5954"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1179a37-3bfa-45ad-8f3d-815caf861179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dc0bbcc-922c-41c1-994a-4e69c180bc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd775e6c-11b0-463e-9360-9968d1ac2cc4",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f62c95ee-6645-4766-add2-7055a54b3174",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cf0ba27-4a98-4910-89dc-b1f831526afe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1f005d-3bcc-42da-ad7b-2436382fc1f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5916f98a-40dd-4990-886d-b7ac67bd47cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca85368d-3df4-4ee8-b5f4-bf66568678cd",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd46d80-4892-4734-95f5-d279b37924cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13f654c5-b6dd-4d39-92e9-65fb55db8122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ce2f1c-6125-435d-9317-1969f19f6f01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822aa502-56dc-4b0d-8649-4acd41b91483"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73f56211-b6da-45ee-b56f-b772ba89a364",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ae6631-ad88-472b-9452-ff18b0e77dd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c7cff08-3471-47b3-b6d2-758f2374acb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d13c4b1-7a45-4c39-9da8-fb3982e89f0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92bccf60-25d7-44fb-840f-bab5fcf4ca47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e66b3f-43b4-4e06-b80e-a49a8bd11dbf",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4fba57-6700-4d0c-a9d3-feed8b51a333",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0cdc9e2-623a-4e73-8a8e-5d0ee4ae0a7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8f33938-71f4-4080-a488-69ec38295760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ceb8e0-d00b-4c69-b1f3-a8f602933579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b661091f-d681-4d81-b0ef-e7e60036b908",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e999614-e154-4461-97a8-350429d69aa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d15ea441-80e9-4fc6-8bb2-c2fea19f7de2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83ee551-8b7d-4332-bd12-af8edd1965c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8381f3b7-8ee8-4e08-abfa-3df374eb9753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472a4f75-2a37-47a8-91d4-2427992362d5",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073d7488-1632-4b03-8b67-faf4d7f03de3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e604f6ab-b343-4661-b605-eb71e708e835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4581145-da4e-4ef7-aeb0-c92e6a028857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffddc65f-1477-43ac-84a6-be29293f1749"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5612be94-82d0-452a-af4d-bbc66fc3cc3a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b7b98b5-afc0-44a1-8c65-e215e0e42da3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12cf8302-c883-4f3d-911b-c880e245c967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1213b710-536e-4fb4-a657-b33fbe1ab6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b87ad16-dd47-4ebb-b210-88786b6f99f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dcdd0c-9d57-46a4-8485-a61cde59cd18",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c19f3b-21fa-4e86-91a1-da061dc5346c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0cdb2f0-c4c5-4c69-bc21-cbaedecd8017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd95c017-f344-4ff7-89de-b74c47bb964a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1023fd1-4952-4592-b6a8-3736b2eec038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222197be-f852-44d1-a52d-0ad5960de8b1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4dfd0ba-ec76-4440-b5c6-e8c247676cea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d836ce1-4f75-4972-b32b-533df369b617"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f32e8ea-bee5-4ad1-bd5f-5b38bb134bc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "694df2cf-05d3-4756-9191-f4d4cfade095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60651acf-1cca-40c0-942f-82281f64cbd5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698d9648-c443-4f43-b6f2-937a0ff3a360",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4d22fbf-6f87-49c6-863c-9bf49d99b45f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41cd791f-7175-4b25-a79a-4b04c8846877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11a34979-c2b9-4a4b-a7b8-3dba5087e608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da67aaf-811b-4295-9431-d158a9f45847",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a2b1951-88e4-4a5d-b7e4-f953bfcc3c85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19db2024-9e32-45c8-8a3b-f8f7bd5640c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e3e5be-7f3f-42f4-a4a5-d7a517bd383b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8c4874-33f6-4f4a-ae88-eca7a88a71f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa29be25-5cce-4e80-8474-b905bc1948dd",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f576707a-de4e-46dc-ae2c-4eba3f370029",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71b39849-a6a0-41e1-9663-e9ef4ba34010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "154b5b0b-8c67-4094-9353-fd4bdfa490d3",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84466947-fa9f-4950-befc-f5c73bb5b5af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb818f9e-60f3-4ee6-b688-33ff37e3094b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "514b78a5-a9eb-433c-aeda-6de472408ec1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b9ef1d6-ed1c-44b4-bd6f-4300b4731787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb1f556-f602-493c-9d1e-44bbc3584b08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd92e40-1909-45a8-9edf-e646e855c582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe963fc-5fa2-4f64-8ce5-4b23272c9e84",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932e252e-d368-4e31-bdf8-56654c1fed00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0821c95b-531b-447d-bd8f-51c2cfe7c393"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3272039e-e984-4182-9132-b89ac8b9071f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e26738-f1da-4967-9216-f888379ba3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146ef817-69e2-438f-aa4b-5dd34e01bd31",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "544d2246-3ced-48c6-be48-af6cf8d77f63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "810d45de-eda6-4467-ab55-2a3125d51563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc19355-af5e-4015-9645-7e6caadb034f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a660bae3-0128-48ac-99e0-e9eed7f7407c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ec9d8c-19d0-462d-92b6-a0b3508b5034",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25bdc7bf-519f-4fc4-8817-967204f6cb98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd66054e-2947-470d-b881-4c1f21f51d49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a8040c-5590-40fd-bc64-e5c186b55d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825e873f-e18c-42bd-8e83-feaf106566de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e66790c-8644-4fe4-b657-3aa0798091c5",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc3565b-909c-4efc-9201-d772e0c84736",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1f8193a-2b61-4266-ab41-8d042dc5362e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4af8f915-b713-40a8-93d8-a6670e4227b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40bcb5a-04a3-4981-bba0-81583c8fc3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ac1a7eb-7b67-4852-a3d4-02e747d74589",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc11037b-1c7e-47f9-bb3f-55134a20996d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07e3880d-1361-4f05-9b61-5374ab6ef0f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d1c4143-3b1a-44d8-b7d8-dc25d82e34f7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c798981c-30b5-4775-86ca-b5f60131d9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59148e90-441a-4fa9-996f-16a2f31fc92b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d2f4aff-ef68-4fa1-88d1-9b44859c079d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33d88aab-5931-49be-b7a4-6bd91167d0e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cf3d73-d0e0-4958-b033-bc586c13db33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "032f456f-8370-4ad5-a3e4-ec94a9eafd2d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "450f5bea-9c08-4eee-b3b3-7fa2b735b89c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2320ed58-b472-407a-b634-fb676a59bc8a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7cd3ab8b-74b5-4c9b-8039-accfe6665386",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "29b859c5-3505-4e7b-b83d-163146ab9166"
                    }
                  }
                ]
              },
              {
                "id": "9b464788-053a-4680-9963-e77312d0e258",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60a009d2-f87a-4e3a-8f34-6ea0b3bf87d4",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e14ca50e-22c0-425c-b00f-8fcfe02982d3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "39828d13-0f8b-4597-97bc-684baea3c020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43a82153-22d4-461f-b3a8-d4999276b761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "45bcb765-97c4-4a59-b903-20367b0be57b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "180cc0fd-c45b-4f13-af8d-6b84fe59c882",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "785e6e91-181f-450c-89d9-45ad3db5f09c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e2c03e40-e786-4cc7-8d61-c52ed49e60d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "457498cc-e9ac-405b-b5e8-6e0a291c72de"
                    }
                  }
                ]
              },
              {
                "id": "02343d29-7134-4d7a-a03d-0b6946e7137c",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ff027383-6011-4a81-a417-b3c7a13e8360",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707b5706-a12d-4931-8e50-f24fdf59e1f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9229408c-b752-42c3-b2ae-d9ab7805b85e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55576eb1-d2d8-475e-99af-f52a2a7cab9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78b11784-20a2-4e86-b3e8-a17f3bb21e60"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5decc887-8e4c-4005-9d9e-5bb72ca19012",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6893483e-cc61-4d0b-98ea-38e079301b78",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8656900-5023-40fa-9564-e97c3de0b336",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e358d022-7b3c-4afd-ba2c-9af0eeb80ed7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62fa0496-5a66-438f-aba0-9af207deba95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c36a0d8-d819-4275-b2e7-4e1ba58d9e1a"
                    }
                  }
                ]
              },
              {
                "id": "3cb100c6-0963-4b8c-b297-b45fa57b8b2e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cea28a17-e914-4e45-89f0-c071b0360f57",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c975fb84-a3f7-4baf-b5da-331d0aa064d6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ac8ffde8-0371-4c61-87dc-924fce4e0087",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a37641b4-f4b3-4634-a5e1-646476812b5b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "add5f84e-5670-4469-a51d-2724185e5dcf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e9eb3894-d197-4072-8572-34a4418a37cb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c3cb7364-925b-4291-a61b-dc430388fe79",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21cc14c1-e032-44d5-bf13-2c369da8ef20"
            }
          }
        ]
      },
      {
        "id": "04f7fe3c-cdd2-4354-98fb-e7c5e731151a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "14fa6b7b-40ad-4425-9aac-d5bfb0d023b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b84a78b7-402a-4e9c-8b2c-8d2ffe83a672",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4085d46c-51cb-45f3-9378-50ca3cb04880",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27b111be-cd8c-4e99-8c79-120ece23da51",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f23b3cac-20aa-4447-8c34-82768761f837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1089bf94-7400-4507-9d2e-261eb5a583bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dcdfafa6-c128-4b7a-9421-c84ba1442510"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "350e904c-b748-4011-a30e-ead9c6f10cbf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cd64149-8f7a-49fe-b6bd-cd70b6fe1627"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2b50f69-bafb-4442-8ea3-e05bdf468ca7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4bf4e6d-c051-47d0-b7d0-1f847f9f361f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7c0f0667-bcde-421b-8f98-a58d19b11fc5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e54788c6-b255-42d2-aee6-7c1666a6c440"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c45dfd5d-aab0-475d-bb6c-5c7711e350ad",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5fbcfba0-7a0e-4f4a-802e-6b9304c31372"
            }
          }
        ]
      },
      {
        "id": "d48b063d-cddb-4adc-8a6f-11ce753c5142",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2f221a7b-62e0-44a3-8789-bd14c84bb7a1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "971082f0-53ea-4554-bfbc-a77f997ba9c8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa3e0bc0-57dc-490d-863e-63ef6c0be652",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a62e48c-8cff-4e4c-b248-46992c645ef7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "253ccfe3-9c0a-4844-a360-17a13afd57cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c93bed-a715-4a6d-b62d-68903dc4884e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01297b70-6899-4976-b3e5-3c501b3d1e35"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eca3b537-1c80-4811-9c30-4cf4419aa5ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5dc826f8-3a6d-4469-8372-9abf525017fc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "11b1b1d2-2082-4fc2-940d-aeaab19554c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5894b66b-9c72-4525-b78f-5de8b02cd8c0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b07cd5b7-0dce-4c1c-a7b0-d286d5213c1c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6edf117a-4dbd-4f6a-a411-e94834b05f93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1571beb0-8d6c-4d5c-b7f2-a56ef4c5b217",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1101d7e9-9b88-4cdc-abdb-ded1fb32d582"
            }
          }
        ]
      },
      {
        "id": "f21f9a78-369e-4366-9e2e-80f0cfc0233a",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bfeab25a-41c8-47ec-95f0-43b43ed08d82",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1c272253-316e-4157-8eae-8819b082c5f1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f676f93e-6cd2-43ab-a8bc-137493ff6456",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1771b376-d9d1-413a-8cef-43fd9801c2e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "082e5c17-068b-40fc-a6c7-519c43be224b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ef76f9-a420-4500-86d1-c9fa5f163193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e2b0c1a-37a9-4115-94e1-e295aefe1e6c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66b910f7-ce5b-4c5b-bfde-9648105a0b7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1ad9c48-2e2c-4d5b-a54b-f481dd13417d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54d94a0f-7532-4ace-8173-21dde0f733d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7598bb09-b6be-4754-9362-e9d8e7fd3e40"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8dd437e-b505-4049-8b47-3c4f92400afa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "086756e9-3839-4f00-9230-bc6a1401e7dc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed88f441-d6d4-4faa-99c4-6b364561de0d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36c7449f-23c6-4be0-b7c9-dd246270dc90"
            }
          }
        ]
      },
      {
        "id": "a14ceb62-aceb-4ef8-bcce-3adce1b0ae1e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7004192c-c1d5-4971-a433-f08eaf8045eb",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f7b10ee8-20d9-44b7-a276-bdc5412553fc",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d8e855d7-b148-48b6-a70e-a853f8b04060",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85de5812-42c8-43ae-af5f-66c2a5408512",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1c8af0a-4424-4e4e-9432-f22a87ed14d8",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 108.58333333333333,
      "responseMin": 26,
      "responseMax": 9790,
      "responseSd": 657.2713050577989,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1722559200542,
      "completed": 1722559236038
    },
    "executions": [
      {
        "id": "8d9e859e-08c2-4389-90b1-22556abaa5d7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d0479b56-ce12-4938-ab69-30666ac4872d",
          "httpRequestId": "0e6f6c40-25c9-48e0-9623-9fac2fc89f51"
        },
        "item": {
          "id": "8d9e859e-08c2-4389-90b1-22556abaa5d7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "811798d3-db29-4e24-bf70-8c26882c0f0c",
          "status": "OK",
          "code": 200,
          "responseTime": 110,
          "responseSize": 0
        }
      },
      {
        "id": "e495e135-3976-471a-99b2-b6c08a8e4147",
        "cursor": {
          "ref": "36d31b80-acf3-4a82-a822-847061c91202",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "38b8ef55-f39e-4f25-894f-286a619c30ad"
        },
        "item": {
          "id": "e495e135-3976-471a-99b2-b6c08a8e4147",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "3a1b3e6e-989b-4264-a16c-f16b8c9a154f",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 0
        }
      },
      {
        "id": "94b507b8-8f7f-4a74-a33b-4de3a45a8d67",
        "cursor": {
          "ref": "51b23b7d-f6c3-4a36-86eb-4ddf8946a7f0",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "96fc8b2b-6759-4507-979e-a0b0fd4d51d7"
        },
        "item": {
          "id": "94b507b8-8f7f-4a74-a33b-4de3a45a8d67",
          "name": "did_json"
        },
        "response": {
          "id": "a9bf6ac3-61f7-4cc3-8625-d7af2704f002",
          "status": "OK",
          "code": 200,
          "responseTime": 261,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccc71c7-1b96-4e93-9866-f61125257831",
        "cursor": {
          "ref": "4ace307b-9450-48f3-ad0f-3ad076499a45",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e3aea64d-c89d-4357-9927-14f1bc116308"
        },
        "item": {
          "id": "8ccc71c7-1b96-4e93-9866-f61125257831",
          "name": "did:invalid"
        },
        "response": {
          "id": "cd3699d1-5341-4caa-b2cf-01e6f3b3d130",
          "status": "Not Found",
          "code": 404,
          "responseTime": 529,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ccc71c7-1b96-4e93-9866-f61125257831",
        "cursor": {
          "ref": "4ace307b-9450-48f3-ad0f-3ad076499a45",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e3aea64d-c89d-4357-9927-14f1bc116308"
        },
        "item": {
          "id": "8ccc71c7-1b96-4e93-9866-f61125257831",
          "name": "did:invalid"
        },
        "response": {
          "id": "cd3699d1-5341-4caa-b2cf-01e6f3b3d130",
          "status": "Not Found",
          "code": 404,
          "responseTime": 529,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e1c99c-a5df-4dae-9f6a-1456683c0f16",
        "cursor": {
          "ref": "7ae7111d-bf69-4a35-8d76-8afcd716c294",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9133275a-60fe-4294-b1ee-4568b944e9da"
        },
        "item": {
          "id": "a0e1c99c-a5df-4dae-9f6a-1456683c0f16",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fecdacc8-d1ce-4569-b51d-41369fd59b3b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3866970-af0b-4d21-86a2-9be0d1f51081",
        "cursor": {
          "ref": "063d2557-bc13-4413-8f65-92d0c07b5b28",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "3fb42734-5423-48f8-a742-8d00a08a5f2e"
        },
        "item": {
          "id": "d3866970-af0b-4d21-86a2-9be0d1f51081",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "d396aeeb-ae0a-4f7d-ac1d-191cc8da0a0e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 46,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c572c84-ec50-4f99-b156-8dcfb90a0c37",
        "cursor": {
          "ref": "56e56546-0c67-4081-9798-492c0df70601",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7b15c1f9-3d5d-483e-92b3-739d9027060d"
        },
        "item": {
          "id": "7c572c84-ec50-4f99-b156-8dcfb90a0c37",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "928af241-80e9-456a-9cef-bf5ec5419e67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d44fc83-50d2-4a3c-9064-455959adbefc",
        "cursor": {
          "ref": "309911c1-e434-4826-8266-b547e0d5156b",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0669dea1-0827-4361-819f-dd0c09108a1c"
        },
        "item": {
          "id": "0d44fc83-50d2-4a3c-9064-455959adbefc",
          "name": "identifiers"
        },
        "response": {
          "id": "9a753d24-4cb3-45a9-9c42-4e3d99b6dd89",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6c4558a-dfcb-4d8f-aab6-78558016ab4e",
        "cursor": {
          "ref": "5d692080-2fb1-44b3-9e57-94bdb6630cb3",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "129f3d0f-b057-4770-960b-c82e5728ab84"
        },
        "item": {
          "id": "e6c4558a-dfcb-4d8f-aab6-78558016ab4e",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8faeaf93-fb42-43a9-b786-7087a396ca05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f613266-9d76-4c94-a3d7-abbcfe28235a",
        "cursor": {
          "ref": "88c0fd33-6539-4cb0-b489-02309a856830",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "83953c24-9240-4fb2-a2a0-ae97ed7e7cee"
        },
        "item": {
          "id": "7f613266-9d76-4c94-a3d7-abbcfe28235a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1bae3276-fe88-4786-bfd6-61a9edc472e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37983779-1d54-4735-92a4-0583ee1d1fac",
        "cursor": {
          "ref": "63c98310-7a03-4a90-88a4-7fd98717e7af",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "d38d82c1-018d-4c69-89b2-4ab17a82749c"
        },
        "item": {
          "id": "37983779-1d54-4735-92a4-0583ee1d1fac",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "292cf62a-b0cb-41fb-beaf-0fa000b3fa72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c287710a-d779-445b-a544-fa8f39317e9d",
        "cursor": {
          "ref": "4b2d31c8-3bf9-4d5c-adbe-20229a287fa1",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "81aaecfb-4db1-4274-a8e2-c8f35f3eb158"
        },
        "item": {
          "id": "c287710a-d779-445b-a544-fa8f39317e9d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b0b11735-8fc1-48e8-bc05-d361e59440de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad54f1dd-f5e5-4385-b3de-67cec52d4c7b",
        "cursor": {
          "ref": "957a398e-0ee3-4bbd-929c-10c999172684",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "97d2dd7e-0600-45c0-9783-2eb954fd3b5a"
        },
        "item": {
          "id": "ad54f1dd-f5e5-4385-b3de-67cec52d4c7b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "0d71d588-350e-4324-9429-be8c2af51e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "970c1e0c-ffd2-42e0-84bc-fd1e2c8c45f6",
        "cursor": {
          "ref": "5881c69a-fe74-4646-a18f-a830db7126a9",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "84dd9cf5-7e79-484b-9e52-8a56fa0cf9ae"
        },
        "item": {
          "id": "970c1e0c-ffd2-42e0-84bc-fd1e2c8c45f6",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "87f5df78-9cd9-4bb4-bab5-11af8a1531cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa0aeab7-1207-449e-a96a-e58adb19872c",
        "cursor": {
          "ref": "8f69f0ba-ea90-41c9-91e4-e0469bd455bf",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "2c11e66f-f195-45ea-9b13-54a553bc26ff"
        },
        "item": {
          "id": "fa0aeab7-1207-449e-a96a-e58adb19872c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a3ed74b5-72d7-4eb6-badf-dbdd55c08a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d49b2db4-828c-475c-968d-df558a0fe534",
        "cursor": {
          "ref": "17a908b3-bb04-4715-91d6-3a7523b2cfc9",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4dae1ea7-4b8f-4be1-9398-3f06e69daab0"
        },
        "item": {
          "id": "d49b2db4-828c-475c-968d-df558a0fe534",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "853446ec-82f3-4cb8-ba05-cc1fb1665aee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf8f2f2-e23e-4e80-aa88-66f13a07fa4e",
        "cursor": {
          "ref": "815bf5a5-12cb-4e3a-ae57-21bab8ea144a",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "32489af6-8451-488f-938f-b89ad8961786"
        },
        "item": {
          "id": "fbf8f2f2-e23e-4e80-aa88-66f13a07fa4e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "94f2205e-c7fc-4d18-93f6-618d4fde3153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a99ab2d-cc52-4ed5-8aa8-43ea4f9f3239",
        "cursor": {
          "ref": "fe2ed347-91ab-41c1-859b-0401bcda6c99",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "794636d3-568d-45cb-b833-e3a22da584c8"
        },
        "item": {
          "id": "5a99ab2d-cc52-4ed5-8aa8-43ea4f9f3239",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d3c56a61-83f3-420c-8964-ffbe872d12b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aec2eea1-859e-4cf9-856c-a0ea87855893",
        "cursor": {
          "ref": "5f441786-4c28-4b5a-8e88-5e7516a63e43",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "13676602-bf70-48cb-85ac-41685794ec96"
        },
        "item": {
          "id": "aec2eea1-859e-4cf9-856c-a0ea87855893",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e5196f38-8683-4554-b512-e51aadf4a367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2204bf87-3fcb-4554-8c52-8769a4f2a46a",
        "cursor": {
          "ref": "3ec0b212-b64c-4f7c-9dda-caa3dae077d1",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "71953418-96b3-4844-a02e-9789e37ab9b4"
        },
        "item": {
          "id": "2204bf87-3fcb-4554-8c52-8769a4f2a46a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "29eb3ae6-673a-4ecf-b72c-9becc183db8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98328ca9-454f-4aa4-9e64-ca6fb4d62d80",
        "cursor": {
          "ref": "8da811bb-9710-46ce-9640-df8fc31e96fc",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "802b21db-9bef-42c5-8b05-2e745c23e214"
        },
        "item": {
          "id": "98328ca9-454f-4aa4-9e64-ca6fb4d62d80",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9a860959-3d40-4046-a60f-0e2ac663d21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09da7878-fddf-4fd8-baa4-ba89f3cb3f4b",
        "cursor": {
          "ref": "5917611e-ea62-4594-85d4-346a7ba73d14",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "888d2821-6b11-41ef-b56d-c837f77dbf6e"
        },
        "item": {
          "id": "09da7878-fddf-4fd8-baa4-ba89f3cb3f4b",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "45f11c7a-ff49-4793-8173-b960b9a8b395",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6713c7a6-0ab2-4c55-a10a-8d8a8fbc7df0",
        "cursor": {
          "ref": "c3c67ed4-9892-474d-bcfb-edc7b6620ad8",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "7c6ed998-cd26-4789-8eb4-9df336490d87"
        },
        "item": {
          "id": "6713c7a6-0ab2-4c55-a10a-8d8a8fbc7df0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7e2efe2c-643d-4f92-8b76-568c0c777254",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdef37c2-f03f-438e-84a3-f43b23c0ff47",
        "cursor": {
          "ref": "3e913fce-853d-4d57-99fb-c0a92d88a62a",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "66455a70-076d-424c-8deb-a47e66f7fd90"
        },
        "item": {
          "id": "bdef37c2-f03f-438e-84a3-f43b23c0ff47",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "bb7492af-c3a8-445c-88d5-f49fd84b5f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6593c200-c6fa-43ec-a264-29cd6e3a05cb",
        "cursor": {
          "ref": "6d3466a2-e16d-437e-b5c8-fad971152f57",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b584e08e-ad7f-4c09-ab5c-f1eb8272b5c0"
        },
        "item": {
          "id": "6593c200-c6fa-43ec-a264-29cd6e3a05cb",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c98dd84f-cfa7-4fda-8631-a4d0881ee7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772fba0f-8e31-49d5-8d67-4a148d5f0a09",
        "cursor": {
          "ref": "e3759831-fe4e-4b1e-8c83-e30d0fcfd811",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "f90a47e7-c596-42af-87f7-39985f5bb8d9"
        },
        "item": {
          "id": "772fba0f-8e31-49d5-8d67-4a148d5f0a09",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "e06314e6-99ce-413a-986c-80d9386337d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f8bd879-ac15-48ee-bda7-bcc3ac342acc",
        "cursor": {
          "ref": "c9537575-bc85-450b-a3aa-29a84d8bc2f0",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "a36c2ccd-86bd-47c8-af59-98e912a28f0e"
        },
        "item": {
          "id": "0f8bd879-ac15-48ee-bda7-bcc3ac342acc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2b4b94e4-7801-4c71-9149-5c6a46094771",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fcd6cb7-0cb4-4c3c-a5e3-39337c706072",
        "cursor": {
          "ref": "a00b535b-4154-49e4-b6e5-7a3ce3982519",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "894b77cb-bf15-4854-9fb2-5f9162e282d4"
        },
        "item": {
          "id": "1fcd6cb7-0cb4-4c3c-a5e3-39337c706072",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f6effba1-520b-4ea9-b6e5-249b932386a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e40d38-b82e-4e49-a3d6-493ed8d827bd",
        "cursor": {
          "ref": "e16ec570-24a3-4e3d-8c05-635c4b346231",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "01bc9271-1c2b-41ae-ac00-3ff3f281eba8"
        },
        "item": {
          "id": "c4e40d38-b82e-4e49-a3d6-493ed8d827bd",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "208d9164-e98e-40b9-8a62-fec33fc43132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93fcfc96-072a-45b3-a77e-3047af58b678",
        "cursor": {
          "ref": "670e9de1-5739-4824-acd6-d12e7e0e413a",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "25a8fb64-a5bb-42d2-b183-bd7d61e8ecc1"
        },
        "item": {
          "id": "93fcfc96-072a-45b3-a77e-3047af58b678",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d5cf0c20-2bb0-4610-a5f1-897c1d2fac7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7467e28-7ec0-4f64-b393-5ec6ebb925fd",
        "cursor": {
          "ref": "7a5ee38b-a4ea-492c-9c8f-9c1c5767f091",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7e77d64d-441d-4785-8cc0-6ba05bc8b890"
        },
        "item": {
          "id": "f7467e28-7ec0-4f64-b393-5ec6ebb925fd",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "008eab89-04be-411b-b78f-62cd140a9ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c1dc48b-84bb-4a9c-8095-09663506a605",
        "cursor": {
          "ref": "44850448-1557-4834-9474-77a101d9f9b1",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "15724d97-05bd-4044-b909-076ec0a91900"
        },
        "item": {
          "id": "1c1dc48b-84bb-4a9c-8095-09663506a605",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "0b7b3732-d8d0-492c-acde-d3f70f6dfc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b09097-7056-4d68-ad23-7e78ac933ee5",
        "cursor": {
          "ref": "6690c9df-7c14-45c7-9378-199826376280",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "96ad3df5-9ca8-4e5f-90f5-f083289be148"
        },
        "item": {
          "id": "b0b09097-7056-4d68-ad23-7e78ac933ee5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "444f8909-8a39-47e1-86fb-084c5609c138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80075f4f-2fbc-41ea-b88c-728341e3b5de",
        "cursor": {
          "ref": "520de6bb-155c-4d7d-a4ae-81f4c5df21d0",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b264404b-370f-4317-bed1-2f00fbc02680"
        },
        "item": {
          "id": "80075f4f-2fbc-41ea-b88c-728341e3b5de",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "beaad616-f187-4192-a9c4-fa206d98ba3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcf52b5-833f-49bf-a42e-7f72275c9103",
        "cursor": {
          "ref": "a045a744-85ba-4664-bb20-fcb5718b1310",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "24893d6a-6b87-4f52-a8f5-f8e2fedfbc32"
        },
        "item": {
          "id": "0dcf52b5-833f-49bf-a42e-7f72275c9103",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7c66a759-ef60-47c6-9c9b-b3b2e4bc4163",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2574f69-286a-4729-8276-f318d2dbdb6b",
        "cursor": {
          "ref": "db0d0e57-c094-441f-8a54-e22449984988",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6f3de1b4-bcf2-4a03-a1e3-0e36ea277d2e"
        },
        "item": {
          "id": "e2574f69-286a-4729-8276-f318d2dbdb6b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "66f30a4b-c4ee-46df-ac72-defa9b109c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b380ae-d1df-4b73-9dca-0154c1a67061",
        "cursor": {
          "ref": "3f70f28d-0ed2-4a9a-8131-1d57712059c2",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "f53eedb9-8acc-4537-90dc-653b9e1e9d18"
        },
        "item": {
          "id": "42b380ae-d1df-4b73-9dca-0154c1a67061",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "481536e0-beee-4d31-a41b-6f2d2f2322be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2040aea6-8ed6-4436-8a14-8badd885dc72",
        "cursor": {
          "ref": "8160d480-749f-4c07-a014-e8e4e771f355",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f579f8a3-6230-4bd1-9ded-9482b6b5a508"
        },
        "item": {
          "id": "2040aea6-8ed6-4436-8a14-8badd885dc72",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1dd32b0f-3fcc-442c-8232-e35049a31ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86faaca-33ad-4b9c-9083-8574db9cda28",
        "cursor": {
          "ref": "9ee7e2e1-e6ea-4cfd-beab-fbf830564c28",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "ce47d74f-e41b-4a7d-a7ba-bb6d15a29031"
        },
        "item": {
          "id": "b86faaca-33ad-4b9c-9083-8574db9cda28",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bf8b7a22-0176-4a6f-a50f-6ca1e67a108b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9681ce-fee7-4f08-98aa-fe4670c4b04f",
        "cursor": {
          "ref": "5cbdcde8-42cd-4cbb-bcef-1b5c31c21ea1",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e5877e1c-923d-4126-bb7c-4214718e8849"
        },
        "item": {
          "id": "2f9681ce-fee7-4f08-98aa-fe4670c4b04f",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3b883831-2f10-4d71-b23c-601485b93b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abee4053-673e-440c-8c5b-9b5ebb80420c",
        "cursor": {
          "ref": "eb5beeb1-a3eb-4d63-9df2-d392375ca7c8",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d00cae87-22d6-4ce2-a10a-c7d054cd82e7"
        },
        "item": {
          "id": "abee4053-673e-440c-8c5b-9b5ebb80420c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0d8f682f-decb-4b5e-b926-6918a12db360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 124,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d37b5e4-50ed-402a-8efd-1bd5da772343",
        "cursor": {
          "ref": "12846047-0feb-41df-ba4d-4b90e6b7d283",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1d3d75c9-fd4c-4f95-94d2-da73a22b2d50"
        },
        "item": {
          "id": "6d37b5e4-50ed-402a-8efd-1bd5da772343",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9c82f161-65cf-4317-ae68-361d19ff54ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc7fa5d-5f6e-4945-95c1-c2449259fd0f",
        "cursor": {
          "ref": "0799c7d0-b092-46f4-9797-68bdff7df290",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "78fd219c-7fbf-4d0a-a662-f5e2e2929ce3"
        },
        "item": {
          "id": "bcc7fa5d-5f6e-4945-95c1-c2449259fd0f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "3b31139f-3c40-4f99-8c9b-6609b613af95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddda02b3-c92c-4620-91f0-815948f6a79e",
        "cursor": {
          "ref": "95559704-6cf1-4d63-add4-9cd05eb3563f",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4ca88a7e-fa96-4a75-bd89-7a825605e673"
        },
        "item": {
          "id": "ddda02b3-c92c-4620-91f0-815948f6a79e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "21c7c7ff-09ca-4ee5-bc43-77debd3d7a7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fb7141-9efa-4fb6-a237-f8a2c34e2de7",
        "cursor": {
          "ref": "4091d8f6-f681-4d99-b365-144f8ba486e7",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8e772897-64fb-4cf1-b916-0b3ce1355145"
        },
        "item": {
          "id": "57fb7141-9efa-4fb6-a237-f8a2c34e2de7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e77c1fb2-5c87-49e4-a19f-9121ec6b9fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d36bbbc6-7256-425a-81bf-d81b5f282d88",
        "cursor": {
          "ref": "57cb12d6-38ad-49c5-b530-dd14dac6dd2a",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6eb8b23b-2806-44f1-805f-33d4ceffceab"
        },
        "item": {
          "id": "d36bbbc6-7256-425a-81bf-d81b5f282d88",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "14605bd8-9660-43e7-944b-1b1e6c91c070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3445436-2223-4f22-8ff2-fc97276e40b1",
        "cursor": {
          "ref": "95afef3d-5458-4d1c-8760-e8016995e461",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "598fff71-2d88-479c-833e-ea1a5e3b68f6"
        },
        "item": {
          "id": "b3445436-2223-4f22-8ff2-fc97276e40b1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "af62935d-7b70-4180-a2f9-2438c06ea02a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87cb732-ae2a-4b28-8b5b-6c88892f41b7",
        "cursor": {
          "ref": "834614b3-816e-44c8-bbd8-b66dd966233a",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e524537e-6584-4f8d-abff-dd69cbe9211e"
        },
        "item": {
          "id": "a87cb732-ae2a-4b28-8b5b-6c88892f41b7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "30874c04-cfa7-4b3d-83f7-a9b5434ca22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045d7416-df64-46bf-99ec-97711a8f8d92",
        "cursor": {
          "ref": "b8e57e2c-6156-405a-9eea-962d262a92b6",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "145fba50-b05d-4179-8fe2-1661939cf48b"
        },
        "item": {
          "id": "045d7416-df64-46bf-99ec-97711a8f8d92",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "f3ec8f69-01cf-4eb2-bed8-b61016cd5206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9602861-795c-4afb-af46-cdb9c9477ddf",
        "cursor": {
          "ref": "8e091e01-e188-417f-a358-7617866ef904",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d05a7196-285e-4b3d-a500-f7d5e7efd02b"
        },
        "item": {
          "id": "e9602861-795c-4afb-af46-cdb9c9477ddf",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "750845f1-a0f1-4cd7-ac00-3e8e4fce8e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38dc9334-477d-4cad-a091-923b9449d8ff",
        "cursor": {
          "ref": "ef30373d-fe01-455e-aa1c-8ff7d504796d",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "722f15ab-85da-49e5-8ce8-5bdee83dac31"
        },
        "item": {
          "id": "38dc9334-477d-4cad-a091-923b9449d8ff",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "abb8866a-fc57-4a0a-8290-a7d3b350e3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf82a91f-0ce8-4446-a1e4-77575a4fe1c3",
        "cursor": {
          "ref": "22760ed9-6e6c-4495-97b3-41faef196609",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9fd88e99-36da-4cf3-8aec-6b2610086e25"
        },
        "item": {
          "id": "bf82a91f-0ce8-4446-a1e4-77575a4fe1c3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "af3d605e-90ef-4ae7-a116-1d37d92936f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843b0a19-be5f-474d-8513-fd9c6d98f68c",
        "cursor": {
          "ref": "124ec2d0-79dc-44b2-9b15-54aebd4fffb5",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "531848e5-4e1a-4dff-a5a4-a00c676de337"
        },
        "item": {
          "id": "843b0a19-be5f-474d-8513-fd9c6d98f68c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d384194a-08f3-4787-a5eb-f3acfcc030b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35502be-8ff4-49cd-89c1-001ea39e8b1a",
        "cursor": {
          "ref": "8ce6cf1d-fa5c-46bf-b878-ce174309a44e",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7bfb750c-a9f3-4d50-9b3e-b6ac81275b66"
        },
        "item": {
          "id": "a35502be-8ff4-49cd-89c1-001ea39e8b1a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "89c72626-0def-4cf7-9eaf-e33fba200a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef43780-2234-45cf-bed7-02e9be1abdde",
        "cursor": {
          "ref": "529c6e46-2613-4e72-b146-478d2840bfc1",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "8e4d758f-e04f-4b56-b792-5b696b3c4983"
        },
        "item": {
          "id": "eef43780-2234-45cf-bed7-02e9be1abdde",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "59b45273-6428-4069-b18c-10aeea836cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bdd8383-0b22-4398-86c8-29bf598c64ae",
        "cursor": {
          "ref": "69603f4a-1433-4c88-b0f2-bb3fdc608cdf",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "19548c23-a9c7-436a-b066-aca66c5f9370"
        },
        "item": {
          "id": "9bdd8383-0b22-4398-86c8-29bf598c64ae",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "bcfaa7b4-078a-4e23-9dc9-8c543c6df40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf06137c-07d0-4f7f-b8f6-1f4fe87ed6a4",
        "cursor": {
          "ref": "a67b1e7e-de1b-4097-bd01-8ac073258905",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8bb0a662-cc8c-4c12-9fa7-b5cd270872d9"
        },
        "item": {
          "id": "bf06137c-07d0-4f7f-b8f6-1f4fe87ed6a4",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1c9733c8-e8e4-420c-85bc-5d32916b2d5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df1d5b9-f4dd-4f58-ae5a-1a3ceaf32c57",
        "cursor": {
          "ref": "2b0d9d5d-cc89-4b7e-8a69-5d18c6d10273",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "c625456d-ae61-4b66-b5bf-f815aaf5d659"
        },
        "item": {
          "id": "6df1d5b9-f4dd-4f58-ae5a-1a3ceaf32c57",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "946b6632-552d-4bde-9676-b26f88c82839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f93a3d9-cddf-4912-8285-74af2e388d5b",
        "cursor": {
          "ref": "27c1cba7-39cb-4342-bf84-86e815a6a042",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "44356ef8-b84f-4938-b2df-ec0d728660f5"
        },
        "item": {
          "id": "1f93a3d9-cddf-4912-8285-74af2e388d5b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "43bd4471-6fc7-417e-a731-b1af88d74c32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38acca1f-2053-4dff-8772-b862c4429876",
        "cursor": {
          "ref": "78cdaf0b-8291-4968-b647-ad9ca09259aa",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "066049bc-f2bc-46cb-a49a-c07f46e38bfa"
        },
        "item": {
          "id": "38acca1f-2053-4dff-8772-b862c4429876",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ad62ba33-7af5-4647-aedc-a11894acd3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18361a7-4815-4a56-8bf0-0a3900c0f871",
        "cursor": {
          "ref": "78a5f854-1f79-4238-ac9d-460fa0931ed1",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9a81d779-1bcb-4a9b-aec7-43bc785a5dd9"
        },
        "item": {
          "id": "f18361a7-4815-4a56-8bf0-0a3900c0f871",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4e06b07d-bf7b-48bf-9586-f5b9642c5e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2250a7-9836-4b63-bcb1-f6be87dee73b",
        "cursor": {
          "ref": "e7f9bd7c-e806-4606-8622-0e0b3ade186f",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "99679f74-5ca6-46c2-a8e6-96bc85b56c17"
        },
        "item": {
          "id": "ac2250a7-9836-4b63-bcb1-f6be87dee73b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "4cb45aa7-5776-4660-85d1-bf7e4bbe1397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fd4b64-1cef-4471-9ca1-7b915736cfc9",
        "cursor": {
          "ref": "b33f5ede-d5e3-480a-8e8a-35ae8ac4c136",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4a5d6f0b-6365-464a-819c-3d052689dc31"
        },
        "item": {
          "id": "b1fd4b64-1cef-4471-9ca1-7b915736cfc9",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f1de73ce-0f76-4daa-bf87-b31c881903db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "683c7423-5e6f-4b05-a55e-d95886b94728",
        "cursor": {
          "ref": "26712154-f0ba-44a2-9abc-c7ae15531cb3",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3280f986-99fa-4972-bc5b-06f1918c1b2d"
        },
        "item": {
          "id": "683c7423-5e6f-4b05-a55e-d95886b94728",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "c6f72c61-eb06-4e60-a07c-06a4fe116dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5252b9d-d99a-4d90-8366-1dbce577a84d",
        "cursor": {
          "ref": "e88683df-a1d4-4b7c-b211-4f578a5926e4",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9c8234ba-42fb-4aad-9570-d633b8702618"
        },
        "item": {
          "id": "f5252b9d-d99a-4d90-8366-1dbce577a84d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "738a70ca-ee2b-45f8-8fc6-8ed63428d2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8525d483-dcd5-4026-a015-8d0cf5858584",
        "cursor": {
          "ref": "3f18d462-d1ae-4e96-832d-98a557d124a6",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "658aee6a-fc46-4e7f-8639-2d9f803cb80b"
        },
        "item": {
          "id": "8525d483-dcd5-4026-a015-8d0cf5858584",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "012f5b56-f47e-4516-ba6a-b7a892aeff54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d45409c-b0f3-4b2e-82b5-1800dc83c424",
        "cursor": {
          "ref": "3241a547-f3dc-4268-af84-f6b155bef9c6",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9bddf085-1731-405f-8e18-f2a0473dd30d"
        },
        "item": {
          "id": "7d45409c-b0f3-4b2e-82b5-1800dc83c424",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "64ac525c-2675-4c5d-97bb-9ca96493a1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5d13e12-0aba-43f2-9591-3c006b9cc87c",
        "cursor": {
          "ref": "7f82bc61-fa8a-4668-9489-490f43bd2c52",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "97a18242-29d4-4b2d-afc4-22c996abbd6d"
        },
        "item": {
          "id": "d5d13e12-0aba-43f2-9591-3c006b9cc87c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "46693984-a467-43dc-9ec3-750a69dd357d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b27e421-b515-474a-a6de-6445001c0b4c",
        "cursor": {
          "ref": "b0cebfc6-2265-4253-a718-dfffe3299a01",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "33856c18-60a9-42eb-b511-eac51385a2ca"
        },
        "item": {
          "id": "6b27e421-b515-474a-a6de-6445001c0b4c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "24fe9e41-414e-404c-b128-07892798f46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746a7c61-2fa3-44fa-adfb-b272f8f5608f",
        "cursor": {
          "ref": "65e1155f-adff-4f13-bd65-5ceb015eb9e6",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "64652aad-6c31-43d1-aedc-a176c75ea715"
        },
        "item": {
          "id": "746a7c61-2fa3-44fa-adfb-b272f8f5608f",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a724ddb4-c7de-4689-adcb-176102ab3581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7c26acd-079b-4477-b10d-92e1d41561c6",
        "cursor": {
          "ref": "ab59ed0f-20c9-4baa-a550-e0e1c9855d7c",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9b584560-6b90-4234-8ff9-9cba5c5df4bd"
        },
        "item": {
          "id": "e7c26acd-079b-4477-b10d-92e1d41561c6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "ae1ccaa0-de19-476c-bea8-c57515f3bbb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b857ab85-a1c2-46c5-8919-4087ab743423",
        "cursor": {
          "ref": "7fbc3c30-174f-4bdd-a0bd-36265ad7d181",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0656c53a-1f54-49b8-bb90-637decd6445c"
        },
        "item": {
          "id": "b857ab85-a1c2-46c5-8919-4087ab743423",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "58029356-3fcb-4323-bd28-27506150df58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "326319f1-d38e-4db5-9fea-f90e462a2b01",
        "cursor": {
          "ref": "ee5ef742-c99f-4d6b-ba36-a739748b3177",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f128ba4d-a4d9-4905-9874-258285614945"
        },
        "item": {
          "id": "326319f1-d38e-4db5-9fea-f90e462a2b01",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "6d506ccd-98e6-4152-adba-928293224c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ef788c-dfee-4e7e-b943-c62250fd336b",
        "cursor": {
          "ref": "2388514c-9945-4cdf-8e57-f02fed1433f6",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "88fed2be-54b0-47c3-b4b6-fb60a9f3e8db"
        },
        "item": {
          "id": "e2ef788c-dfee-4e7e-b943-c62250fd336b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "dbac6455-667d-44a6-9cb1-54861aa7f1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab877a2-ddb5-4be8-a46d-eca18b02867d",
        "cursor": {
          "ref": "50989608-818c-4037-9401-6577d2ec6591",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "008f2c9a-ced5-41f5-b397-b41a28c559c5"
        },
        "item": {
          "id": "5ab877a2-ddb5-4be8-a46d-eca18b02867d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "d4d2dac1-e85b-4331-a619-2a5f2dae397d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253cdfc6-587d-47b1-96f9-03ec71432be6",
        "cursor": {
          "ref": "f88886ac-4392-4222-959d-7b7284b7b87a",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7838ae5d-f993-4977-9cc8-b6b0b73c7e8f"
        },
        "item": {
          "id": "253cdfc6-587d-47b1-96f9-03ec71432be6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "55b6c290-8691-4575-9c34-015444288a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f94b0d9c-a544-458c-9422-4ee0209e2e5a",
        "cursor": {
          "ref": "1bb470c0-3220-4b03-a26c-12ff8f797063",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a3f5e121-0910-4370-9d13-d50187002266"
        },
        "item": {
          "id": "f94b0d9c-a544-458c-9422-4ee0209e2e5a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3bd8325a-d8c8-48df-9919-13870ab9f5c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73d6569c-5010-4282-b619-8f16f9be267c",
        "cursor": {
          "ref": "77532ff3-35f9-4334-a8fa-07d63fb971d0",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "05778405-1117-4259-9ba0-7c26871e664e"
        },
        "item": {
          "id": "73d6569c-5010-4282-b619-8f16f9be267c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7bc99588-056a-4852-aef6-c46769edef6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cabf17ac-3bc0-4e82-922f-5efdfb7e6849",
        "cursor": {
          "ref": "38b4990b-e769-449f-9360-ded3dbee3100",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7c1a5147-9800-4d62-81ae-95655114b5e9"
        },
        "item": {
          "id": "cabf17ac-3bc0-4e82-922f-5efdfb7e6849",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "182e4917-b804-4392-940e-f359e9197e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3053757-795e-4a7d-93a7-4204b053693a",
        "cursor": {
          "ref": "f715f973-40d8-4744-aafd-efef0b990c72",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "11d4d7ea-1d2a-40b2-88b8-81cff19a4965"
        },
        "item": {
          "id": "f3053757-795e-4a7d-93a7-4204b053693a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3a47febc-8c71-4939-a10c-4b289b5aa615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d578a208-0479-4c8c-b10d-dc15f6af2341",
        "cursor": {
          "ref": "a11c5d72-c8b7-49f2-87f8-0935714c0391",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "14d03abc-9cb8-4dee-8cbc-d2ddbca0d5ef"
        },
        "item": {
          "id": "d578a208-0479-4c8c-b10d-dc15f6af2341",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e6522ac3-0ce9-433a-8052-07c2a6c06073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61895e8e-73f3-431e-ae42-b23fb7fefe93",
        "cursor": {
          "ref": "0872b492-bbe1-462a-a563-9f394f5df4f3",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4799cddd-caf0-4085-8012-9af5c37758ad"
        },
        "item": {
          "id": "61895e8e-73f3-431e-ae42-b23fb7fefe93",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "786ffe05-0aa8-4af5-aa43-611d50110dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e3d68b3-a3a2-4839-8535-a174ba359ce1",
        "cursor": {
          "ref": "fd440f98-d0f0-480a-b76b-97c8d80cd6f7",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bfaf1ab8-fab1-4831-9e94-4a14a3ac352e"
        },
        "item": {
          "id": "5e3d68b3-a3a2-4839-8535-a174ba359ce1",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "5a3a1829-58ec-42b9-8999-ada8983eafc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7446ebe6-6d52-45ad-a002-ecdd6734c15c",
        "cursor": {
          "ref": "25661660-f2f8-438d-892b-5a19e110aedf",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "4118254b-3dc5-4e4f-be6a-98461d6f3cf6"
        },
        "item": {
          "id": "7446ebe6-6d52-45ad-a002-ecdd6734c15c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b2e3bf90-82d7-474d-8b64-1955b4066053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3569a5e5-d195-4b30-956f-e7c13d5f2665",
        "cursor": {
          "ref": "2709de85-fee5-4443-bbce-d3bf02d4e722",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "16ba9b8b-c043-42cc-b051-9001ee81d5e9"
        },
        "item": {
          "id": "3569a5e5-d195-4b30-956f-e7c13d5f2665",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7538831a-ce15-4128-a6f7-9c8a87c953b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cedf8b3e-1855-4689-8a73-47b150e2afbe",
        "cursor": {
          "ref": "52220ba7-1b05-4dee-8c62-2ab745638e23",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "0a5d3f4d-9df5-4300-8236-3fe9cf8dc62d"
        },
        "item": {
          "id": "cedf8b3e-1855-4689-8a73-47b150e2afbe",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ee2d7707-6d74-405d-ae1e-00e282c46a40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d840d061-624e-4dff-9617-c3f2c1865f84",
        "cursor": {
          "ref": "936781eb-ded7-41b4-9550-9651bbc928c3",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "aa3ebc86-c227-4dd7-b992-da31ef15e46b"
        },
        "item": {
          "id": "d840d061-624e-4dff-9617-c3f2c1865f84",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "758d360d-7688-45bc-b599-3fd76cb8d507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da01b6c1-7ae5-4992-a454-56ff73ba9202",
        "cursor": {
          "ref": "e0394517-763a-441b-b732-e491e1ec29e8",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "718c96ff-4b0b-4156-b08e-7f22218778a4"
        },
        "item": {
          "id": "da01b6c1-7ae5-4992-a454-56ff73ba9202",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "daca2959-7afc-4026-b095-ae5ae880e58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666b90e5-9ccd-4e9e-82fc-7ba7a65f72e3",
        "cursor": {
          "ref": "6e9de45a-a336-4a59-bbaf-acf9d0ea5278",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ecf421f7-0da0-4f49-bbdc-590a3e02b1d6"
        },
        "item": {
          "id": "666b90e5-9ccd-4e9e-82fc-7ba7a65f72e3",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "81e37e5c-0e13-4001-af3b-3bd6a7956b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff482f8a-c213-4821-bc3b-fe1fd039c59e",
        "cursor": {
          "ref": "9352bcd5-2a99-4e6f-80bb-380fc4cf142d",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c88e582a-afea-467c-95e4-991ce99608a1"
        },
        "item": {
          "id": "ff482f8a-c213-4821-bc3b-fe1fd039c59e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ffea47c3-3f79-4aab-999a-763ec9d86058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c3281a3-4dca-4a04-935d-e86c33910ed9",
        "cursor": {
          "ref": "7881360b-62bf-49c8-aa77-5555f60bbf58",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bb1dedcf-5103-4aaf-b1ed-a5de8ee0e6a7"
        },
        "item": {
          "id": "5c3281a3-4dca-4a04-935d-e86c33910ed9",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e509cf32-2a47-454e-a87c-4ab1f0b17bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44c5d17-b816-40c1-9992-45baad98af04",
        "cursor": {
          "ref": "1d306c46-ee7b-44f7-b31c-c0caa21939ab",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "60854b7d-55e7-4b05-9f08-04b7caadb248"
        },
        "item": {
          "id": "e44c5d17-b816-40c1-9992-45baad98af04",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0dc4ddd6-9201-4ce3-85e7-e262c81e34cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a1ea0d-3d76-4347-a6ba-9bc164af18cf",
        "cursor": {
          "ref": "1b53a8a9-9d31-4191-a53e-407468127d14",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "5f30bb95-c2d1-47ec-81fa-8b5be1f0381e"
        },
        "item": {
          "id": "85a1ea0d-3d76-4347-a6ba-9bc164af18cf",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "4503516c-0d19-48d9-8726-b24095202040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf44c97-92ce-4558-a5e7-41fe59ef77cf",
        "cursor": {
          "ref": "cff15f65-632d-45fc-9163-ad4663506f56",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "9f193f13-29a6-4470-b7d3-94f1948c5a74"
        },
        "item": {
          "id": "bbf44c97-92ce-4558-a5e7-41fe59ef77cf",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ef5d3772-cb4c-493c-b512-adda3a8b9093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51aee3de-3939-4d31-befe-8e90bcff2e45",
        "cursor": {
          "ref": "2abfa9cf-ca6c-4474-b7d7-7e1fd062de03",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5ff5fde0-d981-4d6d-87e6-78b7a6ffe55b"
        },
        "item": {
          "id": "51aee3de-3939-4d31-befe-8e90bcff2e45",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "e6396c61-b16b-4c6e-a7ad-a585b16fe16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84be58a7-bc40-4466-baf7-7aa02c12dd37",
        "cursor": {
          "ref": "bfd9f67b-118a-4eee-b08b-d02f6b1db2f5",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "d1f5b949-0eac-4143-8184-29cd65ab5ca8"
        },
        "item": {
          "id": "84be58a7-bc40-4466-baf7-7aa02c12dd37",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d4a6e14b-ce3a-4f95-9123-4b9b230a5572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80c9b42-e6cb-412d-bcdd-3f75bf03e573",
        "cursor": {
          "ref": "9c23da98-b9cf-42ac-9dd5-71bc648c50f2",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "a5bca890-fc82-4986-bdd3-4a364d669b7f"
        },
        "item": {
          "id": "a80c9b42-e6cb-412d-bcdd-3f75bf03e573",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "62eb5ca2-e535-41a6-8bc9-b030d572c51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06d70b04-416f-4e74-89b7-f5f19aef1aa5",
        "cursor": {
          "ref": "88c5f4b1-951d-431b-8a38-bc3931bbcb7a",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c7280813-7f90-4d66-a32e-32770a4c800b"
        },
        "item": {
          "id": "06d70b04-416f-4e74-89b7-f5f19aef1aa5",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "23f1c7fa-2f26-47df-a4b7-26dc6f90e647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3656c61-4b1e-47f8-9bb8-7481682543e6",
        "cursor": {
          "ref": "4c6f5d99-07e6-4ec4-ad7c-cb5d66d0229c",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f6b8d568-7af7-474c-814e-0477ecce408c"
        },
        "item": {
          "id": "f3656c61-4b1e-47f8-9bb8-7481682543e6",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "5ccc7edc-a54c-4ee0-9433-f3063cf75982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57fb2bb-4667-47e5-845b-c5f5dec6e676",
        "cursor": {
          "ref": "228eb7db-cafa-4dbd-9ed4-cdbe4ed78142",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e5d66c95-3a00-4721-886a-c33b9c4d0286"
        },
        "item": {
          "id": "e57fb2bb-4667-47e5-845b-c5f5dec6e676",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "bb2ef73b-1a03-4189-aa8a-33661810ce8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb5019d3-f087-4654-9a0a-57f4da3ef298",
        "cursor": {
          "ref": "749f77ef-55f1-4c51-b4c0-0d8e3c57ab33",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "d0436a3e-95dd-4202-9a95-69c5952b0bce"
        },
        "item": {
          "id": "eb5019d3-f087-4654-9a0a-57f4da3ef298",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4f79fae0-e93d-4a74-a243-ae55b0588088",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3630d53b-c2df-41be-abe2-ca84634b29ae",
        "cursor": {
          "ref": "a72641f3-dadc-42dc-8b61-c4eab8bae6a4",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "25d3ed3d-eec8-45fc-9009-4c522d5a6070"
        },
        "item": {
          "id": "3630d53b-c2df-41be-abe2-ca84634b29ae",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8ddc80ac-6baf-4854-bf6d-8a0e1747ece6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5f59f5ba-e35b-4979-89d4-0e32bf42b841",
        "cursor": {
          "ref": "54a9794d-5762-4587-97f1-25d18025b4a8",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "64514a52-d947-4df6-941c-c1028db944b1"
        },
        "item": {
          "id": "5f59f5ba-e35b-4979-89d4-0e32bf42b841",
          "name": "credentials_issue"
        },
        "response": {
          "id": "810f83ab-5a5f-4e23-9926-60ad6f8d0231",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "b6deeb0a-0e5e-46ce-9e00-a1f8d71d9ee4",
        "cursor": {
          "ref": "fd26da5b-99c5-42c9-824a-b5ef5b61ef7b",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "50c1f876-2a71-4df7-94f0-43ccf22c130d"
        },
        "item": {
          "id": "b6deeb0a-0e5e-46ce-9e00-a1f8d71d9ee4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "3832ea18-4da2-42cd-b064-c0c2914d8377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7bd79a87-6e9d-4eca-baa5-2bc08e2245c0",
        "cursor": {
          "ref": "eadea879-dacb-4512-980c-b44c1e44a5c0",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "545bfeef-acd5-43c7-a8c7-a429a474f369"
        },
        "item": {
          "id": "7bd79a87-6e9d-4eca-baa5-2bc08e2245c0",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1235e2ed-66e8-4870-b3c2-bd452228d6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "f28deb21-37f3-4d84-8e92-dfc42df1c728",
        "cursor": {
          "ref": "a81f6434-feab-4d72-a0a4-db431a91e12e",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7445eae6-13a0-41e2-8dd1-daf52775863f"
        },
        "item": {
          "id": "f28deb21-37f3-4d84-8e92-dfc42df1c728",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8c12c7a7-33d8-44e7-9b0e-3cb753968b5c",
          "status": "Created",
          "code": 201,
          "responseTime": 9790,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "972ed6e5-0961-443c-a5b4-3c001517b624",
        "cursor": {
          "ref": "005385e4-fd2b-4c8f-b658-1397c6176a0c",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "04a81845-2e14-431a-a134-b6cb18cfd5c4"
        },
        "item": {
          "id": "972ed6e5-0961-443c-a5b4-3c001517b624",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "12c3ea5c-5674-43bf-b599-a8508d5c0d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "646e29cf-c344-4305-a19f-a87c6049f116",
        "cursor": {
          "ref": "78c42216-40d9-45a1-91f2-bb977d704f04",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ed370e71-aec9-4199-87cb-966b5004ef75"
        },
        "item": {
          "id": "646e29cf-c344-4305-a19f-a87c6049f116",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "dcca63b3-d018-4a5a-9c5a-d21f342a6666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "0aa1e9d4-5ce2-4c51-b4fd-b42185341808",
        "cursor": {
          "ref": "60891bcd-e19a-4811-8fa6-7987d5646f23",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "61bf2b2a-0cde-4cee-b57f-07ee73a508b5"
        },
        "item": {
          "id": "0aa1e9d4-5ce2-4c51-b4fd-b42185341808",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "56dd7395-dd90-4440-9011-820e7ffde9a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6369d82d-2bf3-4484-978f-898352eccd2f",
        "cursor": {
          "ref": "7b013e6b-e1a8-4133-a166-2aac9acb8962",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "90dc68fe-88c9-4317-878e-bab03ba5faa7"
        },
        "item": {
          "id": "6369d82d-2bf3-4484-978f-898352eccd2f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "297dd9d6-79fa-4edc-8300-0a3e7227aef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec22b5bc-16ac-4e4e-9c89-21fd1a5af04d",
        "cursor": {
          "ref": "a566abd1-754b-4cdc-a412-26fe4a89a09a",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5ffb2e7a-4b59-4134-9854-b30e169e4cb9"
        },
        "item": {
          "id": "ec22b5bc-16ac-4e4e-9c89-21fd1a5af04d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a71aadfd-8799-4ce4-9112-12c43a5419f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96890b61-59b8-449a-b05a-5c649786afe6",
        "cursor": {
          "ref": "bf096af9-6ed8-4942-8236-5181cee73240",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "867288f8-59f8-4caf-b77b-12b347280461"
        },
        "item": {
          "id": "96890b61-59b8-449a-b05a-5c649786afe6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d638ce8b-f4ae-4e9e-a9c0-073b99e52ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c32672-a890-4e09-aaf2-9edb95cbf4b0",
        "cursor": {
          "ref": "13b6d22c-52f0-4d84-8eff-c0cadac17381",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0a7bd0aa-4f19-47aa-b164-8787a3ecd827"
        },
        "item": {
          "id": "d7c32672-a890-4e09-aaf2-9edb95cbf4b0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "940f51c1-6e71-4c1c-a565-612ca175ee09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1596720d-014a-47d8-9e16-1c95ca00e078",
        "cursor": {
          "ref": "b52796f8-be17-4afc-b143-67e4342bb5e5",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1ddf4bed-6382-4603-8f21-1990444331d8"
        },
        "item": {
          "id": "1596720d-014a-47d8-9e16-1c95ca00e078",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0fd68ce2-b57f-4130-88cf-2c1f17dd41a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c349c39-743b-4c86-b2ad-deb7469caa9b",
        "cursor": {
          "ref": "38f17828-0bb8-4fc2-827c-880db17799b3",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1833f14e-5f31-409b-a217-50efdf01c857"
        },
        "item": {
          "id": "4c349c39-743b-4c86-b2ad-deb7469caa9b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0403e5f8-0854-45b3-bec3-a60b16af02d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5ccc3d-5444-41bb-86a3-f98143db9273",
        "cursor": {
          "ref": "6f576207-c61f-4747-a2a3-222da6b53ab3",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "1b531737-3b26-4ef2-9ae6-e649e2b07847"
        },
        "item": {
          "id": "ea5ccc3d-5444-41bb-86a3-f98143db9273",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "acdd7b42-36f1-4cb8-88ea-de356b44394a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83c02d9-94d3-44b9-af71-fab37a4eed71",
        "cursor": {
          "ref": "fb7c9146-30a8-4971-af2b-9aa98e4b4252",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "af542d56-4800-4ea0-ae1a-60fddbd9be48"
        },
        "item": {
          "id": "c83c02d9-94d3-44b9-af71-fab37a4eed71",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "525f2d5d-73d7-4161-8d0f-f44c6210aa74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11d8530-8d12-4ec6-b02f-34de11936946",
        "cursor": {
          "ref": "cd27a301-2c4c-4ce9-b12a-8d583ac0bdd2",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1aa20e4b-33a8-4610-aed0-71db023a5dc1"
        },
        "item": {
          "id": "d11d8530-8d12-4ec6-b02f-34de11936946",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "44ca8576-1f6c-4d7f-b574-88a13079dfdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad6ab577-ebdd-4d11-bd7b-fa3f881b3012",
        "cursor": {
          "ref": "f267d2bf-6595-4ca2-974d-f36c4e90c6b2",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "e4f15458-5595-488e-93b2-3968da092563"
        },
        "item": {
          "id": "ad6ab577-ebdd-4d11-bd7b-fa3f881b3012",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b0df47f3-b5e4-4305-8391-69844a304a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47db270f-5a00-44a8-bea2-bc87382709ec",
        "cursor": {
          "ref": "63adcc06-1ad5-47d3-bbf7-f6cb685fcf51",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "cdac2015-45e9-4a52-9299-aa44d5890ff2"
        },
        "item": {
          "id": "47db270f-5a00-44a8-bea2-bc87382709ec",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "618d7354-48bd-4f4a-82aa-016a78cd6483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "510a9307-f568-46f1-aa82-52303f7e7947",
        "cursor": {
          "ref": "48dae365-c206-4bc3-85ad-1d576bb7bbf6",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "53267af2-79bb-412f-80a2-6e71bb443ade"
        },
        "item": {
          "id": "510a9307-f568-46f1-aa82-52303f7e7947",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e6afc728-242b-4e69-a0a5-3ba197add52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b91283-2e21-4f25-ab0e-193efed48a6d",
        "cursor": {
          "ref": "768585f6-7fc7-41d2-bdb9-9d021c0528a7",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "561d8219-21ad-4fad-87d9-df429da3b8b7"
        },
        "item": {
          "id": "42b91283-2e21-4f25-ab0e-193efed48a6d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7b2208f5-f9ac-42c4-9719-c261cc24d605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "493782f0-b4cf-47ef-8864-060014a24b2e",
        "cursor": {
          "ref": "52990eb3-4d25-4ddc-bd42-36677436d4f9",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a35c6e5b-ef5a-4b69-9eae-89679d2c5588"
        },
        "item": {
          "id": "493782f0-b4cf-47ef-8864-060014a24b2e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a60c0e28-144d-4cf8-bd96-e07f638a83c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948fb8fb-b607-4c30-8091-c79b21c5fd87",
        "cursor": {
          "ref": "9f989816-4150-4f7b-a0cc-6c8fa1857b9c",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "c1952ed3-b217-4a47-af88-88ca5f9c48dc"
        },
        "item": {
          "id": "948fb8fb-b607-4c30-8091-c79b21c5fd87",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "661bc87a-925a-4529-8e80-d21f6688ec35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16da312b-1257-4377-bc7c-5438a668864f",
        "cursor": {
          "ref": "8c6ce06e-44fd-4ab8-a4e9-fc1b7e2a8cd9",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "06d84571-e9f8-4add-a86e-42202369d4cd"
        },
        "item": {
          "id": "16da312b-1257-4377-bc7c-5438a668864f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6643e2f1-e41b-4e67-b5c8-6d5eab314c63",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 49,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "330583e7-5081-4da3-a795-df3ab10c9648",
        "cursor": {
          "ref": "0ab0e9ef-1786-41f7-8578-ee6b0b71ec0f",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "77b5ecb6-4e8c-4dcf-aeac-674b8faea3f7"
        },
        "item": {
          "id": "330583e7-5081-4da3-a795-df3ab10c9648",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7edae0ee-2198-4b40-b975-afd8a17de8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59e81f5-fdf8-4281-976c-d14ae9290f0f",
        "cursor": {
          "ref": "f7f15a4b-f20b-4b94-a9cc-84dc08184cf2",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "f9ceca34-0e21-4aed-b561-717eb431b3ae"
        },
        "item": {
          "id": "e59e81f5-fdf8-4281-976c-d14ae9290f0f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "86a6b4b6-0693-44e8-81d2-4ca001e222ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcf1ef7-4590-4bed-818f-c8e3950218aa",
        "cursor": {
          "ref": "3c732b19-8665-4147-9a96-ecf079a5e3a1",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ebee37dc-b66d-4151-8312-a4cf48aea665"
        },
        "item": {
          "id": "8fcf1ef7-4590-4bed-818f-c8e3950218aa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ab5872d9-22f2-4b36-8488-2f3760ed728f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98faa6b0-a809-4698-b37f-765cf3e44b65",
        "cursor": {
          "ref": "6639f998-2e49-4d70-afb1-2296f6dda371",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "760ced07-65c1-4928-a924-714a2133d8bd"
        },
        "item": {
          "id": "98faa6b0-a809-4698-b37f-765cf3e44b65",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "183a0267-b6eb-4a7d-a920-b3c5ad3c534a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ee83cf-e218-40b3-9c95-42ab4940662c",
        "cursor": {
          "ref": "9cfcb8b2-f97d-44f2-92dd-673f214a31ce",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "550d3d56-279b-4fad-a37e-5700dfa842e4"
        },
        "item": {
          "id": "d3ee83cf-e218-40b3-9c95-42ab4940662c",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "6ecaa1bb-53d8-4ea4-9457-60d03a3ea7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eee50fcd-8a8a-40c4-82f8-ca42353f075f",
        "cursor": {
          "ref": "c5399067-49a8-4482-ba29-2997587d8cc0",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "a8117aef-dc32-49b4-bfef-e7bff2d9f39b"
        },
        "item": {
          "id": "eee50fcd-8a8a-40c4-82f8-ca42353f075f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0e9ffa51-a1c1-4f4d-84f7-5c78328c6135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a6a9e26-e37b-409b-8a6c-4255f4d6efbe",
        "cursor": {
          "ref": "a7e4716a-ce20-4ec0-ae9c-41ef859ce476",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "f37b3c6f-2713-4086-bd44-c63a401b4f7f"
        },
        "item": {
          "id": "7a6a9e26-e37b-409b-8a6c-4255f4d6efbe",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "37a30e6b-5080-4a4b-a0c5-8488a22f08f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67a774d4-ab57-4909-80af-f93189b6cf9a",
        "cursor": {
          "ref": "9d4ba769-2ac3-4598-8097-b329a785d4a7",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c6135b69-45db-4c72-96ec-faf784677761"
        },
        "item": {
          "id": "67a774d4-ab57-4909-80af-f93189b6cf9a",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "788ddf76-5a26-4b12-b23e-fbf00e4eaf72",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "65017466-4934-4e8a-9248-27b21e91a678",
        "cursor": {
          "ref": "5b1a92b5-099d-4949-82aa-989ad28f970b",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "09bbda86-961d-4f22-b079-1df733341a7b"
        },
        "item": {
          "id": "65017466-4934-4e8a-9248-27b21e91a678",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ffbe5eba-8522-4038-ae28-42eb92f6f343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00bd543d-dee8-4f9f-b71e-39a707d19687",
        "cursor": {
          "ref": "e9338f18-596e-424e-96a4-22896ce93955",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "1b9cee9d-1467-467b-b43a-518821fad767"
        },
        "item": {
          "id": "00bd543d-dee8-4f9f-b71e-39a707d19687",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dafb9c72-1c82-4fe8-b972-075fe96e45f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "384fe5b6-f446-4fc9-b1fd-b87f545496e0",
        "cursor": {
          "ref": "0f65bc05-252c-4035-beb5-e060204da0e9",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d5bab046-357a-4777-8af6-418f47c9acd6"
        },
        "item": {
          "id": "384fe5b6-f446-4fc9-b1fd-b87f545496e0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bfb18063-8c85-4d29-beaa-187b60b271d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3654ff5-1f70-4fd5-b14a-aeb3a92149c1",
        "cursor": {
          "ref": "7db36602-978a-41eb-b012-538baabda80c",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "e91e9deb-47ce-46b3-ada4-458085c242a3"
        },
        "item": {
          "id": "d3654ff5-1f70-4fd5-b14a-aeb3a92149c1",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "44e0c857-c269-47a8-b584-cac891ba6497",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15e5114-d211-468e-8a89-8c08a7116774",
        "cursor": {
          "ref": "77efbde6-ad64-482c-aba3-a510afd5e2ca",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "75c9a833-4732-408d-939b-60f3a00e35b8"
        },
        "item": {
          "id": "b15e5114-d211-468e-8a89-8c08a7116774",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4975f5c7-2b67-492a-b9a3-eeec171a44dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0194d5b-ac6e-4d08-a20a-3d6bacee34d7",
        "cursor": {
          "ref": "79833dd0-30bc-40a1-98e4-06a9c5fae1c7",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5ce5795e-821d-4491-8012-15b8b088bb72"
        },
        "item": {
          "id": "e0194d5b-ac6e-4d08-a20a-3d6bacee34d7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4655d5cf-65e0-4c67-abd7-f423be610933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34267936-6b1c-4fbb-ad9a-e7641f279626",
        "cursor": {
          "ref": "8366bc43-e30b-4599-ac39-f9b0aab78c3e",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "71fec54c-4973-4017-ba81-0bd6b0efcd9f"
        },
        "item": {
          "id": "34267936-6b1c-4fbb-ad9a-e7641f279626",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3c93a3ac-d490-4ada-98b3-7e9845dba995",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 33,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "79fdbb03-7e58-4834-80a9-a8a9dc6f11f2",
        "cursor": {
          "ref": "130b17d6-797c-4e94-9f08-bcbd9a138f2a",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a5db48a7-b59d-477a-867e-13d29ccc9aa8"
        },
        "item": {
          "id": "79fdbb03-7e58-4834-80a9-a8a9dc6f11f2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9aa67a63-953d-4da3-b4c6-00eb299c5b6d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "0368e935-3c35-4fa4-967b-9dc0bd48089d",
        "cursor": {
          "ref": "33dae313-ca9e-431c-9e9a-f13bbb65177c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a52e2564-e962-472a-998f-2834f898e4a3"
        },
        "item": {
          "id": "0368e935-3c35-4fa4-967b-9dc0bd48089d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "834cc35d-bf3d-4f32-b895-b9d279fa5b2f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 35,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "c90136ad-e305-4857-b99b-abb72638846d",
        "cursor": {
          "ref": "3641dea2-6a73-455f-8191-f2f77b19faf9",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "598e83a4-8431-4ac6-9541-7edad6be9749"
        },
        "item": {
          "id": "c90136ad-e305-4857-b99b-abb72638846d",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "50fceaee-59d9-4ab7-961b-4369b009f93d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 50,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "d661b19c-3588-46c3-b5fa-49d7c6e9f415",
        "cursor": {
          "ref": "926d1884-911f-4d30-be03-80765cc447ec",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "dd6b07f9-d4dc-4933-b269-ee4d9be8674d"
        },
        "item": {
          "id": "d661b19c-3588-46c3-b5fa-49d7c6e9f415",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "f20922a2-47f2-404b-88e0-253ed516c5fb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "80f30664-a867-4aad-ade8-04db72a109ff",
        "cursor": {
          "ref": "b205d3b6-9cb8-4362-83b6-c4a18663901c",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "cadd8502-fc83-4458-9e6c-c02993088433"
        },
        "item": {
          "id": "80f30664-a867-4aad-ade8-04db72a109ff",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "02cfbec7-a741-4cd3-8cdc-5f4bf32e9d82",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 36,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "746099bd-bf89-4957-8834-f7b92187834b",
        "cursor": {
          "ref": "5ccb0a88-46cd-4bbc-b558-69f1f2bc3d3a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "35ce6053-b929-43e7-be00-7b6ac15ccdd3"
        },
        "item": {
          "id": "746099bd-bf89-4957-8834-f7b92187834b",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "fd80887a-7aed-43f6-a3ea-7536f3fe180a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7daa168a-bf16-49bd-93b5-65a74d56c973",
        "cursor": {
          "ref": "db2b2150-2f2b-4a3d-ac47-7db7c0cd8d00",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2674118a-2a71-4037-b72e-2a6794b65a1c"
        },
        "item": {
          "id": "7daa168a-bf16-49bd-93b5-65a74d56c973",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "1909a1a8-7ccc-4d11-8091-c6afffa0a65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b565d8-0096-4c89-8f27-78f98834b9c1",
        "cursor": {
          "ref": "3731d913-1bc3-4aee-935e-7f641623a89f",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a0d9aa20-787c-43e7-a4dc-43eb6b0e5082"
        },
        "item": {
          "id": "d4b565d8-0096-4c89-8f27-78f98834b9c1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "508065e2-be28-456b-b5c9-b04e4fabc20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "735eb99a-889c-4a01-92ff-a08249d10131",
        "cursor": {
          "ref": "23585681-282c-4d05-8d5b-d15a53c3f0a2",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "3bec71f6-4109-4127-84a2-d1866326d6c9"
        },
        "item": {
          "id": "735eb99a-889c-4a01-92ff-a08249d10131",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9cf1f7a0-45c3-4708-8fc8-dfc8b099e403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "785bd0c4-685c-471d-a1cf-8c05f37c4743",
        "cursor": {
          "ref": "6da3b78b-8b36-4188-81ce-778d006d006f",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "6cf5493f-7e4f-4095-aee4-3c09e9b0c52f"
        },
        "item": {
          "id": "785bd0c4-685c-471d-a1cf-8c05f37c4743",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e458268b-565b-454e-80a9-a73534e7cb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8450375d-51e8-4397-8524-17de59b4550b",
        "cursor": {
          "ref": "320d997b-eb68-46c0-9edb-4d86582104f8",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6b2fc706-a41a-4bed-889c-661b8d4e5230"
        },
        "item": {
          "id": "8450375d-51e8-4397-8524-17de59b4550b",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "005d7236-b9b6-48b3-b017-c5f054733021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d42fa4-9fa9-4f2d-bc24-aecfa3899eaf",
        "cursor": {
          "ref": "7b30ca20-2c2d-43ac-93ca-bd2f4c74d946",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4a93fd3f-dd1c-407d-beb0-514f0f06e556"
        },
        "item": {
          "id": "c1d42fa4-9fa9-4f2d-bc24-aecfa3899eaf",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "7711b4d6-90b6-4cf9-a23d-ebb69b0400bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9caaf11d-6d15-4a0e-9866-42625ebbe481",
        "cursor": {
          "ref": "47bc561f-bacf-48d2-974b-995f2666ec45",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b642b9fd-21a6-449f-9ca2-a82273b8ac67"
        },
        "item": {
          "id": "9caaf11d-6d15-4a0e-9866-42625ebbe481",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "0c49427b-0cd6-4895-bc9e-b1241e18a75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "379332e0-0bff-4744-8ff6-41a5b7641c36",
        "cursor": {
          "ref": "0e2e17c4-bba1-44e3-a217-2b3b130c97a1",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "60574fe1-45fa-4cf7-9e06-be65a6753b08"
        },
        "item": {
          "id": "379332e0-0bff-4744-8ff6-41a5b7641c36",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2b650ffe-7261-4874-a748-2ad61ef1f0d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e310b6-040f-4d80-a976-71ce28532fb1",
        "cursor": {
          "ref": "83696e56-60d6-4b7b-89b0-8e927d11e16c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f0c58394-b488-444b-a673-aef838ec8e4a"
        },
        "item": {
          "id": "31e310b6-040f-4d80-a976-71ce28532fb1",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "98e19790-2f21-43c1-82ed-ad09548b7daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc75549-7fdd-4ca9-98bb-eb602f360cf9",
        "cursor": {
          "ref": "08a70a26-6ba8-4758-8b17-bfba7b8aa811",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "6ca580c0-4e3f-4503-b5c7-e0627ad42ba1"
        },
        "item": {
          "id": "8cc75549-7fdd-4ca9-98bb-eb602f360cf9",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8252c5da-28d9-4bd3-9add-4fa064738c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3dcdf1e-9aeb-4279-a6f5-0e89c2b4e83d",
        "cursor": {
          "ref": "1c717b26-5cfd-4efb-9dba-813bb82bff82",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1be4cdb4-8779-413a-925c-4cd304964121"
        },
        "item": {
          "id": "e3dcdf1e-9aeb-4279-a6f5-0e89c2b4e83d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3651b9da-6dcc-480e-b174-be2279f3dd91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d320cfe-dd1d-4cea-bfb4-6c71d1103630",
        "cursor": {
          "ref": "2f0404bc-5498-4c04-8f96-420c73980808",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4174c350-e2e0-4379-89e9-2400882f79cb"
        },
        "item": {
          "id": "4d320cfe-dd1d-4cea-bfb4-6c71d1103630",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "aa4d386d-d3a5-4259-9523-03000d82b5af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dabbad5b-1344-40a3-8351-b3534b18eb65",
        "cursor": {
          "ref": "d141d49a-0b98-4697-a7a9-9f4e6dee5c34",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e56cab7c-248e-43d1-87a7-c6b9c6c61ca9"
        },
        "item": {
          "id": "dabbad5b-1344-40a3-8351-b3534b18eb65",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "ea90dbf3-bb40-4a47-996b-daa6d5ad52c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70c05696-bf77-463d-ae44-af7c3f5002f6",
        "cursor": {
          "ref": "fc267faa-9590-4c54-b23e-67e2e409fee8",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3ea26ccc-8a2f-46b9-b2f3-7dc2baddfb4b"
        },
        "item": {
          "id": "70c05696-bf77-463d-ae44-af7c3f5002f6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "41bccc31-8846-48ae-9149-65110b30df01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a335e8-103d-470c-822a-666939e0cb93",
        "cursor": {
          "ref": "5767f8d1-939f-40cc-9d05-241ea8eac40f",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "36278a94-f4c0-48a3-ab76-0241c6af5850"
        },
        "item": {
          "id": "69a335e8-103d-470c-822a-666939e0cb93",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "64c49b52-ae7a-4490-af41-d510667792f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e03113c5-f3a8-4341-8f6d-da822234e9b2",
        "cursor": {
          "ref": "3985d642-ce98-488c-8704-17c4dfce8d90",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e7c0aa51-d148-43bb-99b2-99e14255c96c"
        },
        "item": {
          "id": "e03113c5-f3a8-4341-8f6d-da822234e9b2",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "50ea70d1-db44-4ded-9fab-5079b33b74c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02ea602-7ab9-4458-aeef-48cb86a1e148",
        "cursor": {
          "ref": "18a40803-9cbd-4a52-9e61-61595d39be11",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c7c4c970-e32d-4411-97b7-e9cd5b94adad"
        },
        "item": {
          "id": "f02ea602-7ab9-4458-aeef-48cb86a1e148",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "50302c42-f2c3-418c-a2c6-902d21f6161b",
          "status": "OK",
          "code": 200,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "3be79146-6bf4-47ef-a660-b1271c3f0623",
        "cursor": {
          "ref": "e119dd72-f72b-492b-aff0-e3880ed7932a",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "02aab425-1175-49b5-9c53-0c88e5dfcbf5"
        },
        "item": {
          "id": "3be79146-6bf4-47ef-a660-b1271c3f0623",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "bd96721b-00b2-49e7-ba2a-8d015db609fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e622cf-3c15-4c9b-a313-a5cc305b8244",
        "cursor": {
          "ref": "f1a53416-64fe-4ccb-abbf-bd3dffd7ab5f",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "80f10a37-6bbf-468d-93ee-f774a27fa459"
        },
        "item": {
          "id": "47e622cf-3c15-4c9b-a313-a5cc305b8244",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3e2e686f-135d-4c80-aba0-773e19701d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86fd73a-4a1e-4e2f-89cc-e46c90de355a",
        "cursor": {
          "ref": "7277ea1e-dc1f-45da-a082-3efc24fe03b7",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "1eefd1fd-c2d0-4b2f-910a-d2d6869ae8a8"
        },
        "item": {
          "id": "f86fd73a-4a1e-4e2f-89cc-e46c90de355a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4b4a8634-4ba8-4a94-a13f-a5253febe2e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "246615e0-1838-4a55-9151-4206dd8cfe72",
        "cursor": {
          "ref": "fa17ae4f-d9a6-4bc5-a0ef-c79f802366ce",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "925f9d39-12a3-44e3-bcd3-7ac3512cff9d"
        },
        "item": {
          "id": "246615e0-1838-4a55-9151-4206dd8cfe72",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "121d8212-2d0b-447b-a50c-ba53c6b9cbe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2582d51f-8477-453d-8d06-360aed4aab17",
        "cursor": {
          "ref": "df1a6bc6-0353-4431-884b-941587dd9feb",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d41b908b-ada0-4da8-9ba4-d7d4658bbf8a"
        },
        "item": {
          "id": "2582d51f-8477-453d-8d06-360aed4aab17",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f7ff4e43-46ae-4819-8448-bcf126928c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baaf8a82-bdc6-4e35-a25c-e324567bb86f",
        "cursor": {
          "ref": "5fd9e850-4125-4625-b64e-334feaa408f1",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "9b1940df-e17f-48e3-a27a-55ec7e106de6"
        },
        "item": {
          "id": "baaf8a82-bdc6-4e35-a25c-e324567bb86f",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "306cc294-897e-4268-8a83-99ed93c40446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc3bcec-6944-424b-a6fd-9d8cb0539afa",
        "cursor": {
          "ref": "2bc3ec87-a7b2-41fc-ac8e-713fcc710ddf",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "20b94b48-f448-47a7-a7f0-3453ab488963"
        },
        "item": {
          "id": "0fc3bcec-6944-424b-a6fd-9d8cb0539afa",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "922be0f5-a5e0-44bb-82aa-eb4e54ebd6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74309e6d-d730-4e6c-9b12-dfa1675e50d4",
        "cursor": {
          "ref": "fc7af8e9-a158-43d9-a528-c6993db3ee1b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9cf2db55-0448-4724-85ce-2cdb94b39583"
        },
        "item": {
          "id": "74309e6d-d730-4e6c-9b12-dfa1675e50d4",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6228b95a-82a1-4439-a3b9-58df6c2552f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b578bceb-f778-4ea0-9981-54bcbca18dd7",
        "cursor": {
          "ref": "12d7f4e0-b1bf-44c0-9744-67387ed9ad49",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4a803271-62c6-4a58-9755-5380c181c6bf"
        },
        "item": {
          "id": "b578bceb-f778-4ea0-9981-54bcbca18dd7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "52be4f47-8942-4420-8803-dc9c129597f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53be3fb3-95ed-41f4-8e12-c4811887e121",
        "cursor": {
          "ref": "a22f0a69-e9ff-48cc-b4ea-0f83941feebb",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "40ee953f-8194-4d08-8441-70c1b4539d32"
        },
        "item": {
          "id": "53be3fb3-95ed-41f4-8e12-c4811887e121",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "fe9ad517-9515-4159-8f3f-89638c924665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bcb20e-c822-4570-85fa-676a2bb192c8",
        "cursor": {
          "ref": "812871ae-04ca-48ae-9f0b-a44148dc8ae5",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "64796e90-513a-425a-bfca-7f6a6abb6ad9"
        },
        "item": {
          "id": "d7bcb20e-c822-4570-85fa-676a2bb192c8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2c0ebaee-3055-4376-a16b-d36720c623ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50aaa730-a250-4122-9738-d0619655559d",
        "cursor": {
          "ref": "e59800dd-81a8-4d92-aec3-78ebfccc6db9",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "55678828-4166-4aed-a38a-7863dcd07dd7"
        },
        "item": {
          "id": "50aaa730-a250-4122-9738-d0619655559d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0dd79db9-51ec-4695-865a-c832534320fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f27260e-772d-41e3-8ed9-f34d6a9492a2",
        "cursor": {
          "ref": "1a137434-a574-448d-985d-5c66cffcd757",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f4578520-5d17-45aa-9096-ccc00e029963"
        },
        "item": {
          "id": "3f27260e-772d-41e3-8ed9-f34d6a9492a2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3298d503-ed4b-40ff-a534-e1c097c0e984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b08d4e7-c7d6-4744-8967-e2689473a534",
        "cursor": {
          "ref": "0b1af03c-e694-44bd-ba52-d94dd68db847",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "51b746fc-fc49-47c7-98e3-a62641a36f9b"
        },
        "item": {
          "id": "6b08d4e7-c7d6-4744-8967-e2689473a534",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5ea20f96-a394-4326-a190-2ce838d22f75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d75bfc-c06c-4140-a681-d846a7fe0b2b",
        "cursor": {
          "ref": "738da685-972b-4eb4-abf3-e69d131c5972",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a1ea1546-8605-4004-b6ad-dc912c969ee8"
        },
        "item": {
          "id": "c4d75bfc-c06c-4140-a681-d846a7fe0b2b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1ecd5a74-b384-487b-972a-b43b928dca29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc051c9-1efb-465c-83fa-91e8c5379910",
        "cursor": {
          "ref": "9b0a31fb-5c40-4892-b9e7-6de469f53679",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7d3e8b67-ac86-4136-a462-a2132cdc54ff"
        },
        "item": {
          "id": "0bc051c9-1efb-465c-83fa-91e8c5379910",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "c7c0a03f-d650-4efc-b9fa-619ff8b31676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ac2bdf-3eea-4a35-b99a-d05be195cd89",
        "cursor": {
          "ref": "30319337-959f-4e3e-8fc6-7dae10b391f8",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "f8d4b98d-cf34-4ae1-8d30-1b88f77d9d21"
        },
        "item": {
          "id": "85ac2bdf-3eea-4a35-b99a-d05be195cd89",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f39bc774-9208-46dc-a58b-724ac6ed0aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1373ac31-9fce-49e0-85d2-a982389d0664",
        "cursor": {
          "ref": "2e0b94ae-c896-4fbb-96be-cdfebd24d879",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "b9411c5d-8202-4e87-ad10-17ff7541bc49"
        },
        "item": {
          "id": "1373ac31-9fce-49e0-85d2-a982389d0664",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "55823c85-f287-4136-909f-0973d6c94b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a7a3639-9b46-4ed3-b51c-8e0944dee1b2",
        "cursor": {
          "ref": "bfde3280-f236-4dcc-82dd-09d12ff645b1",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "cd71a034-3a7c-4e57-bfd4-2fdb3ee295cc"
        },
        "item": {
          "id": "1a7a3639-9b46-4ed3-b51c-8e0944dee1b2",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "406d7468-0201-4612-ac4c-867f95359a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7629e4e1-581e-41f6-aa29-7a6c8bf4ae3e",
        "cursor": {
          "ref": "4f0ef85a-d53c-4e78-a221-0abf629fd7cb",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ab47e343-d4f9-47d2-8644-1a8efd86b591"
        },
        "item": {
          "id": "7629e4e1-581e-41f6-aa29-7a6c8bf4ae3e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b8178340-74c4-4589-a541-22470531f699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d25c4b6-0c51-42aa-9e19-0d29f615b8aa",
        "cursor": {
          "ref": "db086691-06cb-4631-971e-96e8d344b1c3",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "225ce52d-aef6-46e2-a5fe-554c86e8be40"
        },
        "item": {
          "id": "8d25c4b6-0c51-42aa-9e19-0d29f615b8aa",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f8849bb7-7299-43bc-b8ea-eae51f24e3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d88582-0243-42be-9942-aaa8b76d3cc9",
        "cursor": {
          "ref": "5a38c355-da7b-44c0-920e-4e68e835c27f",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "53892233-217b-4ad3-8403-689a6e2a60e7"
        },
        "item": {
          "id": "76d88582-0243-42be-9942-aaa8b76d3cc9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0062fda4-802e-484b-878b-81975ccc0ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1711f0c-491f-4767-9c46-85a4e3788b0c",
        "cursor": {
          "ref": "b3af1272-23a3-477b-9074-5fdc5d82fb7a",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d9958501-7f8d-401f-8e3e-466a47a25a36"
        },
        "item": {
          "id": "d1711f0c-491f-4767-9c46-85a4e3788b0c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "6cc91e67-81c8-4b9d-8779-3dae0658b6f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd05545-5eb4-4919-b30d-5e40d18c805b",
        "cursor": {
          "ref": "27de4f06-db2f-4c24-a885-65ba4fe812f7",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "757e1cb7-8c2a-42c9-9e9c-a2f1cbcc9906"
        },
        "item": {
          "id": "5dd05545-5eb4-4919-b30d-5e40d18c805b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8a3608de-cc43-4cc5-bbe6-943a3b72f255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff2b5da-65ed-4486-9be8-cecdc2ebc0f2",
        "cursor": {
          "ref": "8627fbbb-457e-4f26-b04a-8ac8978afdfb",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c7378044-4136-4c50-a243-937c09dfca7b"
        },
        "item": {
          "id": "8ff2b5da-65ed-4486-9be8-cecdc2ebc0f2",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "5923c16d-eeb4-450d-ae27-42f90bc75585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6db9f65-cdd8-4926-9d1e-abee349feba7",
        "cursor": {
          "ref": "e778311a-1262-486e-8b50-b3c6ddc77e73",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "673812f7-2047-48cb-a368-1c7f426a3f84"
        },
        "item": {
          "id": "a6db9f65-cdd8-4926-9d1e-abee349feba7",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "26fcd25e-0114-4c41-a4cd-99fb4b9d2929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e4bd829-e348-4a55-be36-4c2c80c667d1",
        "cursor": {
          "ref": "31183b3d-86ed-4247-b5b8-3079ee6a9f33",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f9fbe8ee-e3fe-4ae0-8971-0e0ec10a6bb8"
        },
        "item": {
          "id": "3e4bd829-e348-4a55-be36-4c2c80c667d1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bf4e6812-fd5c-434a-ba05-471dcc6662e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203c9cfa-bb76-4e60-9e44-834b347817fd",
        "cursor": {
          "ref": "626e55c1-fcce-4299-9d9d-6d06a5cf21e0",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "05236f5a-5c7f-4702-a908-deff81d9363f"
        },
        "item": {
          "id": "203c9cfa-bb76-4e60-9e44-834b347817fd",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "6240b44d-9cb5-4d50-b54a-3824df4b2ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c8b560-1b4b-41c2-8b82-15a280ff0643",
        "cursor": {
          "ref": "cd6f649f-b10b-4786-b811-e2e6a613ec79",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "9f85fbba-abde-421b-8d51-341907f9ec75"
        },
        "item": {
          "id": "53c8b560-1b4b-41c2-8b82-15a280ff0643",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "87aa5fc9-e221-4ac2-8fc5-f883fa96c47e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "688fded6-c790-44c1-9969-be1cfa8bab31",
        "cursor": {
          "ref": "56fb1366-4049-49fb-9849-9366a4e5a80d",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "691e7dab-c03d-463e-90a5-6cca796489c5"
        },
        "item": {
          "id": "688fded6-c790-44c1-9969-be1cfa8bab31",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "51a56c17-fd4d-40fc-92ae-847531a04cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc3a94e-5380-4dcb-89a0-fe75134d849d",
        "cursor": {
          "ref": "19ae2402-6d4e-4ada-8f58-cf3ceb3bbec1",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5cbb97b0-7ffc-4148-b155-c211b36bee21"
        },
        "item": {
          "id": "2cc3a94e-5380-4dcb-89a0-fe75134d849d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "a0f5d7be-ef7c-43bb-a269-44ea92a1171d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e19719f-7275-45fb-b43e-6a7e172276d9",
        "cursor": {
          "ref": "a854649c-97ea-43fd-bc7c-68793956a6fd",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "584688b1-3363-44a0-98c5-991dcf8e0a05"
        },
        "item": {
          "id": "2e19719f-7275-45fb-b43e-6a7e172276d9",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2a89278d-e6ec-4148-a925-9e6ccfd680de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29d5459-6152-4cc6-b4f6-da8fd54a1ba1",
        "cursor": {
          "ref": "9f00d957-2cd3-4c3c-bf4d-3fa0f5978788",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "19d6cdba-7764-4962-abd4-86f4d3de0dfd"
        },
        "item": {
          "id": "f29d5459-6152-4cc6-b4f6-da8fd54a1ba1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "e3fa50a6-c702-43ea-9abc-c9c07fcdc39f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a087e704-7653-4995-ab05-fffae1a38f27",
        "cursor": {
          "ref": "688a6467-9e82-4107-b8eb-f38202757e33",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c64404b6-4f06-4131-89af-dc0e458b1a70"
        },
        "item": {
          "id": "a087e704-7653-4995-ab05-fffae1a38f27",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "79a00a6a-e28d-4b7b-8f9f-265ca5520917",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c2fb574-e7e6-4ea7-88c0-38ccfecc614f",
        "cursor": {
          "ref": "01c577c6-940a-45c6-8720-dbeba410b704",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7abf941e-d12b-4a50-8708-06fc3b9892a8"
        },
        "item": {
          "id": "6c2fb574-e7e6-4ea7-88c0-38ccfecc614f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "dc198a3c-d0b8-44c7-9eb6-5c901fb2e49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47645e0-1081-4967-b081-0ae2e859285c",
        "cursor": {
          "ref": "077fc948-1241-4f5b-addd-b3d0fda1e654",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "328678c1-3379-45b1-998f-4202c6733eb8"
        },
        "item": {
          "id": "e47645e0-1081-4967-b081-0ae2e859285c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ac1d39e1-48c3-485c-8631-bc9a6e7a2480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0265ae13-3cc0-4d9b-8e5f-da3bb7b60905",
        "cursor": {
          "ref": "6bfc42fb-430c-46a0-80fc-535882edb12c",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "33aac6fa-3897-46b3-84be-1584503b9bb3"
        },
        "item": {
          "id": "0265ae13-3cc0-4d9b-8e5f-da3bb7b60905",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ae694c56-1c47-45f6-8f9f-10cb29a624f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912f3310-06d9-4232-bd6a-2695f8876d16",
        "cursor": {
          "ref": "69613032-102d-4022-9c3b-23caed60bcfd",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "e59e5cf9-a420-4cd6-b14c-5a06aa9bb0f4"
        },
        "item": {
          "id": "912f3310-06d9-4232-bd6a-2695f8876d16",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "df88e433-d202-4b7d-a812-8ef4b0bb564a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab16ae3-d580-4c57-8e7f-9dceb3a74841",
        "cursor": {
          "ref": "73afd71a-9553-413a-a7bd-995e052a6f4f",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "6d9bce2f-8ec0-46f0-b245-5beed3d9580b"
        },
        "item": {
          "id": "5ab16ae3-d580-4c57-8e7f-9dceb3a74841",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ee2fc7e8-97e1-47ac-9bb8-1097f5812de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477096d4-fa88-46ac-bc0f-933b1674108c",
        "cursor": {
          "ref": "c8ae66ab-1e4d-4c61-ba3f-4e55c157587d",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7f4617dd-f992-4d2f-8402-8bad12b0decc"
        },
        "item": {
          "id": "477096d4-fa88-46ac-bc0f-933b1674108c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "66c16e3a-405f-4997-92ab-ca1dd323e49a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1a1a83-461d-486e-97c3-63ccb6e75fd7",
        "cursor": {
          "ref": "15bf0cbd-442a-4ae1-8071-f969b4c0e7f7",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "541323c7-84c3-4639-bc91-d85ab4e8356d"
        },
        "item": {
          "id": "9d1a1a83-461d-486e-97c3-63ccb6e75fd7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "def3e780-c26e-48eb-8a60-fdf13a938352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9244d9ae-d387-4146-9e64-f4b5a9d3b81e",
        "cursor": {
          "ref": "02c027be-7ee1-453b-9669-75dfb1566db6",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "190d02fd-546b-481f-b1f7-f4844bd10fde"
        },
        "item": {
          "id": "9244d9ae-d387-4146-9e64-f4b5a9d3b81e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2c975e75-3eb8-4932-8dbb-d5048ef787e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7e0e3f-324e-4006-a23d-df5ed25741e8",
        "cursor": {
          "ref": "68dbee59-f1e8-4257-8824-d2b32bd419ff",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3a973497-9897-4951-b080-9e4bcf8e4916"
        },
        "item": {
          "id": "de7e0e3f-324e-4006-a23d-df5ed25741e8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "99b2d3ea-b8a9-45e3-880a-057060dbf46d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775f7cfb-88bd-4d53-ae10-0b248e272453",
        "cursor": {
          "ref": "49b241bd-eefc-4bac-8d4a-ec30ab00a5a9",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "cc7d745a-1d6d-4cba-93b9-0854c03c922d"
        },
        "item": {
          "id": "775f7cfb-88bd-4d53-ae10-0b248e272453",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f7b74dba-ece7-4898-8305-db7f93069b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4f9823-0b3a-45df-b59e-b98cdbae5a2c",
        "cursor": {
          "ref": "9b0f57cf-1cd2-41d2-b9d4-d7b8fa86c6c0",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9fd871f4-5956-4512-94bb-1f34a88dd6e9"
        },
        "item": {
          "id": "ea4f9823-0b3a-45df-b59e-b98cdbae5a2c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c2f59540-8fdb-499d-b633-ec2f6a00ed10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64b68106-6d22-481d-98a7-86ca2f2571b6",
        "cursor": {
          "ref": "ace18af9-496d-4712-a6ff-cce533924662",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f87e0690-67d2-4f3f-afa0-90832e96d30e"
        },
        "item": {
          "id": "64b68106-6d22-481d-98a7-86ca2f2571b6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "98f8724c-31ef-4ea0-aa36-fb93b3d60a5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d99887-2eaf-45e2-8595-e9c375c8bf7f",
        "cursor": {
          "ref": "9ad03946-65cf-4d0b-a883-7f857c109d8e",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0f3bd11b-913d-4c3a-ba05-51908a6baf0c"
        },
        "item": {
          "id": "95d99887-2eaf-45e2-8595-e9c375c8bf7f",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "97372178-faf9-415f-a4de-12776f28b2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0080f7d4-ae0c-4ec9-95eb-f2684dd309b7",
        "cursor": {
          "ref": "986a7ffe-3fee-4de1-9636-1b6f879a1652",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "eb2481a2-2899-4ed0-9163-8f0723fa50db"
        },
        "item": {
          "id": "0080f7d4-ae0c-4ec9-95eb-f2684dd309b7",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "89e86d8a-08c9-4ebd-a600-165773b3bec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d94d70-241d-4bea-b0b4-ae6800ff317c",
        "cursor": {
          "ref": "a907ac0e-9e57-4454-8f9c-5826ee7d3fac",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a2569e4f-d6fb-4eb8-87cd-ee400986c704"
        },
        "item": {
          "id": "b6d94d70-241d-4bea-b0b4-ae6800ff317c",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "8dcd965e-ccf3-4944-9bfd-746605ec95fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a0d8261-3f9f-4c8f-bd6a-675eac7b3523",
        "cursor": {
          "ref": "ff0fd8a1-49d6-47e5-b7ab-0d7b24d7d98a",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6cb611e6-947a-4e78-ae2c-309037cb3b95"
        },
        "item": {
          "id": "1a0d8261-3f9f-4c8f-bd6a-675eac7b3523",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "2a87aeee-cd66-4c92-a3d2-7123acecd559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e8d3a4-2fca-49ea-93a6-ef8acc9fd301",
        "cursor": {
          "ref": "4718ab95-4a9d-43f2-8dec-8d97c9b6c2c7",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8c0f053d-9214-492f-934a-994a699b63d6"
        },
        "item": {
          "id": "29e8d3a4-2fca-49ea-93a6-ef8acc9fd301",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "371546d9-1346-4419-9bf7-1501899bb31b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd18df33-68f8-4e88-9140-1a975d6c4ec7",
        "cursor": {
          "ref": "db2a66e3-5754-420f-80bb-32da7bda13ac",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ebc02d8d-7f08-47a8-af8d-2e3b3fd19262"
        },
        "item": {
          "id": "bd18df33-68f8-4e88-9140-1a975d6c4ec7",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "3d945b9c-64d3-4351-98a5-32305dadd779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68ec1711-0106-4b62-a80a-1fda23584cf3",
        "cursor": {
          "ref": "4a570209-b33b-4f03-8b8a-2f2ad6a4890e",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b6a15696-be1d-4248-a385-6677538932da"
        },
        "item": {
          "id": "68ec1711-0106-4b62-a80a-1fda23584cf3",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2d84feea-c9db-4f21-bd16-5901add9ad65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d348973-302e-47ca-bb6b-b924692ef30f",
        "cursor": {
          "ref": "e53c14c5-cfa6-422e-bc36-57b7f979073f",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d28aec2d-f070-441c-b96a-655b28168b4a"
        },
        "item": {
          "id": "6d348973-302e-47ca-bb6b-b924692ef30f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3b799dad-0b5a-470c-9d79-4a6be136a3f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e428edb5-8d97-4394-8ad2-95837386c4e8",
        "cursor": {
          "ref": "65b6aa13-479b-4893-9097-4590d8007dba",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "1c331efc-c675-4699-8761-18bbafff6103"
        },
        "item": {
          "id": "e428edb5-8d97-4394-8ad2-95837386c4e8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "d308568d-7745-442d-962f-851961ee7635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe479a9b-b180-4a8a-bab8-d15cf0744316",
        "cursor": {
          "ref": "c51c5933-ec31-4bbc-8773-a710394a8772",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "32338b62-dc3a-4fd9-8810-06476a488327"
        },
        "item": {
          "id": "fe479a9b-b180-4a8a-bab8-d15cf0744316",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d6ec40b0-9543-4528-baab-897859985ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffef15b0-aaa5-4a51-97ca-960af45a1360",
        "cursor": {
          "ref": "337f906c-f690-4ceb-9ec8-ca5eae92621d",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f1cf2804-dd91-4a05-804c-6247a73b47a8"
        },
        "item": {
          "id": "ffef15b0-aaa5-4a51-97ca-960af45a1360",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "244f3cf9-342a-4683-af69-4c0df2aae7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e14848-5056-41df-888a-026e0d5b18d1",
        "cursor": {
          "ref": "2f3fdcc0-7c9c-4c58-91c0-20aea5ae1304",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "604a7296-1ea2-41b8-8223-59df9f8aca6b"
        },
        "item": {
          "id": "d3e14848-5056-41df-888a-026e0d5b18d1",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "91da00c8-77b4-440f-ad19-fa6f4a6ec7af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "227ed0f0-ed53-4ca5-9374-f929e82cb7fd",
        "cursor": {
          "ref": "30927ba8-a7d7-4daa-8456-095913bd6e3e",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a180134a-11eb-4807-845f-3656c2793a87"
        },
        "item": {
          "id": "227ed0f0-ed53-4ca5-9374-f929e82cb7fd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3d02dd51-4c60-4c72-bede-60ebab9ed6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "225f1339-e260-426f-9654-5fce594ec9df",
        "cursor": {
          "ref": "a3f010b9-6ea9-4036-9d25-d219ee5d3197",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "84b5dfa5-26f4-4fac-ad83-ca9388b312e5"
        },
        "item": {
          "id": "225f1339-e260-426f-9654-5fce594ec9df",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b3fe6ba5-e1fb-4d4a-8237-63928a273ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47e7222-e78a-4f52-95c3-7ee65e615b26",
        "cursor": {
          "ref": "d0a92e40-683a-401f-8cd2-0758ea5ce5a1",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "46aa3e54-22ff-46a6-9812-abbf331de999"
        },
        "item": {
          "id": "f47e7222-e78a-4f52-95c3-7ee65e615b26",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e230cd1d-e9bc-4480-a86a-5a6a51fa20e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd775e6c-11b0-463e-9360-9968d1ac2cc4",
        "cursor": {
          "ref": "a23f216c-004f-4312-953e-14c5c6ed0f19",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1daf38f4-7be7-4ca4-b7c1-cbccf60fff33"
        },
        "item": {
          "id": "fd775e6c-11b0-463e-9360-9968d1ac2cc4",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "aa12ef9c-4ba9-4f3b-81be-6ddb6f9d67f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca85368d-3df4-4ee8-b5f4-bf66568678cd",
        "cursor": {
          "ref": "22ae1ff2-3981-433d-ba0a-520eb77c4d2c",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "564b2685-1f15-462f-95de-fbe20e750f1f"
        },
        "item": {
          "id": "ca85368d-3df4-4ee8-b5f4-bf66568678cd",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "84355b12-37e9-4c96-b3d0-95e54296cff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73f56211-b6da-45ee-b56f-b772ba89a364",
        "cursor": {
          "ref": "9bb35937-78be-498f-88d7-b266647ca287",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "3964769f-b4e0-464b-9f2a-baf5c555db58"
        },
        "item": {
          "id": "73f56211-b6da-45ee-b56f-b772ba89a364",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "57610343-99f9-4cab-9ba5-487d5b22e431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e66b3f-43b4-4e06-b80e-a49a8bd11dbf",
        "cursor": {
          "ref": "a8f05766-6a78-4fe5-9aaf-3257173d7940",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "eb19d3a8-648c-4dad-aaa1-e6b734530bbd"
        },
        "item": {
          "id": "89e66b3f-43b4-4e06-b80e-a49a8bd11dbf",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e8c3c687-304d-47d0-9cf1-dd59572b9bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b661091f-d681-4d81-b0ef-e7e60036b908",
        "cursor": {
          "ref": "bdf0c616-56d4-4442-b2dd-d264cd1d5607",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "4169039b-ff61-47ff-86b7-e74e725a059d"
        },
        "item": {
          "id": "b661091f-d681-4d81-b0ef-e7e60036b908",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "623124cf-ebf3-4aeb-b829-f9256d34fd70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472a4f75-2a37-47a8-91d4-2427992362d5",
        "cursor": {
          "ref": "5c04b6fc-b882-4ff1-b6e7-5b0dfc60f3ac",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d8217506-4340-437d-bf08-053aad5ae8ab"
        },
        "item": {
          "id": "472a4f75-2a37-47a8-91d4-2427992362d5",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e6d15c90-a6d2-4189-9e8f-d363d720c17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5612be94-82d0-452a-af4d-bbc66fc3cc3a",
        "cursor": {
          "ref": "2b759e07-e516-4e89-a0d7-92f6e2810510",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "faa4a8b0-37a7-4c5e-8258-2fbb6197a1fc"
        },
        "item": {
          "id": "5612be94-82d0-452a-af4d-bbc66fc3cc3a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9e6afb44-16a0-446e-b302-481cc2027b0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dcdd0c-9d57-46a4-8485-a61cde59cd18",
        "cursor": {
          "ref": "2ac3ada7-6c85-4ed4-9346-c94868cefe8d",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2e44c20e-e826-49ec-874e-470c5a5939d5"
        },
        "item": {
          "id": "46dcdd0c-9d57-46a4-8485-a61cde59cd18",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2776e1cd-4827-4e07-93a8-80e232744295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222197be-f852-44d1-a52d-0ad5960de8b1",
        "cursor": {
          "ref": "680a4cf5-2270-4874-8a3f-e0328d2ecf71",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "73fbaf6e-030d-496a-a74f-fb039f5a6bb3"
        },
        "item": {
          "id": "222197be-f852-44d1-a52d-0ad5960de8b1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "05ebb96e-9f4a-41f2-857c-b9eccdd67cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60651acf-1cca-40c0-942f-82281f64cbd5",
        "cursor": {
          "ref": "c27cc93b-58c4-43dc-a4b1-d90ed1f1c785",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "e5753895-2721-4ea9-a632-4b01796e4f33"
        },
        "item": {
          "id": "60651acf-1cca-40c0-942f-82281f64cbd5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "c0e0e9ee-55c5-4093-b144-d3cecee147fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da67aaf-811b-4295-9431-d158a9f45847",
        "cursor": {
          "ref": "45749ed8-9b4a-4290-abee-f15b865ad3ad",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e1e2867f-0417-493a-9c90-9839ce5099d7"
        },
        "item": {
          "id": "1da67aaf-811b-4295-9431-d158a9f45847",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d104ac43-cbed-492c-9c91-268113f0c616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa29be25-5cce-4e80-8474-b905bc1948dd",
        "cursor": {
          "ref": "d33e56d5-68f3-4b4d-8b7e-3c67b5551aec",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d213506c-ed80-411c-980e-a2d9f60663f8"
        },
        "item": {
          "id": "fa29be25-5cce-4e80-8474-b905bc1948dd",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b2c0bbcb-6f5a-46a1-b15b-350aa6ffef85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb818f9e-60f3-4ee6-b688-33ff37e3094b",
        "cursor": {
          "ref": "39588efd-9698-44bf-80dc-cfee4ff7e6f4",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0f6e3471-887f-4624-b144-2b625f3f60af"
        },
        "item": {
          "id": "bb818f9e-60f3-4ee6-b688-33ff37e3094b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "5768ebde-08a6-42c1-a264-73b9a7db1601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe963fc-5fa2-4f64-8ce5-4b23272c9e84",
        "cursor": {
          "ref": "c31e112e-133e-4fce-bece-9c2b2f2d17c2",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "77911c54-c3de-4cfd-9655-af5951dd05d3"
        },
        "item": {
          "id": "cfe963fc-5fa2-4f64-8ce5-4b23272c9e84",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4c3da0fe-142e-4cd1-8b46-eacb019a308c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146ef817-69e2-438f-aa4b-5dd34e01bd31",
        "cursor": {
          "ref": "451e39a7-de05-4b77-89fb-4346a3845753",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "dea59894-5ba1-4872-9dcb-c485bccbd63a"
        },
        "item": {
          "id": "146ef817-69e2-438f-aa4b-5dd34e01bd31",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "8fef9767-d2ab-4b30-9735-1ba4607c5a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ec9d8c-19d0-462d-92b6-a0b3508b5034",
        "cursor": {
          "ref": "8fd6e5b6-f176-41f2-b388-3970a4f36269",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "261762e7-5503-4a24-9200-c0770dc69c21"
        },
        "item": {
          "id": "71ec9d8c-19d0-462d-92b6-a0b3508b5034",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a17f59b6-8cda-40e5-9b2c-7f0b5aab21b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e66790c-8644-4fe4-b657-3aa0798091c5",
        "cursor": {
          "ref": "1bbd843a-79a7-42fe-b58b-5667ba06a514",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c1b6dfcf-6082-4f8f-96e7-1bc43d66ad36"
        },
        "item": {
          "id": "8e66790c-8644-4fe4-b657-3aa0798091c5",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "64e363fe-36cc-4ac5-9349-8c10a43be8e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ac1a7eb-7b67-4852-a3d4-02e747d74589",
        "cursor": {
          "ref": "589d233c-4fde-43bf-ae7c-5c1272df3eb8",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "a3dec62c-4048-463a-bf52-10c730da27c1"
        },
        "item": {
          "id": "0ac1a7eb-7b67-4852-a3d4-02e747d74589",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6f709cec-4bb7-4f63-9d55-4185b527e669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59148e90-441a-4fa9-996f-16a2f31fc92b",
        "cursor": {
          "ref": "630a82e8-a031-4579-804e-1557fb355303",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c73711d3-9d00-43f7-82de-969b02a2d3e7"
        },
        "item": {
          "id": "59148e90-441a-4fa9-996f-16a2f31fc92b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "51df6400-6b47-4726-a5f0-7b9288ea1dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a009d2-f87a-4e3a-8f34-6ea0b3bf87d4",
        "cursor": {
          "ref": "d5a28c4b-4e8a-44c0-b8e5-84d2e3c4090d",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d5a23578-ba2e-4700-8a2a-2fef4b5cbc84"
        },
        "item": {
          "id": "60a009d2-f87a-4e3a-8f34-6ea0b3bf87d4",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "291e1e75-5c71-4443-b1d4-eaecdaa07d81",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff027383-6011-4a81-a417-b3c7a13e8360",
        "cursor": {
          "ref": "59bd021a-db9b-46ef-bdfd-cbbec39b9fc2",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "9dd52506-de48-4892-8c5d-9a2de03c77ad"
        },
        "item": {
          "id": "ff027383-6011-4a81-a417-b3c7a13e8360",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "4e1f83a8-dfd0-41fa-82bc-23e24c6e38ed",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "6893483e-cc61-4d0b-98ea-38e079301b78",
        "cursor": {
          "ref": "90a41095-4d2d-4165-8590-2a5a921e95f3",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2592d35b-8ab3-413f-ac8e-21f6e551cbfe"
        },
        "item": {
          "id": "6893483e-cc61-4d0b-98ea-38e079301b78",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6646a381-3347-440c-8cb6-84803ec1af66",
          "status": "OK",
          "code": 200,
          "responseTime": 1723,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cb100c6-0963-4b8c-b297-b45fa57b8b2e",
        "cursor": {
          "ref": "b711667c-6b30-465c-8905-1a1711f2e90f",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "296ad3ee-bae9-4717-a1f7-f174bcfd4ddd"
        },
        "item": {
          "id": "3cb100c6-0963-4b8c-b297-b45fa57b8b2e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5e5972c7-abd5-4758-bd6c-e489002bcafa",
          "status": "OK",
          "code": 200,
          "responseTime": 2518,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4085d46c-51cb-45f3-9378-50ca3cb04880",
        "cursor": {
          "ref": "619ed924-a91c-454b-9076-fa2285c7f39c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8faddda2-69e7-4b49-bef2-f439cdebfe6c"
        },
        "item": {
          "id": "4085d46c-51cb-45f3-9378-50ca3cb04880",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4d208f11-6296-4ce6-8301-12a4fd4e5d6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4085d46c-51cb-45f3-9378-50ca3cb04880",
        "cursor": {
          "ref": "619ed924-a91c-454b-9076-fa2285c7f39c",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8faddda2-69e7-4b49-bef2-f439cdebfe6c"
        },
        "item": {
          "id": "4085d46c-51cb-45f3-9378-50ca3cb04880",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "4d208f11-6296-4ce6-8301-12a4fd4e5d6a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3e0bc0-57dc-490d-863e-63ef6c0be652",
        "cursor": {
          "ref": "cb6bbfdf-2d95-45dd-bf6a-aca4974ee475",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "61fba6cc-960e-47ef-8ed3-bc08035347b1"
        },
        "item": {
          "id": "aa3e0bc0-57dc-490d-863e-63ef6c0be652",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "e68beada-3dac-4a2d-9a35-0ba16ce7f3d2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f676f93e-6cd2-43ab-a8bc-137493ff6456",
        "cursor": {
          "ref": "b983fde2-3a84-4d63-adf1-feb165162eda",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "44f6e512-78f4-4672-8daf-a36672665e5e"
        },
        "item": {
          "id": "f676f93e-6cd2-43ab-a8bc-137493ff6456",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c56d39da-1fbe-45c3-8f60-866c4c5a5ffd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}