{
  "collection": {
    "info": {
      "_postman_id": "e9c7f21a-ef69-4217-8f40-0424834c0fdc",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "75ff48e4-1744-4dbb-89d8-9534ff9dcf7f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "e12aa8e3-04b4-4a07-b343-09bd1e2fca39",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "443503a8-7733-4af6-9ecf-f3edc1eeb405",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ac4f413d-6bd3-48f1-a400-a02d7589b745"
                }
              }
            ]
          },
          {
            "id": "47db844e-5bcb-491d-b1e7-215994239935",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bb866f92-9613-4f98-a972-7337fa4b0dd5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fc8e9ca5-1f3e-477d-8977-a2aebb251eb5"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "51cabe60-db89-4adc-ba25-e8341fee7c91",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "db85c0e8-2f38-481f-a46f-906fa7151620",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cd2ee823-af84-446e-8501-3adab8afdc99",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7352b9e9-0759-447f-95fe-04ee9eda2f0d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3384fed0-02e1-4ea4-90d3-6f301b4ff81c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7f4a378c-3fca-4164-bb1b-c84773e20227",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5d482833-025f-4fcb-b1da-eaff2f5511a6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6a503e88-a436-44c9-acd1-cd48a595c1e2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0f9f17b9-0e58-4797-98ce-c335d29ed200"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89e06af5-613f-42ab-9fd9-20c7fa0f4190",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5d6547d1-13dc-4267-a658-c05a0cde0bde"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81dfbf97-bb31-4758-9676-6e78115dc421",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e02d3cc4-fb0c-4fef-9874-53728c5a65cd"
            }
          }
        ]
      },
      {
        "id": "937f2fc6-faf0-4506-aacf-8d5f57acab1f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f5d28948-1c29-4999-892e-f8dd16bf965f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fd183447-f4ec-4edc-87d3-a06704f95706",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1dbb9fe5-87b5-4e39-8c6b-ad7d4a0385d2",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5f142e2-d268-4d58-913d-df44508ad96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b3d4bcf-91e9-436e-962a-3194bd9af097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f61232a2-66ad-47ae-9bc0-e51ad58a3d6d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f17b1a-c13f-48f0-9cb2-0a55c3f2799c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f04b534-88f3-444a-ada8-2cd5bec0142f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8589a468-41c6-48ae-a281-271eeb1e0209",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e7ecbd-10d9-45ab-86d1-ef53249aabbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e1e5b6c-fb8f-48ef-8234-686514980cf1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fb3b7196-a401-440e-9f29-10445b674d37",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f031f973-2cfe-4425-a037-3ff5e5027147",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7822e3-0117-4386-8fc3-fbeec24e98cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "233c4397-4739-4b83-8d75-95af9f35386e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34788ba-29d9-403a-8deb-990a34eee6f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e258fad-feef-4cd8-a61f-bcfba7b63803"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e630097e-f002-437c-804f-3da0d37b40c5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c69e7491-1ade-4a91-878c-58fbbf9d8f09",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01d8884c-f676-4a7a-975f-1151867640c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "02a3369e-e594-483c-b58f-a62edf5369fd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "57876b98-9435-404c-828f-62e87a004ecb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "33b4e11a-f519-4fa1-8f57-4e283ec1214b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f262d246-df07-4ae5-97f9-96e4b511502d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3304c856-d2eb-4656-b227-731ea81bddce"
            }
          }
        ]
      },
      {
        "id": "feb48b0c-404d-46aa-9b56-e3070e220626",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "8981fd4d-dc94-473b-a286-98ce4356df8c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b4853379-df39-4489-932c-517cc87b1c85",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "39966626-f76b-4ec3-92eb-59761e1224e4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ef2caa-fd8b-456a-9f05-a5dd66697b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3973ad82-4ae3-4dcb-af4a-5451ef98ec78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4670e082-1237-41a5-b13c-78d3d4e3900b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89b4672d-3fe2-431f-90fa-39e7709ebba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39de72eb-effe-4f89-af9d-a5d0d644b54c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d523192-62ae-4a97-acbf-360eca73119c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8959743f-cc25-4878-a921-19c40b442bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c0eee8-5b33-41aa-bd14-8c1ae55c43af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "09ee9273-5945-4603-b4ec-386606ecfbd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1566dae-74ee-46fc-bbb0-478649ea1e8c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e44bf54-db70-4c5c-a0ff-01ea8de441e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7175af0f-33ac-48b3-87fd-02f659b08b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22595749-41e3-4bbd-91a3-4ee756c57c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "878df681-5da6-4a31-bb2c-cd9338ec1a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "126edde9-51b1-45ee-91f9-bc0514951a6a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e22a273-b95f-4a7f-a6d9-f1b3141fd8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0828e51b-29ed-4735-bc0d-8c90448881d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e557d3-4ab4-4192-b7b2-213b262b4c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c12c6a5-c15c-4941-bfd5-b58b5e710fb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ead30d-1e90-4eff-a24b-ed05048cda16",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6df82f20-09a9-401f-9067-a1914f96ec22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bbfba59-72f0-4f23-aee2-3a53b2065bb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847de35e-151f-4961-a872-e9f474e9cf08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa831ace-7906-4487-ac13-4d9a22534836"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b11e0ba-cb5f-485b-b72b-30b17545e3a2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daa64f5b-ab48-453c-a31a-a2a357c093ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a55554-9d8f-4e4a-b944-7f8a3b1ee299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc474a4-ab58-469b-abb7-6f5168b529cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "db871c8f-9eeb-41ed-ab16-7666b865c64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7d4f2d-a378-4b57-ac03-af61374e439a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3067d9b-4190-4b11-a2a6-a6dd47c7e924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e31eefe2-0b8f-4467-b843-35895f95c6d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1b9448-bb9f-4770-98ce-7960dc955453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6ca0835-6bb0-47d2-8b50-c7a145803d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b10d771-33cf-4c32-8ea3-cbb74341bf2e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3470dd42-24fd-4710-b640-96d0ed75254b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca1d75d8-ff89-488d-9afb-6ad8e8b48762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b4cc147-ca20-47d4-81e8-075769f6c411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5d0057f-e8d9-4f66-a6a5-ae59afb213e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625c0d35-b5ed-4e92-a8d3-5a6a5b5a3619",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114b93a8-14b5-45de-973e-6474fabf9a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e54e4098-1033-42db-9434-ee87ed519af3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43ef6f0-b65a-4826-af40-4910aafb5044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7408273-12d5-4a25-8ad3-43dd70be09c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17ee214-5daa-4ee2-9bc8-165c6a343f7e",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca98822d-3c2c-4ed3-84df-9a00fda2daac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83739f0-f3bc-4e23-a591-fbf3a6bd9121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf6ae22-08d9-4eb1-ba16-76e74d957899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4b90ef05-8eeb-4b13-be67-db890b95370c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37db07b4-f431-4c3e-a8fc-73e33336f42b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06ab0a0c-e496-4fda-a452-24f6b75909ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2096a8a6-7b19-41f9-93a9-e3b3cf069f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8916895-ca67-4295-86a2-21c874a62759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7cf816e8-7f47-4772-8eaf-b9c8ce03b9b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94cc6f7e-8a94-4fdc-a921-d28069c7c8b5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace5c4bb-50c6-4e75-b166-851c49490a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "526139ad-f7e5-40b4-aa67-86ac7d764515"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba839125-0849-43d4-8f52-637fa7841efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b4b9015-02a2-41d0-95fc-74242c007811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2d276a-02e1-4096-994a-d48966e7702c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0394d3e-b3e3-4707-9c64-3e5a9dc11abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c506ac16-8f6d-48e4-a61c-36232f992df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b420ca64-a1ee-4521-9659-3ae5d97dd472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7246301b-77d0-486b-a97d-6835d9e02d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cab34af-1a5f-4706-8371-a88ec4fcf272",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f94eb2af-8977-4285-8719-e17de2580c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ace939-b26c-49cb-900e-a81099655d10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "160cacee-9aab-44a8-816d-19737c4133dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "921064ae-d015-4c3c-9caa-445768fdcbca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121d125b-fedd-4157-834d-72ce3741d1d7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85144d20-e718-4039-99f4-e24305754cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69116443-5c9c-43ef-b9e7-e46ab3a9197c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01e3e8d-48aa-4ac5-a59b-a0c3c8ec40c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02ab88be-a57b-40cc-b421-182f8bbe34bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9784691a-15b6-4292-807c-180070fc8cd8",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b88e369-2305-4a5d-8aa3-07520ccf4c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f47f27ec-2beb-419c-aee8-4add4da60884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e0d3f0-998b-4859-879f-998f5f3d75b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a97e41c-8368-4968-9c82-5dea6a354068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4e19dd-43e7-4818-9762-f990ce9ab3ba",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42d52fe-cb32-4713-a034-cb95c62f5ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34675afc-b340-49a3-a4a9-4074b34f74c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be4a6a4-da56-4e7a-bbbc-6bc1c8fc01d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12d1c610-d965-4ae0-9ff6-38aadb30fb66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "625d859e-9d97-4473-87c5-d9cdd26180a4",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e71290fb-3d05-4e61-8076-ac15a230ccf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd2e7f3e-f7b2-4062-ba05-39278d9a3825"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97d60dc-f76a-42fb-86be-53cd496478f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e47c598d-5ab2-4de9-875a-2e45d13d7df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fb650b3-342a-4955-a0d9-93b399ec69a1",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23295a8-1fbb-43cf-8973-318ec42df7ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c02f95-872c-4121-8576-7878a3d67548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc59c03b-41a9-4dff-be21-7553213c83cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "48e736c5-cc29-4e07-920b-89e4c86a2e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa47c387-7d60-4b30-84ed-37c63119858d",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec0af22-401e-42c3-825b-41c3045b49fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57579454-3ee4-45f3-9e64-2f7e1cb2ba07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048aede1-5841-4699-9448-2d2e8430bfde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "54b487ea-053a-4193-80c5-9f6505051553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "720954d0-5925-4c0a-9edf-4897711850a9",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29890d6d-94a1-4633-a23a-309e192e1333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79eb7b76-85e2-41b6-bd05-28db2ec3a6ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef748350-4dca-4495-987b-99880f792a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a69c16aa-7327-4ed2-9669-0190a047f717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494dd8fb-2e58-427d-98f0-bc24f9b1387a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e15ff8-ef1a-4858-bac2-4bc7aae6a7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77657674-dcfb-4542-8317-d5e6debf3a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b969484-3c36-44b9-8e38-f299c7ad5dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4366311a-2ae9-463d-8cc7-f8fab8a2c48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2bb55dd-0d86-47e9-bbb5-e765361b4c88",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9582a9c9-6f96-425d-b60a-49ffbc311c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1f4587-89a0-4923-b58f-dfdf5c11d1cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217ad17d-974c-4ea7-8c98-d6ba03a9479b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3e528481-4b10-45f6-ade2-3e9d743008c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e46533-5c9e-4e1b-ab88-83dbc131f162",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d70ca3b-c323-45e1-8c2e-8301a3f7fe41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a726318-fa85-4acf-b16d-118f5e844daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebb3e97-de7d-4884-b7c6-5f31bb885ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "abba3494-4545-4045-abbf-5ac8a5f24e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "615420eb-303f-4b4f-aa4c-8524eee12df9",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68358249-73db-4ae1-b171-26fb387ca1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be22891c-61ff-4912-9ebc-1089c8d98032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9e8e9b0-f469-4b59-9c8d-343003ac4db4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7b76347-ddb8-4d62-9955-eb09e7424c21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f063f95-226e-4fd3-96e1-75b0466cdd11",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965498e7-d884-49e5-9116-f872cf2047df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "566d1d88-921d-4de4-999f-e60753cf6fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44442b4-ba0d-4384-b613-b5d471eca11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eeb8e64-0e1f-451f-b970-c35533667ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039659ec-331b-4d84-a683-7459cf54cb87",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88776388-e3af-46bc-a025-7112cbb7c473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af4ad78c-b10c-4b0d-81a4-6a01dcef293a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4e90bea-9d40-4c10-a876-93299fd7e90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f615273-cc4a-4da4-ae16-cdc6168b7359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b0d742-b829-45b9-8889-659b9ee62176",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebbd4cdd-4072-459f-b1fe-9462bf140a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0beef64-fdc1-46ca-a080-cb6fc3460906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e910abaf-d2a8-4152-a53a-71d12fcb2b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d24d39f-2710-4a65-95aa-cc37d8698b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee498ec-f989-4ae4-9581-a5995d6f2b90",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89b0522-9fcc-4fb1-b866-35344c6fa755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97cfc58-2c48-4fb1-81d6-84edde5bed41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569bd7cd-7a39-4647-894f-20bb1e368413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bee0c58-25a3-4ffb-bc81-7d70b5866d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5773c5-7106-45b1-b9c4-ca8aede03673",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9397555-2f44-415a-abcf-e89b25410c4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43b06952-db34-4ecc-98d3-aa63c7d5aed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014760f2-36c7-4af2-a281-b70156771344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba33b27b-ad60-43cc-9578-c28d7db98dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24d6182-560d-4949-a9dd-48961b872edc",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9ff12f-9c6a-4d52-b069-efec594e843f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "858339d2-f1fc-4905-b661-a9c309861f0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66578db0-ac4f-4cdd-aefb-33df3eccd258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a011b40-4226-48f6-bc09-7220c3a59cff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df09bd8-c7fe-4b53-af85-c3867a158737",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e282bb9-c6ee-447a-af02-6291c41df9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0dce1317-0aa0-4562-b2c2-60e31e804626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3589ee-56cd-479e-9cac-4f66d3157be8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5866cfc4-800d-4b52-a712-422f66bce50d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e49f8f-d66f-41a6-8b59-f4dadafd8bbb",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6000ecbc-cca3-4fbb-9e3b-660018d5a914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4639d304-b261-452c-89db-f970ec846e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c134c49-3040-4c76-bc56-e78bf6295444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "85b1a075-2e49-41a9-8119-76af523e0aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee5b052-ad5c-4ec1-b5cc-15d2202a5fb0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220de2eb-bfe6-4e07-b2b4-e72ca7434f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30460a8c-2123-48bf-bed8-f32264e5da52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f84c9e6c-41d8-4994-94d1-6616929a8666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2dcbacc2-846c-433c-a2c5-2a7ea7a5ef38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f25519-5e21-430d-bcb9-c3faab012d18",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71756f3-2a60-48c3-9839-b41a232aca35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "976dae99-842b-4aaa-afe0-60d4c7f6a59d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ca9aaf-c94b-469e-9d39-20741fe80037",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "9963f89f-a63f-4378-bb70-5a3a82dba734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c722908f-aa63-475a-909c-38e6e616c252",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cd7474c-555f-4ab0-b37b-cb0b164c3356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2abd52e0-6e99-4298-be4e-8d7b780f2331"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb229ec5-8f3e-478a-9a14-6aa0900a56aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "24bfa973-d164-4e8c-bf41-df3b0a0b007f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb84263e-9552-4c1c-9897-3af3a01f4534",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ec0b30-9524-41eb-806f-8235420dfad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f0f3c3-4aa7-4632-a025-ed148ede0ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ab21b0-3e27-42b5-8e5c-0069b3f15ffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e1225fd-caf9-4b33-9ab0-eaa420fcc9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16444361-2c18-4de6-81a8-30f2e8176383",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577dba09-41db-41c3-91ec-b8ccae71c730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fbdbe7c-69c3-4dae-bee6-30e5884c221a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afce34d1-a185-43d7-b5f0-2bee27bb5396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2051f286-da53-4352-af41-c82362cd525b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f73834e-3a48-46d0-897c-123eb86dc0e4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c465c6b2-729a-48ba-8455-f2ca8e4584a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a85275e-db64-44c7-81f7-006d3f8c669c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "682c42f8-7351-407d-87a7-c58fdee7ee05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dda782e7-d1bd-4591-8176-d1974f567379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e18215e9-c9fe-4f13-9fb6-62ec2ef13eac",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44be6ba9-cf6a-4f33-a354-8928c2354d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0adadfe5-784d-46f9-b2c5-262ff79e944b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b5971d-c59c-4978-8df7-9aad15db312d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "70f6a328-17ab-490f-b26c-b3f85084ad64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eba63c3-8a49-4005-bf75-aad79f14f689",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081f6c92-10eb-4b88-8259-3a3db28cfea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c4efec-487a-4348-b7a4-5e01680391ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e576b434-5269-4877-8eae-e8baa36aeb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f2f37a0-9ef6-4452-b617-df0fa266fe04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36de33f8-43ca-407e-a98b-f847ff5176ca",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf33c5f-812c-414b-84c0-c1c40183a453",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5228eac-10d2-454b-a44a-7a8f14ba3943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d774e7-5d12-4801-b047-a579b6904149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "6e4bef50-e6ab-462d-869d-7c52a5933cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a65f63-db80-4db9-a134-96b834298a63",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "008a58de-9212-4388-b1b4-12766a8b741f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ea11bd-0d2b-4f10-b8cf-9590ced12efa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "741ec8fd-b5b6-4d74-95b9-d70dc348cf83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f7d0f77-c135-48f1-adc3-e4802f146088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e38fa2-eb13-4a2e-b52a-cbaf28eb2911",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d73a8bc-9ef8-43a6-94b5-7137957730d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "060da53e-c2dd-418e-94cf-5bccc0ac179b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9512a1e0-1c49-4056-b7c9-f700062d1d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1aeffd9-8487-4688-a3ab-d9eac2a59b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3a51ed-126e-4c6e-9e68-798faa433582",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9453ead-46ac-4f03-b8c7-0e319e6b3803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a084dde2-9646-4803-8b6d-0765a939b592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8048c7-7190-4ac5-9b9c-fcbe9990b6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a010574-bd7e-40fd-9d1f-235b420feb2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a6b4bf-a46c-4717-a354-a2f6c90cea07",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69dace5a-5cd1-4c1e-826f-79e6b0a3dc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d43d79c6-0a54-41c8-84b6-d1fe3a259918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "805a32b6-9b13-4e66-b95e-95ab4e2106dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8d8f1c2-c4d9-46c6-99bb-9eb8cc0ecb07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266ea30d-f50d-4826-86df-a2c755564705",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1aa09a-20b4-4514-b301-2ef739ac0564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b300801-8211-4aa0-b90f-2065b17a6c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26526f64-e895-4895-9f7d-f63b187b0013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63a3d1b0-4933-4508-8f33-1740484187a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f8b5c8-4cec-4f41-a93c-4e96f2ddc63e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "994697fd-e321-4e1c-a307-39ed3537003e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956afbdb-366c-4c1c-ae84-250fd376af73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cbe30e9-2fde-49ab-b247-57f524ce9189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "483710f5-97ac-42e9-98dd-36aecaeeb0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d63e11a-d186-45b5-8369-459d55a4795b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3c5f6a-8d86-48c7-9505-0614f31dd0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c6519e9-6041-44b3-9676-af8542a4e190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279e516c-0921-4288-8e74-b18ac03e5d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85776b14-cf68-413d-bcd9-a0626c1f857a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5007b6ec-461c-40f9-988a-5dcca366d1b3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3393b9-e6b0-4d8a-a1fe-941c8ca27ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ae086d-3557-4095-9f8a-33f77fb30ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220a21ec-61df-4689-8b4d-0dd5f581885a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "15d2600c-f53b-4887-ba4f-def145da37d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364078bc-d273-429a-a711-574706445543",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b885a62f-ca3b-4222-bb44-95cecb18a4f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b7fc2e6-5057-466c-896c-8d2eb25c4862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2c6c8d3-2d90-42bb-88fd-71c42466f803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "2faf4c8c-3399-4180-8250-989136ad892f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89cc777f-066c-4ebb-9091-c66d42470e6c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a50b7f4-fc6c-40e1-8096-145767ff5470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3369bd2-6577-4b69-bb48-9ea7b5b0c5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793f61ce-817f-4e8a-96a3-ebe4abe70341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0709c78-a96c-4b26-a19f-578b3ab95b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9852098-4dc3-45a1-8b5e-c2587045a663",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dacc3d1-79fd-4c14-bb6b-c766a59af3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c42544a8-b3f9-4289-9666-941903eb20fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445e00ed-a581-44e3-b03c-f6ef689e8f49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2588c9e4-6083-4b3b-a391-11a8ce557b5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210490a4-83d4-4d75-ad94-fe5dba82fbe2",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9f5df1-6e7d-4c57-a067-12bca83d9584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a72d29e-cef7-4d36-85fd-ccc8471911ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "956b7e8d-7a4d-41fb-bb38-ef6452ae778f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63423d4b-396e-443c-8030-9ce230b7a37f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c452e3c-2631-43d8-a08a-9b63073f92f6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e5c1cc8-462d-4900-9db6-2ebd8acde6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0256d58d-2857-47ea-b11c-02edbe9a26ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4a815b4-a311-41d4-a819-283aaebcd2f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb78679-8bef-48c7-956b-0c7a2648bcc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f031e888-a8e7-4a2a-b172-9b3299567e69",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39bce6f-12e4-4724-bb82-a328a6d62320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1de2e5a7-1c83-4ceb-b1f3-4978a7a0cb81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3264bb7d-436b-4c9c-b457-09ec3f67ceac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "377ce610-4979-4a27-9e85-148d6e7537fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e2ecae9-8e96-4c67-b53d-12dda81741e6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca09bd5d-37a7-4489-a14c-497cb215db3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9399da1-d460-454b-b849-2011e5c31518"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a8e7c6-705f-469f-9ef0-92714bcfd23c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c41aeb84-aa17-4582-a7b9-544ae51e604b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d84a39-9d54-4696-bce8-bb2be8aa2801",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "961a9f0a-fed3-412d-b560-39f4939f34c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8229091-d26f-4ab5-a251-2b7f6b30bc3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e35103c-2bf8-4d53-b28d-30009315fedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d92bec15-1c53-4be8-a87c-3aed9fb0df22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6241ff8-9ff8-4bd2-9b48-bdd0d454f498",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de0a127-2339-4a04-8533-4c480e82d81c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3eddb7-12f9-4c51-a1cd-c7a016578aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3329d9-1050-4341-afef-c534df9ce22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a55877fd-63ed-4893-ad93-429e41d2f22a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3081f5dc-5421-4a6e-9877-96985f345085",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f40ff98-a614-48e1-b6f6-981784df1e38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b372be4a-5a7c-4c2c-92c7-78c486bac22c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c72fc4-3eb0-4cbd-98c2-ff5788b66600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "447a497b-495b-475a-9d5e-65d1038ab02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ee6720-11a7-48b6-b931-25e938625193",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9dc2de0-8978-4b4c-82ad-886742bed632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a843456-979a-4c92-8758-e2b0df942e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03720aa4-a6e7-4b9a-804b-a65790010c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f60871c8-2584-4e15-8c68-35bd8635265c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f48e4b-b333-44d4-8d8b-e1cae18d7b20",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f4dd083-8360-429e-bcf0-a603b39beb16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24443928-292d-4bf3-a588-708d707e1819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cee3326-e5bd-4d37-bc69-d8a0fe2518d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d77ecb96-f058-42a8-b05b-39fc9d2f5554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28685e5e-db84-4f50-8b3c-042dfe615466",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25920e90-77bb-42ef-bd29-bd6349a4144e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8015c5c9-2fa8-461f-9139-8983d1940355"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b922168-5e58-459a-be73-88f6cb5fcf33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a26dd29-7c57-47ef-a59b-4ffe60778087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af835fa6-59d4-43de-ad4e-6f26eeded8e5",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db65b60-ba2a-4b03-9634-f3b6016849f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c13de0eb-de18-4d5b-b16d-f1e121ba3669"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db4195b6-bd76-4137-81d4-5ee199fb3d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5320488d-684a-4a2e-97c4-6e74c49a0076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac19299-2933-4c47-9574-a98106a161a4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "960e9ae1-e0cb-4a87-896a-03a55f0443e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "932d9beb-7099-4593-a4b0-f1147539ede9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b07646-86d1-4c54-b0b0-de60d28ae5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c130bee-75d7-46a4-8bb4-96f73a189b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c735322b-8fab-4c39-9eda-e85a2f4eb16b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8161970-fefa-447c-b875-ea6cc98fa56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7370c92d-d34c-441c-baad-b73c574a7c98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e4e44d-4370-4ce8-9879-56e09e9f0c9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "804e0491-7175-48a9-a7dc-6c0e231af220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e138976d-98a8-4adb-9117-29a7ab3934cb",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b97d7217-3791-460d-b552-4f3ae587a971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9d8cb4e-44da-47e8-b45a-85d66b7c3138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f938880d-9085-4210-9d1c-241cfc857a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4667c55f-0574-48c9-9944-1332a979d7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb69d07b-a70e-481d-a846-2c16a098d1f4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe9f54e-061f-42c6-b480-667057776b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45d3394b-b624-4a7c-ae43-a1af6a3f83b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbac226-35eb-4949-8a2a-431f5fbbc23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f518b4d-c503-435b-85c7-a191624fa484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6e8b3c-9a50-48b8-9cc5-18efc1ba2b58",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887ebbb9-7c48-4c13-a6e1-c1fa6d01174b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204af796-91f0-46eb-8fcf-be9845c17f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2177f14-549d-4b07-8e13-b5b06f010a52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "364466dd-7f6d-49e2-905e-cbbc52d35a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6afdd539-d8c3-4532-bbec-d98d439a2737",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3db95aa-2363-45d1-af31-48b86193ea2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c813faf-6674-4034-b582-2b8ae6b445ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e83d1e9-4893-436e-af09-c30b852e7762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0bab55e-364f-446a-8f5d-202503137afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "982a7781-27eb-499d-a747-ee4eb9c5421a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "921e1b0f-91a5-4f17-b96b-b90cf45e35e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7365161-876a-473d-976d-68c702a40451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17ac3d3-8968-4bc3-8637-2b56412f5523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f07f4e3-d5b5-408d-a183-4f704ae23650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a92dd782-ab44-417b-9989-c07690ed635d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50a10920-a08b-49dd-aef7-d29555cf32ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee501706-c1ac-4e45-bf8f-1c844d357f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5871b38-33d1-4b5c-85ae-64824d6814fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7b75bfa-4837-453a-8095-051c68b70094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf9ddbc-f75c-4846-9946-44c9d30e7a24",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18f1da82-d344-451b-8049-d50586a10638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b62e87-b8eb-4e4b-a6db-b7c365d120d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e93aa20d-031b-41cf-9cbd-c8bc6a90f95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58aa7232-309e-4f3a-a203-ee2110fe0fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b58351c-ebf1-4ce8-b570-77e4c45fcbeb",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502883ed-4aca-4eed-a067-2de5b4bf6773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2854ca2-c5f0-486b-b9ff-243e1599a641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ece66c-c26f-425f-baef-d084610ff6bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe6a1fd-bb83-4723-af0e-387e8d9202d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4956e646-bd6d-4614-b221-f0a278203828",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ccc0f4-cbdd-4536-b10b-5f40908bac2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf6d29f-4eb9-487c-9002-ff064796fbbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fe0033-f29d-4463-9b6a-c404d7e20a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a3985cb-8cbf-43ec-99af-2f8f8d529eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea32f4b-27bd-49f3-9e93-734b11913182",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffa53e9-fadc-4578-83b9-b2e7a3a4d406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5e6db6-12d7-496f-9884-2193b97ec921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29dd535a-20e7-4797-9a06-14725674b915",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "01f15ca6-2ddc-40d2-9ad3-88796cdf4405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734d54c4-b49e-4568-af1c-53c171c97c84",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2396e7c2-1501-49c6-8abf-86cf40bd6109",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a039bed-1ddc-4311-9f12-5dde8be78398"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5d4a99-fe27-4e9c-a7c2-a0f0229bf9b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e01a59f3-6ed1-4417-b7df-58b47683f678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b584c7ff-b4b1-4e97-bbc6-45023fb96176",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe77d01-9692-4550-8e75-07c9b1245980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88e69ebe-daa0-4bae-b075-ab2c7c8dd576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff42c806-3071-427c-8958-a5a6690c5254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c987f1e-536f-4faf-bb0d-ce334ff16994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8502dd-bb7f-4364-80b4-96f9fc978685",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a921b3-8d44-4a23-8844-106a2eb2b204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e53a2151-3bf4-47ee-85d5-357c2f123745"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829e2d31-ca63-4261-aff6-aa4a7cb30d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6a262bc-f3a6-48df-9338-17205917db06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52828369-8dd2-489f-b2d0-487d14f67886",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10d253a-a8bc-40cd-a807-3afae4b547ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6790a7a-2117-438d-a247-3e647c6cb92a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e859e59e-166b-49d9-981c-eda356290031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "666d6601-5a9b-43d5-bf59-d2088522df9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8170373-c5f1-4b17-b701-96f3dad2fbb4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3652b16a-3594-496e-8a3e-da7ae6014b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf0abb5e-db6b-4b5a-8af9-38792809a03a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862e14a4-0161-4c73-939d-74e72a61b4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1aeca55b-bbee-44b2-a1a1-a9b2521c32e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b558d52-04af-4062-980f-31419c4b8ae9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817a40bb-7564-4227-901e-08e2c83eb6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d69a6c3a-f079-4216-b160-326ee33d2254"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7447c432-1136-443c-883c-98de33f05693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31fae1b6-dff5-48ba-8abc-f5a36134736f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91a778c9-7617-4ef4-b658-583a65b1046b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced898cd-1f75-490d-ad31-7b10d012cd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d6ba190-8f37-4505-bbf7-0db2f97f3457"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5bd29d2-9d82-4dd1-95e5-2e766fe08a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03eb0bdf-9b6f-46f0-9c74-a731c45e8fe3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd4159b2-3ae8-426b-8fc2-d671176a4a47",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cf7ba7e-e2e7-47c7-988b-97a1ccf0b3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9307e1-ccaa-45e0-8f1a-b4a8f6d8b2b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f27a9d1-4571-4cb8-9311-37e6bfc2ed82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8329eb03-1a08-4bba-ba54-4a4a8fab4274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121fd89e-30e5-4ee7-86d7-6b1f68b53874",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74e110f-33a7-461c-9804-dbb5d4ca7b35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7fbae0e-0aad-480e-823f-d714b5062676"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a6f9b1-356b-4e21-85ea-06fef4eeceeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f496bff3-7354-4e3f-b662-fdcc0cb59e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd5da1bd-9464-41f3-bfa8-55b0f1ec19cd",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62198118-9cae-4da5-b934-bda4f03a92fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be925132-12d3-47c3-ba14-b959373e26eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f17b9eb-de04-4171-ad5b-648b9bd62200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb55d96-0a0c-4941-ab1c-56f7597df7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b093a4-0374-4ec5-bf1e-14b59aec9cf6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4fda60-2f22-43f0-a016-27e57a09e8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f02e06-83d4-47e8-b245-ce616c006052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "354f647a-9584-4434-ab5b-f585fad778f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f28b456-9055-47b8-a21c-c967a2693e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0341ea23-060e-4623-b1e4-18e5e32f1ec7",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55712ef5-fe9d-45e5-8268-b23029d03269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c580fd12-091c-4e63-b4e8-5d85edce811e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89faff8f-adf3-495c-bece-fa05230c192b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f088adf-c28a-4142-92db-464349609804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e1cb4a5-0874-45f5-a19f-b84e6530a6aa",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa89dea-cd30-400e-b4d0-e55e1a0eab97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba14fe24-cc07-4572-908d-879a4a83a0f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08d2cc0a-fd47-4de6-bc8c-bd445bbf09d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d43299e9-172d-4e1c-ac4f-a9ccc6b7d725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbc6b6b-46e9-465e-92e3-24029e3733ea",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b4451d1-4f93-4082-ad89-4530dda43520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f2fb0d-9367-4de9-84a0-f9a8b0cd035b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e69585-01ca-428d-a1fd-a3a02fd77576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb235783-c8d4-439c-b9e5-3ce972889b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc86a1e2-11d7-464f-a31e-45ef1af3c309",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "265c5af1-b638-4c49-84b2-9f664619fc2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e3504e-37fe-4b39-a245-bf424ca4d6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cccd5d1e-adaa-4c8c-a1a9-7e78d4447336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4369c324-a448-4291-9022-8eb4514f917f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4d155e-f79a-4a6e-a98d-3d1436143f5d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc47726-9e01-4ad0-8974-8c965c002659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "29b04365-b729-4cf5-8837-99d9853bfbc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eaddf26-9431-4c13-9732-3eb2aa789811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "373fee58-6b13-466b-ba1c-e5a17ec38a15"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ef023a4d-6fbd-4198-b18a-ccb04292af67",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d7ddd122-41cc-41e5-b7e4-6787c9676889",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601bd321-4fe3-4b03-9a0e-6c5c0fef21a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84366793-58d4-4203-b89f-dd30869d3131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75607422-4b34-41c9-a5c9-9006340b431f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ab8a68a-8f3d-4625-9cc2-c9bf794b6596"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3db26997-9c10-410e-8b1a-8bdc6991c1e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a455929-7230-45e6-a21d-cb2f6ac8c783"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a11b7926-e923-4b0d-b90e-2845fb49ba03",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dda9466f-25d6-48d5-abbf-fb8eb1129c35"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d4dc4efa-4c32-40e8-a640-a4cdcdeea67d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ac1be7fa-7082-4c3c-b7ba-3d8d415a64cf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7597a507-6a3a-4343-95d9-b785dc7bc268",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "512a8e28-1bd2-4237-b03f-05f4d1480cbf"
                }
              }
            ]
          },
          {
            "id": "a406bfdc-44ee-46ad-9abf-ed7884f7e108",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6d3828ac-e115-4196-8cb3-c83d52aeb8e7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f42d2431-12ec-4ed4-937e-5cde732c1430",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b99bdbd7-c934-42e2-97e0-4da1b8e6617d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52393770-dd13-4cad-b948-6283c0da253a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d7efe26b-1e34-47e4-be78-e9fa931af3f3"
                    }
                  }
                ]
              },
              {
                "id": "a80d9776-1b11-4444-963e-f6bf7ce669ac",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4cb5f845-5e01-4678-9885-8c22fcdf98d2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da342edd-449f-4607-a1b3-2de4d7679a83"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e8ad92e-856e-42f4-aded-820f95d30c81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "16aaf62d-1ed5-4e17-a823-22ba63e3d58b"
                    }
                  }
                ]
              },
              {
                "id": "1f256df4-a326-4adc-b274-87e2323cf29a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e1a1c1f-aef6-4bbc-904e-5c3ef209cd4a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2feffaee-2f55-4db7-84af-22b15f81ceb9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de629d3a-3f1a-435d-a480-5a59cf1d0201",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "038ca265-f6c4-41f5-b46c-f08a68fde7dc"
                    }
                  }
                ]
              },
              {
                "id": "8687896b-bc05-4ef0-b209-b60b31ebb61b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b893dd66-24d7-4225-8e9a-a9475a3b62c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78895a9e-b56d-4b09-9379-eed3baf0e654"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85d4d8f9-d095-4814-8f7a-0388328eb321",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "06713965-6eb6-446f-8b3a-16c910081302"
                    }
                  }
                ]
              },
              {
                "id": "ccb0b0f0-5429-4263-b03a-59db4df1f0f0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32d2bb3b-b0cb-4f45-b4e9-1318d82a84c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98a0ddcf-5a3d-4de0-80b8-a8ba6963053a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9feef106-54a4-49cf-9651-f1a1256f1f1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b25a0576-f1b5-4c47-94a7-18c75d71d9c5"
                    }
                  }
                ]
              },
              {
                "id": "ca8e65c9-a0b1-47bb-877f-9feaacb6130c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b540a16-e434-447e-8596-a779118c6bae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7947ad3a-2237-4466-a830-80554bddc04a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f25590f-ebf4-48b9-86f9-a7d36c6ec14e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5d98ce55-2466-4e21-bc16-443041727656"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bcb8592d-19e1-4c7d-b314-577167cb5b40",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dfca69c6-78ba-4594-bed8-4359cea6943a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3f14351a-f86a-465a-8fab-b2f454861b6b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8f5e2c7c-856d-4fa3-9c37-59d8de795a50"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50cd95ac-2661-4b8c-82b5-991c6892f00d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6f1da11e-c0ff-4881-af37-8f61e7439c0b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "194bdb76-cae7-46da-864d-dc94ceeb758b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "396386db-1587-46b0-bf3d-9e686cfc46c4"
            }
          }
        ]
      },
      {
        "id": "6c96520b-93a2-4357-ab67-61b34a949e82",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ace6a110-03c7-4f91-aded-5d6d134255b2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "85984ecf-7e3f-49c7-bdb5-d5254762a074",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dfba6eac-0b3b-4e3f-93ff-920901908443",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19facc37-bc6c-41df-ad42-04ca6bf73785",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "386670dd-2742-40f4-be13-53187d49a8ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5bb921-28ba-4120-b110-3f0bb3271288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "64da10f9-af2f-41b4-9da1-1e0990e81f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d5d30b-d7ea-4eec-a3ee-b867c85502a8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5c5f23-f901-4488-9844-51da1ec55f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e77686d-92ed-4ab2-b1b8-860d3ac9260e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088292d4-5709-4b1f-8c5a-f844e73e5093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "addaef3d-05c1-44d8-ad9e-87a291884b15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d2d179-0e01-4573-a5fe-c4595241cc7e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5be711-2f35-4a1d-a5c3-a5d1e7223d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e1dee1-44a6-443a-b151-2d6f38eeece6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6466efe7-9599-4c54-9bff-2bbf13d8376f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d17396ad-fc2b-4c83-9e6e-0a8fbde9c8cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d52df796-09a8-459e-91a0-0e1efa649e29",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a672e445-7761-400d-aa8d-80fe9844c984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac4f2ea-183a-407a-aa76-00f656f3e977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a94f6d8-4d05-477f-ad73-b8533a93a277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4437c6c-6b7d-4cde-bbc0-33b94d22825d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c50d41-26b8-46a6-b770-df73cab40769",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75add8c3-7d11-4599-bb57-ef380bfe10c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8767068f-1184-4949-937e-54cd0bb2f40b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc742b79-4246-4529-bdf4-4d32430b0055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "007b421e-4807-4adb-ab63-6db843ac0564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1276f20e-87bb-4647-985a-a9f942be6dfe",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "903c3344-0042-4118-a08c-f39620a3a035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2918511-51cc-4361-b932-e9e37c6448db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bfa8f63-0b03-4d50-ace7-9ad793171323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "39b9ed67-5086-42d1-82d2-57b9754115f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057723f5-ebf3-48d0-a4ef-4e016b017979",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66da7ce-dec9-46ce-9b7b-987af10c8365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c275e4e8-71d9-44fd-afe0-05ee8e69eebd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a29ae8b-6376-4a27-a4a2-1b6e658395cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "96cdb93f-bcf0-424c-92f7-324a58f9bfb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "906b6e4a-e818-4243-8749-cb7ee4df8200",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "108d4977-4e5d-4695-9dfc-48d635bee839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe156e1-4550-44df-a8cd-b10489ac262b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37444a43-6043-4329-a6f8-845806ca1c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e679bb81-4a6a-4d0c-bb55-256c37530444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2a9614-f008-4852-b9c8-8aa8689e1f64",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4195456-0f87-491c-94bb-24c93e67269b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be4fd77-fddb-4963-89f5-ea43c0c251dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0052c7d0-27db-4af4-af81-4147917a4f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d299b685-4970-400d-a535-744010b3d1aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35af69b8-b266-46bb-b19b-68e2fa82a8dc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69e8d8d3-4f4b-43ff-9e76-5a0a6bca20fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e502890-f554-41d5-bef6-e9fc79992326"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3540ff87-6ba2-45fb-9bf9-402054eceede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9db07450-f90b-4a43-b5cc-064ef71cb8ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba349cd9-e9cd-46a8-a2ea-3d73232c81af",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcdb51a1-c81f-47fa-a541-0fa32bae955c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26a8b1aa-2b7e-4aa6-9dc3-b22ef7e0a5ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa7314bc-6e6f-412d-81ba-cbca36e6a471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d251a8-ba8f-4068-8226-432455d4f363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039eab0c-f019-4dcf-ab5f-131bf067a8b9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3695be-898f-4a80-8480-d4a28fd65eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed1beaa-8787-470e-a5a8-2fdc014f4bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996a6979-d451-4569-a0fb-54bf02638c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "eb70b7c5-865e-41ca-bfa2-b53b0726a825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3f4620-2e00-4c0c-a458-4ed05c5bf67c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88d93bd-6630-4322-8bfb-73d1003acba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d311f11-6d03-40b5-b840-2db0b15c6a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ab4eda-7b6a-481b-aaa2-037316390931",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f869287-5ff6-4e1c-9a45-bbb147035106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a0f214-5d6a-4cef-84da-464758b35cef",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a2696f-8861-411b-8af8-102a079f84ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef6469e-ebfb-405d-961b-9f56e361d0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee69313-50a2-45fe-8ea3-c223dc6a01e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c8a0724-51d7-46dc-ba19-6d1b48542c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31a64f0-2316-47c9-af99-48b8e156dd65",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "991f86ee-2ed9-42d1-8891-21eca5237a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f894110-79c0-42e5-a559-6b4827d4e058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ac92e0-329c-4f7b-be26-bd38ce46bf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "db16283d-132c-4766-b9cc-a5050f403deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db61dcea-d90f-4937-88b7-7399532e96e8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "717e0a68-4483-493f-86ce-f097ee670db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33d1fdfa-1454-4a16-9bbf-dbeaaf7d6b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50e64092-91d7-48b2-b1c5-984a72b3fb92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "333b533c-eb51-4a9b-83c3-1a7c8672d6bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b08c18d-178a-411d-901f-5c20261b9f53",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68f188e0-e5ec-4495-82a3-67a2efd474e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b51256-6f6c-4a53-91f6-5de8241f32e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6141ff2c-2e90-447b-bfa2-3d323f14f0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "adc2c0e2-fb41-4b0f-8abe-5e89db5997ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee0a94b-9535-4a08-aaf5-f796977fb0e5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3749b5d1-f384-4e47-b8eb-ba8004bba9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b718052d-5461-4135-a4f9-f6a48bd843ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5bcd4ef-6e89-410c-bf98-054e51184b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d6cb104-0434-4765-a329-f7195916f58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2707b283-ebd1-4438-9059-0c006fabdfb4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd70ee57-7fc6-442d-90eb-bae224a7c212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f01df42e-3629-4880-936b-a0744c879281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f465d6f-5a96-48cd-abdf-5ebd8db2f709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd59d91f-7233-43b9-8ec7-4dcfffb93bef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79e1afe-63d6-40a9-8a6e-ea18b3ee135d",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02032ecf-5025-4358-bedc-f115563b871e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d64be6-35f0-455a-930e-a71987d72daf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb9a1674-6ee5-4c7c-9d77-983f1bf6127e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "302b036e-1935-46d4-a85c-7fbe984517ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31854baa-49a0-4d8b-8ec4-0e8d0680d9b8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aa2b8b8-7a3c-496f-84c1-98e33b8072b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4796d9f5-2758-4cfb-a3ce-77dcf039dd50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd19287-6079-4161-9c48-d41b9a5ae75b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5d7df34-f1f2-42b6-b0cd-e1efdab08b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34fd165e-5788-44cf-91d6-bb087e8eb5ab",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c44e3e51-891c-4e8e-a6dd-dabe61ef48c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcbeddcf-c043-46f6-a718-0c9493f285c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bcea22e-ef84-4508-9d05-96faeaffdb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ada07dd3-382e-430e-9e6e-ae32ef8d7e48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b99bf95-a134-4501-b383-5e679e08b064",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59aca9f3-3468-4d84-8e93-dfb1b635c1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a71f1a1-bc96-4622-b68d-35688b724f3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ddddac-f13a-4c79-89d3-35f6bcc3066c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31357cb5-01be-49b0-8449-b892b423cde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d53b6ef-c400-4ae3-b275-2bd78cccf6f1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb40b86c-172e-4ac5-8f47-46da5b064bda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86b9c116-4c94-48b2-844c-b979f21bca18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db0db40b-51df-40e5-94fe-bf4b2a4295d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e36f58-538f-4afe-91db-112be381db6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81ca0033-b1d4-40e5-97d4-e3e865c157e4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e424992-fecb-4f7c-8fb8-bb2312e992ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66250021-1ff1-417d-8972-89ac0e697541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0705ba12-1991-469f-bd32-7949d23e0f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36f52474-7dfe-4f11-bc3e-dcb3c95e0ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5110fb3c-22ea-4a0a-9a37-35cb6fb93855",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4831521-b425-43b1-aa71-158fa1d0c9d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab1e3a29-898a-4310-9928-2968af562b16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4032a13-3dca-4dee-8b1e-bfb296779cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb56a666-cc3b-483a-8ccf-ce1039371fe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d1dc763-5498-4979-a319-5559543c3022",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a78245-8795-4119-b293-4ae469db0237",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef402bd9-eee0-408f-b62d-7bf332d1dce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2002e06d-01cb-43ef-b896-0464123cdc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe5b1cf3-1f33-4c35-a1d2-48e068dc02a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d21ecfe-b17e-4750-a904-bc99628cfb1b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be6e364a-5e8f-49a4-8b0e-c98a877e924c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ef60c9-3917-4438-a0ba-4bb787f0b085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b91e82-1faa-4104-82c1-2eeb02940b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d952001-1c4a-4def-b48b-8d4c20b096f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a711ce-b8fe-4189-a9b0-6af4f6aa6a6f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "873afdfb-1f5e-491d-a161-02c4c1d8c85b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "636f6214-876e-4659-a1b2-a781640b59c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9828e80-d163-46d9-9e41-87dbf536efcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df0146eb-3982-461d-bd79-566eb4fe4c5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68829f9-a826-42b9-9242-c23e0de93382",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72bcd13c-7242-4ed7-8555-285731617b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d34029b-ed11-4be3-95dd-564c9e3b1c22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc2ff21d-04cb-461e-a8b8-bac92707924b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a01879f0-43a3-41e7-adb4-ba4e62c8dea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a36090-ecf1-4689-82ce-5e41f044bd20",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a59154-1b9c-4d90-8420-3c404e5dda8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee90ea89-e500-45ca-92cc-1dde356c1906"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9dd678f-31c2-4ff9-9ba4-b24b4c2e5a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ae0b437-9dcd-45b8-b5b5-b8daf060ae60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a9b366e-1edf-4072-8f83-a227e1d3ad6d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a18e76-9404-4dc0-807b-d9ea9a68b3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "207b1cb1-4e72-4e02-87cf-fb2249b26a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4af33db-9898-4bdb-aff6-4cb49528805d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c29dc5c-99a9-4174-9880-ad0dd9b9eaea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cd01b997-6ab1-46ca-8015-47793ebc7c96",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4d3cf720-be9a-4e2a-bfb0-8723c758062d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee0087bb-35cf-4d38-af48-8416365ef1ae",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a444d6bd-7953-42d1-ae80-700f40468df1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac83b0a-bad6-4418-b40f-7bef2d992422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "142f7a6e-6a33-41f6-8c58-539763a33440"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f43f1ebe-1b2e-4b3f-9ef8-5332db056cf0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a487d1a-fcf9-4cdd-a81d-0cc59f757d95"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71fba013-e987-4cef-8b02-3c30ac4fefab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef45555c-1551-4093-9360-532dea325d97"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3c3bd77d-f0b2-4716-ac09-35998cf3289d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c3d3b548-70b2-4aeb-a24b-a793f09c2c3d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9bf3f8f-6a8c-41a6-85d0-20c9f4e278ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b61773bf-8498-44a8-9c4b-6e8049b18039"
            }
          }
        ]
      },
      {
        "id": "49b6c400-e49a-4733-bb7a-0496792cc062",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "d57b0efb-1c99-4bf1-b797-eebcf9f77586",
            "name": "Negative Testing",
            "item": [
              {
                "id": "16677a6c-86f7-4eea-875a-6f7f9d356c7b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3a3da20f-e1e0-4f85-9f23-a8fea021f283",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f62f8cf-7eb0-478c-97b9-356749804e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c095cb-b646-409b-8e47-fda0b51ec9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959ad6ff-6a50-40d6-82c5-c08c9ffc95dd",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adfcdc19-8205-420b-8b93-fb89ac6471ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496146d4-dd69-43e5-916a-00d04cce70ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51996d43-b60c-4884-8a31-60e19e2ba520",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d678c95d-f4dc-4e55-8a36-9aa706532b27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c7cba8f-8bfd-4cba-bea5-367eb94f4b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266587d2-3b92-4d34-b9a0-04583d27a0f8",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8a5ba5a-4f6a-4251-8b32-e091c8e244f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e50a39-2207-488d-942f-e442ae61f99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75965f75-836c-4769-9df8-03f9d8028b56",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "becd28ea-1f0c-4bac-9060-204697abf09b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96739bc9-09ee-4b7f-bd97-0b9d8e04dfc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82aaea77-4385-4afa-85da-857dbea03211",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f7f58f-ec2f-4a12-aa8a-8d14d5c440d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31a5160-09ea-4086-8c24-a30df47a1717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "999e94b3-892e-425c-8f38-d80295b63e59",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b58699f8-91ba-4708-b994-c413e2ea9c47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04518ba9-4652-48fa-b3ab-d42ea10db027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46729ba8-25bb-46f8-9cfd-703c51a9b765",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fcb48f7-4b8b-4f71-b349-4793f49c2c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c070ac5-733a-48af-b766-f93f58cec590",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e445b812-e3a9-491b-ac2d-cefc04c3baf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65a3918f-822e-4720-863b-6e2309bbd499"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9858d2d7-56c5-4e4f-9529-ac3263bf070c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b66314b3-cb17-4a64-a2d4-652899275568"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47766531-9fd7-4f05-a1e1-05b3e25eddce",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5088473b-80e0-4f29-be5b-eada1804f019",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6fbf56c-745d-479f-872a-39cc10247a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f3d401-3460-4dd7-a0c2-997dd1929114",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c48d312f-9290-4d20-b2b3-296ab551cd66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cde0a3-8077-4624-80cc-4c1c4ef00447",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789e6065-9992-4934-b805-d855061b63f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebce45e0-c645-4838-9046-11dcf28a7938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582c3c37-dadc-4e47-a247-ffb70051bc8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b515fcc-a897-4028-b2b3-1dba806ed361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c715555-f1fc-40ea-abbd-e3067617bced",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6889f5a5-7a6d-4e5a-b8fb-020161bc7232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75dcc25e-3232-4542-bfe4-0358f5ae7fa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1641d73-8bfd-446d-93b7-bc504e01c3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df0c1e6b-25b5-4612-9b68-4ca7fefead44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86ba0b01-1f78-4f33-baec-b158b4e00972",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63f3c46-93c5-4573-92e4-5f9647879767",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f929630d-8b99-4a5f-a5b9-be3a775ca35d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d4d237-fa60-4296-8ff4-6f4f9d0246e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24e1392a-6401-4aa2-9ffd-bc824963c2c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "106a7927-5216-4708-9053-d1aa87da2b75",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fdff26-1287-4547-ad6f-ad89695a56e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4051d3de-a3de-4bbe-a8dc-2bc80ee80c92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a046469-3b62-46f8-9106-92731b2b4a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7cdcdf5-c30f-4c2a-8c5f-a80bcc3b7a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5fbc7e-367e-4157-89fd-8fe425fa5c69",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab7976f-fe62-4047-a521-8e3dd48009db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "260c8757-80cd-4f1c-8b62-2cd91474ac98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55a5a95-6caa-4f34-83ed-e436d0ff1624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2438341b-6782-49e1-ac26-ba3d045c7045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fa8fc90-0d94-4112-8629-2f894804ef73",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59402446-bf2d-4994-8958-929829137420",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17ebdb03-c888-45b7-b1a9-5e1a6bd1b604"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a543a3-38ac-44f1-aa3e-0edffea2748c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0409bd-8ab3-4179-a169-104c6f193561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bdd10a-c1f2-4c6b-b7e2-a6be2ec05f74",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1e15e75-7726-4436-9e8d-00573834f356",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5b7c680-b765-4412-a25c-bf1bba894113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fb3aac-ad42-4afb-a3f0-90711f9cf115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5ab6d43-2740-4d19-961b-694c8f6361c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81658371-35cd-42e9-9d30-c42314d4b330",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4f04aa-1816-4c73-b195-3f9305ee3c21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb0628e-3074-4894-8a44-81580ff4f05e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5bb4aad-e6e9-4ee6-a054-6b9b84dd9f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06df34a8-ef49-4feb-b6c8-7343e654d860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0643ed04-223f-4393-b88b-ebac590ea607",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfdc6c71-ae93-4f85-b53d-9d4ffe62ad77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd35b96c-f52f-4348-8088-baf815b34819"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59bd21e5-0f9d-4b17-94d6-c43e057b0861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a70e9df-c028-4ced-9153-bc2e57cb8471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a391724d-252f-484a-aa4e-55d351e86bac",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc76dc2a-2cda-4014-9401-f49be53e624f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0bb1f1-8045-4476-9ee0-9d97d84e5bb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e282d5a7-6edf-4cfd-93f5-16cf47665846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e3b179-0353-4758-8153-6a5538f27cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cbd57b-9073-4a76-b6ac-0292ca776b3d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918741ca-bd02-47d2-a988-07d0439b7d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "318523eb-b49f-4ad0-b7ac-07b2b277470c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc45b450-0858-4e83-a7f3-2e9789ead0b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec3d5a9a-0c1e-427d-ae76-e91ef5ec1eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175d4df4-5af1-4ef2-9b4b-5c30fde6f55c",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d213ae-697e-4891-ab0a-c1cc1e6b7988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4898fe-2be9-4439-b56b-9149fc6e0723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2ca887-2137-4e23-8755-6bb1e5bd5ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c6247e-206c-4aad-9c56-99cdeaa702ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b99f0caf-3a3c-486d-b364-c0bdb606c535",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbd0d04-59f2-4b11-970e-a63a1a78a43a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c9a975e-8eee-4b0e-9b26-703806158474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ba7e2c-aad8-4799-bcd3-39f149d418a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdb74c4e-6e6a-4564-90c2-3871e144b2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d82be6-9ca2-4c68-a680-cdfb1c3db626",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace75d0d-e4c8-446d-80f4-700df9d125cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9583e75-dd38-4300-9616-0a28d49ccc29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b223e8-c376-48e7-95b8-5bc626e72c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3712ab24-0835-4532-93ad-3a28f869f7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62227a39-5dd5-416c-86b4-b6bff8020b78",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b6c95c-07b8-460d-9df8-ba0598fe9394",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5285bf6-03d3-4cb5-9cb0-d13953f7fd3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "361f0d7f-911c-4dfd-9d83-14d6d36640c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9398fd0e-ba87-482f-bd14-2ba53d9453df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8acb5c27-e3ce-4c98-86ca-c9aa8a08ee56",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0200d8ec-c884-4500-98ff-d738e54cba3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d103ce67-5c5d-466c-8070-eafa7eb40b39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b1a0fe-0501-4947-a3f0-1f94c61ecd1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb29efe-de78-447c-bdf4-90a987b63d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9c8b81-585b-4791-a602-3acff7109e2c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b118d043-6078-4660-afa5-3eb55bbab7c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e6d35da-9102-49da-b464-9ad2c282ec03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7064d006-3177-4f4e-a914-66d108f799ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2da53de1-a904-430b-9e04-affe774ed6f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f6352c-17f5-4cc9-9c33-4eddb2a77267",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfc33c3-3e24-42da-aa66-6bcf1f80e292",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15cf250c-e30f-41bf-bab7-5e4364146faf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a344160-4ca2-4c8e-a3d7-d36c400148e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70f0f15e-4f7f-4321-89f5-5f34c1eed80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31138059-e448-4d16-b6d5-73a154760b80",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85e1de15-1778-44e4-8159-bbbdd850a125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db503dcd-63d4-4deb-b1b7-7cf812377a16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0e0943-a9ae-4eeb-86eb-4e46be71586a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c2477f3-f735-45a8-b741-03a756a86b87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179c5741-934d-4dd8-b469-2c86092f39ce",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6399787d-8ecd-4270-b2b7-44c53a5c3361",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e04c083-94fe-4827-af10-d132b1fc626b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38305cf0-16d0-423a-83be-e1d22a225474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931af893-b537-44d6-bf72-cbc94b1825f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474dbf0f-4112-4718-9da0-84c29d253edb",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c479d0e-fce8-42c1-8314-a8a06e49f640",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f176ff29-6812-4a03-ac60-3acbce55ae0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae891c57-6e37-41aa-b1d4-50687a46a5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a04b9f-c68e-4244-8607-aa4bde8ea395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "128adf4c-e72f-4cc9-9b08-879a5b8b70c5",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef889a61-187b-4b65-a1e5-7670ee62a86b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9181e0e0-bcac-42f6-81cd-26165139909f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a6acd2-8077-42bf-9dbb-9b848b8b4c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972ed35a-92f0-45a9-89d2-f5aed9bfb516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e607810-748c-440a-81fb-82d89161bf08",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e389ca-e9f9-4a24-afca-e5479021e70a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e52a23c-a999-4f6a-8940-205e7de29eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "442e03cb-a690-4afc-b9b8-6bd0d70570cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78006110-8441-43ca-a38f-f860d5d55853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762903f3-c52f-445a-92db-8479f3af0c97",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47217cdc-43bf-44e7-bca6-217e934281a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8baad2d-485f-47e4-a5e5-79edc0204bbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "735c15eb-94f3-4819-8a35-aa4720f30b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7641aa85-1e84-479e-b430-780f7964f378"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9c0c701-f7b3-4af6-bb07-990d19654852",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e058de4-93af-4842-acc2-9228126aab9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "486937c8-8147-4440-9f84-bee2fa9c6c22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2adb5a0-7f77-4913-8cce-d01ad98878a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10eeb5ab-62df-4381-8826-9eb1e5c595ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91d08346-88c3-4f4f-a969-e723d425e1b7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c66dd6a-1b48-4016-b523-b022591a3eab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a3d06e4-387a-49a4-910e-d195343e9812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4874f73c-7768-47a6-9e63-d8260a9ac246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ea70a05-d7ad-488d-be37-fae0da17a6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1ab5e8-7113-429e-95f7-be9063728874",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "019c2c53-4fea-4e7d-85e8-d9739a45878a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7a8621-3c21-4488-a0e0-6f57259c8207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f638be0a-1d27-4703-90b8-f1428b81c5b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729e5704-8db8-4647-810d-f99c2d0ecf4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c117b87-e9a9-41e0-8988-1acd023a694b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d3d288-6859-4cc7-873e-20d0739f49c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0ffafd2-89ed-4a5f-9f5b-3af0cec33f53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3e0ede-f246-456e-9567-1881f9a30b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a3c095-19ae-44fd-8828-9c90fbcada4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354fdad5-1916-43f7-ba04-127b60a3bad5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e05278b-5ce8-44b7-bde2-b6943f0969af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86def3bf-b07f-4dfc-8339-bea8a322b62b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89aa2c42-419b-4dc4-86c6-161dec983e1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ea0c3b-044b-49e6-952c-7abb4822d371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "457b582e-28bf-4bbb-8814-938e452c38d5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb81ce5-fcab-4ca2-8571-3675afaeb727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf44d7b-445f-43f3-b890-7ef792bc2ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6dc4b1d-30e0-458d-8e20-f730dd825883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c61d3c1-a746-4a69-949a-ef1b92cd6135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84f2a68b-4754-429b-99a4-8d1b571c2f6a",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbefc248-6177-4fd7-9480-241aa369e7a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd5d661b-ebc8-4fb5-ad32-5795863472d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4003b2ed-69fc-4af4-95ee-fd478fbe6837",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46cd80e4-c865-49d2-9fb0-a46dcfd846ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797e2270-af19-4401-adcf-955cc81c3572",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "466e8953-df17-499c-a08c-1eab79e99552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e895ccec-df38-4b6d-b56b-fe19efb73544"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b448f8d-7f22-4863-960d-041cd183ce1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a8b1e8e-e9cd-4234-ab98-b3c82cb6a232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a54f99f-25bc-4b80-a43e-96fc25639616",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defc4d7d-772b-4736-9016-5a36ab889ba9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71f93689-7dbc-4090-bc1d-167736199640"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6419e4da-9150-4ed3-83fe-3d31e27a42ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b826322c-dad4-42a5-ac6c-3807d3b3a1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13436b3d-fbd8-43b4-abe9-12106bfa1a96",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb94e1e0-212f-4b57-a5b1-97b07110d707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9d607e-cc79-429a-8bad-c7d7bd1988cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6eea485-edc5-47c3-b8ef-3436a2534a60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d72d8ce-5a5e-4752-a834-dc56de631171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0b52e3-a9fb-4b23-ace9-e30a8ff4a543",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab087e8-3258-4cfa-b8dd-c707645be25d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edcc0d7a-e659-4aa2-8794-af557b87b238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37868a0-94e5-48e3-af73-516aeb5da1bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdaab07a-802a-42ff-a1d3-370b23d2ba97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f22336-c9f1-4365-b5cc-de1e315a4551",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a013a229-fca8-4557-8189-46abf9519e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73a6057-7a75-4a90-b59c-9200ab52bf0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2065f3-7b7d-4e69-9761-aa8396c5d101",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b15e82c-99cb-4b59-9dfa-1ce479fe5315"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bac7a89-859a-4f7b-bd07-1b32ac742434",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ad34f3-536d-4585-9274-49b066e0fbc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae2b1d21-d920-4aae-b543-dd6a3902ad12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76f4ef4-ce09-486a-8f0f-eb2d968ed3a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2416a232-849f-41ab-a3c8-e865601e1d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ae5eb4-e29b-4fdd-849f-5d2e5643889d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9c1777-b642-4660-ba12-429f48cd55b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce359164-41d3-4425-851e-9b20dbef293a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b754b0d4-86b7-4646-b788-01ad0c74cee1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d045521-1d9b-4026-9725-5960f29af582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e00345d-6cf9-4beb-8872-b65fe025aa7a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71883b48-0f62-44b5-a9de-a1f32a149893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845e56d3-c0d5-42ad-b70d-5ec6bc935e55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55122360-187d-4205-a164-13bcb660e2a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d93fc1-12bb-4054-acbe-315bf16c057a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a68e59b1-5157-4ea6-9894-f67be4f378ee",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4247a4-6405-41c3-ae81-0e247192f095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa9e6f2-c2e0-4d30-b56e-54c7c69672a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa6b78e-2e3d-4a5b-885f-b0d98e8ad286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9985678-a8f1-4a4a-817f-5ede0a468eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64618e25-5fbe-47de-a26b-8e96f19889de",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66bc6bcf-7052-4e0a-84bc-bc8558b3e3db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946434c7-c002-45a3-b00e-dec63af819d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b593d9c4-1203-4576-8023-fb34f99ba246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e85a785-1f1b-49d1-8f1e-4fad799ff904"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd56cae-65ad-459f-b235-be728ad0dfe1",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28998559-8da4-48b7-a67e-b9dc1aafc2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13afd12d-ec68-4526-b23b-344251b3fce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "effa2907-c18b-45c1-a78a-309dd3168145",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44159664-5d2c-4989-9845-0092134678e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872699f8-52fe-4133-af23-1e27c55b5278",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49153bdd-d479-49f4-be4b-aa9eb9b366c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56473d3c-a748-4129-8ca3-989ecfe8f1b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef36a3c-93cb-4103-915d-d62ac75ce94c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa5d52e2-cbe3-42e4-bc33-68a8d117fc05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a09e190b-1ead-4eed-a0ba-4c1203fe4334",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8a0893-1150-42ce-bbc1-b3adc152eaf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344c5503-ee26-484e-8fe8-cdf7bc55af51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a0cd55-601a-4410-8d07-b3ae293de088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed82cd9-94b5-4732-85c7-018799526885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c693fb2f-e86e-4aa3-8452-1fbc831b6848",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca87c29c-da36-4aec-80fe-855f9aed8a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dae9d2a-bf15-4cee-835e-8f976ee5624d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c6d2c5-f2a1-474e-8985-5eab9192a921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fae1f22-ddd9-47c8-afb5-6ce5bd9ba86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce528d2b-4dea-4d87-a403-158f0f87de4f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589a07d0-d5fd-47e4-8b10-fb19b6b10996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d5b456-41e6-4ff5-8a91-7f287a78920f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e937a2-ec1b-4bcf-b556-bf526534cc49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb9630b-bf8a-4a3d-a544-03557e9b07c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0624310-e300-41da-a187-6d0419bff7a8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8599c67b-6903-4e37-ac79-e45315e8d83f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6d4c1b-c9bf-4396-8ddd-5a920c11ea7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15bd126-f59d-4f27-9f56-c50891aea1d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef3c8ecd-d93a-433d-a5f1-9ff7f3bca140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "744343be-cac9-47a2-954e-0a6fa2ff3381",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f693141c-2718-410c-8efb-7f323400b19e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e364c61-c34b-40b3-aacd-bb9f8dd946dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2b00d8e-a827-4c5d-8579-37c1e9269fa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059ff23c-fc17-498f-badb-ff83a5061804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760efb16-8f16-4fe9-b8e8-44118729587a",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2017a76c-2fdd-4ab4-9097-605f179089c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94e34bbb-b2e9-46ba-9b35-933fc2a025a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "771cb696-fa02-442e-ae7d-e323e2619dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ea8fc8-40a2-4511-85f0-d0843cc8e832"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524b8e35-3618-405a-819e-7ee608f98e96",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c9f13b-294f-4537-acb8-90a83159406b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298e2cea-a51d-4d72-9fac-48bc31f7e5d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "723d5f3f-f462-4905-9895-591bcca5449c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19b50885-a655-4ff2-95a1-d07f4d046af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d921f81b-9275-463a-a098-4d1291b7ac36",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e49e7d-3766-4d31-9537-d97b92a94a9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6755afd0-f5ab-41fa-8d5a-04fcec6003f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72efabff-002e-40a3-9b5c-e78d81008396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f058981d-b47e-4aa7-9282-8f01c33a71d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ec1b34-5bbc-401f-afdc-14cb38886919",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "743aa7bd-45bb-41a7-afb5-4e2cabfcbb11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "607f13b1-83d3-4767-9488-e941b4920c7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1148114-03b4-45ad-a323-c6ad4700e858",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1acb2b94-e69f-442d-bd8c-36eb9b76245d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4904e1e3-c884-4feb-a18b-3467b21e01c4",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b9b6b5-e16e-4082-9240-ea00aefbbbfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8fb09d1-05eb-4da6-8b74-8706eb6b5ca7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b73f46e-874c-45c5-99aa-7a940671a652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cf3cbe5-131a-460c-8d7c-581c0037dd65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a6fc99e-1d62-484d-841c-27d708b27cde",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "574cbe3a-f950-434e-81cf-5011c5612986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6577adca-d172-43ee-91f6-d04ee850d6e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c367ce-502f-411f-b907-1d45acb1bb82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f911b32-9db3-4a96-86c8-be171544dfb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a501da02-977d-4539-b619-bd82e2255520",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c62d41c-2c88-4a79-ae46-2517280bd5c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b07739d-4d28-4501-94f2-3882e26ae45f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfeb231e-4fae-42f3-9048-b512ea90b226",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24289822-7202-4911-b5fa-6a39dceb76ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161ff3e7-8145-481f-b50f-60b9a843b7ad",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96fb716-14b0-4971-8a92-f5a038b31c1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0db97522-d561-49be-a37b-ca5de7149d8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d123134d-6267-46e6-b6a4-a560906819e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db2641d-22ed-4436-8d63-75862fb2880b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2ba38e-67c4-42e5-8aef-95eb21afef26",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62c4be4-8f60-43a4-a673-b0b035206615",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "661a0ef9-13cd-4c79-8acf-499dd312e7e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a14e7da-5165-41e8-ae5e-cfe0b5ca3d04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c819525-c244-4714-b5db-da7ab5ca9866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ab44a2-0d3e-45cf-b8a3-65ea7ec31b00",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b64bcb-51fd-4c57-9be2-0797eb338592",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e95b816-ee5a-4a5c-b61a-1f3ab7e9ef2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18ea0a4b-ff0f-4c4a-af96-1a00037e96e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ce95cf1-9a7d-4781-b937-af0c75ba3556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13837b54-fc6a-4cea-8d77-68b9cb7da333",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d16fe41f-1c5a-4123-a3c3-db5df1d6859b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5526e9b0-fecb-4a36-9c4a-8b62885b67fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7a7ea7-22bc-43fe-b467-ec94e98c8e3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3331551-40d4-47c9-b0d9-4011a072dfef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d56db487-b763-4f2d-85c9-87b074f70250",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b1da92-02a4-44f7-8776-8a8ef23d5b4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb154e1d-a428-4420-9893-3d65a7f6265e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c44543a-d0ec-4e03-a4ee-15e7aef2ecad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca2c520f-ac9a-46cc-b293-848d64536ee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66a5e35-6ac3-4e3a-ac2f-ce1adaa6544b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce798b5-6925-47c7-9ed2-229e64718fee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cd46277-fc50-4790-b700-ce2eb1edf1b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33ec550-cd6e-41c9-8680-37e3368c1277",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72fdc7e1-5eb4-483f-b0cd-60e0dab9f7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14276711-5e52-431e-8b1d-53b280cafbcc",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a6dbfa-26c0-4b49-82af-cb990b38b898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6f42a79-a595-43d5-9d5e-04c69369690f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9aeca46-0b37-4117-8742-37d14b71d4f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4bb69a6-0dc3-4b75-982a-e0409333c8f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81fb8061-b2a1-4c9f-9199-8115fc25529a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896c8353-94df-4690-81be-080eb7373f69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9b5ed4f-d354-4cf9-af63-de268d4e9789"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a427ae-c33e-4b50-9fe6-7d8f12296f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc55fa14-0c53-47bf-96cc-2f5717015386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927a3e2a-d735-4369-a3df-fff52d72f1be",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "125ef631-8679-468a-a1ac-e12764f1c7a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24baee44-101c-4cf4-bd50-15072d60415b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "448aae7e-1dee-4235-9308-d410f7398eb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bece7b0-1b37-4f8f-b2fd-a710008ab5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33929459-969e-41bf-8379-2b530c630a2f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac7de12-fda2-4dd3-98a2-3b43bbf41abd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d6ea738-a9f4-4d95-aa4e-e03ba9d39785"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df4ec2e-3f17-414b-806a-183445f0e67d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fa603b2-0ef2-4803-a346-05705edff5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddffa00e-7386-4e4c-94cc-a53987a8ed80",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e809ee4-ebd4-4a10-a33b-4affcc785b57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ab43d6d-7e8c-4544-8378-d0af7a8beb16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf17de3-c4fb-477a-a57a-ed7b00868ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b91479e-3eeb-4f06-90fb-d29218f3d837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "243001a5-7849-4ac6-9219-62b48840a48e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c602335-ca8d-4104-910d-eef5943db34b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c371629-4659-4668-9943-baf989b7345a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51aa199-ca9e-4a06-b3a1-c2768b18a9fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1676357f-1148-48f9-a3a1-8d0f1472decb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f69a08-7169-40cd-b3f3-36cf183442e8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a79f59b-789d-44fc-80f1-2d95345efe7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca81c419-40b9-47d6-b946-a5fcc9a44aaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f716cca-5a8c-49be-9f69-9d31c8cbe4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "355206dd-e9e9-4851-bb87-ce415990815c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d631ff-dc86-4e60-be5c-75b2c0a64ec6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b354ca-8ad1-44da-a515-3d23c3f62317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d071b66e-7303-4860-908a-cd063a2e9d4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "835953a6-14fb-4074-baf5-69b3aceac995",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eea2db65-56db-40a2-af16-cb08f52362d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb36dcde-5979-48e2-a5b4-b3463d270a56",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701eb48a-16ba-4ba7-b334-753f325e91a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96e15b70-a90d-4674-80f4-ea7510cdc077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f2b3957-01c4-4f04-bed7-b8869a6c1000",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2101acca-ea57-489d-bfd8-d49db68275cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0adf5498-8792-445a-acc3-dfe0d6d5775a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220d03ce-086f-4cd9-a478-a8f3542cb02d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adf69986-1194-4aeb-af71-4fc8087beb93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ff14e1-8962-4264-8c99-d63c76ddba81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11566305-7bb8-4d70-b155-4179af250e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123219f5-440b-44c8-bdc7-273ce34f0097",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1d913c-b707-418b-8711-02fb0754f5ad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1044bf7-92fd-4c51-a050-99956576c10f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf05c6e7-7040-4eac-ac11-a209309ccdfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1cfba9d-f375-425c-808b-bf800e99c165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b53cd48-77c7-474a-8de7-58c904c761eb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9334f7ea-cdc4-45de-900d-8bf22c75ebe9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd126563-04f6-41c8-b6fc-45feb4affd07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed797a4-cd4a-40a2-94cd-36e34b50306a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0586c50-a1ff-487a-ace5-2e238326e13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d954b4f7-4812-45b7-9496-6770c2220dbc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20395568-9814-477a-a956-cd09cb2c6bed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64a98854-c976-44f0-abff-0790a46cb881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2aaab2-0a14-4a88-8036-197e35b32540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8a75fa4-6cf4-4ffd-a9dc-6046fa6448cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f24564bd-68f0-4d3b-8f4e-2438cf1085c0",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d832a6aa-ba97-4378-bcbe-a9386b66c8a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57881003-0c55-4d00-8fcc-f73c18045f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63d53e1-5d08-409a-835b-148c2d4aea73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d601e2a0-c8d9-4f52-bc6e-2c6a4e2ad126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6fcfd9-fc70-42e1-b992-a30ce588d289",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eb87b38-26be-443a-8281-86416ea10fcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d03b847f-0820-49ff-b9bd-f76b4b41a903"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96ff84a-ce8d-4ddc-9d86-2ca7684fa14a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44f5d5a2-7ea8-439d-a9ce-dc4b676fff38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eac6059-c1b2-4222-aa19-9f2939b880d9",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c684896-624c-4517-b64f-dc07066ae470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ebd95d9-d80d-4910-a461-3502d32db6e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694d9ff1-1c80-4a19-8d09-080703e1b53e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbff063a-1aea-4ded-8087-5ceb9fb57493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bef2c85-9650-4bb7-ad0d-dae07565e962",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44940f70-b786-44dd-9f3e-b3c1fcd6900d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf604820-d41d-4c91-a848-ab94e8571a45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5cf2d98-fde7-43bf-8baa-7a3830160149",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b305ae2-5791-437a-8884-74a07927f2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05172098-f141-40f9-a16c-5196bee8cfb5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1583bbe9-8030-4669-af18-e857effb929f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef38fa14-77ef-4cd8-b501-99eddd32b2bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19211b3e-02f5-4456-86de-91af0708a178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd909b4b-fb56-45cd-955f-c44ee075cb31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0114b66f-18ad-4e60-91da-28b72b16dc8e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c7c589-a6a9-49a6-b3fa-c4e4a78a918b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "851bc487-af3f-47d8-bcd0-f0ce66f99edd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c93ef8-f42c-498e-a34f-b693a0e71672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8064342c-c3a3-4906-af4c-2dd7bf1e4adb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dab9cf9d-5e8e-4221-ad8b-f547bfdd59e2",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b06d9a-17f8-4a5f-bd21-c8d8919b4cef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da17307a-a15f-4494-8066-3359fb72f342"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfb4a9f6-e06e-4a80-961b-eade923a3c6b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e52924a-5ba4-477a-9583-dfa6c24661c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d422da0-8ea9-41df-948c-37f8b7860bb1",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b33c85c-61de-48e0-a218-86444d51f01d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e05ea01-3665-4453-a9ea-703c7c666eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5388c7f-1856-405a-81ae-ffd633dee04d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37b4cfb-87b1-4ca6-8682-791b89fa0408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5657892-d7b7-4a59-a9c0-a8cf95e9073f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e850b1-e784-42e0-987f-a5a3417d2134",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0e196da-ca74-4f00-a369-46dedbb9b8b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ca97b1-e0c2-4b92-845a-2ba896f28963",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fde0c7d6-7aff-43ed-8cc2-2f482a9fd4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00b42e00-4dab-408d-9ca3-e72b3355c4a9",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e291b307-3667-4ab2-b1d5-3d9de2a985bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "159b5e1c-6a64-4d71-b4ae-b6ffd0f23c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ea0891-b57e-4c1e-843c-2b72108ae880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42613c83-8ae4-4ff2-8c99-d2bb6614c5ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "563a2307-4444-4e43-a39f-78fde274522c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534c0e9a-f693-4ea7-acdc-adf4e2069db5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26a2f4d3-66e0-42ea-bce0-692fc430120c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "282df2b4-0e97-4b67-a2e0-bd93110a860a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a4da5a-c6b8-412a-bf7f-ba83c3a86146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034ae2d7-7490-4c20-a210-76cd828f64a3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0673e481-6e87-4a0e-97c2-1b2baa739f38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65751a93-6850-48bc-9bd8-28c7ad79fdeb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea90e124-30e2-478e-8493-1e293ebfe8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64e4bc70-0adf-4fb7-a196-5923e15ed84d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa80c83-ed84-43ce-8ba6-156df438f409",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5742f9b9-7646-4c36-8f2b-612676f33648",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48c46a65-685f-4c42-b8bd-e0988b718341"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48df626f-e9e3-486d-9507-c433d8169bc2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f53424e-efe9-48df-a990-88f4736dc748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c1e7ed9-768c-4ba0-b2d8-cfec138b3cea",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df3eea3d-086f-47c1-a73b-fc4c9b2b85b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b2e0b71-45ae-4705-81ca-eb4a9d360c39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7dd9da-a0a6-46cd-9b00-768ba3ea3f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c9fcd58-ee05-46ce-b7f5-779e4a8632a1"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a91d2912-4217-430f-af17-7728ce626eef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd65c6da-b35e-41ea-aa61-fbc7b14e5477"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d5bab204-e469-4cc6-9215-40004643fe13",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "df8807f9-a469-4e49-9abd-1160011f0e5a"
                    }
                  }
                ]
              },
              {
                "id": "513c6374-7a6a-491f-8163-c93aeaa1f344",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "832c4dd6-e804-44f1-a726-b9cf02d329ef",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc4ecbbd-ae44-4505-b676-ae9193f6ffcc",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7d640338-3b2d-4e6d-b759-f7cfc7a39c67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd078a5-4e36-4032-a887-9259db169874",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "138e1266-480b-4883-81d9-27ef81442c60"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bd4cc5e-da3f-4c56-9760-af5d54740265",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bccdb605-78e9-4d3a-935d-1749020fbe86"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ce6e567-60e6-4813-8182-4664256a10f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6774f50-95f8-4343-b31e-37e582b2fda9"
                    }
                  }
                ]
              },
              {
                "id": "8a692b6c-a073-45fa-a876-c7c8c4a129ea",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "172420ba-e73e-4af0-973b-d10dee1f54f9",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3d8b18-851b-46d7-aa67-3e9b04d08ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7afadc03-a49e-4f73-8ab3-83c83facc284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5d49a6-e6aa-46f5-a03e-5157ca727a27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b8a8a09-2674-48fa-a8a9-df49ca3d2a8e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "391a2170-87e5-493c-8e05-a965639314e6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "23e75df4-ff5f-4352-bbf9-c69cc6dc8ce2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b844efd0-a170-4d1a-88ac-1f8005525601",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ac795113-68ac-420f-b579-a66a67865157"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5fd5c898-5f74-42f6-945b-ecb18ce54c50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c29f016f-0cc4-4dc8-93b2-ae1e7197a3b1"
                    }
                  }
                ]
              },
              {
                "id": "f075f9ea-48bf-46f8-b0d6-25dd4a3778ce",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88f2a631-2d7a-44fe-a0bb-7866bbcbdcfe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8a81032c-83e6-43ad-b603-afbefb0cb865"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1e10f6d4-a207-44bc-bb1b-1f48de1b4217",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "107bff82-ee61-4646-97f4-fb51670eabec"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b373d9dc-1f21-481e-9e84-9b99d955fbaa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "c18dd96a-4660-4af9-b78e-dc3834666d7a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13d140ce-07fa-4eda-9c54-4cf3e1f1ad34",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "814cd925-d447-4062-aee6-e670affb658a"
            }
          }
        ]
      },
      {
        "id": "053e0fad-4985-4e17-8a06-4468bf12ddd0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "8bd3679c-d481-476c-a1e3-198d12c3c7ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "593a1adc-65e1-45d0-83de-d30e7d175056",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5ce717ee-d698-472e-a484-46395d98706b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b750b10a-b0da-4c1b-923b-f0c0a6f43fc9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1952beeb-e1b0-40cd-94d1-3fa5305b0003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8207c2ae-86fb-4e1a-ac78-455b0dcc81ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dd5fb883-e60e-4fea-98c2-5c3a2cf16414"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55d4012b-b3de-4d7a-b292-647a7d0c16fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "09853b00-7f06-4c69-a72f-c59188d43967"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebb24c6c-a166-4f96-95e6-199a101f2c31",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cf73243-8964-4f94-8b16-2208da222854"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5cb9d734-d5a1-42e0-aaef-9d97503896bb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f2ab8be0-ab26-4463-b6c1-4a33195bfe21"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "687e5a22-4ba5-47f4-9477-c1c0936a2c4e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5fcf8fe8-6473-4487-a6a1-fbe1197c86f4"
            }
          }
        ]
      },
      {
        "id": "32e6ea30-d89d-411f-a1da-a6deffc6a9be",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "f721b693-6a56-4b58-ab97-b92611b77d77",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3b60f40-48c2-459b-ba53-6a3b6f0cd1d7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "85b64cb8-c465-43b9-85b1-7280ba6f0ac1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60a38ec-25eb-4a3d-b13a-dffb477fcf81",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d6dee576-bab0-4777-89bf-45924b830a10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df3cf7d3-58d4-47db-83ca-fc1600252b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c731d0c-a7e8-482b-ac27-5e947390eccc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24cea600-d1c3-4f79-8dfb-89d980179a3d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "758858e2-b5f6-423a-83d1-e5b72322c66b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "44fe52e2-4e20-40bd-8cec-f54cebd1f3bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6901055d-3d15-42a2-8857-49ac2e63ee43"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "220507a7-c65d-4159-9c2c-d433c1938564",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9d471b62-a84c-4915-a64f-6d6d099e53d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70e21bc5-5014-4944-b008-e8919b1a80ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8bd13c40-fee2-4232-8450-ca61027907be"
            }
          }
        ]
      },
      {
        "id": "e83d1cf8-5da1-4b15-9e36-f8918336abec",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1764ea09-d68d-46e1-8f58-877ec7094e10",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb2ac1c0-ea07-449d-928b-7da4a1c59966",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4107cc7d-b78e-4920-b4b8-a2ee39b3fea9",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94b2eec4-7b1b-4ac0-b446-6dfaf7ad867a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8459e42c-d921-4c69-9cf8-ec1be3038e3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed08e77-12a8-4546-b5b3-64691c853ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f1319d7-bac3-450c-bf18-f6dc34afe987"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6729f1da-00ab-4df1-8143-945a1943b974",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9a6e7a3-81dc-4e5c-adc5-721b2169a2c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "243420d0-6662-4892-bbba-0f3924c93aad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f68294f-9f2a-4089-b177-66ceb7a45852"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "36c337f2-928c-47b3-816a-3facbd05fc24",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "95c583b0-fcfb-4c62-9235-db1955a574d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a755dd6-3ea3-431e-a8f8-8f4e49e27db4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "83611d7b-4083-4c3d-8f39-cb01b71a39fd"
            }
          }
        ]
      },
      {
        "id": "e0182300-4f79-4413-abcb-cf2120d686ff",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc6b3205-0c58-4a53-a522-a60e616bf7e2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a3c61e40-104e-4cd4-a58e-cf7de0781397",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "37e97a18-a043-4861-9e93-6cb57dc0e0e7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72635a24-db7b-4a61-8189-2fa831d8679e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a26f4b33-3a5a-4b6b-925b-e3d67d7b8a48",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1853,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 246,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 244,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 495,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 931,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 922,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 34.42276422764229,
      "responseMin": 18,
      "responseMax": 274,
      "responseSd": 25.16401745494676,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1686184975880,
      "completed": 1686184994276
    },
    "executions": [
      {
        "id": "e12aa8e3-04b4-4a07-b343-09bd1e2fca39",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 244,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "19933117-8b55-456c-86e4-e084a696da45",
          "httpRequestId": "d109e402-8ac0-4986-b74d-4ce6e07b8479"
        },
        "item": {
          "id": "e12aa8e3-04b4-4a07-b343-09bd1e2fca39",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1272cf28-7042-45c6-88a0-b2e981a8d056",
          "status": "OK",
          "code": 200,
          "responseTime": 111,
          "responseSize": 0
        }
      },
      {
        "id": "47db844e-5bcb-491d-b1e7-215994239935",
        "cursor": {
          "ref": "4db88d7e-1ded-4579-ae0e-6e767ef24737",
          "length": 244,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3d8ab594-0867-4dd7-b3c8-2a509145844a"
        },
        "item": {
          "id": "47db844e-5bcb-491d-b1e7-215994239935",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "71c0553c-c1e6-46d6-b9ce-e4f03a5a41fd",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "cd2ee823-af84-446e-8501-3adab8afdc99",
        "cursor": {
          "ref": "d7585485-8e7d-4c8a-b729-682d91d9867b",
          "length": 244,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c6ff010f-0eda-4204-b820-bc6b5e221242"
        },
        "item": {
          "id": "cd2ee823-af84-446e-8501-3adab8afdc99",
          "name": "did_json"
        },
        "response": {
          "id": "d577fb83-0f17-4ebd-a852-13df3a4f0e6b",
          "status": "OK",
          "code": 200,
          "responseTime": 143,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbb9fe5-87b5-4e39-8c6b-ad7d4a0385d2",
        "cursor": {
          "ref": "fab75d96-c72e-487e-b5a9-0eef668a95a9",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "aa46d181-88e5-447e-a219-8d81d4a97d26"
        },
        "item": {
          "id": "1dbb9fe5-87b5-4e39-8c6b-ad7d4a0385d2",
          "name": "did:invalid"
        },
        "response": {
          "id": "f15dab07-482e-4341-a2d1-b98d3f068319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbb9fe5-87b5-4e39-8c6b-ad7d4a0385d2",
        "cursor": {
          "ref": "fab75d96-c72e-487e-b5a9-0eef668a95a9",
          "length": 244,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "aa46d181-88e5-447e-a219-8d81d4a97d26"
        },
        "item": {
          "id": "1dbb9fe5-87b5-4e39-8c6b-ad7d4a0385d2",
          "name": "did:invalid"
        },
        "response": {
          "id": "f15dab07-482e-4341-a2d1-b98d3f068319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f61232a2-66ad-47ae-9bc0-e51ad58a3d6d",
        "cursor": {
          "ref": "816cc878-9a6c-41d8-b42a-a80e1c80534c",
          "length": 244,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2ca4abbe-eb8b-4bd2-8d56-844daf014411"
        },
        "item": {
          "id": "f61232a2-66ad-47ae-9bc0-e51ad58a3d6d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0a393d0c-5a0a-44a5-bc24-cd28918d257c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8589a468-41c6-48ae-a281-271eeb1e0209",
        "cursor": {
          "ref": "ca9d77a2-0833-4579-9064-fb8b501fb1d5",
          "length": 244,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "db866045-75cd-414a-a6c4-557034c125d8"
        },
        "item": {
          "id": "8589a468-41c6-48ae-a281-271eeb1e0209",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "227260dc-97e0-40bd-94d2-f59a845cba20",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f031f973-2cfe-4425-a037-3ff5e5027147",
        "cursor": {
          "ref": "5a7128f4-280b-402b-8daf-ae0921847fdc",
          "length": 244,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fdc659e5-64ed-494e-8496-858c545753e9"
        },
        "item": {
          "id": "f031f973-2cfe-4425-a037-3ff5e5027147",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3a12b6bb-46f8-4b78-a74b-fb331d6b6a25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69e7491-1ade-4a91-878c-58fbbf9d8f09",
        "cursor": {
          "ref": "abeafdba-e045-4a23-986c-2a4731817a6a",
          "length": 244,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "7d59b150-7f73-4dc0-b142-1fc33c9d3271"
        },
        "item": {
          "id": "c69e7491-1ade-4a91-878c-58fbbf9d8f09",
          "name": "identifiers"
        },
        "response": {
          "id": "9788ef8b-386d-4cd4-8119-8076ea934cd0",
          "status": "OK",
          "code": 200,
          "responseTime": 248,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39966626-f76b-4ec3-92eb-59761e1224e4",
        "cursor": {
          "ref": "f132da4c-fee2-43de-8c2a-8f66d10a99c1",
          "length": 244,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8030e413-2ffb-427b-b246-5b4c643a9a1a"
        },
        "item": {
          "id": "39966626-f76b-4ec3-92eb-59761e1224e4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8fee5b72-68b3-4ce4-93c2-6a5c1ebfb4aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39de72eb-effe-4f89-af9d-a5d0d644b54c",
        "cursor": {
          "ref": "73f0eb6f-814d-4fe8-9441-f2c3b3ec2953",
          "length": 244,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "beb85b00-b29a-4b13-a3ac-f93b84559dcb"
        },
        "item": {
          "id": "39de72eb-effe-4f89-af9d-a5d0d644b54c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1fab2f5e-f1b9-4d70-a93a-9beff82542ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1566dae-74ee-46fc-bbb0-478649ea1e8c",
        "cursor": {
          "ref": "913e235b-77be-4631-a008-f23c94b7a52c",
          "length": 244,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a5305444-a2ef-4f1a-8998-93a6df5a036b"
        },
        "item": {
          "id": "d1566dae-74ee-46fc-bbb0-478649ea1e8c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "abd5da94-a5fd-45f6-a1e8-bbbc4e7427b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "126edde9-51b1-45ee-91f9-bc0514951a6a",
        "cursor": {
          "ref": "9eab9851-77a9-4a86-a6eb-24ad8ed5f54f",
          "length": 244,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "a91b34db-2b4c-4599-b3fc-e2f682f761ae"
        },
        "item": {
          "id": "126edde9-51b1-45ee-91f9-bc0514951a6a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "f0825071-3ab8-4e89-93ed-119803da210d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ead30d-1e90-4eff-a24b-ed05048cda16",
        "cursor": {
          "ref": "aaeab4df-9628-4f7a-ab73-f4b88091f63b",
          "length": 244,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "783540e0-665f-4cad-843e-bf0d1e9b666f"
        },
        "item": {
          "id": "17ead30d-1e90-4eff-a24b-ed05048cda16",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3785dd45-d4af-4a84-8575-3dde13da32ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b11e0ba-cb5f-485b-b72b-30b17545e3a2",
        "cursor": {
          "ref": "b022db40-29aa-41b5-a790-9226c9155e0d",
          "length": 244,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "0c8d749e-0c14-4dd6-90e1-aaf239201319"
        },
        "item": {
          "id": "2b11e0ba-cb5f-485b-b72b-30b17545e3a2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d718e75a-b573-4a6d-87b0-3cff008dffce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7d4f2d-a378-4b57-ac03-af61374e439a",
        "cursor": {
          "ref": "e8300c96-062a-42d2-8053-5169cd19fc42",
          "length": 244,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "71fc0513-3af3-4236-bd7f-56ee7de113dc"
        },
        "item": {
          "id": "8e7d4f2d-a378-4b57-ac03-af61374e439a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5d1e8cab-92e3-44c8-974f-3f40b1eb4d7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b10d771-33cf-4c32-8ea3-cbb74341bf2e",
        "cursor": {
          "ref": "c3d58950-19d6-4c22-be78-0a90af9f7d97",
          "length": 244,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2e65a1be-815a-4b7b-ab65-68a7930154b3"
        },
        "item": {
          "id": "0b10d771-33cf-4c32-8ea3-cbb74341bf2e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1e9619ff-396f-4b2d-8033-9e27cb24118f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625c0d35-b5ed-4e92-a8d3-5a6a5b5a3619",
        "cursor": {
          "ref": "98948c8c-2460-4466-8466-0b3f1ea4fcff",
          "length": 244,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "41e403c4-aba7-4cf0-86f8-e78749b0d740"
        },
        "item": {
          "id": "625c0d35-b5ed-4e92-a8d3-5a6a5b5a3619",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f3c15f2e-eb7f-4036-9954-2f180d8d641e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17ee214-5daa-4ee2-9bc8-165c6a343f7e",
        "cursor": {
          "ref": "7c445450-9f0a-4608-af5d-41126aa6d885",
          "length": 244,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "783c3aa5-94c6-4620-a2d5-93408530227a"
        },
        "item": {
          "id": "d17ee214-5daa-4ee2-9bc8-165c6a343f7e",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cc1004b1-1f5b-4d6f-844c-6a95d2a509b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37db07b4-f431-4c3e-a8fc-73e33336f42b",
        "cursor": {
          "ref": "ec6b496d-0a83-4940-b0c0-4bb3cb21cc63",
          "length": 244,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e4e882ca-a150-4410-a8e3-ae4491e966e9"
        },
        "item": {
          "id": "37db07b4-f431-4c3e-a8fc-73e33336f42b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "00f22f2d-506a-4283-896a-afa8ebde272c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94cc6f7e-8a94-4fdc-a921-d28069c7c8b5",
        "cursor": {
          "ref": "3573f6c1-7680-4ac0-ad02-17464ed868f7",
          "length": 244,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "48a547dc-85a9-4750-a2d4-4256215d9f49"
        },
        "item": {
          "id": "94cc6f7e-8a94-4fdc-a921-d28069c7c8b5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "e7a558c0-3957-42ac-8bbb-8456be72cffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2d276a-02e1-4096-994a-d48966e7702c",
        "cursor": {
          "ref": "83d674d4-ae7a-462d-9c87-1a43d2dd7d92",
          "length": 244,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "09eed18a-d2e3-41d7-84e4-18d2014d4d94"
        },
        "item": {
          "id": "ed2d276a-02e1-4096-994a-d48966e7702c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "679016f0-d616-4174-a08b-b8c858a0fb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cab34af-1a5f-4706-8371-a88ec4fcf272",
        "cursor": {
          "ref": "cc9edd91-7b8f-46ad-bcb7-c7323120786d",
          "length": 244,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "61ccb722-d784-44ad-acd7-2b2e68525705"
        },
        "item": {
          "id": "9cab34af-1a5f-4706-8371-a88ec4fcf272",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "026eec29-aaaa-4263-970b-a9c40a59fe25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121d125b-fedd-4157-834d-72ce3741d1d7",
        "cursor": {
          "ref": "4ebbe20f-32d7-414c-81a8-0e36b1c16e7a",
          "length": 244,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "49b923c6-9852-429a-afac-e8d8bb7452b2"
        },
        "item": {
          "id": "121d125b-fedd-4157-834d-72ce3741d1d7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3479cddb-8009-4374-b94c-80f42182d2df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9784691a-15b6-4292-807c-180070fc8cd8",
        "cursor": {
          "ref": "217464c1-456a-4f81-af64-1ab2974a9495",
          "length": 244,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "464f74c3-ac73-4a1d-aeb8-3e50a6294be8"
        },
        "item": {
          "id": "9784691a-15b6-4292-807c-180070fc8cd8",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f1ea84ca-bb9f-4204-9e2b-165e4d332801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4e19dd-43e7-4818-9762-f990ce9ab3ba",
        "cursor": {
          "ref": "2c72f097-e38c-4dda-8c8e-c9b40f2f16eb",
          "length": 244,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e68cde81-b2e4-4e01-88b6-1883d85d5a01"
        },
        "item": {
          "id": "6a4e19dd-43e7-4818-9762-f990ce9ab3ba",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a564072f-e3a6-4cda-80ba-bf3d26a3eba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "625d859e-9d97-4473-87c5-d9cdd26180a4",
        "cursor": {
          "ref": "c8683233-ae18-451f-afe0-fd96206bdccc",
          "length": 244,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "63e75e72-05e3-44d7-8eb1-0f4da84c8da2"
        },
        "item": {
          "id": "625d859e-9d97-4473-87c5-d9cdd26180a4",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b96ab614-bb1d-4686-b228-e71e9d64aac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fb650b3-342a-4955-a0d9-93b399ec69a1",
        "cursor": {
          "ref": "90e7015e-cf9c-465b-8e44-ff35f57169c2",
          "length": 244,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "df0fc20f-1603-4123-83f0-c06d056d83a6"
        },
        "item": {
          "id": "9fb650b3-342a-4955-a0d9-93b399ec69a1",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d3e9714f-4cdd-4638-80e1-4652d7f7ff73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa47c387-7d60-4b30-84ed-37c63119858d",
        "cursor": {
          "ref": "78028687-6aac-4a79-b65d-3f9b5aa3bca6",
          "length": 244,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "97ca536a-650d-4c94-814d-302d4ba4136f"
        },
        "item": {
          "id": "aa47c387-7d60-4b30-84ed-37c63119858d",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c9bc9965-3ee1-4d70-9da8-a8781f0f7e96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "720954d0-5925-4c0a-9edf-4897711850a9",
        "cursor": {
          "ref": "9fd908e4-542e-4c28-88cd-8a38c134d772",
          "length": 244,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "14432027-2be7-42fc-8e33-ce1ffba8f569"
        },
        "item": {
          "id": "720954d0-5925-4c0a-9edf-4897711850a9",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "02f45419-2719-40d9-8a84-83dfbc0559ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494dd8fb-2e58-427d-98f0-bc24f9b1387a",
        "cursor": {
          "ref": "0349cce5-c52a-497d-9cfb-bec41f360d6d",
          "length": 244,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "89f829d0-a349-4161-8b53-34f1178dbe90"
        },
        "item": {
          "id": "494dd8fb-2e58-427d-98f0-bc24f9b1387a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "32d8c265-aa9e-4648-9eb6-cee20aea54b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2bb55dd-0d86-47e9-bbb5-e765361b4c88",
        "cursor": {
          "ref": "083f7ef2-0b37-427a-9c3d-989221a4375b",
          "length": 244,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "9ad66217-94fe-4f36-97be-477ec80caf09"
        },
        "item": {
          "id": "b2bb55dd-0d86-47e9-bbb5-e765361b4c88",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "d9a5ac23-c3b2-4bf2-b100-71b5c5ac92e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e46533-5c9e-4e1b-ab88-83dbc131f162",
        "cursor": {
          "ref": "7927dbb2-c68e-429b-83bc-c008a69f4b0f",
          "length": 244,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6282df4d-17f7-4dad-b438-83204941d044"
        },
        "item": {
          "id": "93e46533-5c9e-4e1b-ab88-83dbc131f162",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6b8ad16d-338a-47d6-bd4d-9cf9b0273c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "615420eb-303f-4b4f-aa4c-8524eee12df9",
        "cursor": {
          "ref": "665d2eb3-ea44-4b80-a61e-32b2ad0ef4d1",
          "length": 244,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7dc0aad7-7dbf-4ed3-a1af-e63460d0b60c"
        },
        "item": {
          "id": "615420eb-303f-4b4f-aa4c-8524eee12df9",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "d390a421-b053-4942-8594-69afca55c8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f063f95-226e-4fd3-96e1-75b0466cdd11",
        "cursor": {
          "ref": "212e7800-8931-4d1f-a7eb-1a81c4594168",
          "length": 244,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f7b56345-9d8c-47e8-9ac6-ac62897a0aff"
        },
        "item": {
          "id": "9f063f95-226e-4fd3-96e1-75b0466cdd11",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fd46596d-6894-411b-9ed4-22eb89cfb9c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039659ec-331b-4d84-a683-7459cf54cb87",
        "cursor": {
          "ref": "3225e7b3-5133-4e84-a88e-84e1e3f6c9b0",
          "length": 244,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b0bd95dc-53d1-430b-bdbb-69c0e7256232"
        },
        "item": {
          "id": "039659ec-331b-4d84-a683-7459cf54cb87",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a1d8e24a-ff27-4e28-a696-532fa8f4fdb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b0d742-b829-45b9-8889-659b9ee62176",
        "cursor": {
          "ref": "a97e3e6e-8894-4d41-9dca-dfe3aaa85595",
          "length": 244,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cb075870-659e-41a5-b909-b8ca73c335c9"
        },
        "item": {
          "id": "12b0d742-b829-45b9-8889-659b9ee62176",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ce2d9d91-16f1-4e19-a39b-b6f13eb58964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee498ec-f989-4ae4-9581-a5995d6f2b90",
        "cursor": {
          "ref": "e75c3b3c-35f9-415c-9ee1-52c727188a4a",
          "length": 244,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "c5b3ff75-f095-4dec-ae68-6f25a0ba65ec"
        },
        "item": {
          "id": "3ee498ec-f989-4ae4-9581-a5995d6f2b90",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7d575c4f-6c22-450a-8f1f-79536705e6e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5773c5-7106-45b1-b9c4-ca8aede03673",
        "cursor": {
          "ref": "20c5f893-e57e-4c7b-81d5-b31d43a3fa20",
          "length": 244,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "82e968e9-d616-4a8e-81e9-3a9cc84d839a"
        },
        "item": {
          "id": "bc5773c5-7106-45b1-b9c4-ca8aede03673",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ffdaaee5-1402-4581-a6ae-eee8030364d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24d6182-560d-4949-a9dd-48961b872edc",
        "cursor": {
          "ref": "846ff3e2-a669-4ec9-aa85-68579f61a4f5",
          "length": 244,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "08ce1fe0-5074-486f-8865-d642dc67cfff"
        },
        "item": {
          "id": "e24d6182-560d-4949-a9dd-48961b872edc",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "53c30b98-7713-4f76-9dc4-2f471f1b97c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df09bd8-c7fe-4b53-af85-c3867a158737",
        "cursor": {
          "ref": "d412f600-a29f-4856-8cf2-f9771e8a1e08",
          "length": 244,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bbc6e0f5-e5ef-440c-8b09-9415967ea68b"
        },
        "item": {
          "id": "3df09bd8-c7fe-4b53-af85-c3867a158737",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "88dcdd25-69f1-4f96-9366-e2f82740f77b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e49f8f-d66f-41a6-8b59-f4dadafd8bbb",
        "cursor": {
          "ref": "372711b4-cc6c-48c7-9a41-fa4867dd968a",
          "length": 244,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8bb78856-76b9-4e38-9183-f8d034408448"
        },
        "item": {
          "id": "c8e49f8f-d66f-41a6-8b59-f4dadafd8bbb",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d99177ad-7e9a-4302-9e9a-88e5fc86c9e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee5b052-ad5c-4ec1-b5cc-15d2202a5fb0",
        "cursor": {
          "ref": "73413686-88c6-4791-9516-adc724bd0f89",
          "length": 244,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fb242d48-e2db-4f7d-a438-2877f19ee19b"
        },
        "item": {
          "id": "cee5b052-ad5c-4ec1-b5cc-15d2202a5fb0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "fb57bf3e-ebc5-4e7b-b686-5f6d4d80a912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f25519-5e21-430d-bcb9-c3faab012d18",
        "cursor": {
          "ref": "bf1665b9-be49-4bb4-8a7e-afe168c1b942",
          "length": 244,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "9e23e694-8da8-4dd1-a180-e6fe1f054a54"
        },
        "item": {
          "id": "c5f25519-5e21-430d-bcb9-c3faab012d18",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "56830bf7-2d11-45ed-9cb1-ff632b65d107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c722908f-aa63-475a-909c-38e6e616c252",
        "cursor": {
          "ref": "76041fe3-0e41-4b06-a13f-9af5666296a2",
          "length": 244,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b3fb7019-7cb0-4fd9-ab22-7149d007784a"
        },
        "item": {
          "id": "c722908f-aa63-475a-909c-38e6e616c252",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "0c335bbd-3ac4-4eb0-9382-f836984e5f7c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb84263e-9552-4c1c-9897-3af3a01f4534",
        "cursor": {
          "ref": "c76fc8b3-597e-4a38-b32a-f836cf5637a1",
          "length": 244,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3834c9b4-bfba-4f85-bd95-375880967f3e"
        },
        "item": {
          "id": "eb84263e-9552-4c1c-9897-3af3a01f4534",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7b3f4b3c-df96-43d1-95e4-6b5f58239e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16444361-2c18-4de6-81a8-30f2e8176383",
        "cursor": {
          "ref": "14474c1f-17a9-4540-99c2-4a5ca7f56da2",
          "length": 244,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "b4653e1a-f604-42cd-9108-135760a02646"
        },
        "item": {
          "id": "16444361-2c18-4de6-81a8-30f2e8176383",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "143f6c04-19a3-498f-bf99-739602534aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f73834e-3a48-46d0-897c-123eb86dc0e4",
        "cursor": {
          "ref": "e9767fce-bc4d-4792-a198-90a5c00481c1",
          "length": 244,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dcee9ae2-9581-4e87-bd46-9d9da6c1fed9"
        },
        "item": {
          "id": "8f73834e-3a48-46d0-897c-123eb86dc0e4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "829e1f28-c118-4f0d-8a7b-779e980d4c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e18215e9-c9fe-4f13-9fb6-62ec2ef13eac",
        "cursor": {
          "ref": "174202d0-b355-4f39-b99f-5ea06500c143",
          "length": 244,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4acc91ba-e567-4a46-b01c-34114c633427"
        },
        "item": {
          "id": "e18215e9-c9fe-4f13-9fb6-62ec2ef13eac",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "14141268-2143-4df1-9184-5ebcea73f447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eba63c3-8a49-4005-bf75-aad79f14f689",
        "cursor": {
          "ref": "caa233dc-8b08-4a8f-a53d-b097bf6f71b7",
          "length": 244,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2df5f2bc-f6cf-4b29-9364-999cbb9d422c"
        },
        "item": {
          "id": "2eba63c3-8a49-4005-bf75-aad79f14f689",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "eea47405-a9f5-441f-9fcd-79c43aa5589f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36de33f8-43ca-407e-a98b-f847ff5176ca",
        "cursor": {
          "ref": "a5b16baf-f3a5-461a-8f2c-6f0945389939",
          "length": 244,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4c953779-d85b-4774-b409-249e7e9e5a6c"
        },
        "item": {
          "id": "36de33f8-43ca-407e-a98b-f847ff5176ca",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "77b640dc-2ac7-49f2-818e-f3837a1846e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a65f63-db80-4db9-a134-96b834298a63",
        "cursor": {
          "ref": "bc67cb4c-d606-47e8-9168-7129e47a6f05",
          "length": 244,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6771a2d0-02da-40f7-8ef0-a371daf045db"
        },
        "item": {
          "id": "b4a65f63-db80-4db9-a134-96b834298a63",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6e18978c-1345-4d71-b626-b6d1448e49f5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e38fa2-eb13-4a2e-b52a-cbaf28eb2911",
        "cursor": {
          "ref": "493ad711-a24f-4f26-8de4-17d794db55c1",
          "length": 244,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7dfd5aa7-ff2a-4493-bb1f-e9dcaf945552"
        },
        "item": {
          "id": "61e38fa2-eb13-4a2e-b52a-cbaf28eb2911",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5541dc52-d917-47e6-a366-2514f7c7750f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3a51ed-126e-4c6e-9e68-798faa433582",
        "cursor": {
          "ref": "9cd0f315-72d1-4ea9-8945-00c59e5ec4ad",
          "length": 244,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1bf18c09-c86e-4725-aa03-d85b8cfd7421"
        },
        "item": {
          "id": "5b3a51ed-126e-4c6e-9e68-798faa433582",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "7fe7e0ee-2b61-4a1a-8ec6-ecb45bf9f06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a6b4bf-a46c-4717-a354-a2f6c90cea07",
        "cursor": {
          "ref": "ad5dacfe-e229-447c-9758-eae68fe51f7f",
          "length": 244,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d5bc746e-94e2-4fbd-9197-9c0a28856cbf"
        },
        "item": {
          "id": "83a6b4bf-a46c-4717-a354-a2f6c90cea07",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "45283851-951e-411c-b154-bc58bf4215d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266ea30d-f50d-4826-86df-a2c755564705",
        "cursor": {
          "ref": "9b3f4a07-ee58-4752-9910-05ca49a4defb",
          "length": 244,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "da02477f-58e3-43d3-a4a1-e2b5fee78e9d"
        },
        "item": {
          "id": "266ea30d-f50d-4826-86df-a2c755564705",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "28ca514c-ee52-4cb2-81f9-3c2b41a2c81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f8b5c8-4cec-4f41-a93c-4e96f2ddc63e",
        "cursor": {
          "ref": "c6056a85-007f-4a23-925d-11e031d4b1d0",
          "length": 244,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "e87ad56d-055d-4b49-a135-4e9b8890fdec"
        },
        "item": {
          "id": "f1f8b5c8-4cec-4f41-a93c-4e96f2ddc63e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "21b4618a-b6fc-456c-8b97-e11462f7ea35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d63e11a-d186-45b5-8369-459d55a4795b",
        "cursor": {
          "ref": "bafc9562-89b8-47d5-9f8a-5a3d83fbf257",
          "length": 244,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "26571c96-d7fc-4b71-88b7-ec70ea16f359"
        },
        "item": {
          "id": "1d63e11a-d186-45b5-8369-459d55a4795b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "96dfcd20-e53b-482f-b743-f987b1e4793a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5007b6ec-461c-40f9-988a-5dcca366d1b3",
        "cursor": {
          "ref": "f90eac2d-7b51-4ad6-9b84-91a1f37a1fb3",
          "length": 244,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "bf8b4bdc-f081-44ef-a479-377c26f2c615"
        },
        "item": {
          "id": "5007b6ec-461c-40f9-988a-5dcca366d1b3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f27c353f-fda0-475c-ad00-98208eb0f2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364078bc-d273-429a-a711-574706445543",
        "cursor": {
          "ref": "7578a0cd-2c27-45ae-b111-506ea5970851",
          "length": 244,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "68e1f5df-bb61-4375-9536-a8cd7008a092"
        },
        "item": {
          "id": "364078bc-d273-429a-a711-574706445543",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "acf989bc-81f5-4ce1-9184-aac7513b2d0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89cc777f-066c-4ebb-9091-c66d42470e6c",
        "cursor": {
          "ref": "e5bd2720-6eed-4de0-bd95-ce5774baa6d5",
          "length": 244,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "6e1027be-2c1f-4168-b80b-e10d7e2e0910"
        },
        "item": {
          "id": "89cc777f-066c-4ebb-9091-c66d42470e6c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "44f302e9-5658-46aa-8039-f4278f382876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9852098-4dc3-45a1-8b5e-c2587045a663",
        "cursor": {
          "ref": "317425bd-cb57-4f07-bb24-22a7884c8d40",
          "length": 244,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d4dbe2b4-e7ac-436a-966e-c4ae15952058"
        },
        "item": {
          "id": "d9852098-4dc3-45a1-8b5e-c2587045a663",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "4f029df7-6dcb-4b6e-8d09-8d626e7e6118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210490a4-83d4-4d75-ad94-fe5dba82fbe2",
        "cursor": {
          "ref": "6907c01e-fd5e-44d3-9b79-8b3e67b8556f",
          "length": 244,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "3606a337-dadf-4c9e-9979-31b868955951"
        },
        "item": {
          "id": "210490a4-83d4-4d75-ad94-fe5dba82fbe2",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "d5b2352a-8ddb-4c96-9431-f966ad0fb1da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c452e3c-2631-43d8-a08a-9b63073f92f6",
        "cursor": {
          "ref": "cd2fe4d7-0dd4-42ba-b147-cd0a358b2677",
          "length": 244,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "77878cb3-9970-4c8a-aff8-27659acdaf8d"
        },
        "item": {
          "id": "5c452e3c-2631-43d8-a08a-9b63073f92f6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4513fb1e-6f14-4bce-8786-2828de7ffb24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f031e888-a8e7-4a2a-b172-9b3299567e69",
        "cursor": {
          "ref": "b4eaaf60-7ec0-4b3f-aa64-ca36237bed1a",
          "length": 244,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "f3d4ba7c-3658-4d23-87e8-89a644346ddb"
        },
        "item": {
          "id": "f031e888-a8e7-4a2a-b172-9b3299567e69",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7e21419b-7152-4b69-aeee-77f79bce59db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e2ecae9-8e96-4c67-b53d-12dda81741e6",
        "cursor": {
          "ref": "b447dbf6-91f7-422c-ad80-6597e75525cd",
          "length": 244,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d24bc7ce-9129-4b89-b330-f75d7a405a39"
        },
        "item": {
          "id": "7e2ecae9-8e96-4c67-b53d-12dda81741e6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "c848129a-7c65-4f18-93aa-068c4eb68a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d84a39-9d54-4696-bce8-bb2be8aa2801",
        "cursor": {
          "ref": "c9db26d3-71d3-42dc-86f2-6490aa74cb47",
          "length": 244,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ef7bea8d-6027-4db4-b61c-76fa79e3f449"
        },
        "item": {
          "id": "63d84a39-9d54-4696-bce8-bb2be8aa2801",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "da20734a-4942-4414-9c7a-52ccb6a2d476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6241ff8-9ff8-4bd2-9b48-bdd0d454f498",
        "cursor": {
          "ref": "69ca478d-186f-4fc3-ae95-c463fe840cf2",
          "length": 244,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "f39cde4e-11c3-4ac7-bfc8-24f053001c54"
        },
        "item": {
          "id": "b6241ff8-9ff8-4bd2-9b48-bdd0d454f498",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c3b03951-149e-4833-a292-064612792ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3081f5dc-5421-4a6e-9877-96985f345085",
        "cursor": {
          "ref": "fbe492a2-021b-4e03-88d1-2e6557ef2e9a",
          "length": 244,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "b2fa6b8f-acb6-46e8-b546-473cf10a4614"
        },
        "item": {
          "id": "3081f5dc-5421-4a6e-9877-96985f345085",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9a54de92-ef5c-48f2-82a4-6295da96a9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ee6720-11a7-48b6-b931-25e938625193",
        "cursor": {
          "ref": "89b06782-0743-46b4-8a84-241948b9a62e",
          "length": 244,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "df88873c-1b6f-4c8e-b576-b2ac4abb1339"
        },
        "item": {
          "id": "08ee6720-11a7-48b6-b931-25e938625193",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d0648eba-334d-4052-ba45-5c6601b1b01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f48e4b-b333-44d4-8d8b-e1cae18d7b20",
        "cursor": {
          "ref": "aac4e932-624e-4053-bd1a-914dfda6955e",
          "length": 244,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "f41dec55-5f85-4acd-812d-372a71fbb780"
        },
        "item": {
          "id": "d8f48e4b-b333-44d4-8d8b-e1cae18d7b20",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ee0d8af3-f76b-4554-a7f1-44198868b54e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28685e5e-db84-4f50-8b3c-042dfe615466",
        "cursor": {
          "ref": "17333628-dfd7-45bb-a0aa-466fe398dc7e",
          "length": 244,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "bca1b0e4-9895-4169-94a8-999197604bd8"
        },
        "item": {
          "id": "28685e5e-db84-4f50-8b3c-042dfe615466",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "93f02f41-1763-400c-9c98-8cd3b5812855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af835fa6-59d4-43de-ad4e-6f26eeded8e5",
        "cursor": {
          "ref": "32ef6770-e4c2-4e2d-bae8-10d2879a3b6d",
          "length": 244,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "0717592e-f965-467f-9bcf-df2e06f746d2"
        },
        "item": {
          "id": "af835fa6-59d4-43de-ad4e-6f26eeded8e5",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e7e3b2dc-ae12-41bf-8569-3bf5b3d03393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac19299-2933-4c47-9574-a98106a161a4",
        "cursor": {
          "ref": "913bca47-5812-4c7c-bac9-3981b49884cb",
          "length": 244,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d0e5bcfe-a72e-47ed-bc48-cf3e9e4c8df8"
        },
        "item": {
          "id": "dac19299-2933-4c47-9574-a98106a161a4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "50d15a8a-a42b-46ad-b44d-cc8fa7e08d44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c735322b-8fab-4c39-9eda-e85a2f4eb16b",
        "cursor": {
          "ref": "ee8baee3-aefa-4dc1-bb9e-790b05a78be1",
          "length": 244,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c4dd20c4-cdb3-4409-8f57-3caf171baf23"
        },
        "item": {
          "id": "c735322b-8fab-4c39-9eda-e85a2f4eb16b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "38231fb8-d535-4d63-9fa9-206b64cfe73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e138976d-98a8-4adb-9117-29a7ab3934cb",
        "cursor": {
          "ref": "e9a5bbe7-a8e9-4a6b-a4cd-4b677303a25a",
          "length": 244,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "2a6d6089-9d14-4925-ad9c-ea782a67cf25"
        },
        "item": {
          "id": "e138976d-98a8-4adb-9117-29a7ab3934cb",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "69a2fe51-f637-45ce-b8cb-a88ea1c25705",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb69d07b-a70e-481d-a846-2c16a098d1f4",
        "cursor": {
          "ref": "641862ec-4cba-4dbf-bc66-6c8a4fdb5765",
          "length": 244,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "71497d0d-c448-4e72-953d-7e9739d307b6"
        },
        "item": {
          "id": "bb69d07b-a70e-481d-a846-2c16a098d1f4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "77fdc77c-5efa-4d9f-b4c9-5443ce72f480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6e8b3c-9a50-48b8-9cc5-18efc1ba2b58",
        "cursor": {
          "ref": "fa2c9b77-42b9-4dd0-b76f-0ad3dd246aa7",
          "length": 244,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c3347d21-43ed-4154-b1e3-f209fc5b5dd2"
        },
        "item": {
          "id": "fb6e8b3c-9a50-48b8-9cc5-18efc1ba2b58",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b5fd9a6b-88d4-4a65-a4c1-fc715066710b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6afdd539-d8c3-4532-bbec-d98d439a2737",
        "cursor": {
          "ref": "3310e61a-2b03-4ee0-b00b-27f26ae69d56",
          "length": 244,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "5819852f-59e5-4b3e-8819-595e6caed471"
        },
        "item": {
          "id": "6afdd539-d8c3-4532-bbec-d98d439a2737",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2c465ef0-def3-4b91-a603-32db84ce65aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "982a7781-27eb-499d-a747-ee4eb9c5421a",
        "cursor": {
          "ref": "b39dd72c-fc3d-4008-9161-c88cf70e13a6",
          "length": 244,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "3bc9c8f4-44d9-4acd-9997-803ccbacfb83"
        },
        "item": {
          "id": "982a7781-27eb-499d-a747-ee4eb9c5421a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "fd749fd3-9dad-4fd5-9f83-444737284be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92dd782-ab44-417b-9989-c07690ed635d",
        "cursor": {
          "ref": "3ceae248-9f9b-48bf-922d-fe9b17304d90",
          "length": 244,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "63b2da72-2e8b-49ae-b8c3-e6ecdc794299"
        },
        "item": {
          "id": "a92dd782-ab44-417b-9989-c07690ed635d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "9906daef-6d01-4907-9309-054fa2ab3502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf9ddbc-f75c-4846-9946-44c9d30e7a24",
        "cursor": {
          "ref": "ade3a735-caab-4b7b-b543-d3a23b95bb2b",
          "length": 244,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e5b0255f-4654-4d3d-b95c-c877a90c3ee3"
        },
        "item": {
          "id": "9cf9ddbc-f75c-4846-9946-44c9d30e7a24",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bca927f7-b28f-4276-96c1-e02c122e90b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b58351c-ebf1-4ce8-b570-77e4c45fcbeb",
        "cursor": {
          "ref": "35593de5-b8b7-4568-be0e-2d7748c0c12e",
          "length": 244,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "70b38703-0c0e-4a06-a5d6-eb1868ae0e8f"
        },
        "item": {
          "id": "3b58351c-ebf1-4ce8-b570-77e4c45fcbeb",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "bf70a8c5-0e45-48f3-be31-c6ff3e25baaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4956e646-bd6d-4614-b221-f0a278203828",
        "cursor": {
          "ref": "56336f0c-014a-44c4-b13d-632f85a5cbf0",
          "length": 244,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c0ba68c4-b44a-4e24-a05b-43cf2cf2cc97"
        },
        "item": {
          "id": "4956e646-bd6d-4614-b221-f0a278203828",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "96f84606-ac04-4338-9cb4-20ae34e9270c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea32f4b-27bd-49f3-9e93-734b11913182",
        "cursor": {
          "ref": "9087755a-f011-400d-a2b5-5af830635b81",
          "length": 244,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c1dc33c6-b0bf-40ea-8842-d287ad36c623"
        },
        "item": {
          "id": "6ea32f4b-27bd-49f3-9e93-734b11913182",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "540dfef1-1b62-41ea-86d4-f2ae9b15be4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734d54c4-b49e-4568-af1c-53c171c97c84",
        "cursor": {
          "ref": "9aa81460-d1d5-4273-902c-2d5a5cee85fa",
          "length": 244,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fa5c94dd-2064-4a0c-8286-4abdedc17df1"
        },
        "item": {
          "id": "734d54c4-b49e-4568-af1c-53c171c97c84",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "363217c6-564f-46d6-9536-1240f74e2420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b584c7ff-b4b1-4e97-bbc6-45023fb96176",
        "cursor": {
          "ref": "dac3cc78-5aac-4919-8803-8ce9a82f440a",
          "length": 244,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "02634452-124a-4844-903d-e038deb32dd2"
        },
        "item": {
          "id": "b584c7ff-b4b1-4e97-bbc6-45023fb96176",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "810e6cb5-a1d1-49c4-95a2-f3bb053d8542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8502dd-bb7f-4364-80b4-96f9fc978685",
        "cursor": {
          "ref": "9a29b8d8-c239-410f-90eb-81547c93296f",
          "length": 244,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7e5045ed-bc0c-45cc-a894-64fa4399c081"
        },
        "item": {
          "id": "7c8502dd-bb7f-4364-80b4-96f9fc978685",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "5e528ec3-614c-4706-bbf1-85a774237202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52828369-8dd2-489f-b2d0-487d14f67886",
        "cursor": {
          "ref": "7cfadefb-89db-47b8-a5c9-98cd203fb407",
          "length": 244,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3f52d5d8-d3d2-40a9-9c38-41a07f98d2a2"
        },
        "item": {
          "id": "52828369-8dd2-489f-b2d0-487d14f67886",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4894d09b-692d-4b8d-afe7-41c550ea6e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8170373-c5f1-4b17-b701-96f3dad2fbb4",
        "cursor": {
          "ref": "d77556a8-8c86-48f0-ab0c-d327687bcfdf",
          "length": 244,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9cff09df-10fe-430b-b905-528c9fdbbc5b"
        },
        "item": {
          "id": "c8170373-c5f1-4b17-b701-96f3dad2fbb4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "38792b9b-c09b-4012-ad93-4dda46a9bf05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b558d52-04af-4062-980f-31419c4b8ae9",
        "cursor": {
          "ref": "33a59d22-b188-4905-8dcd-f8edfac70748",
          "length": 244,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6ba3c3cf-d0ed-4664-b485-464c9c05b066"
        },
        "item": {
          "id": "7b558d52-04af-4062-980f-31419c4b8ae9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a539a932-eb3f-4277-8ecf-053e7a01c2fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91a778c9-7617-4ef4-b658-583a65b1046b",
        "cursor": {
          "ref": "e037528f-8f50-4d46-827d-4f6e4f541614",
          "length": 244,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c4399535-a13c-401d-bba1-32bba49e5baa"
        },
        "item": {
          "id": "91a778c9-7617-4ef4-b658-583a65b1046b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e7f825ad-4160-42d7-ad04-398a9c0be3f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd4159b2-3ae8-426b-8fc2-d671176a4a47",
        "cursor": {
          "ref": "922556f9-5695-4d04-95ce-e077049a3961",
          "length": 244,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b862323d-99f6-427a-80bb-de138301c7f5"
        },
        "item": {
          "id": "cd4159b2-3ae8-426b-8fc2-d671176a4a47",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "71f4e493-1626-4060-be1b-a89a54dc5315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121fd89e-30e5-4ee7-86d7-6b1f68b53874",
        "cursor": {
          "ref": "49cd90c2-a980-4a80-aeb4-c70a40845d1b",
          "length": 244,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "dceebdf6-f78e-4eff-9d6d-309d6b9b23bc"
        },
        "item": {
          "id": "121fd89e-30e5-4ee7-86d7-6b1f68b53874",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ec86922f-7607-4b15-8d25-ae8b3b7f349d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd5da1bd-9464-41f3-bfa8-55b0f1ec19cd",
        "cursor": {
          "ref": "d7540db2-5912-4620-b1bc-57467a4a742c",
          "length": 244,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "31ec95e9-1dae-4b87-ba92-bb01657a21c4"
        },
        "item": {
          "id": "dd5da1bd-9464-41f3-bfa8-55b0f1ec19cd",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "991add59-6511-4bb1-abc4-fbdeb90c9099",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b093a4-0374-4ec5-bf1e-14b59aec9cf6",
        "cursor": {
          "ref": "788abb3a-b551-4456-9df1-06aa3643f161",
          "length": 244,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "1c71eec2-b88b-46ee-8b9f-77ae5c231b8f"
        },
        "item": {
          "id": "e0b093a4-0374-4ec5-bf1e-14b59aec9cf6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4598ed7e-2022-472d-be0e-5df88a56eaf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0341ea23-060e-4623-b1e4-18e5e32f1ec7",
        "cursor": {
          "ref": "b5756b19-71c3-4ab5-9c10-a3f1f2171d8e",
          "length": 244,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6bbf9e2b-5fc3-4250-bcdf-9eb6746f8ef8"
        },
        "item": {
          "id": "0341ea23-060e-4623-b1e4-18e5e32f1ec7",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "cc00e85a-9bcf-48ab-998a-d08d0a935c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e1cb4a5-0874-45f5-a19f-b84e6530a6aa",
        "cursor": {
          "ref": "a3b1582b-3a0d-4045-ba0e-3ce244d0a90e",
          "length": 244,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f54afb42-dd73-46c7-a1da-ec8741333e96"
        },
        "item": {
          "id": "5e1cb4a5-0874-45f5-a19f-b84e6530a6aa",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "69ff757a-72cd-4ec1-ae11-551a6815a3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbc6b6b-46e9-465e-92e3-24029e3733ea",
        "cursor": {
          "ref": "601e32e7-622c-4fe1-a545-10180a8bfa27",
          "length": 244,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ed44bb6c-5f66-4b00-83a3-09c6f0cb5677"
        },
        "item": {
          "id": "dbbc6b6b-46e9-465e-92e3-24029e3733ea",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7c8aa083-f4bb-40a3-983c-c630534e40ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc86a1e2-11d7-464f-a31e-45ef1af3c309",
        "cursor": {
          "ref": "93d28759-de51-47ad-ab3e-0e82ae5278e7",
          "length": 244,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "89a44c32-0975-44d9-acee-a5057103cd53"
        },
        "item": {
          "id": "fc86a1e2-11d7-464f-a31e-45ef1af3c309",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9f33d13d-ded6-453a-9a22-3a8de71f8c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4d155e-f79a-4a6e-a98d-3d1436143f5d",
        "cursor": {
          "ref": "abdb6678-ac85-4db8-943c-210e9fe74560",
          "length": 244,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e6c5ef50-5fb7-4d0d-b348-626b865bf82e"
        },
        "item": {
          "id": "dc4d155e-f79a-4a6e-a98d-3d1436143f5d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5c7e4451-180a-4602-ad46-937ea40ba95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ddd122-41cc-41e5-b7e4-6787c9676889",
        "cursor": {
          "ref": "5d6421ab-2047-4596-903c-1c37c3777cb1",
          "length": 244,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ec1bb812-0f91-43e5-a04e-fe0e15a16ee1"
        },
        "item": {
          "id": "d7ddd122-41cc-41e5-b7e4-6787c9676889",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "2159b145-fb7a-484f-8534-b0e5fbfbb421",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3828ac-e115-4196-8cb3-c83d52aeb8e7",
        "cursor": {
          "ref": "c7bf1cc4-819b-4519-a0b4-d3d69921aab7",
          "length": 244,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "33cb2ee3-3b0a-40e6-aa3b-7c25bc994781"
        },
        "item": {
          "id": "6d3828ac-e115-4196-8cb3-c83d52aeb8e7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dc670600-9966-4e50-9057-6a62a6277e4d",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80d9776-1b11-4444-963e-f6bf7ce669ac",
        "cursor": {
          "ref": "b9fa15b5-0097-43df-998d-2dbe1e9f6c29",
          "length": 244,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "0b7d5243-5a50-4cdc-8a3c-4242ca28af24"
        },
        "item": {
          "id": "a80d9776-1b11-4444-963e-f6bf7ce669ac",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a79cec22-7aab-44a4-8703-cffc2a24fc09",
          "status": "Created",
          "code": 201,
          "responseTime": 142,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f256df4-a326-4adc-b274-87e2323cf29a",
        "cursor": {
          "ref": "837cbcf1-77fc-4bfe-a95b-48fd38569ad6",
          "length": 244,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "11080c0f-fc38-4393-8a26-4c5080bc99b4"
        },
        "item": {
          "id": "1f256df4-a326-4adc-b274-87e2323cf29a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "dce8e111-c958-44bb-a918-a592f70965b9",
          "status": "Created",
          "code": 201,
          "responseTime": 78,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8687896b-bc05-4ef0-b209-b60b31ebb61b",
        "cursor": {
          "ref": "51037b68-94bd-4694-9d5d-b2adc00285ce",
          "length": 244,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "993ab9f2-fc8b-4a1a-887c-0c3fb9bf25e6"
        },
        "item": {
          "id": "8687896b-bc05-4ef0-b209-b60b31ebb61b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e598028b-c882-4fd5-893d-3f239c5ff904",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb0b0f0-5429-4263-b03a-59db4df1f0f0",
        "cursor": {
          "ref": "bb06af73-2d24-4f66-b970-96f84ab1e901",
          "length": 244,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2a42e1f5-d9d1-40d9-8499-2b4010ba8756"
        },
        "item": {
          "id": "ccb0b0f0-5429-4263-b03a-59db4df1f0f0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9c3a54e0-3bfa-4ef7-a2eb-5e3d3174e000",
          "status": "Created",
          "code": 201,
          "responseTime": 48,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8e65c9-a0b1-47bb-877f-9feaacb6130c",
        "cursor": {
          "ref": "a624995f-691a-455c-bc41-d0b55d20c480",
          "length": 244,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "90f385f0-45a0-4a8e-8919-1f72a87290d3"
        },
        "item": {
          "id": "ca8e65c9-a0b1-47bb-877f-9feaacb6130c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "41cb3121-c831-46b6-a331-5da1a51b1c97",
          "status": "Created",
          "code": 201,
          "responseTime": 47,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfba6eac-0b3b-4e3f-93ff-920901908443",
        "cursor": {
          "ref": "688577ab-6cba-4f1b-9888-78876bc088c5",
          "length": 244,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4d164fea-78a7-4c7e-8d79-611129ab0551"
        },
        "item": {
          "id": "dfba6eac-0b3b-4e3f-93ff-920901908443",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "fd144302-31d1-4e78-9ce9-33b52795fd4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d5d30b-d7ea-4eec-a3ee-b867c85502a8",
        "cursor": {
          "ref": "ddd961c8-0485-4881-8b1d-dbd455faccf8",
          "length": 244,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c13960d4-1a48-4af6-81ee-dee26ec18b24"
        },
        "item": {
          "id": "e2d5d30b-d7ea-4eec-a3ee-b867c85502a8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "d66230c8-bc72-4527-875f-1b31e71b61e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d2d179-0e01-4573-a5fe-c4595241cc7e",
        "cursor": {
          "ref": "cb1200df-61d3-4888-8dbb-8c3c06b97e1e",
          "length": 244,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5bf214d3-fdd4-4a0d-9463-fa58d2bdf151"
        },
        "item": {
          "id": "95d2d179-0e01-4573-a5fe-c4595241cc7e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "06068471-71f9-4612-8a4b-1abe14b082df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d52df796-09a8-459e-91a0-0e1efa649e29",
        "cursor": {
          "ref": "780217e4-0f03-43dc-bfaa-f8219fc7167a",
          "length": 244,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "8459f53a-24bb-41e0-b619-a0ee9093a635"
        },
        "item": {
          "id": "d52df796-09a8-459e-91a0-0e1efa649e29",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1d2371c4-68c1-4e54-8829-682a3421b063",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c50d41-26b8-46a6-b770-df73cab40769",
        "cursor": {
          "ref": "1665411f-d95e-410e-9524-3b98f6a60599",
          "length": 244,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ef840499-82e0-43aa-9f98-20650915827e"
        },
        "item": {
          "id": "e9c50d41-26b8-46a6-b770-df73cab40769",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "9c021343-9d28-463a-a958-b8c05f0a5ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1276f20e-87bb-4647-985a-a9f942be6dfe",
        "cursor": {
          "ref": "985eaed6-7eae-435d-9cf8-e9405634b1c6",
          "length": 244,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b2ca2867-4253-42d9-bc22-7aa1491a9867"
        },
        "item": {
          "id": "1276f20e-87bb-4647-985a-a9f942be6dfe",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "81d30a77-db73-4891-a961-ab690ec75da4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057723f5-ebf3-48d0-a4ef-4e016b017979",
        "cursor": {
          "ref": "e44e4548-2b84-429f-be5f-c3975a699a5e",
          "length": 244,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ab0a3e08-0a73-4779-a803-fcf5edd50429"
        },
        "item": {
          "id": "057723f5-ebf3-48d0-a4ef-4e016b017979",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7c3a5c8c-3c32-43c7-9c1f-2be54d8488d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "906b6e4a-e818-4243-8749-cb7ee4df8200",
        "cursor": {
          "ref": "2851c305-8d8d-48a7-a665-822ea1b1ce49",
          "length": 244,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "20d0f81f-d71d-48a5-98d3-4a82389c210c"
        },
        "item": {
          "id": "906b6e4a-e818-4243-8749-cb7ee4df8200",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "173eaf5e-2099-4e39-8db7-d15bb5138693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2a9614-f008-4852-b9c8-8aa8689e1f64",
        "cursor": {
          "ref": "34db397b-cda1-476c-811b-cb6df7f6bccf",
          "length": 244,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "be02dd1e-7dd5-417f-8634-d4b5376e6dc2"
        },
        "item": {
          "id": "eb2a9614-f008-4852-b9c8-8aa8689e1f64",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1f5e09ed-1e5c-4e30-8c2b-f0d75b1383f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35af69b8-b266-46bb-b19b-68e2fa82a8dc",
        "cursor": {
          "ref": "f0a24dcc-7752-4ddb-916e-4790ec189efe",
          "length": 244,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ad9276da-4df7-4b2c-b317-2c59b6ae3d02"
        },
        "item": {
          "id": "35af69b8-b266-46bb-b19b-68e2fa82a8dc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "9fa8724f-7ad3-4b76-b451-d6a037c47028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba349cd9-e9cd-46a8-a2ea-3d73232c81af",
        "cursor": {
          "ref": "5645b8fa-291e-4ac0-b558-73dd15645d93",
          "length": 244,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "99e3d94a-5f87-4cf5-8586-2a632cede771"
        },
        "item": {
          "id": "ba349cd9-e9cd-46a8-a2ea-3d73232c81af",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c1c18d5f-7886-47b4-99a2-17864aa330a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039eab0c-f019-4dcf-ab5f-131bf067a8b9",
        "cursor": {
          "ref": "9f1b51c2-8f95-450d-8253-5d42f1706e69",
          "length": 244,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0c0b6d7c-a256-4897-ba8e-691ad4217112"
        },
        "item": {
          "id": "039eab0c-f019-4dcf-ab5f-131bf067a8b9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "056b3f17-c837-4808-9b05-5a83c2e46fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3f4620-2e00-4c0c-a458-4ed05c5bf67c",
        "cursor": {
          "ref": "42a23805-2a60-44b2-853d-190c7b303eb8",
          "length": 244,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6792f8ac-bc8d-45d4-82df-5c48465857aa"
        },
        "item": {
          "id": "fb3f4620-2e00-4c0c-a458-4ed05c5bf67c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4a8be323-62b0-4033-bcb2-055e5a6d8510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a0f214-5d6a-4cef-84da-464758b35cef",
        "cursor": {
          "ref": "4fe91e7b-72c8-4354-a1fb-818e0ba6ae1d",
          "length": 244,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "16947f55-c1b8-4c64-bbe2-148dfb1703d5"
        },
        "item": {
          "id": "47a0f214-5d6a-4cef-84da-464758b35cef",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "41e3d98c-da25-44e1-aced-024779d716d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31a64f0-2316-47c9-af99-48b8e156dd65",
        "cursor": {
          "ref": "9e1b8537-e219-40bd-8871-213b48f8711a",
          "length": 244,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "874246ae-bc9c-4a41-9340-89c570677542"
        },
        "item": {
          "id": "a31a64f0-2316-47c9-af99-48b8e156dd65",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7ceaa537-1970-4eb3-a5ef-580b30439d81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db61dcea-d90f-4937-88b7-7399532e96e8",
        "cursor": {
          "ref": "3cfcbfce-fcfd-4c0f-96e9-7e6234d95c33",
          "length": 244,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "5c0b3b54-2c49-4a77-8235-4e685e95158e"
        },
        "item": {
          "id": "db61dcea-d90f-4937-88b7-7399532e96e8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5523f614-577c-48e1-8f98-69d93391aa3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b08c18d-178a-411d-901f-5c20261b9f53",
        "cursor": {
          "ref": "b55f0109-3e35-40ba-88cd-a0f003605bc3",
          "length": 244,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e2585650-82b6-4e6a-8f8f-0962b88bb3e8"
        },
        "item": {
          "id": "3b08c18d-178a-411d-901f-5c20261b9f53",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f5194015-7887-4046-b49b-22b2f563044d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee0a94b-9535-4a08-aaf5-f796977fb0e5",
        "cursor": {
          "ref": "053c12ae-03b2-4a34-8801-b637483b6b9d",
          "length": 244,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1e163a68-4a69-4040-92ea-a492f302548c"
        },
        "item": {
          "id": "1ee0a94b-9535-4a08-aaf5-f796977fb0e5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "656ad5a1-0ab7-406d-be3c-104c170ba3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2707b283-ebd1-4438-9059-0c006fabdfb4",
        "cursor": {
          "ref": "dc97f491-ca15-4612-986f-0d448e078a95",
          "length": 244,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d8ac626c-db7c-40da-a5aa-7b60f97d8e94"
        },
        "item": {
          "id": "2707b283-ebd1-4438-9059-0c006fabdfb4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "d6ff393a-a805-4211-a489-67310b83ce65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79e1afe-63d6-40a9-8a6e-ea18b3ee135d",
        "cursor": {
          "ref": "01c48c9e-5b5c-48ec-b2d5-6dfa70662c2c",
          "length": 244,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e501410a-1aa2-41d0-931f-29409a448786"
        },
        "item": {
          "id": "d79e1afe-63d6-40a9-8a6e-ea18b3ee135d",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "0c4da876-489d-4e88-b9b2-4f6d6217630c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31854baa-49a0-4d8b-8ec4-0e8d0680d9b8",
        "cursor": {
          "ref": "f42f4ea2-3cf0-4066-bf76-98638730b22a",
          "length": 244,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "058fc5df-e9cb-4f29-8675-8345f41e3935"
        },
        "item": {
          "id": "31854baa-49a0-4d8b-8ec4-0e8d0680d9b8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "aeab519d-23b4-4909-aa3b-54ed25939c62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34fd165e-5788-44cf-91d6-bb087e8eb5ab",
        "cursor": {
          "ref": "49bb0510-6b92-4ddd-85a7-1b500c646e81",
          "length": 244,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7590142b-034b-4f90-8c8a-9869cf11dbee"
        },
        "item": {
          "id": "34fd165e-5788-44cf-91d6-bb087e8eb5ab",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "c23676ef-2355-44d2-a8fe-f107d70ee6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b99bf95-a134-4501-b383-5e679e08b064",
        "cursor": {
          "ref": "6028e632-6c66-4b94-b871-258336d3970c",
          "length": 244,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "77732e09-77c5-490a-9255-291e980e87c6"
        },
        "item": {
          "id": "2b99bf95-a134-4501-b383-5e679e08b064",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c2806161-0f58-40fc-8e36-6b8b177bab9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d53b6ef-c400-4ae3-b275-2bd78cccf6f1",
        "cursor": {
          "ref": "5daa0829-daf9-4e5b-9f96-97b0265c8cdd",
          "length": 244,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "57b1947e-8061-486c-85ad-c3d57a5f5e02"
        },
        "item": {
          "id": "0d53b6ef-c400-4ae3-b275-2bd78cccf6f1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "21391463-ddcf-4b62-91c8-8b19883186ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81ca0033-b1d4-40e5-97d4-e3e865c157e4",
        "cursor": {
          "ref": "498f429a-ab84-4253-9178-3ed875f9257e",
          "length": 244,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d96e6997-eeb4-46d8-af03-632b62929799"
        },
        "item": {
          "id": "81ca0033-b1d4-40e5-97d4-e3e865c157e4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "41b075b8-5ca3-49a1-979a-b2653a68530e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5110fb3c-22ea-4a0a-9a37-35cb6fb93855",
        "cursor": {
          "ref": "072919a9-50df-4968-999e-50da8ac9030e",
          "length": 244,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e8b23df0-e13f-4a34-b81e-0fd27fcc7c5a"
        },
        "item": {
          "id": "5110fb3c-22ea-4a0a-9a37-35cb6fb93855",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8133b91f-82b8-4ddc-8327-1c313033891a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d1dc763-5498-4979-a319-5559543c3022",
        "cursor": {
          "ref": "75175b6e-97f9-413c-91fb-a95eae5c72d2",
          "length": 244,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "bb392e0a-b58f-48cb-86c9-67c039053102"
        },
        "item": {
          "id": "1d1dc763-5498-4979-a319-5559543c3022",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "147413a7-2ff5-4ff9-bd12-1f879488562f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d21ecfe-b17e-4750-a904-bc99628cfb1b",
        "cursor": {
          "ref": "224d950d-735f-4c93-a904-4630a626e584",
          "length": 244,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7f153cda-2d72-475e-8ca7-d040cf15c7b4"
        },
        "item": {
          "id": "8d21ecfe-b17e-4750-a904-bc99628cfb1b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f17fe252-22f7-469a-a477-216f9fa2687c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a711ce-b8fe-4189-a9b0-6af4f6aa6a6f",
        "cursor": {
          "ref": "4b9dcdc6-d1eb-468d-96c4-c45ea9ee1d53",
          "length": 244,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ee03e653-845a-43ff-8250-0575a7798c51"
        },
        "item": {
          "id": "64a711ce-b8fe-4189-a9b0-6af4f6aa6a6f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a5c1caa7-d21e-48db-a78f-591bde401e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68829f9-a826-42b9-9242-c23e0de93382",
        "cursor": {
          "ref": "7c20fd30-bfa0-467d-9ac6-7e727575efb8",
          "length": 244,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "07d2944a-459c-456a-85c2-1571672e195c"
        },
        "item": {
          "id": "c68829f9-a826-42b9-9242-c23e0de93382",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "e2e83838-2e74-4532-be78-bf6918d14e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a36090-ecf1-4689-82ce-5e41f044bd20",
        "cursor": {
          "ref": "d40cda4d-2e22-4a63-ab12-67617fab3cae",
          "length": 244,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d7628c4b-f1a5-4e58-ad77-1dcac4c04d6d"
        },
        "item": {
          "id": "46a36090-ecf1-4689-82ce-5e41f044bd20",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5a1970d8-db66-4a3a-9152-c7a50071f7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a9b366e-1edf-4072-8f83-a227e1d3ad6d",
        "cursor": {
          "ref": "bfb9b555-32c6-449c-af8c-f1f6e9623f2a",
          "length": 244,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6c88ccd3-d6b5-41ac-9066-17f2e23e34dc"
        },
        "item": {
          "id": "1a9b366e-1edf-4072-8f83-a227e1d3ad6d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "fbdda7f9-76b9-46ea-a6c1-806244de4fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3cf720-be9a-4e2a-bfb0-8723c758062d",
        "cursor": {
          "ref": "3f313a54-1f36-4848-a175-1620c5040a79",
          "length": 244,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e4b18f32-79fa-4d81-b16f-35e55339a5b2"
        },
        "item": {
          "id": "4d3cf720-be9a-4e2a-bfb0-8723c758062d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "27ffc6fe-c3c3-4964-851e-3357d494a1ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a3da20f-e1e0-4f85-9f23-a8fea021f283",
        "cursor": {
          "ref": "dd9601a2-191a-4442-a7d9-85815498a2cc",
          "length": 244,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "368e4df4-368f-4095-ab8b-0c08be0675bd"
        },
        "item": {
          "id": "3a3da20f-e1e0-4f85-9f23-a8fea021f283",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "61b97714-d7c2-4548-be05-5a385ae5a6bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959ad6ff-6a50-40d6-82c5-c08c9ffc95dd",
        "cursor": {
          "ref": "1c9b16df-609e-4369-aca1-93c497481034",
          "length": 244,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2db0fd69-7206-4810-acaa-c76690bd91e6"
        },
        "item": {
          "id": "959ad6ff-6a50-40d6-82c5-c08c9ffc95dd",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bcd1274f-5de1-4e05-80c4-7f1e7cb1452c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51996d43-b60c-4884-8a31-60e19e2ba520",
        "cursor": {
          "ref": "fe5a2294-706e-4869-8ac2-4f6ca2780434",
          "length": 244,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "618e2154-a4fe-4750-a110-da75386845d5"
        },
        "item": {
          "id": "51996d43-b60c-4884-8a31-60e19e2ba520",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "424a37a0-8c24-461b-818a-df0dd09dabe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266587d2-3b92-4d34-b9a0-04583d27a0f8",
        "cursor": {
          "ref": "24201459-7dc7-48a3-b9ab-8e97fb7605c2",
          "length": 244,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "97cb76f4-509f-4a45-b6ac-ee96cfd7c77d"
        },
        "item": {
          "id": "266587d2-3b92-4d34-b9a0-04583d27a0f8",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3374309a-0a62-4764-9ce9-7b578158c0b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75965f75-836c-4769-9df8-03f9d8028b56",
        "cursor": {
          "ref": "93e10f57-51bd-4861-be0d-cf9dbff81332",
          "length": 244,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "6067740a-b2d4-4de1-8c56-40350aafaec4"
        },
        "item": {
          "id": "75965f75-836c-4769-9df8-03f9d8028b56",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "efb7083b-006e-4bb9-abfa-38e1e80c9110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82aaea77-4385-4afa-85da-857dbea03211",
        "cursor": {
          "ref": "c01c89de-ad0f-4572-bedb-af0508115a12",
          "length": 244,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "ebeaf774-66f4-46f1-8334-3de55838c5ee"
        },
        "item": {
          "id": "82aaea77-4385-4afa-85da-857dbea03211",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "2c51f1cc-11bf-4dd2-835b-fd61cbd7c48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "999e94b3-892e-425c-8f38-d80295b63e59",
        "cursor": {
          "ref": "abd0fb62-e8f9-446f-bd61-dd988bcd5ae3",
          "length": 244,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e3c847c8-d89d-4169-b429-654b230a451b"
        },
        "item": {
          "id": "999e94b3-892e-425c-8f38-d80295b63e59",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6217ef09-d657-40d4-bf47-034ab8544a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c070ac5-733a-48af-b766-f93f58cec590",
        "cursor": {
          "ref": "d8909a65-c6fa-4762-97b2-c7dccd8f5e5b",
          "length": 244,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "4af34e62-5567-4287-bfa9-98b5687d8560"
        },
        "item": {
          "id": "6c070ac5-733a-48af-b766-f93f58cec590",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "13297645-257f-42f7-8f8a-98d4398d7ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47766531-9fd7-4f05-a1e1-05b3e25eddce",
        "cursor": {
          "ref": "9d4538b1-daee-4358-913d-4abe13f0ac9d",
          "length": 244,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "596638e0-551d-47bf-b58d-4eae62295aaa"
        },
        "item": {
          "id": "47766531-9fd7-4f05-a1e1-05b3e25eddce",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e32d7951-6980-4073-821b-b115fe18ea33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cde0a3-8077-4624-80cc-4c1c4ef00447",
        "cursor": {
          "ref": "4862a0fe-7f55-4e0d-94ee-7dce6974e167",
          "length": 244,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7cfc0303-f1d0-4c68-acc4-b0e5a90ade13"
        },
        "item": {
          "id": "a8cde0a3-8077-4624-80cc-4c1c4ef00447",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ff07924b-540d-423c-ba9f-47fdc03c33ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c715555-f1fc-40ea-abbd-e3067617bced",
        "cursor": {
          "ref": "cd283fa2-ec45-4c13-bd68-b767f9faca41",
          "length": 244,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "8d178ec5-f82f-42aa-aaf3-f0fe36daf7a6"
        },
        "item": {
          "id": "4c715555-f1fc-40ea-abbd-e3067617bced",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a55260e0-7123-4202-82ab-9e072f0343e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86ba0b01-1f78-4f33-baec-b158b4e00972",
        "cursor": {
          "ref": "67a8a37e-ebaa-4199-a0ad-5a0442b56425",
          "length": 244,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ae50b2a4-85a5-416d-982b-ab1a6d81b308"
        },
        "item": {
          "id": "86ba0b01-1f78-4f33-baec-b158b4e00972",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "88e931a8-fdbc-4d7b-b028-d8614d27434b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "106a7927-5216-4708-9053-d1aa87da2b75",
        "cursor": {
          "ref": "beb59640-dfb1-42be-9fd2-7e4bed063a67",
          "length": 244,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d0b76031-c6ec-4069-818c-585b70d65727"
        },
        "item": {
          "id": "106a7927-5216-4708-9053-d1aa87da2b75",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f8333c53-d840-4653-83b7-95d4be452948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5fbc7e-367e-4157-89fd-8fe425fa5c69",
        "cursor": {
          "ref": "566bd55e-5097-4f52-b223-1798f85dc31e",
          "length": 244,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f828123f-a924-41d0-9faf-5a480b0af897"
        },
        "item": {
          "id": "3c5fbc7e-367e-4157-89fd-8fe425fa5c69",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "b02fdee8-389f-42c8-9ab8-5986420fa3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fa8fc90-0d94-4112-8629-2f894804ef73",
        "cursor": {
          "ref": "f7124049-cf61-4fc7-a9a9-29e8f996a483",
          "length": 244,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "afc08e06-af22-4614-a3f6-060eee5c730a"
        },
        "item": {
          "id": "1fa8fc90-0d94-4112-8629-2f894804ef73",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8003945c-f2dc-4ac5-8c14-4bb43527e065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bdd10a-c1f2-4c6b-b7e2-a6be2ec05f74",
        "cursor": {
          "ref": "7cd5c455-e660-44f7-ae12-91681e7af420",
          "length": 244,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "50f41c3a-ba6a-4baa-a441-85900506d4c6"
        },
        "item": {
          "id": "f9bdd10a-c1f2-4c6b-b7e2-a6be2ec05f74",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "45b2b935-2615-460a-8fcb-56eaea3c90f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81658371-35cd-42e9-9d30-c42314d4b330",
        "cursor": {
          "ref": "b0a01d9d-aede-4a42-a5ad-031b97a6c97d",
          "length": 244,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0e4660f9-9ebe-493d-8021-77f985006d7f"
        },
        "item": {
          "id": "81658371-35cd-42e9-9d30-c42314d4b330",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "cc8a6bc9-0ffe-4bd7-b702-aa73c1fb3614",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0643ed04-223f-4393-b88b-ebac590ea607",
        "cursor": {
          "ref": "d49d29fe-8c5c-4aa5-9a15-406ec2811726",
          "length": 244,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "99eae59a-02b6-4aef-ab06-fa0fafbe8737"
        },
        "item": {
          "id": "0643ed04-223f-4393-b88b-ebac590ea607",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "daeacc5f-5f21-4a5a-8327-1831aaf506d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a391724d-252f-484a-aa4e-55d351e86bac",
        "cursor": {
          "ref": "c2d2124d-652f-45f3-9de6-ece12ba90c8b",
          "length": 244,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "164dfb28-96be-4217-8744-f1d7407ce1d0"
        },
        "item": {
          "id": "a391724d-252f-484a-aa4e-55d351e86bac",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e6de810d-65c3-4448-932e-f7b8214bdec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cbd57b-9073-4a76-b6ac-0292ca776b3d",
        "cursor": {
          "ref": "d3512f5a-5f3f-4d51-ae5e-9bbd8e725faf",
          "length": 244,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "94c11d84-fa57-4d7b-a0d1-5c4ac795ffc0"
        },
        "item": {
          "id": "a2cbd57b-9073-4a76-b6ac-0292ca776b3d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8e71ac12-e9f1-4adb-b19e-eb0c388c81c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175d4df4-5af1-4ef2-9b4b-5c30fde6f55c",
        "cursor": {
          "ref": "c6aa8224-e697-4ef1-9238-c36c9b52315b",
          "length": 244,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c30f4d35-eb2c-4edc-9506-1dc44d365fd1"
        },
        "item": {
          "id": "175d4df4-5af1-4ef2-9b4b-5c30fde6f55c",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "b5024e89-8888-42ed-a052-738c24873b82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b99f0caf-3a3c-486d-b364-c0bdb606c535",
        "cursor": {
          "ref": "6155351d-1694-4519-9313-b5b2c7c02308",
          "length": 244,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "ba4d046e-6929-41f1-8424-12c354f83422"
        },
        "item": {
          "id": "b99f0caf-3a3c-486d-b364-c0bdb606c535",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "11719100-5e4e-47c9-9424-8631c4527f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d82be6-9ca2-4c68-a680-cdfb1c3db626",
        "cursor": {
          "ref": "dec569df-48f4-415e-a4a1-6585aaa91576",
          "length": 244,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "25dc11aa-eebd-43e2-afd9-b0c78280a99b"
        },
        "item": {
          "id": "53d82be6-9ca2-4c68-a680-cdfb1c3db626",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1005bad7-69e9-436a-8fc5-105eddc86aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62227a39-5dd5-416c-86b4-b6bff8020b78",
        "cursor": {
          "ref": "54268980-2248-4e6d-9f4a-a088aecc5c8c",
          "length": 244,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "f7173d8b-19d7-40a3-82c7-f681a2857466"
        },
        "item": {
          "id": "62227a39-5dd5-416c-86b4-b6bff8020b78",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3a2e79ff-09de-44ac-abe3-00fd58a74e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8acb5c27-e3ce-4c98-86ca-c9aa8a08ee56",
        "cursor": {
          "ref": "d49fc4c8-27f8-4747-b972-adb016b189ab",
          "length": 244,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "190f4c0a-6c3e-4dfc-9e24-eef0c91f4463"
        },
        "item": {
          "id": "8acb5c27-e3ce-4c98-86ca-c9aa8a08ee56",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "4fbb44fb-0ffc-4861-9163-304549aa5186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9c8b81-585b-4791-a602-3acff7109e2c",
        "cursor": {
          "ref": "4b595b32-6233-45b4-94b5-62543471c0b9",
          "length": 244,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e044dc56-7ee4-4983-b4f1-bba0a3466cb1"
        },
        "item": {
          "id": "eb9c8b81-585b-4791-a602-3acff7109e2c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cf8c19c6-a242-4369-a32c-170c1d86e1e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f6352c-17f5-4cc9-9c33-4eddb2a77267",
        "cursor": {
          "ref": "5e4867b4-6735-43b8-99fc-b22c0dc67485",
          "length": 244,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "56472f72-42ed-427c-9115-1c004f581f86"
        },
        "item": {
          "id": "d2f6352c-17f5-4cc9-9c33-4eddb2a77267",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9e8bc66a-6db5-4263-bc96-4d17e5a79a38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31138059-e448-4d16-b6d5-73a154760b80",
        "cursor": {
          "ref": "1a50d89d-f20c-4f57-8260-b6eb46eebf0e",
          "length": 244,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "3c2d1b2d-6047-4295-8da1-5e915d1ed731"
        },
        "item": {
          "id": "31138059-e448-4d16-b6d5-73a154760b80",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7f9addf0-9112-4f2b-b439-77de445e74c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179c5741-934d-4dd8-b469-2c86092f39ce",
        "cursor": {
          "ref": "b93d5543-46fa-400a-bcee-310b0aac01a5",
          "length": 244,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "35c277e2-9fd5-4b74-9d27-87f2f31dd182"
        },
        "item": {
          "id": "179c5741-934d-4dd8-b469-2c86092f39ce",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "aed4878f-68a7-426d-8c54-556950de99ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474dbf0f-4112-4718-9da0-84c29d253edb",
        "cursor": {
          "ref": "1b747ca1-cda7-49de-a6ef-cb1f69004f48",
          "length": 244,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "89efe8ca-bd30-49b2-b5ad-6fe0ef00b54f"
        },
        "item": {
          "id": "474dbf0f-4112-4718-9da0-84c29d253edb",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cbefc0f6-51a6-4fd1-bd53-6f1b8ed8193f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "128adf4c-e72f-4cc9-9b08-879a5b8b70c5",
        "cursor": {
          "ref": "f19d6148-e05c-4630-83da-35717b7f2dc4",
          "length": 244,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9d237053-4262-4c41-afa2-4b70f50bc109"
        },
        "item": {
          "id": "128adf4c-e72f-4cc9-9b08-879a5b8b70c5",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "3e0e2ebb-70be-4c39-b3a0-13a873d09a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e607810-748c-440a-81fb-82d89161bf08",
        "cursor": {
          "ref": "8215c3d6-5cb9-48d2-8c7e-194c0ca9d82a",
          "length": 244,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "bacfc598-4c7e-49a6-802b-41e1c502600c"
        },
        "item": {
          "id": "8e607810-748c-440a-81fb-82d89161bf08",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "cd0132b7-e190-4eef-844e-02545cff5c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762903f3-c52f-445a-92db-8479f3af0c97",
        "cursor": {
          "ref": "199e4a87-95d8-4b43-916c-c794888eab51",
          "length": 244,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bab73339-308b-4225-bf15-eff261aff19e"
        },
        "item": {
          "id": "762903f3-c52f-445a-92db-8479f3af0c97",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fac74c72-c323-4b92-83fe-1a71e2493762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9c0c701-f7b3-4af6-bb07-990d19654852",
        "cursor": {
          "ref": "9bb26438-b515-4fcf-a7db-10af652293c7",
          "length": 244,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ce545a38-7809-4919-a326-b349a8b0078b"
        },
        "item": {
          "id": "b9c0c701-f7b3-4af6-bb07-990d19654852",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7e825456-0aa3-43be-a3d3-11860eb51329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91d08346-88c3-4f4f-a969-e723d425e1b7",
        "cursor": {
          "ref": "f2b99aa2-1a8a-4a41-8040-522d728cad94",
          "length": 244,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "9011fa2b-cd10-450b-a6a7-a7de641ee308"
        },
        "item": {
          "id": "91d08346-88c3-4f4f-a969-e723d425e1b7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "40b44c39-3ee0-4866-90ad-4c7b36ff3363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1ab5e8-7113-429e-95f7-be9063728874",
        "cursor": {
          "ref": "74022c8f-a012-48c3-923f-d01b306653aa",
          "length": 244,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a4144406-04b5-4237-8f44-ec2df02d2aa4"
        },
        "item": {
          "id": "bd1ab5e8-7113-429e-95f7-be9063728874",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "fbab43fe-c93d-4676-ad29-96da2aab9fe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c117b87-e9a9-41e0-8988-1acd023a694b",
        "cursor": {
          "ref": "7c8b7033-db82-4a6e-a310-75bcedd33ec4",
          "length": 244,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "da105458-d377-4186-906e-a753c017a4a2"
        },
        "item": {
          "id": "1c117b87-e9a9-41e0-8988-1acd023a694b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "eb74d467-1420-43c4-8bb0-f17448248915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354fdad5-1916-43f7-ba04-127b60a3bad5",
        "cursor": {
          "ref": "e7c532d0-b9d1-4215-89f7-e2cf0f0789f3",
          "length": 244,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1599b0b1-77c4-482a-a2fb-c1635d48326c"
        },
        "item": {
          "id": "354fdad5-1916-43f7-ba04-127b60a3bad5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "419df2f4-e7f4-42a9-b10b-8e43419f28f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "457b582e-28bf-4bbb-8814-938e452c38d5",
        "cursor": {
          "ref": "743acb03-6e05-4241-b761-f8dee8094978",
          "length": 244,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "8313cb56-9881-4773-b73d-ca74ff82ab44"
        },
        "item": {
          "id": "457b582e-28bf-4bbb-8814-938e452c38d5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3508780e-640b-45bb-b5e3-190a7ca18f68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84f2a68b-4754-429b-99a4-8d1b571c2f6a",
        "cursor": {
          "ref": "f1057cd5-c27d-4552-af86-c6d747464cf7",
          "length": 244,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "118a9335-d980-4630-bf60-a24d98f2f76a"
        },
        "item": {
          "id": "84f2a68b-4754-429b-99a4-8d1b571c2f6a",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4132504a-b4b3-4a27-8d56-31dbe52208c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797e2270-af19-4401-adcf-955cc81c3572",
        "cursor": {
          "ref": "1c048702-3876-4034-ae56-377ff27d6bc2",
          "length": 244,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9806d5f9-d4a3-433e-8d72-4f3af7e72ad1"
        },
        "item": {
          "id": "797e2270-af19-4401-adcf-955cc81c3572",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "dc15cdea-5888-4f02-a75a-0891561ecc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a54f99f-25bc-4b80-a43e-96fc25639616",
        "cursor": {
          "ref": "7214ff9f-aaaa-4e7d-a93f-66fc79112e30",
          "length": 244,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5e93d603-4243-4946-86d9-95fc7c2c26d5"
        },
        "item": {
          "id": "6a54f99f-25bc-4b80-a43e-96fc25639616",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "dcb0bf53-0be0-47de-b57d-a67582f9756f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13436b3d-fbd8-43b4-abe9-12106bfa1a96",
        "cursor": {
          "ref": "c5b32069-fe42-42e3-ade3-add4477d3917",
          "length": 244,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "8a04cacb-f7f8-4e0e-8a55-05efe03f9320"
        },
        "item": {
          "id": "13436b3d-fbd8-43b4-abe9-12106bfa1a96",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "37b49b97-4c84-4646-88e6-1eb58a586116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0b52e3-a9fb-4b23-ace9-e30a8ff4a543",
        "cursor": {
          "ref": "7574b49d-bf1f-495b-ac79-af84db99c36a",
          "length": 244,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2abf07de-e131-46a0-a625-03bd375e7fd8"
        },
        "item": {
          "id": "5d0b52e3-a9fb-4b23-ace9-e30a8ff4a543",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "6bd51ab1-8488-483a-8e0c-827a9566ef7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f22336-c9f1-4365-b5cc-de1e315a4551",
        "cursor": {
          "ref": "5d196d21-e156-48d0-bdaa-38d29d98d05d",
          "length": 244,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "641c08b4-e6e2-4341-9733-1950c3bde0ab"
        },
        "item": {
          "id": "d3f22336-c9f1-4365-b5cc-de1e315a4551",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3475864d-cc8e-47fd-b58d-a7352fb73f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bac7a89-859a-4f7b-bd07-1b32ac742434",
        "cursor": {
          "ref": "056a4cc1-3a32-4b50-8aed-456f7d198b21",
          "length": 244,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "85a93deb-7a63-4ce7-b4d0-6c6091aeb392"
        },
        "item": {
          "id": "6bac7a89-859a-4f7b-bd07-1b32ac742434",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e9977386-6ac1-47d3-9148-beca190b3949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ae5eb4-e29b-4fdd-849f-5d2e5643889d",
        "cursor": {
          "ref": "c250c48d-32f7-4425-94e7-22929acb8ab2",
          "length": 244,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0206d0ad-f3b6-4776-aa54-dc44389b3716"
        },
        "item": {
          "id": "23ae5eb4-e29b-4fdd-849f-5d2e5643889d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9cf680bb-8de1-4c85-8582-5118f55a9c04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e00345d-6cf9-4beb-8872-b65fe025aa7a",
        "cursor": {
          "ref": "3fc5f684-9b0f-40c0-a07e-5dc2c2888eed",
          "length": 244,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d69cb115-811a-43ad-8185-2c36aa551dbe"
        },
        "item": {
          "id": "4e00345d-6cf9-4beb-8872-b65fe025aa7a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "2cf91397-b3a5-4805-8cb7-456c8e18022d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a68e59b1-5157-4ea6-9894-f67be4f378ee",
        "cursor": {
          "ref": "dec4fb37-e62d-4ac6-bdd7-429a1fb64850",
          "length": 244,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "2083b244-09c1-496e-84d1-f7b5d361b224"
        },
        "item": {
          "id": "a68e59b1-5157-4ea6-9894-f67be4f378ee",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "3654241c-c5c4-423d-85b1-4e984040c59d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64618e25-5fbe-47de-a26b-8e96f19889de",
        "cursor": {
          "ref": "f2fdaa0e-23a9-4607-92c3-ee0e25b660c2",
          "length": 244,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "59dd653b-9dd1-4bdb-a34c-097be3d4f5bd"
        },
        "item": {
          "id": "64618e25-5fbe-47de-a26b-8e96f19889de",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "19515d56-c0b0-4af1-ad4d-2bf9f1568168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd56cae-65ad-459f-b235-be728ad0dfe1",
        "cursor": {
          "ref": "7e963c3e-78c2-4235-a6a0-700a6c39ab06",
          "length": 244,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b03f1a27-d099-447e-b973-b0bdf88179d6"
        },
        "item": {
          "id": "bbd56cae-65ad-459f-b235-be728ad0dfe1",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "27d355d5-501c-49da-b0b1-6fdbf0d95919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872699f8-52fe-4133-af23-1e27c55b5278",
        "cursor": {
          "ref": "6881a385-935e-4937-9e1c-6c207bd4f0a5",
          "length": 244,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "01610900-7556-4797-9f66-903ba5e06eff"
        },
        "item": {
          "id": "872699f8-52fe-4133-af23-1e27c55b5278",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a4546505-f975-4e64-969e-7b3d25b7eb1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a09e190b-1ead-4eed-a0ba-4c1203fe4334",
        "cursor": {
          "ref": "c9a7aee1-98ab-400d-9892-2ca2e74ca9a8",
          "length": 244,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "03c3776f-5171-4e18-8e78-9a3dabd79d62"
        },
        "item": {
          "id": "a09e190b-1ead-4eed-a0ba-4c1203fe4334",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "7ab0ead0-f3c3-4e45-b560-ea0f0950cb4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c693fb2f-e86e-4aa3-8452-1fbc831b6848",
        "cursor": {
          "ref": "0110c5c3-03c3-4067-89ca-2aef931ac9c5",
          "length": 244,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b83b5893-4970-414e-a150-74310fe144af"
        },
        "item": {
          "id": "c693fb2f-e86e-4aa3-8452-1fbc831b6848",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "30383c69-8048-400e-b5e5-10ad8b43b8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce528d2b-4dea-4d87-a403-158f0f87de4f",
        "cursor": {
          "ref": "ff7eedf3-9861-452a-8eac-f4f0f7813618",
          "length": 244,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "6a4c3e8d-5f9a-41e0-ad4b-a709a36b1b55"
        },
        "item": {
          "id": "ce528d2b-4dea-4d87-a403-158f0f87de4f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "948e6f69-044a-43ea-9a1a-c0fe7e022e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0624310-e300-41da-a187-6d0419bff7a8",
        "cursor": {
          "ref": "832c472e-d6d5-4c1e-a2be-e31dd0cb8a67",
          "length": 244,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a712d76e-b4cf-4e49-98ac-83d217485570"
        },
        "item": {
          "id": "b0624310-e300-41da-a187-6d0419bff7a8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c378e9b6-dffc-431f-91b0-5505450743ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "744343be-cac9-47a2-954e-0a6fa2ff3381",
        "cursor": {
          "ref": "b1b7a302-8042-4fe0-baa0-9388c746caec",
          "length": 244,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "6916d351-123c-4b86-aa90-a246a91e2cef"
        },
        "item": {
          "id": "744343be-cac9-47a2-954e-0a6fa2ff3381",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6c1da33f-f50b-4752-a41c-4c7aa6f908f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760efb16-8f16-4fe9-b8e8-44118729587a",
        "cursor": {
          "ref": "107e0143-32e0-4b8a-b571-1b3dbcf57ba0",
          "length": 244,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "16091ac2-11b5-4955-8124-372188cd0e0a"
        },
        "item": {
          "id": "760efb16-8f16-4fe9-b8e8-44118729587a",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6be7b545-6564-45f6-976d-929649751fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524b8e35-3618-405a-819e-7ee608f98e96",
        "cursor": {
          "ref": "6f50be97-a228-4f8c-a982-d96bc175bd47",
          "length": 244,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e965b69a-5acd-4b0b-8e85-a7ad7c219bff"
        },
        "item": {
          "id": "524b8e35-3618-405a-819e-7ee608f98e96",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "85c7deda-f804-4dd9-aced-e01f871d3b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d921f81b-9275-463a-a098-4d1291b7ac36",
        "cursor": {
          "ref": "16f028e5-d77b-4fa1-bea3-8099d0ab7706",
          "length": 244,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bcc3de41-c0da-497a-8755-7f56bcf0f082"
        },
        "item": {
          "id": "d921f81b-9275-463a-a098-4d1291b7ac36",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b191ca22-5a29-4c85-9bb0-b29b657d5ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ec1b34-5bbc-401f-afdc-14cb38886919",
        "cursor": {
          "ref": "e9698174-5d82-4e9d-9b59-272e9ed8ad89",
          "length": 244,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "9621357a-03e5-475c-9a39-8bf3485e6a54"
        },
        "item": {
          "id": "f5ec1b34-5bbc-401f-afdc-14cb38886919",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "15a04c51-daa4-4898-8892-5f4d2c0e350c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4904e1e3-c884-4feb-a18b-3467b21e01c4",
        "cursor": {
          "ref": "753fd5e3-c759-4f5b-aab2-117f1ecc9c55",
          "length": 244,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "1ec69dca-6429-4aa9-b7ba-fafcde45d69e"
        },
        "item": {
          "id": "4904e1e3-c884-4feb-a18b-3467b21e01c4",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "73cef619-a9d4-4057-9830-79b2c28ac436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a6fc99e-1d62-484d-841c-27d708b27cde",
        "cursor": {
          "ref": "397b06be-7117-44e4-b36c-0b93d0dc55b9",
          "length": 244,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9278d6a5-82da-4220-9db6-8ddfe7fa3b0c"
        },
        "item": {
          "id": "5a6fc99e-1d62-484d-841c-27d708b27cde",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "448084d7-9264-4d9d-b099-ac1bb415fed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a501da02-977d-4539-b619-bd82e2255520",
        "cursor": {
          "ref": "af232802-6fc4-404c-91d7-857b2bf153fb",
          "length": 244,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f3791888-1cca-4007-bc80-08ac06030773"
        },
        "item": {
          "id": "a501da02-977d-4539-b619-bd82e2255520",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b3b039a1-6ff8-4ed3-931a-554bd8e3f57a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161ff3e7-8145-481f-b50f-60b9a843b7ad",
        "cursor": {
          "ref": "1e6267e0-e6ca-443a-8cde-8c2043e38871",
          "length": 244,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "ab75afc2-baae-483c-80c3-9cb9c97e6993"
        },
        "item": {
          "id": "161ff3e7-8145-481f-b50f-60b9a843b7ad",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "df355bda-9bb7-4e1a-ad71-a7ebfdb40dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2ba38e-67c4-42e5-8aef-95eb21afef26",
        "cursor": {
          "ref": "0e9673f4-b36d-4c6b-a462-85faaf0d4272",
          "length": 244,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0133d6f1-e24f-4802-bea9-1ad8cdc366cd"
        },
        "item": {
          "id": "8d2ba38e-67c4-42e5-8aef-95eb21afef26",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "dac91b63-b339-4102-871c-68dec033e846",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ab44a2-0d3e-45cf-b8a3-65ea7ec31b00",
        "cursor": {
          "ref": "28cd3c82-d72f-4aa8-ab73-a1be6fa2f01a",
          "length": 244,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "78199332-0b4c-4f61-b9b1-3f06210acab2"
        },
        "item": {
          "id": "b4ab44a2-0d3e-45cf-b8a3-65ea7ec31b00",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a9f55d86-938d-4cf7-8a98-717e062f3a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13837b54-fc6a-4cea-8d77-68b9cb7da333",
        "cursor": {
          "ref": "2d0878f7-6f99-459b-973a-8524bc23d22f",
          "length": 244,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9b17448d-dec1-4cf0-aeec-465a08947474"
        },
        "item": {
          "id": "13837b54-fc6a-4cea-8d77-68b9cb7da333",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6962936e-a5a1-424f-a088-ce09e4fcaf5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d56db487-b763-4f2d-85c9-87b074f70250",
        "cursor": {
          "ref": "ff86ddaf-b281-44c4-aadb-2f386c971803",
          "length": 244,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "0b7e9706-2f24-4eba-b5b7-b04e32186847"
        },
        "item": {
          "id": "d56db487-b763-4f2d-85c9-87b074f70250",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "f2760915-00ce-4c49-a42e-43a0d02ed048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66a5e35-6ac3-4e3a-ac2f-ce1adaa6544b",
        "cursor": {
          "ref": "dcd32674-6443-4894-a83c-c8d3ec0c0c28",
          "length": 244,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "5d34f931-049c-4163-b7aa-e3bfae1bd26b"
        },
        "item": {
          "id": "e66a5e35-6ac3-4e3a-ac2f-ce1adaa6544b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3ba47f80-fca3-46f8-a811-d5213c9a7f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14276711-5e52-431e-8b1d-53b280cafbcc",
        "cursor": {
          "ref": "b28a6b64-8959-496d-9f21-992db66b2174",
          "length": 244,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c2e50ec2-06c4-438d-885d-b9dd8504ad66"
        },
        "item": {
          "id": "14276711-5e52-431e-8b1d-53b280cafbcc",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "ca3f7720-d29c-4d5d-ad4f-57eda82a0367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81fb8061-b2a1-4c9f-9199-8115fc25529a",
        "cursor": {
          "ref": "174239e4-5000-4af0-93ae-76b0e77b6437",
          "length": 244,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "effc15ac-a55b-4841-8bfe-42cbe682b8e1"
        },
        "item": {
          "id": "81fb8061-b2a1-4c9f-9199-8115fc25529a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "07f16d3d-b202-403f-a5b2-9d11b96b46f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927a3e2a-d735-4369-a3df-fff52d72f1be",
        "cursor": {
          "ref": "a4970326-5c40-4d6e-89f6-e122ba96313f",
          "length": 244,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "6a45fe01-6553-4c12-8f16-b660ecae66b2"
        },
        "item": {
          "id": "927a3e2a-d735-4369-a3df-fff52d72f1be",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d2b1f607-a12e-4450-bd1d-cbd768790307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33929459-969e-41bf-8379-2b530c630a2f",
        "cursor": {
          "ref": "e96eae98-5ea5-4de6-be81-0b55ccf3e6bc",
          "length": 244,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1401af73-31d6-401c-ab3d-1f650020febf"
        },
        "item": {
          "id": "33929459-969e-41bf-8379-2b530c630a2f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cd06d1c1-3550-4de3-b7ea-bdbda13b067c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddffa00e-7386-4e4c-94cc-a53987a8ed80",
        "cursor": {
          "ref": "b76525dc-0b85-4c47-9a2c-d6cce984f171",
          "length": 244,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "0373ea0d-e2da-4eee-b042-c4c208b01eef"
        },
        "item": {
          "id": "ddffa00e-7386-4e4c-94cc-a53987a8ed80",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1498884b-e7a0-4fd2-b7e0-5320f092fa61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "243001a5-7849-4ac6-9219-62b48840a48e",
        "cursor": {
          "ref": "86a64d8e-c874-4edf-8518-1f8f555b3110",
          "length": 244,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "75cf2e3f-b71c-4223-8ba9-e30731d422df"
        },
        "item": {
          "id": "243001a5-7849-4ac6-9219-62b48840a48e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "541c01a3-0500-4edf-bb1f-041adfeb3219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f69a08-7169-40cd-b3f3-36cf183442e8",
        "cursor": {
          "ref": "79540c48-571a-4edd-989c-04625345c4c8",
          "length": 244,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "a36e6eed-dd41-44a3-bf93-f3af69ac3d67"
        },
        "item": {
          "id": "a7f69a08-7169-40cd-b3f3-36cf183442e8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "bfb06178-6b27-40e9-8864-8a42e3a3e46b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d631ff-dc86-4e60-be5c-75b2c0a64ec6",
        "cursor": {
          "ref": "1136b9ef-49b1-4dad-8e83-b9a5fa266749",
          "length": 244,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e14704f6-b353-4897-a1d1-409416fe644f"
        },
        "item": {
          "id": "b7d631ff-dc86-4e60-be5c-75b2c0a64ec6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "71c61c2a-15f9-488f-b267-d80bbdb46e66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb36dcde-5979-48e2-a5b4-b3463d270a56",
        "cursor": {
          "ref": "3b42eee1-cdf4-4b5c-91aa-7696f9e935d8",
          "length": 244,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "adfce824-0eb6-42f0-a4a9-9fa5d58a78ff"
        },
        "item": {
          "id": "fb36dcde-5979-48e2-a5b4-b3463d270a56",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "90c6cd8f-7987-45fe-b779-3a5ad1d3b4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0adf5498-8792-445a-acc3-dfe0d6d5775a",
        "cursor": {
          "ref": "a39ca563-29df-4850-bd95-77cc5381557c",
          "length": 244,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a0a8b687-f857-4919-9447-abb3b0e7aea5"
        },
        "item": {
          "id": "0adf5498-8792-445a-acc3-dfe0d6d5775a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "06c5fa36-8a01-4f7d-b424-c58547b0b18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123219f5-440b-44c8-bdc7-273ce34f0097",
        "cursor": {
          "ref": "b0c50f24-5c19-47da-b090-34cf4339e4ca",
          "length": 244,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "dc1550db-31d2-4a54-bc9f-869db6f98bbf"
        },
        "item": {
          "id": "123219f5-440b-44c8-bdc7-273ce34f0097",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "390bca78-1859-41a6-9361-43f8913aea00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b53cd48-77c7-474a-8de7-58c904c761eb",
        "cursor": {
          "ref": "cc888f6c-c477-458d-9cbf-2058b5a3c6b7",
          "length": 244,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "874a0a53-7ba1-4f0c-ae66-8987f28dbe2a"
        },
        "item": {
          "id": "3b53cd48-77c7-474a-8de7-58c904c761eb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "15e6cfbe-61b2-4ced-9b2d-da438323f193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d954b4f7-4812-45b7-9496-6770c2220dbc",
        "cursor": {
          "ref": "b5840aa6-bf65-4464-be81-8274f71ef11f",
          "length": 244,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "fb3d5169-c29c-4635-9de2-a6f06dc097ab"
        },
        "item": {
          "id": "d954b4f7-4812-45b7-9496-6770c2220dbc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "03a1dce6-b1c4-4ad2-86c7-0fe267fd157c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f24564bd-68f0-4d3b-8f4e-2438cf1085c0",
        "cursor": {
          "ref": "7c4392d4-5a92-4be8-b9a3-907ba9d6edd0",
          "length": 244,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "20d98bdf-7edb-403e-880c-2d005017f920"
        },
        "item": {
          "id": "f24564bd-68f0-4d3b-8f4e-2438cf1085c0",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "e11dd8f5-0cd1-4084-967d-6a8b88b2a0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6fcfd9-fc70-42e1-b992-a30ce588d289",
        "cursor": {
          "ref": "e6370284-8f75-4ac1-9910-7d226fcd15eb",
          "length": 244,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "b4be0fce-8842-4d48-9da7-c6f8f28e220f"
        },
        "item": {
          "id": "ef6fcfd9-fc70-42e1-b992-a30ce588d289",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c92cd807-4df7-421e-a2fd-cbf2ca71d7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eac6059-c1b2-4222-aa19-9f2939b880d9",
        "cursor": {
          "ref": "a56bcf1d-56fa-413c-a5d6-1063825bce56",
          "length": 244,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8f0a5f91-26a1-4e71-81d2-4e984a34d817"
        },
        "item": {
          "id": "7eac6059-c1b2-4222-aa19-9f2939b880d9",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "32df5f14-889b-47ad-b852-6d6b0b46833a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bef2c85-9650-4bb7-ad0d-dae07565e962",
        "cursor": {
          "ref": "aa2e39a2-8bd8-4cd2-9b20-6bf6c52dd4aa",
          "length": 244,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "74c00ee7-8470-4bdf-82f2-f2977eef3741"
        },
        "item": {
          "id": "5bef2c85-9650-4bb7-ad0d-dae07565e962",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "cbd862be-7612-4eb4-bd99-020db308d8d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05172098-f141-40f9-a16c-5196bee8cfb5",
        "cursor": {
          "ref": "7e6f0008-d05a-4a98-b20f-cb6577d43cc6",
          "length": 244,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "f6dfeddc-8475-47ca-b632-c9de74e0a7d4"
        },
        "item": {
          "id": "05172098-f141-40f9-a16c-5196bee8cfb5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "820d5116-4a04-4b92-84b4-e709e93591fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0114b66f-18ad-4e60-91da-28b72b16dc8e",
        "cursor": {
          "ref": "b87b0895-699b-4785-9e94-3a505ad0a430",
          "length": 244,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "aa16e3a1-4846-41c8-96e9-b92bd31b1f7f"
        },
        "item": {
          "id": "0114b66f-18ad-4e60-91da-28b72b16dc8e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a19cda10-7cca-4c88-8bcd-d423dc09e7f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dab9cf9d-5e8e-4221-ad8b-f547bfdd59e2",
        "cursor": {
          "ref": "56a64955-9a26-4171-8e36-52c75ca96038",
          "length": 244,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "440ab6f5-3541-44f1-a96a-b8b3d5eae33c"
        },
        "item": {
          "id": "dab9cf9d-5e8e-4221-ad8b-f547bfdd59e2",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "58556ae6-0700-4437-8c6d-c3d118cb5411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d422da0-8ea9-41df-948c-37f8b7860bb1",
        "cursor": {
          "ref": "8eb5706d-b0e0-4f2d-8d8d-c7a690f2518a",
          "length": 244,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c5b81fff-1389-4245-a8bb-099123805e69"
        },
        "item": {
          "id": "2d422da0-8ea9-41df-948c-37f8b7860bb1",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "155ebb7f-4be5-4753-8569-c96cce6523b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5657892-d7b7-4a59-a9c0-a8cf95e9073f",
        "cursor": {
          "ref": "afafd18d-c434-41e1-8d42-831a7f14000b",
          "length": 244,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a192cb54-94cb-4e35-8398-ad93dd2e9317"
        },
        "item": {
          "id": "a5657892-d7b7-4a59-a9c0-a8cf95e9073f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b6e4b251-f6db-46c7-8d72-7d56ca76b568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00b42e00-4dab-408d-9ca3-e72b3355c4a9",
        "cursor": {
          "ref": "e86dc150-f886-48ea-bb1e-5b0038f22d12",
          "length": 244,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "2581ae6a-8614-43b7-a4b8-659e9c0be538"
        },
        "item": {
          "id": "00b42e00-4dab-408d-9ca3-e72b3355c4a9",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "da63d02f-4aa3-4621-aade-74f5e138e06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "563a2307-4444-4e43-a39f-78fde274522c",
        "cursor": {
          "ref": "f5458892-4e3f-451c-8e36-ef48c2ccc02f",
          "length": 244,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "895510ab-391c-44df-b919-0b9ad59a8f9e"
        },
        "item": {
          "id": "563a2307-4444-4e43-a39f-78fde274522c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1dcf044c-5d3b-4600-8158-f68edfcb25cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034ae2d7-7490-4c20-a210-76cd828f64a3",
        "cursor": {
          "ref": "b3ba27da-5958-4e5d-9334-c9a0bb49a34e",
          "length": 244,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bac0a3f3-8dc5-47ed-ba54-1281fe5b7ce0"
        },
        "item": {
          "id": "034ae2d7-7490-4c20-a210-76cd828f64a3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "56bc6288-2cdc-4424-a771-0cfcc6c41856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa80c83-ed84-43ce-8ba6-156df438f409",
        "cursor": {
          "ref": "d66fe1de-5fa9-465f-aef1-88b6c99d31e3",
          "length": 244,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2419b4ae-acb6-4e3a-a6fe-51c8c7fed77f"
        },
        "item": {
          "id": "dfa80c83-ed84-43ce-8ba6-156df438f409",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "abf2f39f-d908-4cf1-aae0-1c5b0934e1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c1e7ed9-768c-4ba0-b2d8-cfec138b3cea",
        "cursor": {
          "ref": "b2430eb9-7eea-4e73-86a6-27120f22c11c",
          "length": 244,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4c5d6dec-eb05-43b7-94a1-ae9de97d8ee2"
        },
        "item": {
          "id": "3c1e7ed9-768c-4ba0-b2d8-cfec138b3cea",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c266d5d3-b092-40e9-9416-9f05859ebbb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832c4dd6-e804-44f1-a726-b9cf02d329ef",
        "cursor": {
          "ref": "a13dc0a2-85cd-4e00-9ea5-a6394af16fa8",
          "length": 244,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5231e627-6fc5-4bc8-a483-41c1f7445bc6"
        },
        "item": {
          "id": "832c4dd6-e804-44f1-a726-b9cf02d329ef",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7fc76d9d-d0ce-4dbf-8181-98e128ffd3ee",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172420ba-e73e-4af0-973b-d10dee1f54f9",
        "cursor": {
          "ref": "e2940839-b045-4381-84ae-628fe0e38112",
          "length": 244,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "851b3552-ac84-46b8-acae-4e0a3772fd80"
        },
        "item": {
          "id": "172420ba-e73e-4af0-973b-d10dee1f54f9",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "24fa187b-a5b6-433b-b567-c6acc805f3a1",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e75df4-ff5f-4352-bbf9-c69cc6dc8ce2",
        "cursor": {
          "ref": "9a7684b5-f3bc-4ba2-85d7-8c6ea053bcd0",
          "length": 244,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "636be039-606f-4303-aba2-76e3bbfaa8a9"
        },
        "item": {
          "id": "23e75df4-ff5f-4352-bbf9-c69cc6dc8ce2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b10463d0-30db-4883-aa15-253b31355fbd",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "f075f9ea-48bf-46f8-b0d6-25dd4a3778ce",
        "cursor": {
          "ref": "8b73b834-f4bc-4e4e-a79e-7f5de98faa96",
          "length": 244,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "c7193f30-e2cf-4b3d-9d78-c180ac02b287"
        },
        "item": {
          "id": "f075f9ea-48bf-46f8-b0d6-25dd4a3778ce",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a1ff06fd-add0-474e-a5f1-e60b26b3eddd",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce717ee-d698-472e-a484-46395d98706b",
        "cursor": {
          "ref": "2c0858f0-0978-4e31-bd19-1ca591ee7710",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6888fd52-cd54-4a97-930e-19852b15b35a"
        },
        "item": {
          "id": "5ce717ee-d698-472e-a484-46395d98706b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "27e27de3-d873-440b-8363-7ef85d71932e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce717ee-d698-472e-a484-46395d98706b",
        "cursor": {
          "ref": "2c0858f0-0978-4e31-bd19-1ca591ee7710",
          "length": 244,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "6888fd52-cd54-4a97-930e-19852b15b35a"
        },
        "item": {
          "id": "5ce717ee-d698-472e-a484-46395d98706b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "27e27de3-d873-440b-8363-7ef85d71932e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b64cb8-c465-43b9-85b1-7280ba6f0ac1",
        "cursor": {
          "ref": "cbfa7555-1d17-4e90-be9b-c5f51c057fb5",
          "length": 244,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "207f4a5d-65f1-4690-bd72-8efe3ae8e64b"
        },
        "item": {
          "id": "85b64cb8-c465-43b9-85b1-7280ba6f0ac1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "df9c09fa-3ec6-4295-bc23-6d66eceaea5b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4107cc7d-b78e-4920-b4b8-a2ee39b3fea9",
        "cursor": {
          "ref": "1c9a4144-ba1f-42fb-90dc-01f7a0992608",
          "length": 244,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "dbe2ee75-8783-4a66-a8a4-a8cd5e267e20"
        },
        "item": {
          "id": "4107cc7d-b78e-4920-b4b8-a2ee39b3fea9",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "da08ada8-7e3b-4ba3-85a0-09069c296443",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}